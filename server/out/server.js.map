{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/antlr4/Utils.js","webpack:///./node_modules/antlr4/Token.js","webpack:///./node_modules/vscode-languageserver-protocol/lib/common/messages.js","webpack:///./node_modules/antlr4/IntervalSet.js","webpack:///./node_modules/vscode-languageserver-protocol/lib/node/main.js","webpack:///./node_modules/antlr4/index.js","webpack:///./node_modules/antlr4/atn/ATNState.js","webpack:///./node_modules/antlr4/tree/Tree.js","webpack:///./node_modules/antlr4/error/Errors.js","webpack:///./node_modules/antlr4/PredictionContext.js","webpack:///./node_modules/vscode-jsonrpc/lib/common/ral.js","webpack:///./node_modules/antlr4/atn/ATN.js","webpack:///./node_modules/antlr4/atn/Transition.js","webpack:///./node_modules/antlr4/atn/ATNConfigSet.js","webpack:///./node_modules/vscode-jsonrpc/lib/node/main.js","webpack:///external \"fs\"","webpack:///./node_modules/antlr4/atn/SemanticContext.js","webpack:///./node_modules/antlr4/dfa/DFAState.js","webpack:///./node_modules/vscode-jsonrpc/lib/common/is.js","webpack:///./node_modules/vscode-jsonrpc/lib/common/events.js","webpack:///external \"path\"","webpack:///./node_modules/antlr4/atn/ATNConfig.js","webpack:///./node_modules/antlr4/RuleContext.js","webpack:///./node_modules/antlr4/Lexer.js","webpack:///./node_modules/antlr4/error/ErrorListener.js","webpack:///./node_modules/antlr4/dfa/DFASerializer.js","webpack:///./node_modules/vscode-languageserver/lib/node/main.js","webpack:///./node_modules/vscode-languageserver/lib/common/utils/is.js","webpack:///./node_modules/antlr4/ParserRuleContext.js","webpack:///./node_modules/antlr4/InputStream.js","webpack:///./node_modules/vscode-languageserver/lib/common/server.js","webpack:///./node_modules/vscode-jsonrpc/node.js","webpack:///./node_modules/vscode-jsonrpc/lib/common/disposable.js","webpack:///./node_modules/vscode-jsonrpc/lib/common/api.js","webpack:///./node_modules/vscode-jsonrpc/lib/common/messages.js","webpack:///./node_modules/vscode-jsonrpc/lib/common/cancellation.js","webpack:///./node_modules/vscode-languageserver/lib/common/utils/uuid.js","webpack:///./node_modules/vscode-languageserver/lib/common/semanticTokens.js","webpack:///./node_modules/vscode-languageserver-protocol/node.js","webpack:///./node_modules/ini/ini.js","webpack:///./src/TibboBasicErrorListener.ts","webpack:///./node_modules/antlr4/tree/Trees.js","webpack:///./node_modules/antlr4/atn/ATNDeserializer.js","webpack:///./node_modules/antlr4/atn/ATNDeserializationOptions.js","webpack:///./node_modules/antlr4/atn/LexerAction.js","webpack:///./node_modules/antlr4/Recognizer.js","webpack:///./node_modules/antlr4/atn/ATNSimulator.js","webpack:///./node_modules/antlr4/atn/PredictionMode.js","webpack:///./node_modules/antlr4/polyfills/codepointat.js","webpack:///./node_modules/antlr4/polyfills/fromcodepoint.js","webpack:///./node_modules/antlr4/error/ErrorStrategy.js","webpack:///./language/TibboBasic/lib/TibboBasicPreprocessorParserListener.js","webpack:///./language/TibboBasic/lib/TibboBasicParser.js","webpack:///./language/TibboBasic/lib/TibboBasicParserListener.js","webpack:///./src/server.ts","webpack:///./node_modules/vscode-jsonrpc/lib/node/ril.js","webpack:///external \"util\"","webpack:///./node_modules/vscode-jsonrpc/lib/common/messageBuffer.js","webpack:///./node_modules/vscode-jsonrpc/lib/common/messageReader.js","webpack:///./node_modules/vscode-jsonrpc/lib/common/messageWriter.js","webpack:///./node_modules/vscode-jsonrpc/lib/common/semaphore.js","webpack:///./node_modules/vscode-jsonrpc/lib/common/connection.js","webpack:///./node_modules/vscode-jsonrpc/lib/common/linkedMap.js","webpack:///external \"os\"","webpack:///external \"crypto\"","webpack:///external \"net\"","webpack:///./node_modules/vscode-languageserver-protocol/lib/common/api.js","webpack:///./node_modules/vscode-languageserver-types/lib/esm/main.js","webpack:///./node_modules/vscode-languageserver-protocol/lib/common/protocol.js","webpack:///./node_modules/vscode-languageserver-protocol/lib/common/utils/is.js","webpack:///./node_modules/vscode-languageserver-protocol/lib/common/protocol.implementation.js","webpack:///./node_modules/vscode-languageserver-protocol/lib/common/protocol.typeDefinition.js","webpack:///./node_modules/vscode-languageserver-protocol/lib/common/protocol.workspaceFolders.js","webpack:///./node_modules/vscode-languageserver-protocol/lib/common/protocol.configuration.js","webpack:///./node_modules/vscode-languageserver-protocol/lib/common/protocol.colorProvider.js","webpack:///./node_modules/vscode-languageserver-protocol/lib/common/protocol.foldingRange.js","webpack:///./node_modules/vscode-languageserver-protocol/lib/common/protocol.declaration.js","webpack:///./node_modules/vscode-languageserver-protocol/lib/common/protocol.selectionRange.js","webpack:///./node_modules/vscode-languageserver-protocol/lib/common/protocol.progress.js","webpack:///./node_modules/vscode-languageserver-protocol/lib/common/protocol.callHierarchy.js","webpack:///./node_modules/vscode-languageserver-protocol/lib/common/protocol.semanticTokens.js","webpack:///./node_modules/vscode-languageserver-protocol/lib/common/protocol.showDocument.js","webpack:///./node_modules/vscode-languageserver-protocol/lib/common/protocol.linkedEditingRange.js","webpack:///./node_modules/vscode-languageserver-protocol/lib/common/protocol.fileOperations.js","webpack:///./node_modules/vscode-languageserver-protocol/lib/common/protocol.moniker.js","webpack:///./node_modules/vscode-languageserver-protocol/lib/common/connection.js","webpack:///./node_modules/vscode-languageserver/lib/common/progress.js","webpack:///./node_modules/vscode-languageserver/lib/common/configuration.js","webpack:///./node_modules/vscode-languageserver/lib/common/workspaceFolders.js","webpack:///./node_modules/vscode-languageserver/lib/common/callHierarchy.js","webpack:///./node_modules/vscode-languageserver/lib/common/showDocument.js","webpack:///./node_modules/vscode-languageserver/lib/common/fileOperations.js","webpack:///./node_modules/vscode-languageserver/lib/common/linkedEditingRange.js","webpack:///./node_modules/vscode-languageserver/lib/common/moniker.js","webpack:///./node_modules/vscode-languageserver/lib/node/files.js","webpack:///external \"url\"","webpack:///external \"child_process\"","webpack:///./node_modules/vscode-languageserver/lib/common/api.js","webpack:///./node_modules/vscode-languageserver/node.js","webpack:///./src/TibboBasicDocumentFormatter.ts","webpack:///./src/TibboBasicPreprocessor.ts","webpack:///./node_modules/antlr4/atn/index.js","webpack:///./node_modules/antlr4/LL1Analyzer.js","webpack:///./node_modules/antlr4/atn/ATNType.js","webpack:///./node_modules/antlr4/atn/LexerATNSimulator.js","webpack:///./node_modules/antlr4/CommonTokenFactory.js","webpack:///./node_modules/antlr4/atn/LexerActionExecutor.js","webpack:///./node_modules/antlr4/atn/ParserATNSimulator.js","webpack:///./node_modules/antlr4/dfa/index.js","webpack:///./node_modules/antlr4/dfa/DFA.js","webpack:///./node_modules/antlr4/tree/index.js","webpack:///./node_modules/antlr4/error/index.js","webpack:///./node_modules/antlr4/error/DiagnosticErrorListener.js","webpack:///./node_modules/antlr4/CharStreams.js","webpack:///./node_modules/antlr4/FileStream.js","webpack:///./node_modules/antlr4/CommonTokenStream.js","webpack:///./node_modules/antlr4/BufferedTokenStream.js","webpack:///./node_modules/antlr4/Parser.js","webpack:///./language/TibboBasic/lib/TibboBasicPreprocessorLexer.js","webpack:///./language/TibboBasic/lib/TibboBasicPreprocessorParser.js","webpack:///./language/TibboBasic/lib/TibboBasicPreprocessorParserVisitor.js","webpack:///./src/TibboBasicProjectParser.ts","webpack:///./language/TibboBasic/lib/TibboBasicLexer.js","webpack:///./language/TibboBasic/lib/TibboBasicParserVisitor.js","webpack:///./src/types.ts","webpack:///./node_modules/vscode-languageserver-textdocument/lib/esm/main.js","webpack:///./src/html2markdown/index.js","webpack:///./src/html2markdown/html2markdown.js","webpack:///./src/html2markdown/markdown_html_parser.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","arrayToString","a","join","standardEqualsFunction","b","equals","standardHashCodeFunction","hashCode","Set","hashFunction","equalsFunction","this","data","BitSet","Map","AltDict","DoubleDict","Hash","count","hash","String","seed","Math","round","random","pow","remainder","bytes","h1","h1b","c1","c2","k1","toString","length","charCodeAt","indexOf","add","values","push","contains","concat","or","set","bits","keys","map","alt","remove","minValue","min","apply","update","finish","other","hashKey","put","entries","entry","oldValue","containsKey","getKeys","e","getValues","arguments","Array","isArray","k","updateHashCode","hashStuff","escapeWhitespace","escapeSpaces","replace","titleCase","str","txt","charAt","toUpperCase","substr","equalArrays","Token","source","type","channel","start","stop","tokenIndex","line","column","_text","CommonToken","undefined","EMPTY_SOURCE","DEFAULT_CHANNEL","INVALID_TYPE","EPSILON","MIN_USER_TOKEN_TYPE","EOF","HIDDEN_CHANNEL","text","getTokenSource","getInputStream","constructor","clone","input","size","getText","ProtocolNotificationType","ProtocolNotificationType0","ProtocolRequestType","ProtocolRequestType0","RegistrationType","vscode_jsonrpc_1","method","RequestType0","super","RequestType","ParameterStructures","byName","NotificationType0","NotificationType","Interval","IntervalSet","intervals","readOnly","item","first","v","addOne","addInterval","addRange","h","splice","max","reduce","addSet","intervalslength","pop","complement","result","removeRange","len","removeOne","x","literalNames","symbolicNames","elemsAreChar","toTokenString","toCharString","toIndexString","names","fromCharCode","j","elementName","__createBinding","k2","__exportStar","createProtocolConnection","node_1","output","logger","options","createMessageConnection","atn","codepointat","dfa","fromcodepoint","tree","error","CharStreams","InputStream","FileStream","CommonTokenStream","Lexer","Parser","pc","PredictionContextCache","ParserRuleContext","Utils","ATNState","stateNumber","INVALID_STATE_NUMBER","stateType","ruleIndex","epsilonOnlyTransitions","transitions","nextTokenWithinRule","BasicState","BASIC","DecisionState","decision","nonGreedy","BlockStartState","endState","BasicBlockStartState","BLOCK_START","BlockEndState","BLOCK_END","startState","RuleStopState","RULE_STOP","RuleStartState","RULE_START","stopState","isPrecedenceRule","PlusLoopbackState","PLUS_LOOP_BACK","PlusBlockStartState","PLUS_BLOCK_START","loopBackState","StarBlockStartState","STAR_BLOCK_START","StarLoopbackState","STAR_LOOP_BACK","StarLoopEntryState","STAR_LOOP_ENTRY","isPrecedenceDecision","LoopEndState","LOOP_END","TokensStartState","TOKEN_START","serializationNames","isNonGreedyExitState","addTransition","trans","index","isEpsilon","INVALID_INTERVAL","Tree","SyntaxTree","ParseTree","RuleNode","TerminalNode","ErrorNode","ParseTreeVisitor","ParseTreeListener","TerminalNodeImpl","symbol","parentCtx","ErrorNodeImpl","token","ParseTreeWalker","visit","ctx","child","accept","visitChildren","children","visitTerminal","node","visitErrorNode","enterEveryRule","exitEveryRule","getChild","getSymbol","getParent","getPayload","getSourceInterval","getChildCount","visitor","isErrorNode","walk","listener","enterRule","exitRule","getRuleContext","DEFAULT","PredicateTransition","RecognitionException","params","Error","captureStackTrace","stack","message","recognizer","offendingToken","offendingState","state","LexerNoViableAltException","lexer","startIndex","deadEndConfigs","NoViableAltException","startToken","_ctx","getCurrentToken","InputMismatchException","FailedPredicateException","predicate","formatMessage","_interp","states","predicateIndex","predIndex","ParseCancellationException","getExpectedTokens","RuleContext","PredictionContext","cachedHashCode","cache","SingletonPredictionContext","parent","returnState","EmptyPredictionContext","EMPTY_RETURN_STATE","ArrayPredictionContext","parents","returnStates","merge","rootIsWildcard","mergeCache","previous","rootMerge","EMPTY","payloads","mergeRoot","spc","singleParent","apc","a_","mergeSingletons","mergedReturnStates","mergedParents","a_parent","b_parent","payload","bothDollars","ax_ax","mergedParent","slice","M","uniqueParents","q","combineCommonParents","mergeArrays","globalNodeCount","id","isEmpty","hasEmptyPath","getReturnState","existing","contructor","up","predictionContextFromRuleContext","outerContext","transition","invokingState","followState","getCachedPredictionContext","context","contextCache","visited","changed","updated","_ral","RAL","install","ral","default","LL1Analyzer","ATN","grammarType","maxTokenType","decisionToState","ruleToStartState","ruleToStopState","modeNameToStartState","ruleToTokenType","lexerActions","modeToStartState","nextTokensInContext","LOOK","nextTokensNoContext","nextTokens","addState","removeState","defineDecisionState","getDecisionState","following","expected","rt","INVALID_ALT_NUMBER","Predicate","PrecedencePredicate","Transition","target","label","AtomTransition","label_","makeLabel","serializationType","ATOM","RuleTransition","ruleStart","precedence","RULE","EpsilonTransition","outermostPrecedenceReturn","RangeTransition","RANGE","AbstractPredicateTransition","isCtxDependent","PREDICATE","ActionTransition","actionIndex","ACTION","SetTransition","SET","NotSetTransition","NOT_SET","WildcardTransition","WILDCARD","PrecedencePredicateTransition","PRECEDENCE","serializationTypes","matches","minVocabSymbol","maxVocabSymbol","getPredicate","SemanticContext","hashATNConfig","hashCodeForConfigSet","equalATNConfigs","equalsForConfigSet","ATNConfigSet","fullCtx","configLookup","configs","uniqueAlt","conflictingAlts","hasSemanticContext","dipsIntoOuterContext","OrderedATNConfigSet","config","semanticContext","NONE","reachesIntoOuterContext","merged","precedenceFilterSuppressed","getStates","getPredicates","preds","optimizeConfigs","interpreter","getCachedContext","addAll","coll","containsFast","clear","setReadonly","createServerSocketTransport","createClientSocketTransport","createServerPipeTransport","createClientPipeTransport","generateRandomPipeName","StreamMessageWriter","StreamMessageReader","SocketMessageWriter","SocketMessageReader","IPCMessageWriter","IPCMessageReader","ril_1","api_1","path","os","crypto_1","net_1","AbstractMessageReader","process","eventEmitter","on","fireError","fireClose","callback","Disposable","off","AbstractMessageWriter","errorCount","msg","send","handleError","Promise","resolve","reject","ReadableStreamMessageReader","socket","encoding","stream","asReadableStream","WriteableStreamMessageWriter","asWritableStream","dispose","destroy","readble","writable","XDG_RUNTIME_DIR","env","safeIpcPathLengths","randomSuffix","randomBytes","platform","tmpdir","limit","console","warn","pipeName","connectResolve","connected","_reject","server","createServer","close","listen","removeListener","onConnected","createConnection","port","NullLogger","reader","candidate","read","addListener","isReadableStream","writer","write","isWritableStream","ConnectionStrategy","is","connectionStrategy","require","AND","operands","opnds","precedencePredicates","filterPrecedencePredicates","reduced","OR","sort","compareTo","evaluate","parser","evalPrecedence","andContext","orContext","localctx","sempred","precpred","differs","evaluated","PredPrediction","pred","DFAState","edges","isAcceptState","prediction","lexerActionExecutor","requiresFullContext","predicates","getAltSet","alts","string","array","stringArray","func","number","boolean","Number","every","elem","Emitter","Event","ral_1","_disposable","None","CallbackList","bucket","_callbacks","_contexts","foundCallbackWithDifferentContext","args","ret","callbacks","contexts","_options","_event","thisArgs","disposables","onFirstListenerAdd","_noop","onLastListenerRemove","event","invoke","checkParams","isCfg","props","ATNConfig","checkContext","LexerATNConfig","passedThroughNonGreedyDecision","checkNonGreedyDecision","depth","getAltNumber","setAltNumber","altNumber","Trees","toStringTree","ruleNames","recog","ri","Recognizer","CommonTokenFactory","_input","_factory","_tokenFactorySourcePair","_token","_tokenStartCharIndex","_tokenStartLine","_tokenStartColumn","_hitEOF","_channel","_type","_modeStack","_mode","DEFAULT_MODE","MORE","SKIP","DEFAULT_TOKEN_CHANNEL","HIDDEN","MIN_CHAR_VALUE","MAX_CHAR_VALUE","reset","seek","nextToken","tokenStartMarker","mark","emitEOF","continueOuter","ttype","match","log","notifyListeners","recover","LA","emit","release","skip","more","pushMode","debug","popMode","sourceName","emitToken","getCharIndex","cpos","lpos","eof","getAllTokens","tokens","getErrorDisplay","getErrorListenerDispatch","syntaxError","getErrorDisplayForChar","getCharErrorDisplay","re","consume","ErrorListener","ConsoleErrorListener","ProxyErrorListener","delegates","offendingSymbol","reportAmbiguity","stopIndex","exact","ambigAlts","reportAttemptingFullContext","reportContextSensitivity","INSTANCE","DFASerializer","LexerDFASerializer","s0","buf","sortedStates","getStateString","getEdgeLabel","baseStateStr","Files","Is","server_1","fm","uriToFilePath","resolveGlobalNodePath","resolveGlobalYarnPath","resolveModulePath","_shutdownReceived","exitTimer","runTimer","processId","parseInt","isNaN","setInterval","kill","ex","exit","argv","arg","split","setupExitTimer","watchDog","initialize","code","arg1","arg2","arg3","arg4","factories","__brand","ConnectionOptions","stdin","stdout","transport","commandLineMessage","inputStream","_createConnection","thenable","typedArray","check","then","invokingStateNumber","exception","InterpreterRuleContext","copyFrom","addChild","removeLastChild","addTokenNode","addErrorNode","badToken","getToken","getTokens","getTypedRuleContext","ctxType","getTypedRuleContexts","decodeToUnicodeCodePoints","strdata","_index","codePoint","codePointAt","codeUnit","_size","_loadString","offset","pos","LT","marker","fromCodePoint","combineFeatures","combineLanguagesFeatures","combineWorkspaceFeatures","combineWindowFeatures","combineClientFeatures","combineTracerFeatures","combineTelemetryFeatures","combineConsoleFeatures","_LanguagesImpl","BulkUnregistration","BulkRegistration","ErrorMessageTracker","TextDocuments","vscode_languageserver_protocol_1","UUID","progress_1","configuration_1","workspaceFolders_1","callHierarchy_1","semanticTokens_1","showDocument_1","fileOperations_1","linkedEditingRange_1","moniker_1","null2Undefined","configuration","_documents","_configuration","_onDidChangeContent","_onDidOpen","_onDidClose","_onDidSave","_onWillSave","handler","_willSaveWaitUntil","uri","connection","__textDocumentSync","TextDocumentSyncKind","Full","onDidOpenTextDocument","td","textDocument","document","languageId","version","toFire","freeze","fire","onDidChangeTextDocument","changes","contentChanges","onDidCloseTextDocument","onWillSaveTextDocument","reason","onWillSaveTextDocumentWaitUntil","onDidSaveTextDocument","_messages","forEach","window","showErrorMessage","RemoteConsoleImpl","_rawConnection","_connection","_capabilities","MessageType","Warning","Info","Log","sendNotification","LogMessageNotification","RemoteWindowImpl","ShowDocumentFeature","ProgressFeature","actions","sendRequest","ShowMessageRequest","BulkRegistrationImpl","_registrations","_registered","registerOptions","has","generateUuid","registrations","BulkUnregistrationImpl","unregistrations","_unregistrations","unregistration","unregisterations","UnregistrationRequest","_error","info","delete","RemoteClientImpl","typeOrRegistrations","registerOptionsOrType","registerMany","registerSingle1","registerSingle2","isAttached","attach","RegistrationRequest","_result","unregisterSingle","asRegistrationParams","registration","RemoteWorkspaceImpl","FileOperationsFeature","WorkspaceFoldersFeature","ConfigurationFeature","paramOrEdit","edit","ApplyWorkspaceEditRequest","TracerImpl","_trace","Trace","Off","verbose","LogTraceNotification","Verbose","TelemetryImpl","TelemetryEventNotification","attachWorkDone","attachPartialResult","LanguagesImpl","MonikerFeature","LinkedEditingRangeFeature","SemanticTokensFeature","CallHierarchyFeature","one","two","Base","combine","tracer","telemetry","client","workspace","connectionFactory","rawAttach","remoteWindow","languages","allRemotes","asPromise","resolved","shutdownHandler","initializeHandler","exitHandler","protocolConnection","onRequest","param","onNotification","onProgress","sendProgress","onInitialize","onInitialized","InitializedNotification","onShutdown","onExit","onDidChangeConfiguration","DidChangeConfigurationNotification","onDidChangeWatchedFiles","DidChangeWatchedFilesNotification","DidOpenTextDocumentNotification","DidChangeTextDocumentNotification","DidCloseTextDocumentNotification","WillSaveTextDocumentNotification","WillSaveTextDocumentWaitUntilRequest","DidSaveTextDocumentNotification","sendDiagnostics","PublishDiagnosticsNotification","onHover","HoverRequest","cancel","onCompletion","CompletionRequest","onCompletionResolve","CompletionResolveRequest","onSignatureHelp","SignatureHelpRequest","onDeclaration","DeclarationRequest","onDefinition","DefinitionRequest","onTypeDefinition","TypeDefinitionRequest","onImplementation","ImplementationRequest","onReferences","ReferencesRequest","onDocumentHighlight","DocumentHighlightRequest","onDocumentSymbol","DocumentSymbolRequest","onWorkspaceSymbol","WorkspaceSymbolRequest","onCodeAction","CodeActionRequest","onCodeActionResolve","CodeActionResolveRequest","onCodeLens","CodeLensRequest","onCodeLensResolve","CodeLensResolveRequest","onDocumentFormatting","DocumentFormattingRequest","onDocumentRangeFormatting","DocumentRangeFormattingRequest","onDocumentOnTypeFormatting","DocumentOnTypeFormattingRequest","onRenameRequest","RenameRequest","onPrepareRename","PrepareRenameRequest","onDocumentLinks","DocumentLinkRequest","onDocumentLinkResolve","DocumentLinkResolveRequest","onDocumentColor","DocumentColorRequest","onColorPresentation","ColorPresentationRequest","onFoldingRanges","FoldingRangeRequest","onSelectionRanges","SelectionRangeRequest","onExecuteCommand","ExecuteCommandRequest","remote","InitializeRequest","trace","fromString","capabilities","CancellationTokenSource","ResponseError","textDocumentSync","change","fillServerCapabilities","ShutdownRequest","shutdownReceived","ExitNotification","SetTraceNotification","CancellationSenderStrategy","CancellationReceiverStrategy","ConnectionError","ConnectionErrors","TraceFormat","ProgressType","MessageWriter","MessageReader","CancellationToken","NotificationType9","NotificationType8","NotificationType7","NotificationType6","NotificationType5","NotificationType4","NotificationType3","NotificationType2","NotificationType1","ErrorCodes","RequestType9","RequestType8","RequestType7","RequestType6","RequestType5","RequestType4","RequestType3","RequestType2","RequestType1","CancellationStrategy","messages_1","disposable_1","events_1","cancellation_1","messageReader_1","messageWriter_1","connection_1","isResponseMessage","isNotificationMessage","isRequestMessage","AbstractMessageSignature","ParseError","InvalidRequest","MethodNotFound","InvalidParams","InternalError","jsonrpcReservedErrorRangeStart","serverErrorStart","MessageWriteError","MessageReadError","ServerNotInitialized","UnknownErrorCode","jsonrpcReservedErrorRangeEnd","serverErrorEnd","setPrototypeOf","kind","auto","byPosition","numberOfParams","_parameterStructures","isCancellationRequested","onCancellationRequested","Cancelled","shortcutEvent","handle","timer","setTimeout","clearTimeout","MutableToken","_isCancelled","_emitter","parse","isUUID","v4","empty","ValueUUID","_value","asHex","V4UUID","_randomHex","_oneOf","_timeHighBits","floor","_chars","_UUIDPattern","test","SemanticTokensBuilder","SemanticTokensRequest","attachWorkDoneProgress","attachPartialResultProgress","onDelta","SemanticTokensDeltaRequest","onRange","SemanticTokensRangeRequest","_prevData","_id","Date","now","_prevLine","_prevChar","_data","_dataLen","char","tokenType","tokenModifiers","pushLine","pushChar","resultId","prevDataLength","dataLength","endIndex","newData","edits","deleteCount","build","decode","out","section","_","__","unsafe","JSON","substring","filter","parts","dotSplit","nl","part","del","stringify","encode","obj","opt","whitespace","separator","val","safe","eol","nk","isQuoted","trim","doUnesc","esc","unesc","antlr4","TibboBasicErrorListener","errors","getNodeText","res","getChildren","list","getAncestors","ancestors","findAllTokenNodes","findAllNodes","findAllRuleNodes","findTokens","nodes","_findAllNodes","descendants","ATNType","ATNStates","Transitions","ATNDeserializationOptions","LexerActions","LexerActionType","LexerSkipAction","LexerChannelAction","LexerCustomAction","LexerMoreAction","LexerTypeAction","LexerPushModeAction","LexerPopModeAction","LexerModeAction","ADDED_UNICODE_SMP","SUPPORTED_UUIDS","initArray","tmp","ATNDeserializer","defaultOptions","deserializationOptions","stateFactories","actionFactories","isFeatureSupported","feature","actualUuid","idx1","deserialize","checkVersion","checkUUID","readATN","readStates","readRules","readModes","sets","readSets","readInt","uuid","readInt32","readEdges","readDecisions","readLexerActions","markPrecedenceDecisions","verifyATN","generateRuleBypassTransitions","PARSER","temp","readUUID","pair","loopBackStateNumbers","endStateNumbers","nstates","stype","stateFactory","loopBackStateNumber","endStateNumber","numNonGreedyStates","numPrecedenceStates","nrules","LEXER","nmodes","readUnicode","iset","i1","i2","nedges","src","trg","edgeFactory","ndecisions","decState","actionType","data1","data2","lexerAction","lexerActionFactory","generateRuleBypassTransition","idx","bypassStart","bypassStop","excludeTransition","stateIsEndStateFor","matchState","maybeLoopEndState","checkCondition","condition","readLong","byteToHex","bth","createByteToHex","bb","int","sf","af","CHANNEL","CUSTOM","MODE","POP_MODE","PUSH_MODE","TYPE","LexerAction","action","isPositionDependent","LexerIndexedCustomAction","execute","_listeners","_stateNumber","tokenTypeMapCache","ruleIndexMapCache","toolVersion","addErrorListener","removeErrorListeners","getTokenTypeMap","tokenNames","getTokenNames","getRuleIndexMap","getTokenType","tokenName","getErrorHeader","getOffendingToken","getTokenErrorDisplay","ATNSimulator","sharedContextCache","ERROR","PredictionMode","SLL","LL","LL_EXACT_AMBIG_DETECTION","hasSLLConflictTerminatingPrediction","allConfigsInRuleStopStates","dup","items","altsets","getConflictingAltSubsets","hasConflictingAltSet","hasStateAssociatedWithOneAlt","hasConfigInRuleStopState","resolvesToJustOneViableAlt","getSingleViableAlt","allSubsetsConflict","hasNonConflictingAltSet","allSubsetsEqual","getUniqueAlt","all","getAlts","configToAlts","cfg","getStateToAltMap","minAlt","$defineProperty","position","TypeError","second","stringFromCharCode","highSurrogate","lowSurrogate","MAX_SIZE","codeUnits","isFinite","RangeError","Errors","ErrorStrategy","DefaultErrorStrategy","errorRecoveryMode","lastErrorIndex","lastErrorStates","BailErrorStrategy","recoverInline","sync","inErrorRecoveryMode","reportError","endErrorCondition","beginErrorCondition","reportMatch","reportNoViableAlternative","reportInputMismatch","reportFailedPredicate","notifyErrorListeners","getMessage","followSet","getErrorRecoverySet","consumeUntil","la","getTokenStream","singleTokenDeletion","reportUnwantedToken","expecting","whatFollowsLoopIterationOrRule","escapeWSAndQuote","reportMissingToken","matchedSymbol","singleTokenInsertion","getMissingSymbol","currentSymbolType","next","nextTokenType","tokenText","currentSymbol","expectedTokenType","current","lookback","getTokenFactory","recoverSet","follow","TibboBasicPreprocessorParserListener","enterPreprocessor","exitPreprocessor","enterLine","exitLine","enterText","exitText","enterCodeLine","exitCodeLine","enterPreprocessorConditional","exitPreprocessorConditional","enterPreprocessorEndConditional","exitPreprocessorEndConditional","enterPreprocessorDef","exitPreprocessorDef","enterPreprocessorUndef","exitPreprocessorUndef","enterPreprocessorPragma","exitPreprocessorPragma","enterPreprocessorError","exitPreprocessorError","enterPreprocessorDefine","exitPreprocessorDefine","enterPreprocessorInclude","exitPreprocessorInclude","enterDirective_text","exitDirective_text","enterPreprocessorBinary","exitPreprocessorBinary","enterPreprocessorConstant","exitPreprocessorConstant","enterPreprocessorConditionalSymbol","exitPreprocessorConditionalSymbol","enterPreprocessor_item","exitPreprocessor_item","TibboBasicParserListener","TibboBasicParserVisitor","serializedATN","decisionsToDFA","ds","DFA","TibboBasicParser","ParserATNSimulator","StartRuleContext","RULE_startRule","TopLevelDeclarationContext","RULE_topLevelDeclaration","IncludeStmtContext","RULE_includeStmt","IncludeppStmtContext","RULE_includeppStmt","BlockContext","RULE_block","StatementContext","RULE_statement","ConstStmtContext","RULE_constStmt","ConstSubStmtContext","RULE_constSubStmt","DeclareVariableStmtContext","RULE_declareVariableStmt","DeclareSubStmtContext","RULE_declareSubStmt","DeclareFuncStmtContext","RULE_declareFuncStmt","returnType","DoLoopStmtContext","RULE_doLoopStmt","EnumerationStmtContext","RULE_enumerationStmt","EnumerationStmt_ConstantContext","RULE_enumerationStmt_Constant","ExitStmtContext","RULE_exitStmt","ForNextStmtContext","RULE_forNextStmt","step","FunctionStmtContext","RULE_functionStmt","JumpStmtContext","RULE_jumpStmt","GoToStmtContext","RULE_goToStmt","IfThenElseStmtContext","RULE_ifThenElseStmt","BlockIfThenElseContext","InlineIfThenElseContext","IfConditionStmtContext","RULE_ifConditionStmt","PropertyDefineStmtContext","RULE_propertyDefineStmt","PropertyDefineStmt_InStmtContext","RULE_propertyDefineStmt_InStmt","PropertyGetStmtContext","RULE_propertyGetStmt","PropertySetStmtContext","RULE_propertySetStmt","EventDeclarationContext","RULE_eventDeclaration","SyscallDeclarationContext","RULE_syscallDeclaration","SyscallDeclarationInnerContext","RULE_syscallDeclarationInner","SyscallInternalDeclarationInnerContext","RULE_syscallInternalDeclarationInner","SyscallInternalParamListContext","RULE_syscallInternalParamList","ParamInternalContext","RULE_paramInternal","SelectCaseStmtContext","RULE_selectCaseStmt","SC_CaseContext","RULE_sC_Case","SC_DefaultContext","RULE_sC_Default","SC_CondContext","RULE_sC_Cond","SubStmtContext","RULE_subStmt","TypeStmtContext","RULE_typeStmt","TypeStmtElementContext","RULE_typeStmtElement","valueType","ExpressionContext","RULE_expression","op","UnaryExpressionContext","RULE_unaryExpression","UnaryOperatorContext","RULE_unaryOperator","PostfixExpressionContext","RULE_postfixExpression","PostfixContext","RULE_postfix","PrimaryExpressionContext","RULE_primaryExpression","VariableStmtContext","RULE_variableStmt","VariableListStmtContext","RULE_variableListStmt","variableType","VariableListItemContext","RULE_variableListItem","WhileWendStmtContext","RULE_whileWendStmt","ObjectDeclarationContext","RULE_objectDeclaration","ArgListContext","RULE_argList","ArgContext","RULE_arg","ParamListContext","RULE_paramList","ParamContext","RULE_param","AsTypeClauseContext","RULE_asTypeClause","BaseTypeContext","RULE_baseType","ComplexTypeContext","RULE_complexType","FieldLengthContext","RULE_fieldLength","LineLabelContext","RULE_lineLabel","LiteralContext","RULE_literal","ArrayLiteralContext","RULE_arrayLiteral","TypeContext","RULE_type","VisibilityContext","RULE_visibility","OBJECT","AS","BOOLEAN","REAL","BYREF","BYTE","BYVAL","CASE","CASE_ELSE","CHAR","CONST","COUNTOF","DECLARE","DIM","DO","DWORD","ELSE","ELIF","END","ELSEIF","ENUM","END_ENUM","END_FUNCTION","END_IF","END_PROPERTY","END_SELECT","END_SUB","END_TYPE","END_WITH","EVENT","EXIT_DO","EXIT_FOR","EXIT_FUNCTION","EXIT_PROPERTY","EXIT_SUB","EXIT_WHILE","FALSE","FLOAT","FOR","FUNCTION","GET","GOTO","IF","IFDEF","IFNDEF","INCLUDE","INCLUDEPP","INTEGER","LONG","LOOP","MOD","NEXT","NOT","PROPERTY","PUBLIC","SELECT","SHL","SHORT","SHR","SIZEOF","STEP","STRING","SUB","THEN","TO","TRUE","UNDEF","UNTIL","WEND","WHILE","WORD","XOR","SHARP","STRINGLITERAL","TemplateStringLiteral","HEXLITERAL","BINLITERAL","INTEGERLITERAL","DIV","EQ","GEQ","GT","LEQ","LPAREN","MINUS","MULT","NEQ","PLUS","RPAREN","L_SQUARE_BRACKET","R_SQUARE_BRACKET","L_CURLY_BRACKET","R_CURLY_BRACKET","NEWLINE","COMMENT","SINGLEQUOTE","COLON","SEMICOLON","COMMA","DOT","BANG","UNDERSCORE","SYSCALL","WS","IDENTIFIER","DIRECTIVE_INCLUDE","DIRECTIVE_INCLUDEPP","DIRECTIVE_DEFINE","DIRECTIVE_IF","DIRECTIVE_ELIF","DIRECTIVE_ELSE","DIRECTIVE_UNDEF","DIRECTIVE_IFDEF","DIRECTIVE_IFNDEF","DIRECTIVE_ENDIF","DIRECTIVE_ERROR","DIRECTIVE_BANG","DIRECTIVE_LP","DIRECTIVE_RP","DIRECTIVE_EQUAL","DIRECTIVE_NOTEQUAL","DIRECTIVE_AND","DIRECTIVE_OR","DIRECTIVE_LT","DIRECTIVE_GT","DIRECTIVE_LE","DIRECTIVE_GE","DIRECTIVE_ID","DIRECTIVE_DECIMAL_LITERAL","DIRECTIVE_FLOAT","DIRECTIVE_NEWLINE","DIRECTIVE_SINGLE_COMMENT","DIRECTIVE_BACKSLASH_NEWLINE","DIRECTIVE_TEXT_NEWLINE","DIRECTIVE_TEXT_BACKSLASH_NEWLINE","DIRECTIVE_TEXT_MULTI_COMMENT","DIRECTIVE_TEXT_SINGLE_COMMENT","DIRECTIVE_TEXT","ANY","topLevelDeclaration","enterStartRule","exitStartRule","visitStartRule","startRule","_la","enterOuterAlt","_errHandler","includeStmt","includeppStmt","enumerationStmt","constStmt","declareSubStmt","declareFuncStmt","declareVariableStmt","variableStmt","subStmt","functionStmt","objectDeclaration","propertyDefineStmt","eventDeclaration","syscallDeclaration","typeStmt","enterTopLevelDeclaration","exitTopLevelDeclaration","visitTopLevelDeclaration","adaptivePredict","enterIncludeStmt","exitIncludeStmt","visitIncludeStmt","enterIncludeppStmt","exitIncludeppStmt","visitIncludeppStmt","statement","lineLabel","enterBlock","exitBlock","visitBlock","block","doLoopStmt","forNextStmt","jumpStmt","ifThenElseStmt","selectCaseStmt","whileWendStmt","expression","enterStatement","exitStatement","visitStatement","constSubStmt","enterConstStmt","exitConstStmt","visitConstStmt","asTypeClause","enterConstSubStmt","exitConstSubStmt","visitConstSubStmt","variableListStmt","visibility","enterDeclareVariableStmt","exitDeclareVariableStmt","visitDeclareVariableStmt","paramList","enterDeclareSubStmt","exitDeclareSubStmt","visitDeclareSubStmt","enterDeclareFuncStmt","exitDeclareFuncStmt","visitDeclareFuncStmt","enterDoLoopStmt","exitDoLoopStmt","visitDoLoopStmt","enumerationStmt_Constant","enterEnumerationStmt","exitEnumerationStmt","visitEnumerationStmt","enterEnumerationStmt_Constant","exitEnumerationStmt_Constant","visitEnumerationStmt_Constant","enterExitStmt","exitExitStmt","visitExitStmt","exitStmt","enterForNextStmt","exitForNextStmt","visitForNextStmt","enterFunctionStmt","exitFunctionStmt","visitFunctionStmt","goToStmt","enterJumpStmt","exitJumpStmt","visitJumpStmt","enterGoToStmt","exitGoToStmt","visitGoToStmt","ifConditionStmt","enterBlockIfThenElse","exitBlockIfThenElse","visitBlockIfThenElse","enterInlineIfThenElse","exitInlineIfThenElse","visitInlineIfThenElse","enterIfConditionStmt","exitIfConditionStmt","visitIfConditionStmt","propertyDefineStmt_InStmt","enterPropertyDefineStmt","exitPropertyDefineStmt","visitPropertyDefineStmt","propertyGetStmt","propertySetStmt","enterPropertyDefineStmt_InStmt","exitPropertyDefineStmt_InStmt","visitPropertyDefineStmt_InStmt","enterPropertyGetStmt","exitPropertyGetStmt","visitPropertyGetStmt","enterPropertySetStmt","exitPropertySetStmt","visitPropertySetStmt","enterEventDeclaration","exitEventDeclaration","visitEventDeclaration","syscallDeclarationInner","syscallInternalDeclarationInner","enterSyscallDeclaration","exitSyscallDeclaration","visitSyscallDeclaration","enterSyscallDeclarationInner","exitSyscallDeclarationInner","visitSyscallDeclarationInner","syscallInternalParamList","enterSyscallInternalDeclarationInner","exitSyscallInternalDeclarationInner","visitSyscallInternalDeclarationInner","paramInternal","enterSyscallInternalParamList","exitSyscallInternalParamList","visitSyscallInternalParamList","enterParamInternal","exitParamInternal","visitParamInternal","sC_Case","sC_Default","enterSelectCaseStmt","exitSelectCaseStmt","visitSelectCaseStmt","sC_Cond","enterSC_Case","exitSC_Case","visitSC_Case","enterSC_Default","exitSC_Default","visitSC_Default","enterSC_Cond","exitSC_Cond","visitSC_Cond","enterSubStmt","exitSubStmt","visitSubStmt","typeStmtElement","enterTypeStmt","exitTypeStmt","visitTypeStmt","literal","enterTypeStmtElement","exitTypeStmtElement","visitTypeStmtElement","unaryExpression","enterExpression","exitExpression","visitExpression","_p","_parentctx","_parentState","enterRecursionRule","_alt","_parseListeners","triggerExitRuleEvent","pushNewRecursionContext","unrollRecursionContexts","postfixExpression","unaryOperator","primaryExpression","enterUnaryExpression","exitUnaryExpression","visitUnaryExpression","enterUnaryOperator","exitUnaryOperator","visitUnaryOperator","postfix","enterPostfixExpression","exitPostfixExpression","visitPostfixExpression","argList","enterPostfix","exitPostfix","visitPostfix","enterPrimaryExpression","exitPrimaryExpression","visitPrimaryExpression","enterVariableStmt","exitVariableStmt","visitVariableStmt","variableListItem","arrayLiteral","enterVariableListStmt","exitVariableListStmt","visitVariableListStmt","enterVariableListItem","exitVariableListItem","visitVariableListItem","enterWhileWendStmt","exitWhileWendStmt","visitWhileWendStmt","enterObjectDeclaration","exitObjectDeclaration","visitObjectDeclaration","enterArgList","exitArgList","visitArgList","enterArg","exitArg","visitArg","enterParamList","exitParamList","visitParamList","enterParam","exitParam","visitParam","fieldLength","enterAsTypeClause","exitAsTypeClause","visitAsTypeClause","enterBaseType","exitBaseType","visitBaseType","baseType","enterComplexType","exitComplexType","visitComplexType","complexType","enterFieldLength","exitFieldLength","visitFieldLength","enterLineLabel","exitLineLabel","visitLineLabel","enterLiteral","exitLiteral","visitLiteral","enterArrayLiteral","exitArrayLiteral","visitArrayLiteral","enterType","exitType","visitType","enterVisibility","exitVisibility","visitVisibility","expression_sempred","postfixExpression_sempred","supportedFileTypes","html2markdown","ProposedFeatures","tbFormatter","documents","TextDocument","platformPreprocessor","platformProjectParser","preprocessor","projectParser","hasConfigurationCapability","hasWorkspaceFolderCapability","workspaceRoot","fileEdits","PLATFORMS_PATH","tprPath","parsing","needsUpdate","platformsChanged","rootItems","validateTextDocument","currentFilePath","dirName","dirname","tmpPreprocessor1","tmpPreprocessor2","originalFiles","parseFile","basename","defines","notifyDiagnostics","notification","rpc","objects","events","docs","getCommentString","comments","properties","tmpRootItems","sortProjectChildren","getProjectStructure","constructComments","timeStart","getTime","parsePlatforms","filePath","files","fileContents","codes","syscalls","prop","variables","scopes","copyProperties","tpr","ini","fs","readFileSync","entryName","originalFilePath","sep","ext","extname","includes","directory","secondsElapsed","getFileName","decodeURIComponent","getFileUrl","getVariable","variableName","scope","getScope","varD","location","end","comment","getComments","fileUri","doc","fileURI","diagnostics","parserError","diagnostic","severity","DiagnosticSeverity","range","character","relatedInformation","assign","variable","references","funcName","functions","declaration","loc","stopToken","getObjectAtToken","getObjectFunction","functionName","getObjectProperty","propName","getTokenSymbol","symbolType","TBSymbolType","OBJECT_PROPERTY","DEFINE","toLowerCase","dataType","consts","enums","types","enumItem","members","ENUM_MEMBER","getPosition","lines","lineNumber","async","rootPath","workspaceFolders","existsSync","initializationOptions","platformsPath","readdirSync","file","completionProvider","resolveProvider","triggerCharacters","documentFormattingProvider","hoverProvider","definitionProvider","documentSymbolProvider","renameProvider","prepareProvider","declarationProvider","referencesProvider","signatureHelpProvider","retriggerCharacters","register","onDidChangeWorkspaceFolders","onDidClose","onDidChangeContent","_change","formatParams","formatDocument","suggestions","offsetAt","getScopeVariables","triggerCharacter","getTokenAtPosition","objProp","CompletionItemKind","EnumMember","Function","Property","dType","commaCount","currentLine","cursor","positionAt","tmpToken","objFunc","parameters","syscall","Variable","Enum","documentation","MarkupKind","Markdown","lengthField","define","markdown","byref","member","contents","getFilePath","symbols","structure","SymbolKind","Method","Constant","selectionRange","help","signatures","activeSignature","activeParameter","found","methodParams","returnValue","strIndex","tokenSymbolType","fileName","tmpIndex","tmpType","newText","newName","refs","currentPosition","ref","enu","util_1","messageBuffer_1","MessageBuffer","AbstractMessageBuffer","emptyBuffer","Buffer","from","TextDecoder","buffer","allocUnsafe","ReadableStreamWrapper","WritableStreamWrapper","_ril","messageBuffer","applicationJson","encoder","charset","err","decoder","ms","setImmediate","clearImmediate","RIL","_encoding","_chunks","_totalLength","chunk","toAppend","byteLength","chunkIndex","chunkBytesRead","row","_read","headers","header","byteCount","shift","asNative","allocNative","resultOffset","chunkPart","ResolvedMessageReaderOptions","onError","onClose","onPartialMessage","errorEmitter","closeEmitter","partialMessageEmitter","asError","fromOptions","_a","contentDecoder","contentDecoders","contentTypeDecoder","contentTypeDecoders","readable","_partialMessageTimeout","nextMessageLength","messageToken","timeout","partialMessageTimer","onData","append","tryReadHeaders","contentLength","body","tryReadBody","setPartialMessageTimer","clearPartialMessageTimer","firePartialMessage","waitingTime","semaphore_1","ResolvedMessageWriterOptions","_b","contentTypeEncoder","contentEncoder","writeSemaphore","Semaphore","lock","doWrite","capacity","_capacity","_active","_waiting","thunk","runNext","doRunNext","linkedMap_1","CancelNotification","ProgressNotification","StarRequestHandler","ConnectionState","Messages","Text","cancelUndispatched","Message","createCancellationTokenSource","conn","sendCancellation","cleanup","receiver","sender","cancellationStrategy","messageReader","messageWriter","_logger","sequenceNumber","notificationSquenceNumber","unknownResponseSquenceNumber","starRequestHandler","requestHandlers","starNotificationHandler","notificationHandlers","progressHandlers","messageQueue","LinkedMap","responsePromises","requestTokens","traceFormat","New","unhandledNotificationEmitter","unhandledProgressEmitter","disposeEmitter","createRequestQueueKey","addMessageToQueue","queue","_message","isListening","Listening","isClosed","Closed","isDisposed","Disposed","closeHandler","triggerMessageQueue","requestMessage","reply","resultOrError","startTime","jsonrpc","toJson","traceSendingResponse","replyError","logLSPMessage","traceReceivedRequest","element","requestHandler","tokenKey","cancellationSource","handlerResult","parameterStructures","promise","replySuccess","handleRequest","notificationHandler","traceReceivedNotification","handleNotification","responseMessage","responsePromise","timerStart","traceReceivedResponse","handleResponse","responseHandler","handleInvalidMessage","processMessageQueue","toCancel","strategy","response","lspMessage","isLSPMessage","timestamp","throwIfClosedOrDisposed","undefinedToNull","nullToUndefined","isNamedParam","computeSingleParam","computeMessageParams","messageParams","paramStart","paramEnd","notificationMessage","traceSendingNotification","onUnhandledProgress","throwIfNotListening","last","disposable","traceSendingRequest","_tracer","sendNotificationOrTraceOptions","_sendNotification","_traceFormat","onUnhandledNotification","onDispose","AlreadyListening","throwIfListening","inspect","Touch","LRUCache","First","AsOld","Last","AsNew","_map","_head","_tail","_state","touch","addItemLast","addItemFirst","removeItem","callbackfn","thisArg","iterator","done","newSize","currentSize","ratio","_limit","_ratio","checkTrim","trimOld","LSPErrorCodes","lspReservedErrorRangeStart","ContentModified","RequestCancelled","lspReservedErrorRangeEnd","integer","uinteger","Position","Range","Location","LocationLink","Color","ColorInformation","ColorPresentation","FoldingRangeKind","FoldingRange","DiagnosticRelatedInformation","DiagnosticTag","CodeDescription","Diagnostic","Command","TextEdit","ChangeAnnotation","ChangeAnnotationIdentifier","AnnotatedTextEdit","TextDocumentEdit","CreateFile","RenameFile","DeleteFile","WorkspaceEdit","MIN_VALUE","MAX_VALUE","objectLiteral","three","four","defined","targetUri","targetRange","targetSelectionRange","originSelectionRange","red","green","blue","alpha","numberRange","color","textEdit","additionalTextEdits","startLine","endLine","startCharacter","endCharacter","Information","Hint","Unnecessary","Deprecated","href","codeDescription","title","command","_i","insert","needsConfirmation","description","annotation","annotationId","OptionalVersionedTextDocumentIdentifier","overwrite","ignoreIfExists","oldUri","newUri","recursive","ignoreIfNotExists","documentChanges","TextDocumentIdentifier","VersionedTextDocumentIdentifier","TextDocumentItem","MarkupContent","InsertTextFormat","CompletionItemTag","InsertReplaceEdit","InsertTextMode","CompletionItem","CompletionList","MarkedString","Hover","ParameterInformation","SignatureInformation","DocumentHighlightKind","DocumentHighlight","SymbolTag","SymbolInformation","DocumentSymbol","CodeActionKind","CodeActionContext","CodeAction","CodeLens","FormattingOptions","DocumentLink","SelectionRange","TextEditChangeImpl","changeAnnotations","assertChangeAnnotations","manage","ChangeAnnotations","annotations","_annotations","_counter","configurable","idOrAnnotation","nextId","WorkspaceChange","workspaceEdit","_this","_textEditChanges","_workspaceEdit","_changeAnnotations","textEditChange","initDocumentChanges","getTextEditChange","textDocumentEdit","initChanges","createFile","optionsOrAnnotation","operation","renameFile","deleteFile","PlainText","Constructor","Field","Class","Interface","Module","Unit","Value","Keyword","Snippet","File","Reference","Folder","Struct","Operator","TypeParameter","asIs","adjustIndentation","isIncomplete","fromPlainText","plainText","language","Read","Write","Namespace","Package","Boolean","Key","Null","containerName","detail","deprecated","tags","Empty","QuickFix","Refactor","RefactorExtract","RefactorInline","RefactorRewrite","Source","SourceOrganizeImports","SourceFixAll","only","kindOrCommandOrEdit","checkKind","isPreferred","tabSize","insertSpaces","EOL","content","FullTextDocument","lineCount","applyEdits","sortedEdits","mergeSort","compare","left","right","leftIdx","rightIdx","diff","lastModifiedOffset","startOffset","endOffset","_uri","_languageId","_version","_content","_lineOffsets","getLineOffsets","lineOffsets","isLineStart","ch","low","high","mid","lineOffset","nextLineOffset","CodeLensRefreshRequest","SignatureHelpTriggerKind","CompletionTriggerKind","WatchKind","FileChangeType","TextDocumentSaveReason","TextDocumentContentChangeEvent","ShowMessageNotification","InitializeError","WorkDoneProgressOptions","TextDocumentRegistrationOptions","StaticRegistrationOptions","FailureHandlingKind","ResourceOperationKind","DocumentSelector","DocumentFilter","MonikerRequest","MonikerKind","UniquenessLevel","WillDeleteFilesRequest","DidDeleteFilesNotification","WillRenameFilesRequest","DidRenameFilesNotification","WillCreateFilesRequest","DidCreateFilesNotification","FileOperationPatternKind","LinkedEditingRangeRequest","ShowDocumentRequest","SemanticTokensRegistrationType","SemanticTokensRefreshRequest","TokenFormat","SemanticTokens","SemanticTokenModifiers","SemanticTokenTypes","CallHierarchyPrepareRequest","CallHierarchyOutgoingCallsRequest","CallHierarchyIncomingCallsRequest","WorkDoneProgressCancelNotification","WorkDoneProgressCreateRequest","WorkDoneProgress","ConfigurationRequest","DidChangeWorkspaceFoldersNotification","WorkspaceFoldersRequest","PrepareSupportDefaultBehavior","protocol_implementation_1","protocol_typeDefinition_1","protocol_workspaceFolders_1","protocol_configuration_1","protocol_colorProvider_1","protocol_foldingRange_1","protocol_declaration_1","protocol_selectionRange_1","protocol_progress_1","protocol_callHierarchy_1","protocol_semanticTokens_1","protocol_showDocument_1","protocol_linkedEditingRange_1","protocol_fileOperations_1","protocol_moniker_1","scheme","pattern","Create","Rename","Delete","Abort","Transactional","TextOnlyTransactional","Undo","hasId","documentSelector","workDoneProgress","hasWorkDoneProgress","unknownProtocolVersion","Incremental","isIncremental","rangeLength","isFull","Manual","AfterDelay","FocusOut","Created","Changed","Deleted","Change","Invoked","TriggerCharacter","TriggerForIncompleteCompletions","ContentChange","Identifier","Relative","folder","uuid_1","WorkDoneProgressReporterImpl","Instances","percentage","cancellable","arg0","WorkDoneProgressServerReporterImpl","_source","NullProgressReporter","NullProgressServerReporter","workDoneToken","ResultProgress","_progressSupported","progress","ResultProgressReporterImpl","partialResultToken","_getConfiguration","workspaceCapabilities","_onDidChangeWorkspaceFolders","_unregistration","onPrepare","onIncomingCalls","onOutgoingCalls","FileSystem","url","child_process_1","isWindows","moduleName","nodePath","cwd","app","newEnv","delimiter","cp","fork","execArgv","pid","npmCommand","shell","spawnSync","prefix","parsed","protocol","segments","normalize","yarnCommand","results","stderr","yarn","_isCaseSensitive","isCaseSensitive","__filename","isParent","isAbsolute","blockStart","blockEnd","currentIndent","blockStarts","trimmed","whiteSpaceLength","hasTabs","replaced","TibboBasicPreprocessorLexer","TibboBasicPreprocessorParser","TibboBasicPreprocessor","projectPath","filePriorities","platformType","platformVersion","currentPath","currentDirectory","platformLibs","deviceRootFile","chars","blankFile","buildParseTrees","errorListener","PreprocessorListener","charStream","expressionStack","lastLine","currentBlock","shouldEvaluate","getCurrentStack","addCode","addBlock","addEvaluationResult","parentBlock","evaluationResults","evalString","getItemStatement","eval","RULE_preprocessor_expression","evalValue","getDefineValue","definedValue","EQUAL","NOTEQUAL","LE","GE","CONDITIONAL_SYMBOL","DECIMAL_LITERAL","DIRECTIVE_STRING","nestedDefineValue","replaceRange","substitute","addExpressionBlock","LexerATNSimulator","HIT_PRED","getDecisionLookahead","look","lookBusy","_LOOK","lookContext","calledRuleStack","seeThruPreds","addEOF","removed","newContext","LexerActionExecutor","resetSimState","sim","dfaState","SimState","decisionToDFA","prevAccept","dfa_debug","MIN_DFA_EDGE","MAX_DFA_EDGE","match_calls","copyState","simulator","matchATN","execATN","old_mode","s0_closure","computeStartState","suppressEdge","addDFAState","predict","toLexerString","ds0","captureSimState","getExistingTargetState","computeTargetState","failOrAccept","reach","getReachableConfigSet","addDFAEdge","closure","skipAlt","currentAltReachedAcceptState","getTokenName","getReachableTarget","fixOffsetBeforeMatch","treatEofAsEpsilon","charPos","initialContext","speculative","getEpsilonTarget","evaluatePredicate","savedcolumn","savedLine","settings","from_","tk","to","cfgs","proposed","firstConfigWithRuleStopState","newState","getDFA","tt","TokenFactory","copyText","createThin","updatedLexerActions","requiresSeek","numActions","predictionMode","_startIndex","_outerContext","_dfa","debug_closure","debug_add","debug_list_atn_decisions","retry_debug","getLookaheadName","precedenceDfa","getPrecedenceStartState","getPrecedence","atnStartState","applyPrecedenceFilter","setPrecedenceStartState","previousD","D","noViableAlt","getSynValidOrSemInvalidAltThatFinishedDecisionEntryRule","conflictIndex","evalSemanticContext","execATNWithFullContext","computeReachSet","predictedAlt","altSubSets","getConflictingAlts","predicateDFAState","decisionState","nalts","altsToCollectPredsFrom","getConflictingAltsOrUniqueAlt","altToPred","getPredsForAmbigAlts","getPredicatePredictions","foundExactAmbig","intermediate","skippedStopStates","closureBusy","removeAllConfigsNotInRuleStopState","lookToEndOfRule","endOfRuleState","statesFromAlt1","configSet","updatedContext","nPredAlts","pairs","containsPredicate","splitAccordingToSemanticValidity","semValidConfigs","semInvalidConfigs","getAltThatFinishedDecisionEntryRule","succeeded","failed","predPredictions","complete","predictions","predicateEvaluationResult","collectPredicates","closureCheckingStopState","parms","getRuleName","closure_","canDropLoopEntryEdgeInLeftRecursiveRule","continueCollecting","newDepth","numCtxs","blockEndStateNum","blockEndState","returnStateNumber","returnStateTarget","inContext","ruleTransition","precedenceTransition","predTransition","actionTransition","pt","getRuleInvocationStack","predSucceeds","newSemCtx","dumpDeadEndConfigs","nvae","decs","getDeadEndConfigs","interval","_states","precedenceState","setPrecedenceDfa","DFAStatesSet","DiagnosticErrorListener","exactOnly","getDecisionDescription","ruleName","reportedAlts","importScripts","fromBlob","blob","onLoad","FileReader","onload","onerror","readAsText","fromBuffer","fromPath","readFile","fromPathSync","BufferedTokenStream","adjustSeekIndex","nextTokenOnChannel","LB","previousTokenOnChannel","lazyInit","getNumberOfOnChannelTokens","fill","TokenStream","tokenSource","fetchedEOF","fetch","subset","setup","setTokenSource","getHiddenTokensToRight","nextOnChannel","filterForChannel","getHiddenTokensToLeft","prevOnChannel","hidden","getSourceName","TraceListener","_precedenceStack","_syntaxErrors","setInputStream","bypassAltsAtnCache","setTrace","matchWildcard","_buildParseTrees","getParseListeners","addParseListener","removeParseListener","removeParseListeners","triggerEnterRuleEvent","reverse","setTokenFactory","factory","getATNWithBypassAlts","serializedAtn","getSerializedATN","compileParseTreePattern","patternRuleIndex","ParseTreePatternMatcher","compile","setTokenStream","hasListener","addContextToParseTree","altNum","retCtx","getInvokingContext","isExpectedToken","getExpectedTokensWithinCurrentRule","getRuleIndex","getDFAStrings","dumpDFA","seenOne","printer","println","print","CODE","NEW_LINE","PRAGMA","DEFINED","ENDIF","DIRECTIVE_WHITESPACES","TEXT","INCLUDE_DIRECITVE_TEXT_NEW_LINE","INCLUDE_FILE","COMMENTS_CHANNEL","DIRECTIVE_MODE","DIRECTIVE_INCLUDE_TEXT","channelNames","modeNames","grammarFileName","TibboBasicPreprocessorParserVisitor","PreprocessorContext","RULE_preprocessor","LineContext","RULE_line","TextContext","RULE_text","CodeLineContext","RULE_codeLine","DirectiveContext","RULE_directive","PreprocessorDefContext","PreprocessorErrorContext","PreprocessorUndefContext","PreprocessorConditionalContext","PreprocessorPragmaContext","PreprocessorDefineContext","PreprocessorEndConditionalContext","Include_fileContext","RULE_include_file","PreprocessorIncludeContext","Directive_textContext","RULE_directive_text","Preprocessor_expressionContext","PreprocessorBinaryContext","PreprocessorConstantContext","PreprocessorConditionalSymbolContext","Preprocessor_itemContext","RULE_preprocessor_item","visitPreprocessor","visitLine","include_file","directive","codeLine","visitText","visitCodeLine","visitPreprocessorDef","directive_text","visitPreprocessorError","visitPreprocessorUndef","preprocessor_expression","visitPreprocessorConditional","visitPreprocessorPragma","visitPreprocessorDefine","visitPreprocessorEndConditional","visitPreprocessorInclude","visitDirective_text","preprocessor_item","visitPreprocessorBinary","visitPreprocessorConstant","visitPreprocessorConditionalSymbol","visitPreprocessor_item","preprocessor_expression_sempred","TibboBasicLexer","trees","symbolDeclarations","resetFileSymbols","ParserListener","findToken","findComments","table","startsInline","fileComments","abs","scopeStack","enumName","objectName","propertyName","currentObject","currentProperty","addFunction","parentScope","addVariable","varName","asType","eventNumber","symbolName","COMMENT2","WS2","DIRECTIVE_CHANNEL","DIRECTIVE_TEXT_MODE","INLINE_MODE","changes_1","getWellformedRange","addedLineOffsets","computeLineOffsets","isAtLineStart","textOffset","getWellformedEdit","spans","sortedEdits_1","htmlParser","html","opts","endsWith","suffix","startsWith","nodeList","listTagStack","linkAttrStack","blockquoteStack","preStack","links","inlineStyle","markdownTags","getListMarkdownTag","listItem","peek","convertAttrs","attrs","attributes","attr","peekTillNotEmpty","removeIfEmptyTag","cleaned","sliceText","unshift","isEndBlock","lastItem","listBlock","markdownDOMParser","tag","unary","li","attribs","prevText","startTag","endTag","makeMap","inline","closeSelf","fillAttrs","special","HTMLParser","RegExp","parseEndTag","parseStartTag","tagName","rest","escaped","HTMLtoXML","HTMLtoDOM","link","base","ownerDocument","getOwnerDocument","DOMDocument","implementation","createDocument","ActiveX","ActiveXObject","elems","documentElement","getDocumentElement","createElement","head","appendChild","getElementsByTagName","curParentNode","setAttribute","createTextNode"],"mappings":"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SAASlnC,KAInF2lC,EAAqCl1C,UAAU02C,wBAA0B,SAASnnC,KAKlF2lC,EAAqCl1C,UAAU22C,oBAAsB,SAASpnC,KAI9E2lC,EAAqCl1C,UAAU42C,mBAAqB,SAASrnC,KAK7E2lC,EAAqCl1C,UAAU62C,wBAA0B,SAAStnC,KAIlF2lC,EAAqCl1C,UAAU82C,uBAAyB,SAASvnC,KAKjF2lC,EAAqCl1C,UAAU+2C,0BAA4B,SAASxnC,KAIpF2lC,EAAqCl1C,UAAUg3C,yBAA2B,SAASznC,KAKnF2lC,EAAqCl1C,UAAUi3C,mCAAqC,SAAS1nC,KAI7F2lC,EAAqCl1C,UAAUk3C,kCAAoC,SAAS3nC,KAK5F2lC,EAAqCl1C,UAAUm3C,uBAAyB,SAAS5nC,KAIjF2lC,EAAqCl1C,UAAUo3C,sBAAwB,SAAS7nC,KAKhFrR,EAAQg3C,qCAAuCA,G,gBCrK/C,IAAI5N,EAAS,EAAQ,GACjB+P,EAA2B,EAAQ,IAA8BA,yBACjEC,EAA0B,EAAQ,KAA6BA,wBAK/DC,EAAgB,CAAC,YACjB,kBACA,qBACA,sCACA,yBACA,oBACA,qBACA,oBACA,qBACA,6BACA,sCACA,sCACA,sCACA,sCACA,mBACA,eACA,eACA,eACA,gBACA,gBACA,mBACA,eACA,gBACA,+BACA,+BACA,4BACA,qBACA,0BACA,+BACA,8BACA,+BACA,kBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,eACA,gBACA,kBACA,gBACA,gBACA,kBACA,iBACA,gBACA,gBACA,gBACA,iBACA,gBACA,eACA,kBACA,gBACA,eACA,kBACA,gBACA,gBACA,eACA,kBACA,gBACA,kBACA,gBACA,kBACA,gBACA,gBACA,mBACA,oBACA,wBACA,4BACA,wBACA,wBACA,wBACA,yBACA,yBACA,0BACA,sBACA,wBACA,uBACA,0BACA,yBACA,0BACA,+BACA,uBACA,yBACA,4BACA,yBACA,yBACA,0BACA,yBACA,0BACA,yBACA,yBACA,yBACA,yBACA,2BACA,0BACA,yBACA,2BACA,yBACA,8BACA,yBACA,yBACA,uBACA,iDACA,6BACA,mCACA,8BACA,oBACA,gBACA,kBACA,eACA,eACA,eACA,eACA,eACA,gBACA,gBACA,gBACA,gBACA,iBACA,gBACA,gBACA,gBACA,gBACA,iBACA,gBACA,gBACA,gBACA,iBACA,iBACA,gBACA,gBACA,gBACA,gBACA,iBACA,gBACA,gBACA,eACA,eACA,eACA,eACA,gBACA,gBACA,iBACA,oBACA,kBACA,gBACA,gBACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,kBACA,gBACA,eACA,gBACA,eACA,gBACA,eACA,mBACA,gBACA,iBACA,oBACA,eACA,eACA,eACA,eACA,gBACA,eACA,iBACA,gBACA,eACA,eACA,eACA,gBACA,eACA,gBACA,gBACA,eACA,iBACA,eACA,gBACA,eACA,eACA,iBACA,eACA,eACA,gBACA,eACA,eACA,gBACA,eACA,gBACA,gBACA,eACA,gBACA,kBACA,eACA,gBACA,mBACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gBACA,gBACA,eACA,eACA,eACA,gBACA,kBACA,iBACA,gBACA,eACA,iBACA,gBACA,iBACA,eACA,eACA,gBACA,eACA,eACA,gBACA,eACA,kBACA,gBACA,eACA,eACA,gBACA,gBACA,iBACA,iBACA,eACA,gBACA,eACA,eACA,eACA,eACA,eACA,iBACA,eACA,eACA,eACA,gBACA,gBACA,gBACA,eACA,eACA,eACA,gBACA,eACA,eACA,eACA,eACA,iBACA,gBACA,eACA,gBACA,gBACA,eACA,eACA,eACA,eACA,gBACA,eACA,gBACA,gBACA,iBACA,iBACA,eACA,eACA,eACA,eACA,eACA,iBACA,gBACA,iBACA,iBACA,eACA,eACA,eACA,eACA,eACA,kBACA,eACA,iBACA,iBACA,eACA,gBACA,gBACA,kBACA,eACA,eACA,eACA,eACA,eACA,gBACA,eACA,gBACA,eACA,eACA,iBACA,eACA,gBACA,eACA,gBACA,eACA,eACA,gBACA,eACA,gBACA,eACA,gBACA,mBACA,eACA,eACA,eACA,eACA,eACA,iBACA,eACA,eACA,gBACA,eACA,gBACA,iBACA,eACA,gBACA,eACA,eACA,gBACA,eACA,eACA,gBACA,iBACA,gBACA,eACA,eACA,eACA,eACA,iBACA,iBACA,eACA,gBACA,iBACA,iBACA,eACA,eACA,gBACA,eACA,iBACA,eACA,gBACA,eACA,gBACA,eACA,gBACA,gBACA,eACA,eACA,eACA,eACA,kBACA,eACA,eACA,iBACA,oBACA,iBACA,eACA,eACA,oBACA,oBACA,qBACA,oBACA,qBACA,oBACA,eACA,eACA,eACA,eACA,eACA,kBACA,gBACA,eACA,kBACA,mBACA,gBACA,eACA,eACA,gBACA,kBACA,eACA,eACA,eACA,eACA,eACA,eACA,iBACA,mBACA,eACA,eACA,iBACA,eACA,eACA,oBACA,iBACA,eACA,eACA,eACA,eACA,gBACA,mBACA,eACA,eACA,eACA,gBACA,iBACA,eACA,gBACA,kBACA,gBACA,gBACA,eACA,mBACA,eACA,eACA,eACA,eACA,eACA,kBACA,iBACA,iBACA,eACA,eACA,eACA,eACA,gBACA,gBACA,eACA,eACA,iBACA,eACA,gBACA,eACA,eACA,eACA,eACA,kBACA,eACA,gBACA,gBACA,eACA,gBACA,gBACA,gBACA,eACA,eACA,eACA,eACA,gBACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,mBACA,eACA,eACA,eACA,mBACA,gBACA,gBACA,gBACA,gBACA,eACA,eACA,eACA,eACA,eACA,eACA,gBACA,iBACA,eACA,eACA,eACA,eACA,eACA,iBACA,gBACA,eACA,mBACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,iBACA,gBACA,eACA,oBACA,eACA,gBACA,gBACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gBAA4Ej3C,KAAK,IAGjFiK,GAAM,IAAI+8B,EAAO/8B,IAAIi/B,iBAAkBS,YAAYsN,GAEnDC,EAAiBjtC,EAAIwM,gBAAgB7T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AAiB74F,KAAKwwE,WAP3BxwE,KAAK84F,oBAAoB94F,KAAKwwE,SAC9BxwE,KAAKwwE,QAAU,OAUjBrzE,EAAQgN,OAASA,G,gBC/pBjB,IAAIo8B,EAAS,EAAQ,GAIjBiQ,EAAgB,CAAC,YACjB,yBACA,oBACA,+BACA,gCACA,qBACA,oBACA,qBACA,oBACA,uBACA,uCACA,mCACA,qCACA,sCACA,sCACA,sCACA,4BACA,eACA,mBACA,eACA,kBACA,kBACA,gBACA,eACA,kBACA,mBACA,eACA,mBACA,eACA,iCACA,8BACA,uBACA,wBACA,uBACA,0BACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,oBACA,sBACA,6BACA,yBACA,8BACA,yBACA,0BACA,wBACA,wBACA,sBACA,wBACA,0BACA,yBACA,0BACA,uBACA,yBACA,yBACA,0BACA,uBACA,yBACA,uBACA,uBACA,uBACA,uBACA,sBACA,qBACA,wBACA,sBACA,iCACA,uBACA,mBACA,eACA,eACA,mBACA,yBACA,8BACA,0BACA,oCACA,yBACA,oBACA,4BACA,4BACA,8BACA,6BACA,4BACA,+BACA,kBACA,iBACA,eACA,eACA,eACA,eACA,eACA,gBACA,gBACA,gBACA,iBACA,gBACA,gBACA,gBACA,gBACA,iBACA,gBACA,gBACA,gBACA,gBACA,iBACA,iBACA,eACA,eACA,eACA,eACA,eACA,gBACA,gBACA,gBACA,gBACA,iBACA,gBACA,gBACA,gBACA,gBACA,iBACA,gBACA,gBACA,gBACA,gBACA,iBACA,gBACA,gBACA,gBACA,gBACA,iBACA,gBACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gBACA,eACA,eACA,gBACA,kBACA,eACA,eACA,eACA,iBACA,iBACA,mBACA,gBACA,eACA,eACA,kBACA,gBACA,eACA,eACA,gBACA,iBACA,kBACA,iBACA,iBACA,eACA,eACA,kBACA,gBACA,eACA,eACA,eACA,gBACA,eACA,gBACA,eACA,eACA,gBACA,gBACA,gBACA,gBACA,eACA,eACA,eACA,eACA,gBACA,eACA,iBACA,mBACA,kBACA,gBACA,oBACA,mBACA,eACA,eACA,iBACA,eACA,mBACA,mBACA,gBACA,kBACA,iBACA,mBACA,iBACA,kBACA,eACA,mBACA,iBACA,oBACA,mBACA,kBACA,mBACA,iBACA,mBACA,mBACA,iBACA,gBACA,eACA,iBACA,iBACA,gBACA,gBACA,gBACA,gBACA,mBACA,gBACA,gBACA,iBACA,gBACA,gBACA,iBACA,gBACA,eACA,eACA,kBACA,iBACA,oBACA,eACA,eACA,eACA,gBACA,eACA,eACA,iBACA,eACA,eACA,eACA,gBACA,eACA,eACA,eACA,gBACA,eACA,eACA,eACA,eACA,eACA,gBACA,mBACA,oBACA,gBACA,eACA,eACA,iBACA,oBACA,oBACA,eACA,eACA,eACA,eACA,kBACA,eACA,eACA,eACA,eACA,eACA,qBACA,eACA,eACA,gBACA,mBACA,uBACA,eACA,eACA,gBACA,eACA,eACA,gBACA,kBACA,eACA,eACA,oBACA,oBACA,sBACA,eACA,eACA,eACA,eACA,kBACA,oBACA,kBACA,kBACA,eACA,gBACA,yBACA,mBACA,oBACA,gBACA,eACA,eACA,mBACA,mBACA,iBACA,iBACA,gBACA,eACA,eACA,eACA,eACA,iBACA,oBACA,gBACA,eACA,eACA,iBACA,iBACA,iBACA,iBACA,mBACA,iBACA,iBACA,iBACA,kBACA,iBACA,iBACA,iBACA,iBACA,iBACA,oBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,kBACA,eACA,eACA,eACA,gBACA,oBACA,UAAyBj3C,KAAK,IAG9BiK,GAAM,IAAI+8B,EAAO/8B,IAAIi/B,iBAAkBS,YAAYsN,GAEnDC,EAAiBjtC,EAAIwM,gBAAgB7T,KAAK,SAASu0C,EAAIppC,GAAS,OAAO,IAAIi5B,EAAO78B,IAAIitC,IAAID,EAAIppC,MAElG,SAAS07E,EAA4BnjF,GAGjC,OAFH0gC,EAAOr8B,MAAM1M,KAAKw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MAAMe,OASxC,gBAAgBgJ,GACZ,GAAKA,EAAII,SAGT,IAAK,IAAIvR,EAAI,EAAGA,EAAImR,EAAII,SAASrN,OAAQlE,IAAK,CAC1C,IAAI6J,EAAOsH,EAAII,SAASvR,GACxB,GAAI6J,EAAK0D,WAAagsC,EAAiB8H,cAAgBx3C,EAAKzC,MAAMF,MAAQqyC,EAAiB6O,WAAY,CACnG,IAAI46C,EAAan5F,EAAKzC,MAAMe,KAC5BoZ,QAAQwI,IAAIi5E,KAOxB,YAAYziG,EAAc4kB,GACVxd,MAARpH,GACmCoH,MAA/BhF,KAAKihB,OAAOg9C,UAAUrgE,KACtBoC,KAAKihB,OAAOg9C,UAAUrgE,GAAQ,CAC1BA,KAAMA,EACN2kE,WAAY,GACZ/H,SAAU,GACVuD,WAAY,KAIxB,IAAK,MAAMn/D,KAAO4jB,EACdxiB,KAAKihB,OAAOg9C,UAAUrgE,GAAMgB,GAAO4jB,EAAK5jB,GAIhD,mBAAmBhB,EAAck/D,O,gBC3zBrC,IAAIv2B,EAAS,EAAQ,GAIjBiQ,EAAgB,CAAC,YACjB,uBACA,qBACA,4BACA,mCACA,oBACA,qBACA,oBACA,qBACA,oBACA,qCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,wCACA,sCACA,sCACA,sCACA,sCACA,+BACA,oBACA,qBACA,oBACA,qBACA,oBACA,qBACA,oBACA,qBACA,oBACA,qBACA,oBACA,qBACA,oBACA,qBACA,oBACA,qBACA,oBACA,qBACA,oBACA,qBACA,oBACA,qBACA,oBACA,qBACA,oBACA,qBACA,oBACA,gBACA,eACA,eACA,eACA,eACA,gBACA,8BACA,2BACA,qBACA,2BACA,uBACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,sBACA,qBACA,qBACA,uBACA,uBACA,uBACA,uBACA,qBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,0BACA,0BACA,yBACA,yBACA,yBACA,uBACA,yBACA,uBACA,yBACA,0BACA,uBACA,uBACA,8BACA,uBACA,uBACA,uBACA,iBACA,eACA,eACA,eACA,eACA,kBACA,eACA,kBACA,eACA,kBACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,kBACA,kBACA,gBACA,kBACA,kBACA,mBACA,kBACA,gBACA,gBACA,gBACA,iBACA,gBACA,eACA,mBACA,mBACA,gBACA,gBACA,eACA,eACA,gBACA,eACA,mBACA,eACA,kBACA,gBACA,kBACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,mBACA,eACA,kBACA,kBACA,gBACA,gBACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gBACA,eACA,mBACA,eACA,eACA,eACA,eACA,kBACA,eACA,mBACA,eACA,wBACA,qBACA,uBACA,sDACA,mCACA,sBACA,uBACA,wBACA,uBACA,kBACA,eACA,eACA,eACA,eACA,oBACA,oBACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,mBACA,0BACA,2BACA,+BACA,8BACA,6BACA,4BACA,8BACA,6BACA,8BACA,4BACA,gBACA,iBACA,eACA,eACA,eACA,eACA,eACA,iBACA,gBACA,gBACA,gBACA,gBACA,iBACA,gBACA,gBACA,gBACA,gBACA,iBACA,gBACA,gBACA,gBACA,gBACA,iBACA,gBACA,gBACA,gBACA,gBACA,gBACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gBACA,iBACA,eACA,eACA,eACA,eACA,eACA,gBACA,gBACA,gBACA,gBACA,iBACA,gBACA,gBACA,gBACA,gBACA,iBACA,gBACA,gBACA,gBACA,gBACA,iBACA,gBACA,gBACA,gBACA,gBACA,iBACA,gBACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gBACA,gBACA,iBACA,eACA,iBACA,gBACA,eACA,eACA,gBACA,eACA,eACA,gBACA,eACA,eACA,gBACA,eACA,eACA,eACA,eACA,eACA,eACA,gBACA,eACA,gBACA,eACA,gBACA,eACA,eACA,gBACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gBACA,eACA,gBACA,gBACA,gBACA,gBACA,eACA,eACA,gBACA,eACA,gBACA,eACA,eACA,gBACA,iBACA,gBACA,eACA,gBACA,gBACA,eACA,gBACA,iBACA,eACA,eACA,eACA,gBACA,eACA,eACA,gBACA,eACA,gBACA,eACA,eACA,eACA,eACA,eACA,gBACA,iBACA,eACA,gBACA,eACA,eACA,eACA,eACA,gBACA,eACA,eACA,gBACA,gBACA,eACA,eACA,gBACA,eACA,gBACA,eACA,eACA,eACA,gBACA,eACA,gBACA,eACA,gBACA,eACA,eACA,eACA,eACA,eACA,eACA,gBACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gBACA,eACA,eACA,eACA,gBACA,eACA,eACA,eACA,eACA,eACA,eACA,gBACA,eACA,eACA,eACA,gBACA,eACA,eACA,eACA,gBACA,iBACA,gBACA,eACA,gBACA,gBACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gBACA,eACA,eACA,gBACA,gBACA,kBACA,gBACA,gBACA,gBACA,gBACA,eACA,iBACA,eACA,gBACA,eACA,gBACA,eACA,gBACA,eACA,eACA,eACA,eACA,eACA,gBACA,eACA,eACA,gBACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gBACA,gBACA,eACA,gBACA,gBACA,eACA,eACA,eACA,eACA,gBACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gBACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gBACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gBACA,gBACA,eACA,eACA,eACA,eACA,eACA,eACA,oBACA,kBACA,gBACA,eACA,eACA,eACA,gBACA,eACA,gBACA,gBACA,eACA,eACA,eACA,eACA,kBACA,eACA,eACA,eACA,iBACA,eACA,eACA,eACA,eACA,eACA,gBACA,eACA,eACA,eACA,eACA,gBACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gBACA,iBACA,mBACA,eACA,eACA,gBACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gBACA,mBACA,eACA,eACA,iBACA,eACA,eACA,eACA,eACA,kBACA,iBACA,kBACA,kBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,iBACA,iBACA,iBACA,iBACA,oBACA,iBACA,gBACA,kBACA,eACA,eACA,oBACA,oBACA,eACA,eACA,gBACA,kBACA,gBACA,gBACA,mBACA,eACA,eACA,gBACA,kBACA,gBACA,gBACA,eACA,gBACA,iBACA,eACA,gBACA,eACA,gBACA,eACA,gBACA,eACA,gBACA,gBACA,gBACA,eACA,gBACA,gBACA,eACA,gBACA,gBACA,eACA,eACA,iBACA,gBACA,eACA,eACA,eACA,gBACA,kBACA,eACA,gBACA,eACA,gBACA,eACA,gBACA,eACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,eACA,gBACA,eACA,gBACA,eACA,iBACA,eACA,eACA,gBACA,kBACA,eACA,eACA,oBACA,eACA,eACA,eACA,eACA,gBACA,eACA,eACA,eACA,gBACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gBACA,eACA,eACA,gBACA,gBACA,iBACA,mBACA,eACA,eACA,gBACA,eACA,eACA,eACA,gBACA,gBACA,eACA,eACA,eACA,eACA,eACA,kBACA,eACA,eACA,eACA,eACA,eACA,oBACA,kBACA,eACA,eACA,gBACA,gBACA,eACA,gBACA,oBACA,eACA,eACA,gBACA,mBACA,eACA,eACA,gBACA,eACA,eACA,eACA,eACA,gBACA,gBACA,kBACA,eACA,eACA,eACA,gBACA,eACA,oBACA,iBACA,eACA,eACA,gBACA,eACA,eACA,gBACA,eACA,eACA,iBACA,eACA,eACA,gBACA,eACA,eACA,eACA,eACA,gBACA,eACA,eACA,eACA,eACA,eACA,gBACA,eACA,eACA,gBACA,eACA,eACA,eACA,eACA,gBACA,eACA,eACA,eACA,eACA,gBACA,eACA,eACA,eACA,eACA,gBACA,eACA,gBACA,gBACA,eACA,eACA,gBACA,eACA,eACA,gBACA,eACA,eACA,gBACA,eACA,eACA,gBACA,eACA,eACA,gBACA,eACA,eACA,gBACA,eACA,eACA,gBACA,eACA,eACA,eACA,gBACA,eACA,gBACA,gBACA,eACA,eACA,eACA,gBACA,eACA,eACA,iBACA,kBACA,gBACA,eACA,eACA,eACA,gBACA,iBACA,eACA,iBACA,eACA,eACA,iBACA,eACA,iBACA,eACA,eACA,iBACA,eACA,eACA,eACA,iBACA,gBACA,iBACA,eACA,iBACA,gBACA,iBACA,eACA,iBACA,gBACA,iBACA,eACA,iBACA,eACA,iBACA,eACA,iBACA,eACA,iBACA,gBACA,iBACA,eACA,iBACA,eACA,iBACA,eACA,eACA,gBACA,mBACA,eACA,kBACA,eACA,eACA,gBACA,eACA,iBACA,eACA,iBACA,eACA,iBACA,eACA,iBACA,eACA,iBACA,eACA,iBACA,kBACA,eACA,eACA,gBACA,gBACA,eACA,eACA,eACA,iBACA,gBACA,eACA,eACA,eACA,eACA,gBACA,gBACA,oBACA,6BACA,iCACA,mCACA,mCACA,gCACA,wBAAiDj3C,KAAK,IAGtDiK,GAAM,IAAI+8B,EAAO/8B,IAAIi/B,iBAAkBS,YAAYsN,GAEnDC,EAAiBjtC,EAAIwM,gBAAgB7T,KAAK,SAASu0C,EAAIppC,GAAS,OAAO,IAAIi5B,EAAO78B,IAAIitC,IAAID,EAAIppC,MAElG,SAASwxF,EAAgBj5F,GAGrB,OAFH0gC,EAAOr8B,MAAM1M,KAAKwC,KAAM6F,GACrB7F,KAAKuR,QAAU,IAAIg1B,EAAO/8B,IAAIqiF,kBAAkB7rF,KAAMwJ,EAAKitC,EAAgB,IAAIlQ,EAAOl8B,wBAC/ErK,KAGX8+F,EAAgB7/F,UAAYlB,OAAOY,OAAO4nC,EAAOr8B,MAAMjL,WACvD6/F,EAAgB7/F,UAAU0G,YAAcm5F,EAExC/gG,OAAOC,eAAe8gG,EAAgB7/F,UAAW,MAAO,CAChDf,IAAM,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","file":"server.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 54);\n","/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nfunction arrayToString(a) {\n    return \"[\" + a.join(\", \") + \"]\";\n}\n\nString.prototype.seed = String.prototype.seed || Math.round(Math.random() * Math.pow(2, 32));\n\nString.prototype.hashCode = function () {\n    var remainder, bytes, h1, h1b, c1, c1b, c2, c2b, k1, i,\n        key = this.toString();\n\n    remainder = key.length & 3; // key.length % 4\n    bytes = key.length - remainder;\n    h1 = String.prototype.seed;\n    c1 = 0xcc9e2d51;\n    c2 = 0x1b873593;\n    i = 0;\n\n    while (i < bytes) {\n        k1 =\n            ((key.charCodeAt(i) & 0xff)) |\n            ((key.charCodeAt(++i) & 0xff) << 8) |\n            ((key.charCodeAt(++i) & 0xff) << 16) |\n            ((key.charCodeAt(++i) & 0xff) << 24);\n        ++i;\n\n        k1 = ((((k1 & 0xffff) * c1) + ((((k1 >>> 16) * c1) & 0xffff) << 16))) & 0xffffffff;\n        k1 = (k1 << 15) | (k1 >>> 17);\n        k1 = ((((k1 & 0xffff) * c2) + ((((k1 >>> 16) * c2) & 0xffff) << 16))) & 0xffffffff;\n\n        h1 ^= k1;\n        h1 = (h1 << 13) | (h1 >>> 19);\n        h1b = ((((h1 & 0xffff) * 5) + ((((h1 >>> 16) * 5) & 0xffff) << 16))) & 0xffffffff;\n        h1 = (((h1b & 0xffff) + 0x6b64) + ((((h1b >>> 16) + 0xe654) & 0xffff) << 16));\n    }\n\n    k1 = 0;\n\n    switch (remainder) {\n        case 3:\n            k1 ^= (key.charCodeAt(i + 2) & 0xff) << 16;\n        case 2:\n            k1 ^= (key.charCodeAt(i + 1) & 0xff) << 8;\n        case 1:\n            k1 ^= (key.charCodeAt(i) & 0xff);\n\n            k1 = (((k1 & 0xffff) * c1) + ((((k1 >>> 16) * c1) & 0xffff) << 16)) & 0xffffffff;\n            k1 = (k1 << 15) | (k1 >>> 17);\n            k1 = (((k1 & 0xffff) * c2) + ((((k1 >>> 16) * c2) & 0xffff) << 16)) & 0xffffffff;\n            h1 ^= k1;\n    }\n\n    h1 ^= key.length;\n\n    h1 ^= h1 >>> 16;\n    h1 = (((h1 & 0xffff) * 0x85ebca6b) + ((((h1 >>> 16) * 0x85ebca6b) & 0xffff) << 16)) & 0xffffffff;\n    h1 ^= h1 >>> 13;\n    h1 = ((((h1 & 0xffff) * 0xc2b2ae35) + ((((h1 >>> 16) * 0xc2b2ae35) & 0xffff) << 16))) & 0xffffffff;\n    h1 ^= h1 >>> 16;\n\n    return h1 >>> 0;\n};\n\nfunction standardEqualsFunction(a, b) {\n    return a.equals(b);\n}\n\nfunction standardHashCodeFunction(a) {\n    return a.hashCode();\n}\n\nfunction Set(hashFunction, equalsFunction) {\n    this.data = {};\n    this.hashFunction = hashFunction || standardHashCodeFunction;\n    this.equalsFunction = equalsFunction || standardEqualsFunction;\n    return this;\n}\n\nObject.defineProperty(Set.prototype, \"length\", {\n    get: function () {\n        var l = 0;\n        for (var key in this.data) {\n            if (key.indexOf(\"hash_\") === 0) {\n                l = l + this.data[key].length;\n            }\n        }\n        return l;\n    }\n});\n\nSet.prototype.add = function (value) {\n    var hash = this.hashFunction(value);\n    var key = \"hash_\" + hash;\n    if (key in this.data) {\n        var values = this.data[key];\n        for (var i = 0; i < values.length; i++) {\n            if (this.equalsFunction(value, values[i])) {\n                return values[i];\n            }\n        }\n        values.push(value);\n        return value;\n    } else {\n        this.data[key] = [value];\n        return value;\n    }\n};\n\nSet.prototype.contains = function (value) {\n    return this.get(value) != null;\n};\n\nSet.prototype.get = function (value) {\n    var hash = this.hashFunction(value);\n    var key = \"hash_\" + hash;\n    if (key in this.data) {\n        var values = this.data[key];\n        for (var i = 0; i < values.length; i++) {\n            if (this.equalsFunction(value, values[i])) {\n                return values[i];\n            }\n        }\n    }\n    return null;\n};\n\nSet.prototype.values = function () {\n    var l = [];\n    for (var key in this.data) {\n        if (key.indexOf(\"hash_\") === 0) {\n            l = l.concat(this.data[key]);\n        }\n    }\n    return l;\n};\n\nSet.prototype.toString = function () {\n    return arrayToString(this.values());\n};\n\nfunction BitSet() {\n    this.data = [];\n    return this;\n}\n\nBitSet.prototype.add = function (value) {\n    this.data[value] = true;\n};\n\nBitSet.prototype.or = function (set) {\n    var bits = this;\n    Object.keys(set.data).map(function (alt) {\n        bits.add(alt);\n    });\n};\n\nBitSet.prototype.remove = function (value) {\n    delete this.data[value];\n};\n\nBitSet.prototype.contains = function (value) {\n    return this.data[value] === true;\n};\n\nBitSet.prototype.values = function () {\n    return Object.keys(this.data);\n};\n\nBitSet.prototype.minValue = function () {\n    return Math.min.apply(null, this.values());\n};\n\nBitSet.prototype.hashCode = function () {\n    var hash = new Hash();\n    hash.update(this.values());\n    return hash.finish();\n};\n\nBitSet.prototype.equals = function (other) {\n    if (!(other instanceof BitSet)) {\n        return false;\n    }\n    return this.hashCode() === other.hashCode();\n};\n\nObject.defineProperty(BitSet.prototype, \"length\", {\n    get: function () {\n        return this.values().length;\n    }\n});\n\nBitSet.prototype.toString = function () {\n    return \"{\" + this.values().join(\", \") + \"}\";\n};\n\nfunction Map(hashFunction, equalsFunction) {\n    this.data = {};\n    this.hashFunction = hashFunction || standardHashCodeFunction;\n    this.equalsFunction = equalsFunction || standardEqualsFunction;\n    return this;\n}\n\nObject.defineProperty(Map.prototype, \"length\", {\n    get: function () {\n        var l = 0;\n        for (var hashKey in this.data) {\n            if (hashKey.indexOf(\"hash_\") === 0) {\n                l = l + this.data[hashKey].length;\n            }\n        }\n        return l;\n    }\n});\n\nMap.prototype.put = function (key, value) {\n    var hashKey = \"hash_\" + this.hashFunction(key);\n    if (hashKey in this.data) {\n        var entries = this.data[hashKey];\n        for (var i = 0; i < entries.length; i++) {\n            var entry = entries[i];\n            if (this.equalsFunction(key, entry.key)) {\n                var oldValue = entry.value;\n                entry.value = value;\n                return oldValue;\n            }\n        }\n        entries.push({key:key, value:value});\n        return value;\n    } else {\n        this.data[hashKey] = [{key:key, value:value}];\n        return value;\n    }\n};\n\nMap.prototype.containsKey = function (key) {\n    var hashKey = \"hash_\" + this.hashFunction(key);\n    if(hashKey in this.data) {\n        var entries = this.data[hashKey];\n        for (var i = 0; i < entries.length; i++) {\n            var entry = entries[i];\n            if (this.equalsFunction(key, entry.key))\n                return true;\n        }\n    }\n    return false;\n};\n\nMap.prototype.get = function (key) {\n    var hashKey = \"hash_\" + this.hashFunction(key);\n    if(hashKey in this.data) {\n        var entries = this.data[hashKey];\n        for (var i = 0; i < entries.length; i++) {\n            var entry = entries[i];\n            if (this.equalsFunction(key, entry.key))\n                return entry.value;\n        }\n    }\n    return null;\n};\n\nMap.prototype.entries = function () {\n    var l = [];\n    for (var key in this.data) {\n        if (key.indexOf(\"hash_\") === 0) {\n            l = l.concat(this.data[key]);\n        }\n    }\n    return l;\n};\n\n\nMap.prototype.getKeys = function () {\n    return this.entries().map(function(e) {\n        return e.key;\n    });\n};\n\n\nMap.prototype.getValues = function () {\n    return this.entries().map(function(e) {\n            return e.value;\n    });\n};\n\n\nMap.prototype.toString = function () {\n    var ss = this.entries().map(function(entry) {\n        return '{' + entry.key + ':' + entry.value + '}';\n    });\n    return '[' + ss.join(\", \") + ']';\n};\n\n\nfunction AltDict() {\n    this.data = {};\n    return this;\n}\n\n\nAltDict.prototype.get = function (key) {\n    key = \"k-\" + key;\n    if (key in this.data) {\n        return this.data[key];\n    } else {\n        return null;\n    }\n};\n\nAltDict.prototype.put = function (key, value) {\n    key = \"k-\" + key;\n    this.data[key] = value;\n};\n\nAltDict.prototype.values = function () {\n    var data = this.data;\n    var keys = Object.keys(this.data);\n    return keys.map(function (key) {\n        return data[key];\n    });\n};\n\nfunction DoubleDict() {\n    return this;\n}\n\nfunction Hash() {\n    this.count = 0;\n    this.hash = 0;\n    return this;\n}\n\nHash.prototype.update = function () {\n    for(var i=0;i<arguments.length;i++) {\n        var value = arguments[i];\n        if (value == null)\n            continue;\n        if(Array.isArray(value))\n            this.update.apply(value);\n        else {\n            var k = 0;\n            switch (typeof(value)) {\n                case 'undefined':\n                case 'function':\n                    continue;\n                case 'number':\n                case 'boolean':\n                    k = value;\n                    break;\n                case 'string':\n                    k = value.hashCode();\n                    break;\n                default:\n                    value.updateHashCode(this);\n                    continue;\n            }\n            k = k * 0xCC9E2D51;\n            k = (k << 15) | (k >>> (32 - 15));\n            k = k * 0x1B873593;\n            this.count = this.count + 1;\n            var hash = this.hash ^ k;\n            hash = (hash << 13) | (hash >>> (32 - 13));\n            hash = hash * 5 + 0xE6546B64;\n            this.hash = hash;\n        }\n    }\n}\n\nHash.prototype.finish = function () {\n    var hash = this.hash ^ (this.count * 4);\n    hash = hash ^ (hash >>> 16);\n    hash = hash * 0x85EBCA6B;\n    hash = hash ^ (hash >>> 13);\n    hash = hash * 0xC2B2AE35;\n    hash = hash ^ (hash >>> 16);\n    return hash;\n}\n\nfunction hashStuff() {\n    var hash = new Hash();\n    hash.update.apply(arguments);\n    return hash.finish();\n}\n\nDoubleDict.prototype.get = function (a, b) {\n    var d = this[a] || null;\n    return d === null ? null : (d[b] || null);\n};\n\nDoubleDict.prototype.set = function (a, b, o) {\n    var d = this[a] || null;\n    if (d === null) {\n        d = {};\n        this[a] = d;\n    }\n    d[b] = o;\n};\n\n\nfunction escapeWhitespace(s, escapeSpaces) {\n    s = s.replace(/\\t/g, \"\\\\t\")\n         .replace(/\\n/g, \"\\\\n\")\n         .replace(/\\r/g, \"\\\\r\");\n    if (escapeSpaces) {\n        s = s.replace(/ /g, \"\\u00B7\");\n    }\n    return s;\n}\n\nfunction titleCase(str) {\n    return str.replace(/\\w\\S*/g, function (txt) {\n        return txt.charAt(0).toUpperCase() + txt.substr(1);\n    });\n};\n\nfunction equalArrays(a, b)\n{\n    if (!Array.isArray(a) || !Array.isArray(b))\n        return false;\n    if (a == b)\n        return true;\n    if (a.length != b.length)\n        return false;\n    for (var i = 0; i < a.length; i++) {\n        if (a[i] == b[i])\n            continue;\n        if (!a[i].equals(b[i]))\n            return false;\n    }\n    return true;\n};\n\nexports.Hash = Hash;\nexports.Set = Set;\nexports.Map = Map;\nexports.BitSet = BitSet;\nexports.AltDict = AltDict;\nexports.DoubleDict = DoubleDict;\nexports.hashStuff = hashStuff;\nexports.escapeWhitespace = escapeWhitespace;\nexports.arrayToString = arrayToString;\nexports.titleCase = titleCase;\nexports.equalArrays = equalArrays;\n","/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n//\n\n// A token has properties: text, type, line, character position in the line\n// (so we can ignore tabs), token channel, index, and source from which\n// we obtained this token.\n\nfunction Token() {\n\tthis.source = null;\n\tthis.type = null; // token type of the token\n\tthis.channel = null; // The parser ignores everything not on DEFAULT_CHANNEL\n\tthis.start = null; // optional; return -1 if not implemented.\n\tthis.stop = null; // optional; return -1 if not implemented.\n\tthis.tokenIndex = null; // from 0..n-1 of the token object in the input stream\n\tthis.line = null; // line=1..n of the 1st character\n\tthis.column = null; // beginning of the line at which it occurs, 0..n-1\n\tthis._text = null; // text of the token.\n\treturn this;\n}\n\nToken.INVALID_TYPE = 0;\n\n// During lookahead operations, this \"token\" signifies we hit rule end ATN state\n// and did not follow it despite needing to.\nToken.EPSILON = -2;\n\nToken.MIN_USER_TOKEN_TYPE = 1;\n\nToken.EOF = -1;\n\n// All tokens go to the parser (unless skip() is called in that rule)\n// on a particular \"channel\". The parser tunes to a particular channel\n// so that whitespace etc... can go to the parser on a \"hidden\" channel.\n\nToken.DEFAULT_CHANNEL = 0;\n\n// Anything on different channel than DEFAULT_CHANNEL is not parsed\n// by parser.\n\nToken.HIDDEN_CHANNEL = 1;\n\n// Explicitly set the text for this token. If {code text} is not\n// {@code null}, then {@link //getText} will return this value rather than\n// extracting the text from the input.\n//\n// @param text The explicit text of the token, or {@code null} if the text\n// should be obtained from the input along with the start and stop indexes\n// of the token.\n\nObject.defineProperty(Token.prototype, \"text\", {\n\tget : function() {\n\t\treturn this._text;\n\t},\n\tset : function(text) {\n\t\tthis._text = text;\n\t}\n});\n\nToken.prototype.getTokenSource = function() {\n\treturn this.source[0];\n};\n\nToken.prototype.getInputStream = function() {\n\treturn this.source[1];\n};\n\nfunction CommonToken(source, type, channel, start, stop) {\n\tToken.call(this);\n\tthis.source = source !== undefined ? source : CommonToken.EMPTY_SOURCE;\n\tthis.type = type !== undefined ? type : null;\n\tthis.channel = channel !== undefined ? channel : Token.DEFAULT_CHANNEL;\n\tthis.start = start !== undefined ? start : -1;\n\tthis.stop = stop !== undefined ? stop : -1;\n\tthis.tokenIndex = -1;\n\tif (this.source[0] !== null) {\n\t\tthis.line = source[0].line;\n\t\tthis.column = source[0].column;\n\t} else {\n\t\tthis.column = -1;\n\t}\n\treturn this;\n}\n\nCommonToken.prototype = Object.create(Token.prototype);\nCommonToken.prototype.constructor = CommonToken;\n\n// An empty {@link Pair} which is used as the default value of\n// {@link //source} for tokens that do not have a source.\nCommonToken.EMPTY_SOURCE = [ null, null ];\n\n// Constructs a new {@link CommonToken} as a copy of another {@link Token}.\n//\n// <p>\n// If {@code oldToken} is also a {@link CommonToken} instance, the newly\n// constructed token will share a reference to the {@link //text} field and\n// the {@link Pair} stored in {@link //source}. Otherwise, {@link //text} will\n// be assigned the result of calling {@link //getText}, and {@link //source}\n// will be constructed from the result of {@link Token//getTokenSource} and\n// {@link Token//getInputStream}.</p>\n//\n// @param oldToken The token to copy.\n//\nCommonToken.prototype.clone = function() {\n\tvar t = new CommonToken(this.source, this.type, this.channel, this.start,\n\t\t\tthis.stop);\n\tt.tokenIndex = this.tokenIndex;\n\tt.line = this.line;\n\tt.column = this.column;\n\tt.text = this.text;\n\treturn t;\n};\n\nObject.defineProperty(CommonToken.prototype, \"text\", {\n\tget : function() {\n\t\tif (this._text !== null) {\n\t\t\treturn this._text;\n\t\t}\n\t\tvar input = this.getInputStream();\n\t\tif (input === null) {\n\t\t\treturn null;\n\t\t}\n\t\tvar n = input.size;\n\t\tif (this.start < n && this.stop < n) {\n\t\t\treturn input.getText(this.start, this.stop);\n\t\t} else {\n\t\t\treturn \"<EOF>\";\n\t\t}\n\t},\n\tset : function(text) {\n\t\tthis._text = text;\n\t}\n});\n\nCommonToken.prototype.toString = function() {\n\tvar txt = this.text;\n\tif (txt !== null) {\n\t\ttxt = txt.replace(/\\n/g, \"\\\\n\").replace(/\\r/g, \"\\\\r\").replace(/\\t/g, \"\\\\t\");\n\t} else {\n\t\ttxt = \"<no text>\";\n\t}\n\treturn \"[@\" + this.tokenIndex + \",\" + this.start + \":\" + this.stop + \"='\" +\n\t\t\ttxt + \"',<\" + this.type + \">\" +\n\t\t\t(this.channel > 0 ? \",channel=\" + this.channel : \"\") + \",\" +\n\t\t\tthis.line + \":\" + this.column + \"]\";\n};\n\nexports.Token = Token;\nexports.CommonToken = CommonToken;\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProtocolNotificationType = exports.ProtocolNotificationType0 = exports.ProtocolRequestType = exports.ProtocolRequestType0 = exports.RegistrationType = void 0;\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\nclass RegistrationType {\n    constructor(method) {\n        this.method = method;\n    }\n}\nexports.RegistrationType = RegistrationType;\nclass ProtocolRequestType0 extends vscode_jsonrpc_1.RequestType0 {\n    constructor(method) {\n        super(method);\n    }\n}\nexports.ProtocolRequestType0 = ProtocolRequestType0;\nclass ProtocolRequestType extends vscode_jsonrpc_1.RequestType {\n    constructor(method) {\n        super(method, vscode_jsonrpc_1.ParameterStructures.byName);\n    }\n}\nexports.ProtocolRequestType = ProtocolRequestType;\nclass ProtocolNotificationType0 extends vscode_jsonrpc_1.NotificationType0 {\n    constructor(method) {\n        super(method);\n    }\n}\nexports.ProtocolNotificationType0 = ProtocolNotificationType0;\nclass ProtocolNotificationType extends vscode_jsonrpc_1.NotificationType {\n    constructor(method) {\n        super(method, vscode_jsonrpc_1.ParameterStructures.byName);\n    }\n}\nexports.ProtocolNotificationType = ProtocolNotificationType;\n// let x: ProtocolNotificationType<number, { value: number}>;\n// let y: ProtocolNotificationType<string, { value: number}>;\n// x = y;\n//# sourceMappingURL=messages.js.map","/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\n/*jslint smarttabs:true */\n\nvar Token = require('./Token').Token;\n\n/* stop is not included! */\nfunction Interval(start, stop) {\n\tthis.start = start;\n\tthis.stop = stop;\n\treturn this;\n}\n\nInterval.prototype.contains = function(item) {\n\treturn item >= this.start && item < this.stop;\n};\n\nInterval.prototype.toString = function() {\n\tif(this.start===this.stop-1) {\n\t\treturn this.start.toString();\n\t} else {\n\t\treturn this.start.toString() + \"..\" + (this.stop-1).toString();\n\t}\n};\n\n\nObject.defineProperty(Interval.prototype, \"length\", {\n\tget : function() {\n\t\treturn this.stop - this.start;\n\t}\n});\n\nfunction IntervalSet() {\n\tthis.intervals = null;\n\tthis.readOnly = false;\n}\n\nIntervalSet.prototype.first = function(v) {\n\tif (this.intervals === null || this.intervals.length===0) {\n\t\treturn Token.INVALID_TYPE;\n\t} else {\n\t\treturn this.intervals[0].start;\n\t}\n};\n\nIntervalSet.prototype.addOne = function(v) {\n\tthis.addInterval(new Interval(v, v + 1));\n};\n\nIntervalSet.prototype.addRange = function(l, h) {\n\tthis.addInterval(new Interval(l, h + 1));\n};\n\nIntervalSet.prototype.addInterval = function(v) {\n\tif (this.intervals === null) {\n\t\tthis.intervals = [];\n\t\tthis.intervals.push(v);\n\t} else {\n\t\t// find insert pos\n\t\tfor (var k = 0; k < this.intervals.length; k++) {\n\t\t\tvar i = this.intervals[k];\n\t\t\t// distinct range -> insert\n\t\t\tif (v.stop < i.start) {\n\t\t\t\tthis.intervals.splice(k, 0, v);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// contiguous range -> adjust\n\t\t\telse if (v.stop === i.start) {\n\t\t\t\tthis.intervals[k].start = v.start;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// overlapping range -> adjust and reduce\n\t\t\telse if (v.start <= i.stop) {\n\t\t\t\tthis.intervals[k] = new Interval(Math.min(i.start, v.start), Math.max(i.stop, v.stop));\n\t\t\t\tthis.reduce(k);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t// greater than any existing\n\t\tthis.intervals.push(v);\n\t}\n};\n\nIntervalSet.prototype.addSet = function(other) {\n\tif (other.intervals !== null) {\n\t\tfor (var k = 0; k < other.intervals.length; k++) {\n\t\t\tvar i = other.intervals[k];\n\t\t\tthis.addInterval(new Interval(i.start, i.stop));\n\t\t}\n\t}\n\treturn this;\n};\n\nIntervalSet.prototype.reduce = function(k) {\n\t// only need to reduce if k is not the last\n\tif (k < this.intervalslength - 1) {\n\t\tvar l = this.intervals[k];\n\t\tvar r = this.intervals[k + 1];\n\t\t// if r contained in l\n\t\tif (l.stop >= r.stop) {\n\t\t\tthis.intervals.pop(k + 1);\n\t\t\tthis.reduce(k);\n\t\t} else if (l.stop >= r.start) {\n\t\t\tthis.intervals[k] = new Interval(l.start, r.stop);\n\t\t\tthis.intervals.pop(k + 1);\n\t\t}\n\t}\n};\n\nIntervalSet.prototype.complement = function(start, stop) {\n    var result = new IntervalSet();\n    result.addInterval(new Interval(start,stop+1));\n    for(var i=0; i<this.intervals.length; i++) {\n        result.removeRange(this.intervals[i]);\n    }\n    return result;\n};\n\nIntervalSet.prototype.contains = function(item) {\n\tif (this.intervals === null) {\n\t\treturn false;\n\t} else {\n\t\tfor (var k = 0; k < this.intervals.length; k++) {\n\t\t\tif(this.intervals[k].contains(item)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n};\n\nObject.defineProperty(IntervalSet.prototype, \"length\", {\n\tget : function() {\n\t\tvar len = 0;\n\t\tthis.intervals.map(function(i) {len += i.length;});\n\t\treturn len;\n\t}\n});\n\nIntervalSet.prototype.removeRange = function(v) {\n    if(v.start===v.stop-1) {\n        this.removeOne(v.start);\n    } else if (this.intervals!==null) {\n        var k = 0;\n        for(var n=0; n<this.intervals.length; n++) {\n            var i = this.intervals[k];\n            // intervals are ordered\n            if (v.stop<=i.start) {\n                return;\n            }\n            // check for including range, split it\n            else if(v.start>i.start && v.stop<i.stop) {\n                this.intervals[k] = new Interval(i.start, v.start);\n                var x = new Interval(v.stop, i.stop);\n                this.intervals.splice(k, 0, x);\n                return;\n            }\n            // check for included range, remove it\n            else if(v.start<=i.start && v.stop>=i.stop) {\n                this.intervals.splice(k, 1);\n                k = k - 1; // need another pass\n            }\n            // check for lower boundary\n            else if(v.start<i.stop) {\n                this.intervals[k] = new Interval(i.start, v.start);\n            }\n            // check for upper boundary\n            else if(v.stop<i.stop) {\n                this.intervals[k] = new Interval(v.stop, i.stop);\n            }\n            k += 1;\n        }\n    }\n};\n\nIntervalSet.prototype.removeOne = function(v) {\n\tif (this.intervals !== null) {\n\t\tfor (var k = 0; k < this.intervals.length; k++) {\n\t\t\tvar i = this.intervals[k];\n\t\t\t// intervals is ordered\n\t\t\tif (v < i.start) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// check for single value range\n\t\t\telse if (v === i.start && v === i.stop - 1) {\n\t\t\t\tthis.intervals.splice(k, 1);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// check for lower boundary\n\t\t\telse if (v === i.start) {\n\t\t\t\tthis.intervals[k] = new Interval(i.start + 1, i.stop);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// check for upper boundary\n\t\t\telse if (v === i.stop - 1) {\n\t\t\t\tthis.intervals[k] = new Interval(i.start, i.stop - 1);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// split existing range\n\t\t\telse if (v < i.stop - 1) {\n\t\t\t\tvar x = new Interval(i.start, v);\n\t\t\t\ti.start = v + 1;\n\t\t\t\tthis.intervals.splice(k, 0, x);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n};\n\nIntervalSet.prototype.toString = function(literalNames, symbolicNames, elemsAreChar) {\n\tliteralNames = literalNames || null;\n\tsymbolicNames = symbolicNames || null;\n\telemsAreChar = elemsAreChar || false;\n\tif (this.intervals === null) {\n\t\treturn \"{}\";\n\t} else if(literalNames!==null || symbolicNames!==null) {\n\t\treturn this.toTokenString(literalNames, symbolicNames);\n\t} else if(elemsAreChar) {\n\t\treturn this.toCharString();\n\t} else {\n\t\treturn this.toIndexString();\n\t}\n};\n\nIntervalSet.prototype.toCharString = function() {\n\tvar names = [];\n\tfor (var i = 0; i < this.intervals.length; i++) {\n\t\tvar v = this.intervals[i];\n\t\tif(v.stop===v.start+1) {\n\t\t\tif ( v.start===Token.EOF ) {\n\t\t\t\tnames.push(\"<EOF>\");\n\t\t\t} else {\n\t\t\t\tnames.push(\"'\" + String.fromCharCode(v.start) + \"'\");\n\t\t\t}\n\t\t} else {\n\t\t\tnames.push(\"'\" + String.fromCharCode(v.start) + \"'..'\" + String.fromCharCode(v.stop-1) + \"'\");\n\t\t}\n\t}\n\tif (names.length > 1) {\n\t\treturn \"{\" + names.join(\", \") + \"}\";\n\t} else {\n\t\treturn names[0];\n\t}\n};\n\n\nIntervalSet.prototype.toIndexString = function() {\n\tvar names = [];\n\tfor (var i = 0; i < this.intervals.length; i++) {\n\t\tvar v = this.intervals[i];\n\t\tif(v.stop===v.start+1) {\n\t\t\tif ( v.start===Token.EOF ) {\n\t\t\t\tnames.push(\"<EOF>\");\n\t\t\t} else {\n\t\t\t\tnames.push(v.start.toString());\n\t\t\t}\n\t\t} else {\n\t\t\tnames.push(v.start.toString() + \"..\" + (v.stop-1).toString());\n\t\t}\n\t}\n\tif (names.length > 1) {\n\t\treturn \"{\" + names.join(\", \") + \"}\";\n\t} else {\n\t\treturn names[0];\n\t}\n};\n\n\nIntervalSet.prototype.toTokenString = function(literalNames, symbolicNames) {\n\tvar names = [];\n\tfor (var i = 0; i < this.intervals.length; i++) {\n\t\tvar v = this.intervals[i];\n\t\tfor (var j = v.start; j < v.stop; j++) {\n\t\t\tnames.push(this.elementName(literalNames, symbolicNames, j));\n\t\t}\n\t}\n\tif (names.length > 1) {\n\t\treturn \"{\" + names.join(\", \") + \"}\";\n\t} else {\n\t\treturn names[0];\n\t}\n};\n\nIntervalSet.prototype.elementName = function(literalNames, symbolicNames, a) {\n\tif (a === Token.EOF) {\n\t\treturn \"<EOF>\";\n\t} else if (a === Token.EPSILON) {\n\t\treturn \"<EPSILON>\";\n\t} else {\n\t\treturn literalNames[a] || symbolicNames[a];\n\t}\n};\n\nexports.Interval = Interval;\nexports.IntervalSet = IntervalSet;\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createProtocolConnection = void 0;\nconst node_1 = require(\"vscode-jsonrpc/node\");\n__exportStar(require(\"vscode-jsonrpc/node\"), exports);\n__exportStar(require(\"../common/api\"), exports);\nfunction createProtocolConnection(input, output, logger, options) {\n    return node_1.createMessageConnection(input, output, logger, options);\n}\nexports.createProtocolConnection = createProtocolConnection;\n//# sourceMappingURL=main.js.map","/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\nexports.atn = require('./atn/index');\nexports.codepointat = require('./polyfills/codepointat');\nexports.dfa = require('./dfa/index');\nexports.fromcodepoint = require('./polyfills/fromcodepoint');\nexports.tree = require('./tree/index');\nexports.error = require('./error/index');\nexports.Token = require('./Token').Token;\nexports.CharStreams = require('./CharStreams').CharStreams;\nexports.CommonToken = require('./Token').CommonToken;\nexports.InputStream = require('./InputStream').InputStream;\nexports.FileStream = require('./FileStream').FileStream;\nexports.CommonTokenStream = require('./CommonTokenStream').CommonTokenStream;\nexports.Lexer = require('./Lexer').Lexer;\nexports.Parser = require('./Parser').Parser;\nvar pc = require('./PredictionContext');\nexports.PredictionContextCache = pc.PredictionContextCache;\nexports.ParserRuleContext = require('./ParserRuleContext').ParserRuleContext;\nexports.Interval = require('./IntervalSet').Interval;\nexports.Utils = require('./Utils');\n","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n//\n\n// The following images show the relation of states and\n// {@link ATNState//transitions} for various grammar constructs.\n//\n// <ul>\n//\n// <li>Solid edges marked with an &//0949; indicate a required\n// {@link EpsilonTransition}.</li>\n//\n// <li>Dashed edges indicate locations where any transition derived from\n// {@link Transition} might appear.</li>\n//\n// <li>Dashed nodes are place holders for either a sequence of linked\n// {@link BasicState} states or the inclusion of a block representing a nested\n// construct in one of the forms below.</li>\n//\n// <li>Nodes showing multiple outgoing alternatives with a {@code ...} support\n// any number of alternatives (one or more). Nodes without the {@code ...} only\n// support the exact number of alternatives shown in the diagram.</li>\n//\n// </ul>\n//\n// <h2>Basic Blocks</h2>\n//\n// <h3>Rule</h3>\n//\n// <embed src=\"images/Rule.svg\" type=\"image/svg+xml\"/>\n//\n// <h3>Block of 1 or more alternatives</h3>\n//\n// <embed src=\"images/Block.svg\" type=\"image/svg+xml\"/>\n//\n// <h2>Greedy Loops</h2>\n//\n// <h3>Greedy Closure: {@code (...)*}</h3>\n//\n// <embed src=\"images/ClosureGreedy.svg\" type=\"image/svg+xml\"/>\n//\n// <h3>Greedy Positive Closure: {@code (...)+}</h3>\n//\n// <embed src=\"images/PositiveClosureGreedy.svg\" type=\"image/svg+xml\"/>\n//\n// <h3>Greedy Optional: {@code (...)?}</h3>\n//\n// <embed src=\"images/OptionalGreedy.svg\" type=\"image/svg+xml\"/>\n//\n// <h2>Non-Greedy Loops</h2>\n//\n// <h3>Non-Greedy Closure: {@code (...)*?}</h3>\n//\n// <embed src=\"images/ClosureNonGreedy.svg\" type=\"image/svg+xml\"/>\n//\n// <h3>Non-Greedy Positive Closure: {@code (...)+?}</h3>\n//\n// <embed src=\"images/PositiveClosureNonGreedy.svg\" type=\"image/svg+xml\"/>\n//\n// <h3>Non-Greedy Optional: {@code (...)??}</h3>\n//\n// <embed src=\"images/OptionalNonGreedy.svg\" type=\"image/svg+xml\"/>\n//\n\nvar INITIAL_NUM_TRANSITIONS = 4;\n\nfunction ATNState() {\n    // Which ATN are we in?\n    this.atn = null;\n    this.stateNumber = ATNState.INVALID_STATE_NUMBER;\n    this.stateType = null;\n    this.ruleIndex = 0; // at runtime, we don't have Rule objects\n    this.epsilonOnlyTransitions = false;\n    // Track the transitions emanating from this ATN state.\n    this.transitions = [];\n    // Used to cache lookahead during parsing, not used during construction\n    this.nextTokenWithinRule = null;\n    return this;\n}\n\n// constants for serialization\nATNState.INVALID_TYPE = 0;\nATNState.BASIC = 1;\nATNState.RULE_START = 2;\nATNState.BLOCK_START = 3;\nATNState.PLUS_BLOCK_START = 4;\nATNState.STAR_BLOCK_START = 5;\nATNState.TOKEN_START = 6;\nATNState.RULE_STOP = 7;\nATNState.BLOCK_END = 8;\nATNState.STAR_LOOP_BACK = 9;\nATNState.STAR_LOOP_ENTRY = 10;\nATNState.PLUS_LOOP_BACK = 11;\nATNState.LOOP_END = 12;\n\nATNState.serializationNames = [\n            \"INVALID\",\n            \"BASIC\",\n            \"RULE_START\",\n            \"BLOCK_START\",\n            \"PLUS_BLOCK_START\",\n            \"STAR_BLOCK_START\",\n            \"TOKEN_START\",\n            \"RULE_STOP\",\n            \"BLOCK_END\",\n            \"STAR_LOOP_BACK\",\n            \"STAR_LOOP_ENTRY\",\n            \"PLUS_LOOP_BACK\",\n            \"LOOP_END\" ];\n\nATNState.INVALID_STATE_NUMBER = -1;\n\nATNState.prototype.toString = function() {\n\treturn this.stateNumber;\n};\n\nATNState.prototype.equals = function(other) {\n    if (other instanceof ATNState) {\n        return this.stateNumber===other.stateNumber;\n    } else {\n        return false;\n    }\n};\n\nATNState.prototype.isNonGreedyExitState = function() {\n    return false;\n};\n\n\nATNState.prototype.addTransition = function(trans, index) {\n\tif(index===undefined) {\n\t\tindex = -1;\n\t}\n    if (this.transitions.length===0) {\n        this.epsilonOnlyTransitions = trans.isEpsilon;\n    } else if(this.epsilonOnlyTransitions !== trans.isEpsilon) {\n        this.epsilonOnlyTransitions = false;\n    }\n    if (index===-1) {\n        this.transitions.push(trans);\n    } else {\n        this.transitions.splice(index, 1, trans);\n    }\n};\n\nfunction BasicState() {\n\tATNState.call(this);\n    this.stateType = ATNState.BASIC;\n    return this;\n}\n\nBasicState.prototype = Object.create(ATNState.prototype);\nBasicState.prototype.constructor = BasicState;\n\n\nfunction DecisionState() {\n\tATNState.call(this);\n    this.decision = -1;\n    this.nonGreedy = false;\n    return this;\n}\n\nDecisionState.prototype = Object.create(ATNState.prototype);\nDecisionState.prototype.constructor = DecisionState;\n\n\n//  The start of a regular {@code (...)} block.\nfunction BlockStartState() {\n\tDecisionState.call(this);\n\tthis.endState = null;\n\treturn this;\n}\n\nBlockStartState.prototype = Object.create(DecisionState.prototype);\nBlockStartState.prototype.constructor = BlockStartState;\n\n\nfunction BasicBlockStartState() {\n\tBlockStartState.call(this);\n\tthis.stateType = ATNState.BLOCK_START;\n\treturn this;\n}\n\nBasicBlockStartState.prototype = Object.create(BlockStartState.prototype);\nBasicBlockStartState.prototype.constructor = BasicBlockStartState;\n\n\n// Terminal node of a simple {@code (a|b|c)} block.\nfunction BlockEndState() {\n\tATNState.call(this);\n\tthis.stateType = ATNState.BLOCK_END;\n    this.startState = null;\n    return this;\n}\n\nBlockEndState.prototype = Object.create(ATNState.prototype);\nBlockEndState.prototype.constructor = BlockEndState;\n\n\n// The last node in the ATN for a rule, unless that rule is the start symbol.\n//  In that case, there is one transition to EOF. Later, we might encode\n//  references to all calls to this rule to compute FOLLOW sets for\n//  error handling.\n//\nfunction RuleStopState() {\n\tATNState.call(this);\n    this.stateType = ATNState.RULE_STOP;\n    return this;\n}\n\nRuleStopState.prototype = Object.create(ATNState.prototype);\nRuleStopState.prototype.constructor = RuleStopState;\n\nfunction RuleStartState() {\n\tATNState.call(this);\n\tthis.stateType = ATNState.RULE_START;\n\tthis.stopState = null;\n\tthis.isPrecedenceRule = false;\n\treturn this;\n}\n\nRuleStartState.prototype = Object.create(ATNState.prototype);\nRuleStartState.prototype.constructor = RuleStartState;\n\n// Decision state for {@code A+} and {@code (A|B)+}.  It has two transitions:\n//  one to the loop back to start of the block and one to exit.\n//\nfunction PlusLoopbackState() {\n\tDecisionState.call(this);\n\tthis.stateType = ATNState.PLUS_LOOP_BACK;\n\treturn this;\n}\n\nPlusLoopbackState.prototype = Object.create(DecisionState.prototype);\nPlusLoopbackState.prototype.constructor = PlusLoopbackState;\n\n\n// Start of {@code (A|B|...)+} loop. Technically a decision state, but\n//  we don't use for code generation; somebody might need it, so I'm defining\n//  it for completeness. In reality, the {@link PlusLoopbackState} node is the\n//  real decision-making note for {@code A+}.\n//\nfunction PlusBlockStartState() {\n\tBlockStartState.call(this);\n\tthis.stateType = ATNState.PLUS_BLOCK_START;\n    this.loopBackState = null;\n    return this;\n}\n\nPlusBlockStartState.prototype = Object.create(BlockStartState.prototype);\nPlusBlockStartState.prototype.constructor = PlusBlockStartState;\n\n// The block that begins a closure loop.\nfunction StarBlockStartState() {\n\tBlockStartState.call(this);\n\tthis.stateType = ATNState.STAR_BLOCK_START;\n\treturn this;\n}\n\nStarBlockStartState.prototype = Object.create(BlockStartState.prototype);\nStarBlockStartState.prototype.constructor = StarBlockStartState;\n\n\nfunction StarLoopbackState() {\n\tATNState.call(this);\n\tthis.stateType = ATNState.STAR_LOOP_BACK;\n\treturn this;\n}\n\nStarLoopbackState.prototype = Object.create(ATNState.prototype);\nStarLoopbackState.prototype.constructor = StarLoopbackState;\n\n\nfunction StarLoopEntryState() {\n\tDecisionState.call(this);\n\tthis.stateType = ATNState.STAR_LOOP_ENTRY;\n    this.loopBackState = null;\n    // Indicates whether this state can benefit from a precedence DFA during SLL decision making.\n    this.isPrecedenceDecision = null;\n    return this;\n}\n\nStarLoopEntryState.prototype = Object.create(DecisionState.prototype);\nStarLoopEntryState.prototype.constructor = StarLoopEntryState;\n\n\n// Mark the end of a * or + loop.\nfunction LoopEndState() {\n\tATNState.call(this);\n\tthis.stateType = ATNState.LOOP_END;\n\tthis.loopBackState = null;\n\treturn this;\n}\n\nLoopEndState.prototype = Object.create(ATNState.prototype);\nLoopEndState.prototype.constructor = LoopEndState;\n\n\n// The Tokens rule start state linking to each lexer rule start state */\nfunction TokensStartState() {\n\tDecisionState.call(this);\n\tthis.stateType = ATNState.TOKEN_START;\n\treturn this;\n}\n\nTokensStartState.prototype = Object.create(DecisionState.prototype);\nTokensStartState.prototype.constructor = TokensStartState;\n\nexports.ATNState = ATNState;\nexports.BasicState = BasicState;\nexports.DecisionState = DecisionState;\nexports.BlockStartState = BlockStartState;\nexports.BlockEndState = BlockEndState;\nexports.LoopEndState = LoopEndState;\nexports.RuleStartState = RuleStartState;\nexports.RuleStopState = RuleStopState;\nexports.TokensStartState = TokensStartState;\nexports.PlusLoopbackState = PlusLoopbackState;\nexports.StarLoopbackState = StarLoopbackState;\nexports.StarLoopEntryState = StarLoopEntryState;\nexports.PlusBlockStartState = PlusBlockStartState;\nexports.StarBlockStartState = StarBlockStartState;\nexports.BasicBlockStartState = BasicBlockStartState;\n","/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n///\n\n// The basic notion of a tree has a parent, a payload, and a list of children.\n//  It is the most abstract interface for all the trees used by ANTLR.\n///\n\nvar Token = require('./../Token').Token;\nvar Interval = require('./../IntervalSet').Interval;\nvar INVALID_INTERVAL = new Interval(-1, -2);\nvar Utils = require('../Utils.js');\n\n\nfunction Tree() {\n\treturn this;\n}\n\nfunction SyntaxTree() {\n\tTree.call(this);\n\treturn this;\n}\n\nSyntaxTree.prototype = Object.create(Tree.prototype);\nSyntaxTree.prototype.constructor = SyntaxTree;\n\nfunction ParseTree() {\n\tSyntaxTree.call(this);\n\treturn this;\n}\n\nParseTree.prototype = Object.create(SyntaxTree.prototype);\nParseTree.prototype.constructor = ParseTree;\n\nfunction RuleNode() {\n\tParseTree.call(this);\n\treturn this;\n}\n\nRuleNode.prototype = Object.create(ParseTree.prototype);\nRuleNode.prototype.constructor = RuleNode;\n\nfunction TerminalNode() {\n\tParseTree.call(this);\n\treturn this;\n}\n\nTerminalNode.prototype = Object.create(ParseTree.prototype);\nTerminalNode.prototype.constructor = TerminalNode;\n\nfunction ErrorNode() {\n\tTerminalNode.call(this);\n\treturn this;\n}\n\nErrorNode.prototype = Object.create(TerminalNode.prototype);\nErrorNode.prototype.constructor = ErrorNode;\n\nfunction ParseTreeVisitor() {\n\treturn this;\n}\n\nParseTreeVisitor.prototype.visit = function(ctx) {\n \tif (Array.isArray(ctx)) {\n\t\treturn ctx.map(function(child) {\n            return child.accept(this);\n        }, this);\n\t} else {\n\t\treturn ctx.accept(this);\n\t}\n};\n\nParseTreeVisitor.prototype.visitChildren = function(ctx) {\n\tif (ctx.children) {\n\t\treturn this.visit(ctx.children);\n\t} else {\n\t\treturn null;\n\t}\n}\n\nParseTreeVisitor.prototype.visitTerminal = function(node) {\n};\n\nParseTreeVisitor.prototype.visitErrorNode = function(node) {\n};\n\n\nfunction ParseTreeListener() {\n\treturn this;\n}\n\nParseTreeListener.prototype.visitTerminal = function(node) {\n};\n\nParseTreeListener.prototype.visitErrorNode = function(node) {\n};\n\nParseTreeListener.prototype.enterEveryRule = function(node) {\n};\n\nParseTreeListener.prototype.exitEveryRule = function(node) {\n};\n\nfunction TerminalNodeImpl(symbol) {\n\tTerminalNode.call(this);\n\tthis.parentCtx = null;\n\tthis.symbol = symbol;\n\treturn this;\n}\n\nTerminalNodeImpl.prototype = Object.create(TerminalNode.prototype);\nTerminalNodeImpl.prototype.constructor = TerminalNodeImpl;\n\nTerminalNodeImpl.prototype.getChild = function(i) {\n\treturn null;\n};\n\nTerminalNodeImpl.prototype.getSymbol = function() {\n\treturn this.symbol;\n};\n\nTerminalNodeImpl.prototype.getParent = function() {\n\treturn this.parentCtx;\n};\n\nTerminalNodeImpl.prototype.getPayload = function() {\n\treturn this.symbol;\n};\n\nTerminalNodeImpl.prototype.getSourceInterval = function() {\n\tif (this.symbol === null) {\n\t\treturn INVALID_INTERVAL;\n\t}\n\tvar tokenIndex = this.symbol.tokenIndex;\n\treturn new Interval(tokenIndex, tokenIndex);\n};\n\nTerminalNodeImpl.prototype.getChildCount = function() {\n\treturn 0;\n};\n\nTerminalNodeImpl.prototype.accept = function(visitor) {\n\treturn visitor.visitTerminal(this);\n};\n\nTerminalNodeImpl.prototype.getText = function() {\n\treturn this.symbol.text;\n};\n\nTerminalNodeImpl.prototype.toString = function() {\n\tif (this.symbol.type === Token.EOF) {\n\t\treturn \"<EOF>\";\n\t} else {\n\t\treturn this.symbol.text;\n\t}\n};\n\n// Represents a token that was consumed during resynchronization\n// rather than during a valid match operation. For example,\n// we will create this kind of a node during single token insertion\n// and deletion as well as during \"consume until error recovery set\"\n// upon no viable alternative exceptions.\n\nfunction ErrorNodeImpl(token) {\n\tTerminalNodeImpl.call(this, token);\n\treturn this;\n}\n\nErrorNodeImpl.prototype = Object.create(TerminalNodeImpl.prototype);\nErrorNodeImpl.prototype.constructor = ErrorNodeImpl;\n\nErrorNodeImpl.prototype.isErrorNode = function() {\n\treturn true;\n};\n\nErrorNodeImpl.prototype.accept = function(visitor) {\n\treturn visitor.visitErrorNode(this);\n};\n\nfunction ParseTreeWalker() {\n\treturn this;\n}\n\nParseTreeWalker.prototype.walk = function(listener, t) {\n\tvar errorNode = t instanceof ErrorNode ||\n\t\t\t(t.isErrorNode !== undefined && t.isErrorNode());\n\tif (errorNode) {\n\t\tlistener.visitErrorNode(t);\n\t} else if (t instanceof TerminalNode) {\n\t\tlistener.visitTerminal(t);\n\t} else {\n\t\tthis.enterRule(listener, t);\n\t\tfor (var i = 0; i < t.getChildCount(); i++) {\n\t\t\tvar child = t.getChild(i);\n\t\t\tthis.walk(listener, child);\n\t\t}\n\t\tthis.exitRule(listener, t);\n\t}\n};\n//\n// The discovery of a rule node, involves sending two events: the generic\n// {@link ParseTreeListener//enterEveryRule} and a\n// {@link RuleContext}-specific event. First we trigger the generic and then\n// the rule specific. We to them in reverse order upon finishing the node.\n//\nParseTreeWalker.prototype.enterRule = function(listener, r) {\n\tvar ctx = r.getRuleContext();\n\tlistener.enterEveryRule(ctx);\n\tctx.enterRule(listener);\n};\n\nParseTreeWalker.prototype.exitRule = function(listener, r) {\n\tvar ctx = r.getRuleContext();\n\tctx.exitRule(listener);\n\tlistener.exitEveryRule(ctx);\n};\n\nParseTreeWalker.DEFAULT = new ParseTreeWalker();\n\nexports.RuleNode = RuleNode;\nexports.ErrorNode = ErrorNode;\nexports.TerminalNode = TerminalNode;\nexports.ErrorNodeImpl = ErrorNodeImpl;\nexports.TerminalNodeImpl = TerminalNodeImpl;\nexports.ParseTreeListener = ParseTreeListener;\nexports.ParseTreeVisitor = ParseTreeVisitor;\nexports.ParseTreeWalker = ParseTreeWalker;\nexports.INVALID_INTERVAL = INVALID_INTERVAL;\n","/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\n// The root of the ANTLR exception hierarchy. In general, ANTLR tracks just\n//  3 kinds of errors: prediction errors, failed predicate errors, and\n//  mismatched input errors. In each case, the parser knows where it is\n//  in the input, where it is in the ATN, the rule invocation stack,\n//  and what kind of problem occurred.\n\nvar PredicateTransition = require('./../atn/Transition').PredicateTransition;\n\nfunction RecognitionException(params) {\n\tError.call(this);\n\tif (!!Error.captureStackTrace) {\n        Error.captureStackTrace(this, RecognitionException);\n\t} else {\n\t\tvar stack = new Error().stack;\n\t}\n\tthis.message = params.message;\n    this.recognizer = params.recognizer;\n    this.input = params.input;\n    this.ctx = params.ctx;\n    // The current {@link Token} when an error occurred. Since not all streams\n    // support accessing symbols by index, we have to track the {@link Token}\n    // instance itself.\n    this.offendingToken = null;\n    // Get the ATN state number the parser was in at the time the error\n    // occurred. For {@link NoViableAltException} and\n    // {@link LexerNoViableAltException} exceptions, this is the\n    // {@link DecisionState} number. For others, it is the state whose outgoing\n    // edge we couldn't match.\n    this.offendingState = -1;\n    if (this.recognizer!==null) {\n        this.offendingState = this.recognizer.state;\n    }\n    return this;\n}\n\nRecognitionException.prototype = Object.create(Error.prototype);\nRecognitionException.prototype.constructor = RecognitionException;\n\n// <p>If the state number is not known, this method returns -1.</p>\n\n//\n// Gets the set of input symbols which could potentially follow the\n// previously matched symbol at the time this exception was thrown.\n//\n// <p>If the set of expected tokens is not known and could not be computed,\n// this method returns {@code null}.</p>\n//\n// @return The set of token types that could potentially follow the current\n// state in the ATN, or {@code null} if the information is not available.\n// /\nRecognitionException.prototype.getExpectedTokens = function() {\n    if (this.recognizer!==null) {\n        return this.recognizer.atn.getExpectedTokens(this.offendingState, this.ctx);\n    } else {\n        return null;\n    }\n};\n\nRecognitionException.prototype.toString = function() {\n    return this.message;\n};\n\nfunction LexerNoViableAltException(lexer, input, startIndex, deadEndConfigs) {\n\tRecognitionException.call(this, {message:\"\", recognizer:lexer, input:input, ctx:null});\n    this.startIndex = startIndex;\n    this.deadEndConfigs = deadEndConfigs;\n    return this;\n}\n\nLexerNoViableAltException.prototype = Object.create(RecognitionException.prototype);\nLexerNoViableAltException.prototype.constructor = LexerNoViableAltException;\n\nLexerNoViableAltException.prototype.toString = function() {\n    var symbol = \"\";\n    if (this.startIndex >= 0 && this.startIndex < this.input.size) {\n        symbol = this.input.getText((this.startIndex,this.startIndex));\n    }\n    return \"LexerNoViableAltException\" + symbol;\n};\n\n// Indicates that the parser could not decide which of two or more paths\n// to take based upon the remaining input. It tracks the starting token\n// of the offending input and also knows where the parser was\n// in the various paths when the error. Reported by reportNoViableAlternative()\n//\nfunction NoViableAltException(recognizer, input, startToken, offendingToken, deadEndConfigs, ctx) {\n\tctx = ctx || recognizer._ctx;\n\toffendingToken = offendingToken || recognizer.getCurrentToken();\n\tstartToken = startToken || recognizer.getCurrentToken();\n\tinput = input || recognizer.getInputStream();\n\tRecognitionException.call(this, {message:\"\", recognizer:recognizer, input:input, ctx:ctx});\n    // Which configurations did we try at input.index() that couldn't match\n\t// input.LT(1)?//\n    this.deadEndConfigs = deadEndConfigs;\n    // The token object at the start index; the input stream might\n    // not be buffering tokens so get a reference to it. (At the\n    // time the error occurred, of course the stream needs to keep a\n    // buffer all of the tokens but later we might not have access to those.)\n    this.startToken = startToken;\n    this.offendingToken = offendingToken;\n}\n\nNoViableAltException.prototype = Object.create(RecognitionException.prototype);\nNoViableAltException.prototype.constructor = NoViableAltException;\n\n// This signifies any kind of mismatched input exceptions such as\n// when the current input does not match the expected token.\n//\nfunction InputMismatchException(recognizer) {\n\tRecognitionException.call(this, {message:\"\", recognizer:recognizer, input:recognizer.getInputStream(), ctx:recognizer._ctx});\n    this.offendingToken = recognizer.getCurrentToken();\n}\n\nInputMismatchException.prototype = Object.create(RecognitionException.prototype);\nInputMismatchException.prototype.constructor = InputMismatchException;\n\n// A semantic predicate failed during validation. Validation of predicates\n// occurs when normally parsing the alternative just like matching a token.\n// Disambiguating predicate evaluation occurs when we test a predicate during\n// prediction.\n\nfunction FailedPredicateException(recognizer, predicate, message) {\n\tRecognitionException.call(this, {message:this.formatMessage(predicate,message || null), recognizer:recognizer,\n                         input:recognizer.getInputStream(), ctx:recognizer._ctx});\n    var s = recognizer._interp.atn.states[recognizer.state];\n    var trans = s.transitions[0];\n    if (trans instanceof PredicateTransition) {\n        this.ruleIndex = trans.ruleIndex;\n        this.predicateIndex = trans.predIndex;\n    } else {\n        this.ruleIndex = 0;\n        this.predicateIndex = 0;\n    }\n    this.predicate = predicate;\n    this.offendingToken = recognizer.getCurrentToken();\n    return this;\n}\n\nFailedPredicateException.prototype = Object.create(RecognitionException.prototype);\nFailedPredicateException.prototype.constructor = FailedPredicateException;\n\nFailedPredicateException.prototype.formatMessage = function(predicate, message) {\n    if (message !==null) {\n        return message;\n    } else {\n        return \"failed predicate: {\" + predicate + \"}?\";\n    }\n};\n\nfunction ParseCancellationException() {\n\tError.call(this);\n\tError.captureStackTrace(this, ParseCancellationException);\n\treturn this;\n}\n\nParseCancellationException.prototype = Object.create(Error.prototype);\nParseCancellationException.prototype.constructor = ParseCancellationException;\n\nexports.RecognitionException = RecognitionException;\nexports.NoViableAltException = NoViableAltException;\nexports.LexerNoViableAltException = LexerNoViableAltException;\nexports.InputMismatchException = InputMismatchException;\nexports.FailedPredicateException = FailedPredicateException;\nexports.ParseCancellationException = ParseCancellationException;\n","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n///\n\nvar RuleContext = require('./RuleContext').RuleContext;\nvar Hash = require('./Utils').Hash;\n\nfunction PredictionContext(cachedHashCode) {\n\tthis.cachedHashCode = cachedHashCode;\n}\n\n// Represents {@code $} in local context prediction, which means wildcard.\n// {@code//+x =//}.\n// /\nPredictionContext.EMPTY = null;\n\n// Represents {@code $} in an array in full context mode, when {@code $}\n// doesn't mean wildcard: {@code $ + x = [$,x]}. Here,\n// {@code $} = {@link //EMPTY_RETURN_STATE}.\n// /\nPredictionContext.EMPTY_RETURN_STATE = 0x7FFFFFFF;\n\nPredictionContext.globalNodeCount = 1;\nPredictionContext.id = PredictionContext.globalNodeCount;\n\n// Stores the computed hash code of this {@link PredictionContext}. The hash\n// code is computed in parts to match the following reference algorithm.\n//\n// <pre>\n// private int referenceHashCode() {\n// int hash = {@link MurmurHash//initialize MurmurHash.initialize}({@link\n// //INITIAL_HASH});\n//\n// for (int i = 0; i &lt; {@link //size()}; i++) {\n// hash = {@link MurmurHash//update MurmurHash.update}(hash, {@link //getParent\n// getParent}(i));\n// }\n//\n// for (int i = 0; i &lt; {@link //size()}; i++) {\n// hash = {@link MurmurHash//update MurmurHash.update}(hash, {@link\n// //getReturnState getReturnState}(i));\n// }\n//\n// hash = {@link MurmurHash//finish MurmurHash.finish}(hash, 2// {@link\n// //size()});\n// return hash;\n// }\n// </pre>\n// /\n\n// This means only the {@link //EMPTY} context is in set.\nPredictionContext.prototype.isEmpty = function() {\n\treturn this === PredictionContext.EMPTY;\n};\n\nPredictionContext.prototype.hasEmptyPath = function() {\n\treturn this.getReturnState(this.length - 1) === PredictionContext.EMPTY_RETURN_STATE;\n};\n\nPredictionContext.prototype.hashCode = function() {\n\treturn this.cachedHashCode;\n};\n\n\nPredictionContext.prototype.updateHashCode = function(hash) {\n    hash.update(this.cachedHashCode);\n};\n/*\nfunction calculateHashString(parent, returnState) {\n\treturn \"\" + parent + returnState;\n}\n*/\n\n// Used to cache {@link PredictionContext} objects. Its used for the shared\n// context cash associated with contexts in DFA states. This cache\n// can be used for both lexers and parsers.\n\nfunction PredictionContextCache() {\n\tthis.cache = {};\n\treturn this;\n}\n\n// Add a context to the cache and return it. If the context already exists,\n// return that one instead and do not add a new context to the cache.\n// Protect shared cache from unsafe thread access.\n//\nPredictionContextCache.prototype.add = function(ctx) {\n\tif (ctx === PredictionContext.EMPTY) {\n\t\treturn PredictionContext.EMPTY;\n\t}\n\tvar existing = this.cache[ctx] || null;\n\tif (existing !== null) {\n\t\treturn existing;\n\t}\n\tthis.cache[ctx] = ctx;\n\treturn ctx;\n};\n\nPredictionContextCache.prototype.get = function(ctx) {\n\treturn this.cache[ctx] || null;\n};\n\nObject.defineProperty(PredictionContextCache.prototype, \"length\", {\n\tget : function() {\n\t\treturn this.cache.length;\n\t}\n});\n\nfunction SingletonPredictionContext(parent, returnState) {\n\tvar hashCode = 0;\n\tif(parent !== null) {\n\t\tvar hash = new Hash();\n\t\thash.update(parent, returnState);\n        hashCode = hash.finish();\n\t}\n\tPredictionContext.call(this, hashCode);\n\tthis.parentCtx = parent;\n\tthis.returnState = returnState;\n}\n\nSingletonPredictionContext.prototype = Object.create(PredictionContext.prototype);\nSingletonPredictionContext.prototype.contructor = SingletonPredictionContext;\n\nSingletonPredictionContext.create = function(parent, returnState) {\n\tif (returnState === PredictionContext.EMPTY_RETURN_STATE && parent === null) {\n\t\t// someone can pass in the bits of an array ctx that mean $\n\t\treturn PredictionContext.EMPTY;\n\t} else {\n\t\treturn new SingletonPredictionContext(parent, returnState);\n\t}\n};\n\nObject.defineProperty(SingletonPredictionContext.prototype, \"length\", {\n\tget : function() {\n\t\treturn 1;\n\t}\n});\n\nSingletonPredictionContext.prototype.getParent = function(index) {\n\treturn this.parentCtx;\n};\n\nSingletonPredictionContext.prototype.getReturnState = function(index) {\n\treturn this.returnState;\n};\n\nSingletonPredictionContext.prototype.equals = function(other) {\n\tif (this === other) {\n\t\treturn true;\n\t} else if (!(other instanceof SingletonPredictionContext)) {\n\t\treturn false;\n\t} else if (this.hashCode() !== other.hashCode()) {\n\t\treturn false; // can't be same if hash is different\n\t} else {\n\t\tif(this.returnState !== other.returnState)\n            return false;\n        else if(this.parentCtx==null)\n            return other.parentCtx==null\n\t\telse\n            return this.parentCtx.equals(other.parentCtx);\n\t}\n};\n\nSingletonPredictionContext.prototype.toString = function() {\n\tvar up = this.parentCtx === null ? \"\" : this.parentCtx.toString();\n\tif (up.length === 0) {\n\t\tif (this.returnState === PredictionContext.EMPTY_RETURN_STATE) {\n\t\t\treturn \"$\";\n\t\t} else {\n\t\t\treturn \"\" + this.returnState;\n\t\t}\n\t} else {\n\t\treturn \"\" + this.returnState + \" \" + up;\n\t}\n};\n\nfunction EmptyPredictionContext() {\n\tSingletonPredictionContext.call(this, null, PredictionContext.EMPTY_RETURN_STATE);\n\treturn this;\n}\n\nEmptyPredictionContext.prototype = Object.create(SingletonPredictionContext.prototype);\nEmptyPredictionContext.prototype.constructor = EmptyPredictionContext;\n\nEmptyPredictionContext.prototype.isEmpty = function() {\n\treturn true;\n};\n\nEmptyPredictionContext.prototype.getParent = function(index) {\n\treturn null;\n};\n\nEmptyPredictionContext.prototype.getReturnState = function(index) {\n\treturn this.returnState;\n};\n\nEmptyPredictionContext.prototype.equals = function(other) {\n\treturn this === other;\n};\n\nEmptyPredictionContext.prototype.toString = function() {\n\treturn \"$\";\n};\n\nPredictionContext.EMPTY = new EmptyPredictionContext();\n\nfunction ArrayPredictionContext(parents, returnStates) {\n\t// Parent can be null only if full ctx mode and we make an array\n\t// from {@link //EMPTY} and non-empty. We merge {@link //EMPTY} by using\n\t// null parent and\n\t// returnState == {@link //EMPTY_RETURN_STATE}.\n\tvar h = new Hash();\n\th.update(parents, returnStates);\n\tvar hashCode = h.finish();\n\tPredictionContext.call(this, hashCode);\n\tthis.parents = parents;\n\tthis.returnStates = returnStates;\n\treturn this;\n}\n\nArrayPredictionContext.prototype = Object.create(PredictionContext.prototype);\nArrayPredictionContext.prototype.constructor = ArrayPredictionContext;\n\nArrayPredictionContext.prototype.isEmpty = function() {\n\t// since EMPTY_RETURN_STATE can only appear in the last position, we\n\t// don't need to verify that size==1\n\treturn this.returnStates[0] === PredictionContext.EMPTY_RETURN_STATE;\n};\n\nObject.defineProperty(ArrayPredictionContext.prototype, \"length\", {\n\tget : function() {\n\t\treturn this.returnStates.length;\n\t}\n});\n\nArrayPredictionContext.prototype.getParent = function(index) {\n\treturn this.parents[index];\n};\n\nArrayPredictionContext.prototype.getReturnState = function(index) {\n\treturn this.returnStates[index];\n};\n\nArrayPredictionContext.prototype.equals = function(other) {\n\tif (this === other) {\n\t\treturn true;\n\t} else if (!(other instanceof ArrayPredictionContext)) {\n\t\treturn false;\n\t} else if (this.hashCode() !== other.hashCode()) {\n\t\treturn false; // can't be same if hash is different\n\t} else {\n\t\treturn this.returnStates === other.returnStates &&\n\t\t\t\tthis.parents === other.parents;\n\t}\n};\n\nArrayPredictionContext.prototype.toString = function() {\n\tif (this.isEmpty()) {\n\t\treturn \"[]\";\n\t} else {\n\t\tvar s = \"[\";\n\t\tfor (var i = 0; i < this.returnStates.length; i++) {\n\t\t\tif (i > 0) {\n\t\t\t\ts = s + \", \";\n\t\t\t}\n\t\t\tif (this.returnStates[i] === PredictionContext.EMPTY_RETURN_STATE) {\n\t\t\t\ts = s + \"$\";\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\ts = s + this.returnStates[i];\n\t\t\tif (this.parents[i] !== null) {\n\t\t\t\ts = s + \" \" + this.parents[i];\n\t\t\t} else {\n\t\t\t\ts = s + \"null\";\n\t\t\t}\n\t\t}\n\t\treturn s + \"]\";\n\t}\n};\n\n// Convert a {@link RuleContext} tree to a {@link PredictionContext} graph.\n// Return {@link //EMPTY} if {@code outerContext} is empty or null.\n// /\nfunction predictionContextFromRuleContext(atn, outerContext) {\n\tif (outerContext === undefined || outerContext === null) {\n\t\touterContext = RuleContext.EMPTY;\n\t}\n\t// if we are in RuleContext of start rule, s, then PredictionContext\n\t// is EMPTY. Nobody called us. (if we are empty, return empty)\n\tif (outerContext.parentCtx === null || outerContext === RuleContext.EMPTY) {\n\t\treturn PredictionContext.EMPTY;\n\t}\n\t// If we have a parent, convert it to a PredictionContext graph\n\tvar parent = predictionContextFromRuleContext(atn, outerContext.parentCtx);\n\tvar state = atn.states[outerContext.invokingState];\n\tvar transition = state.transitions[0];\n\treturn SingletonPredictionContext.create(parent, transition.followState.stateNumber);\n}\n/*\nfunction calculateListsHashString(parents, returnStates) {\n\tvar s = \"\";\n\tparents.map(function(p) {\n\t\ts = s + p;\n\t});\n\treturnStates.map(function(r) {\n\t\ts = s + r;\n\t});\n\treturn s;\n}\n*/\nfunction merge(a, b, rootIsWildcard, mergeCache) {\n\t// share same graph if both same\n\tif (a === b) {\n\t\treturn a;\n\t}\n\tif (a instanceof SingletonPredictionContext && b instanceof SingletonPredictionContext) {\n\t\treturn mergeSingletons(a, b, rootIsWildcard, mergeCache);\n\t}\n\t// At least one of a or b is array\n\t// If one is $ and rootIsWildcard, return $ as// wildcard\n\tif (rootIsWildcard) {\n\t\tif (a instanceof EmptyPredictionContext) {\n\t\t\treturn a;\n\t\t}\n\t\tif (b instanceof EmptyPredictionContext) {\n\t\t\treturn b;\n\t\t}\n\t}\n\t// convert singleton so both are arrays to normalize\n\tif (a instanceof SingletonPredictionContext) {\n\t\ta = new ArrayPredictionContext([a.getParent()], [a.returnState]);\n\t}\n\tif (b instanceof SingletonPredictionContext) {\n\t\tb = new ArrayPredictionContext([b.getParent()], [b.returnState]);\n\t}\n\treturn mergeArrays(a, b, rootIsWildcard, mergeCache);\n}\n\n//\n// Merge two {@link SingletonPredictionContext} instances.\n//\n// <p>Stack tops equal, parents merge is same; return left graph.<br>\n// <embed src=\"images/SingletonMerge_SameRootSamePar.svg\"\n// type=\"image/svg+xml\"/></p>\n//\n// <p>Same stack top, parents differ; merge parents giving array node, then\n// remainders of those graphs. A new root node is created to point to the\n// merged parents.<br>\n// <embed src=\"images/SingletonMerge_SameRootDiffPar.svg\"\n// type=\"image/svg+xml\"/></p>\n//\n// <p>Different stack tops pointing to same parent. Make array node for the\n// root where both element in the root point to the same (original)\n// parent.<br>\n// <embed src=\"images/SingletonMerge_DiffRootSamePar.svg\"\n// type=\"image/svg+xml\"/></p>\n//\n// <p>Different stack tops pointing to different parents. Make array node for\n// the root where each element points to the corresponding original\n// parent.<br>\n// <embed src=\"images/SingletonMerge_DiffRootDiffPar.svg\"\n// type=\"image/svg+xml\"/></p>\n//\n// @param a the first {@link SingletonPredictionContext}\n// @param b the second {@link SingletonPredictionContext}\n// @param rootIsWildcard {@code true} if this is a local-context merge,\n// otherwise false to indicate a full-context merge\n// @param mergeCache\n// /\nfunction mergeSingletons(a, b, rootIsWildcard, mergeCache) {\n\tif (mergeCache !== null) {\n\t\tvar previous = mergeCache.get(a, b);\n\t\tif (previous !== null) {\n\t\t\treturn previous;\n\t\t}\n\t\tprevious = mergeCache.get(b, a);\n\t\tif (previous !== null) {\n\t\t\treturn previous;\n\t\t}\n\t}\n\n\tvar rootMerge = mergeRoot(a, b, rootIsWildcard);\n\tif (rootMerge !== null) {\n\t\tif (mergeCache !== null) {\n\t\t\tmergeCache.set(a, b, rootMerge);\n\t\t}\n\t\treturn rootMerge;\n\t}\n\tif (a.returnState === b.returnState) {\n\t\tvar parent = merge(a.parentCtx, b.parentCtx, rootIsWildcard, mergeCache);\n\t\t// if parent is same as existing a or b parent or reduced to a parent,\n\t\t// return it\n\t\tif (parent === a.parentCtx) {\n\t\t\treturn a; // ax + bx = ax, if a=b\n\t\t}\n\t\tif (parent === b.parentCtx) {\n\t\t\treturn b; // ax + bx = bx, if a=b\n\t\t}\n\t\t// else: ax + ay = a'[x,y]\n\t\t// merge parents x and y, giving array node with x,y then remainders\n\t\t// of those graphs. dup a, a' points at merged array\n\t\t// new joined parent so create new singleton pointing to it, a'\n\t\tvar spc = SingletonPredictionContext.create(parent, a.returnState);\n\t\tif (mergeCache !== null) {\n\t\t\tmergeCache.set(a, b, spc);\n\t\t}\n\t\treturn spc;\n\t} else { // a != b payloads differ\n\t\t// see if we can collapse parents due to $+x parents if local ctx\n\t\tvar singleParent = null;\n\t\tif (a === b || (a.parentCtx !== null && a.parentCtx === b.parentCtx)) { // ax +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// bx =\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// [a,b]x\n\t\t\tsingleParent = a.parentCtx;\n\t\t}\n\t\tif (singleParent !== null) { // parents are same\n\t\t\t// sort payloads and use same parent\n\t\t\tvar payloads = [ a.returnState, b.returnState ];\n\t\t\tif (a.returnState > b.returnState) {\n\t\t\t\tpayloads[0] = b.returnState;\n\t\t\t\tpayloads[1] = a.returnState;\n\t\t\t}\n\t\t\tvar parents = [ singleParent, singleParent ];\n\t\t\tvar apc = new ArrayPredictionContext(parents, payloads);\n\t\t\tif (mergeCache !== null) {\n\t\t\t\tmergeCache.set(a, b, apc);\n\t\t\t}\n\t\t\treturn apc;\n\t\t}\n\t\t// parents differ and can't merge them. Just pack together\n\t\t// into array; can't merge.\n\t\t// ax + by = [ax,by]\n\t\tvar payloads = [ a.returnState, b.returnState ];\n\t\tvar parents = [ a.parentCtx, b.parentCtx ];\n\t\tif (a.returnState > b.returnState) { // sort by payload\n\t\t\tpayloads[0] = b.returnState;\n\t\t\tpayloads[1] = a.returnState;\n\t\t\tparents = [ b.parentCtx, a.parentCtx ];\n\t\t}\n\t\tvar a_ = new ArrayPredictionContext(parents, payloads);\n\t\tif (mergeCache !== null) {\n\t\t\tmergeCache.set(a, b, a_);\n\t\t}\n\t\treturn a_;\n\t}\n}\n\n//\n// Handle case where at least one of {@code a} or {@code b} is\n// {@link //EMPTY}. In the following diagrams, the symbol {@code $} is used\n// to represent {@link //EMPTY}.\n//\n// <h2>Local-Context Merges</h2>\n//\n// <p>These local-context merge operations are used when {@code rootIsWildcard}\n// is true.</p>\n//\n// <p>{@link //EMPTY} is superset of any graph; return {@link //EMPTY}.<br>\n// <embed src=\"images/LocalMerge_EmptyRoot.svg\" type=\"image/svg+xml\"/></p>\n//\n// <p>{@link //EMPTY} and anything is {@code //EMPTY}, so merged parent is\n// {@code //EMPTY}; return left graph.<br>\n// <embed src=\"images/LocalMerge_EmptyParent.svg\" type=\"image/svg+xml\"/></p>\n//\n// <p>Special case of last merge if local context.<br>\n// <embed src=\"images/LocalMerge_DiffRoots.svg\" type=\"image/svg+xml\"/></p>\n//\n// <h2>Full-Context Merges</h2>\n//\n// <p>These full-context merge operations are used when {@code rootIsWildcard}\n// is false.</p>\n//\n// <p><embed src=\"images/FullMerge_EmptyRoots.svg\" type=\"image/svg+xml\"/></p>\n//\n// <p>Must keep all contexts; {@link //EMPTY} in array is a special value (and\n// null parent).<br>\n// <embed src=\"images/FullMerge_EmptyRoot.svg\" type=\"image/svg+xml\"/></p>\n//\n// <p><embed src=\"images/FullMerge_SameRoot.svg\" type=\"image/svg+xml\"/></p>\n//\n// @param a the first {@link SingletonPredictionContext}\n// @param b the second {@link SingletonPredictionContext}\n// @param rootIsWildcard {@code true} if this is a local-context merge,\n// otherwise false to indicate a full-context merge\n// /\nfunction mergeRoot(a, b, rootIsWildcard) {\n\tif (rootIsWildcard) {\n\t\tif (a === PredictionContext.EMPTY) {\n\t\t\treturn PredictionContext.EMPTY; // // + b =//\n\t\t}\n\t\tif (b === PredictionContext.EMPTY) {\n\t\t\treturn PredictionContext.EMPTY; // a +// =//\n\t\t}\n\t} else {\n\t\tif (a === PredictionContext.EMPTY && b === PredictionContext.EMPTY) {\n\t\t\treturn PredictionContext.EMPTY; // $ + $ = $\n\t\t} else if (a === PredictionContext.EMPTY) { // $ + x = [$,x]\n\t\t\tvar payloads = [ b.returnState,\n\t\t\t\t\tPredictionContext.EMPTY_RETURN_STATE ];\n\t\t\tvar parents = [ b.parentCtx, null ];\n\t\t\treturn new ArrayPredictionContext(parents, payloads);\n\t\t} else if (b === PredictionContext.EMPTY) { // x + $ = [$,x] ($ is always first if present)\n\t\t\tvar payloads = [ a.returnState, PredictionContext.EMPTY_RETURN_STATE ];\n\t\t\tvar parents = [ a.parentCtx, null ];\n\t\t\treturn new ArrayPredictionContext(parents, payloads);\n\t\t}\n\t}\n\treturn null;\n}\n\n//\n// Merge two {@link ArrayPredictionContext} instances.\n//\n// <p>Different tops, different parents.<br>\n// <embed src=\"images/ArrayMerge_DiffTopDiffPar.svg\" type=\"image/svg+xml\"/></p>\n//\n// <p>Shared top, same parents.<br>\n// <embed src=\"images/ArrayMerge_ShareTopSamePar.svg\" type=\"image/svg+xml\"/></p>\n//\n// <p>Shared top, different parents.<br>\n// <embed src=\"images/ArrayMerge_ShareTopDiffPar.svg\" type=\"image/svg+xml\"/></p>\n//\n// <p>Shared top, all shared parents.<br>\n// <embed src=\"images/ArrayMerge_ShareTopSharePar.svg\"\n// type=\"image/svg+xml\"/></p>\n//\n// <p>Equal tops, merge parents and reduce top to\n// {@link SingletonPredictionContext}.<br>\n// <embed src=\"images/ArrayMerge_EqualTop.svg\" type=\"image/svg+xml\"/></p>\n// /\nfunction mergeArrays(a, b, rootIsWildcard, mergeCache) {\n\tif (mergeCache !== null) {\n\t\tvar previous = mergeCache.get(a, b);\n\t\tif (previous !== null) {\n\t\t\treturn previous;\n\t\t}\n\t\tprevious = mergeCache.get(b, a);\n\t\tif (previous !== null) {\n\t\t\treturn previous;\n\t\t}\n\t}\n\t// merge sorted payloads a + b => M\n\tvar i = 0; // walks a\n\tvar j = 0; // walks b\n\tvar k = 0; // walks target M array\n\n\tvar mergedReturnStates = [];\n\tvar mergedParents = [];\n\t// walk and merge to yield mergedParents, mergedReturnStates\n\twhile (i < a.returnStates.length && j < b.returnStates.length) {\n\t\tvar a_parent = a.parents[i];\n\t\tvar b_parent = b.parents[j];\n\t\tif (a.returnStates[i] === b.returnStates[j]) {\n\t\t\t// same payload (stack tops are equal), must yield merged singleton\n\t\t\tvar payload = a.returnStates[i];\n\t\t\t// $+$ = $\n\t\t\tvar bothDollars = payload === PredictionContext.EMPTY_RETURN_STATE &&\n\t\t\t\t\ta_parent === null && b_parent === null;\n\t\t\tvar ax_ax = (a_parent !== null && b_parent !== null && a_parent === b_parent); // ax+ax\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// ->\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// ax\n\t\t\tif (bothDollars || ax_ax) {\n\t\t\t\tmergedParents[k] = a_parent; // choose left\n\t\t\t\tmergedReturnStates[k] = payload;\n\t\t\t} else { // ax+ay -> a'[x,y]\n\t\t\t\tvar mergedParent = merge(a_parent, b_parent, rootIsWildcard, mergeCache);\n\t\t\t\tmergedParents[k] = mergedParent;\n\t\t\t\tmergedReturnStates[k] = payload;\n\t\t\t}\n\t\t\ti += 1; // hop over left one as usual\n\t\t\tj += 1; // but also skip one in right side since we merge\n\t\t} else if (a.returnStates[i] < b.returnStates[j]) { // copy a[i] to M\n\t\t\tmergedParents[k] = a_parent;\n\t\t\tmergedReturnStates[k] = a.returnStates[i];\n\t\t\ti += 1;\n\t\t} else { // b > a, copy b[j] to M\n\t\t\tmergedParents[k] = b_parent;\n\t\t\tmergedReturnStates[k] = b.returnStates[j];\n\t\t\tj += 1;\n\t\t}\n\t\tk += 1;\n\t}\n\t// copy over any payloads remaining in either array\n\tif (i < a.returnStates.length) {\n\t\tfor (var p = i; p < a.returnStates.length; p++) {\n\t\t\tmergedParents[k] = a.parents[p];\n\t\t\tmergedReturnStates[k] = a.returnStates[p];\n\t\t\tk += 1;\n\t\t}\n\t} else {\n\t\tfor (var p = j; p < b.returnStates.length; p++) {\n\t\t\tmergedParents[k] = b.parents[p];\n\t\t\tmergedReturnStates[k] = b.returnStates[p];\n\t\t\tk += 1;\n\t\t}\n\t}\n\t// trim merged if we combined a few that had same stack tops\n\tif (k < mergedParents.length) { // write index < last position; trim\n\t\tif (k === 1) { // for just one merged element, return singleton top\n\t\t\tvar a_ = SingletonPredictionContext.create(mergedParents[0],\n\t\t\t\t\tmergedReturnStates[0]);\n\t\t\tif (mergeCache !== null) {\n\t\t\t\tmergeCache.set(a, b, a_);\n\t\t\t}\n\t\t\treturn a_;\n\t\t}\n\t\tmergedParents = mergedParents.slice(0, k);\n\t\tmergedReturnStates = mergedReturnStates.slice(0, k);\n\t}\n\n\tvar M = new ArrayPredictionContext(mergedParents, mergedReturnStates);\n\n\t// if we created same array as a or b, return that instead\n\t// TODO: track whether this is possible above during merge sort for speed\n\tif (M === a) {\n\t\tif (mergeCache !== null) {\n\t\t\tmergeCache.set(a, b, a);\n\t\t}\n\t\treturn a;\n\t}\n\tif (M === b) {\n\t\tif (mergeCache !== null) {\n\t\t\tmergeCache.set(a, b, b);\n\t\t}\n\t\treturn b;\n\t}\n\tcombineCommonParents(mergedParents);\n\n\tif (mergeCache !== null) {\n\t\tmergeCache.set(a, b, M);\n\t}\n\treturn M;\n}\n\n//\n// Make pass over all <em>M</em> {@code parents}; merge any {@code equals()}\n// ones.\n// /\nfunction combineCommonParents(parents) {\n\tvar uniqueParents = {};\n\n\tfor (var p = 0; p < parents.length; p++) {\n\t\tvar parent = parents[p];\n\t\tif (!(parent in uniqueParents)) {\n\t\t\tuniqueParents[parent] = parent;\n\t\t}\n\t}\n\tfor (var q = 0; q < parents.length; q++) {\n\t\tparents[q] = uniqueParents[parents[q]];\n\t}\n}\n\nfunction getCachedPredictionContext(context, contextCache, visited) {\n\tif (context.isEmpty()) {\n\t\treturn context;\n\t}\n\tvar existing = visited[context] || null;\n\tif (existing !== null) {\n\t\treturn existing;\n\t}\n\texisting = contextCache.get(context);\n\tif (existing !== null) {\n\t\tvisited[context] = existing;\n\t\treturn existing;\n\t}\n\tvar changed = false;\n\tvar parents = [];\n\tfor (var i = 0; i < parents.length; i++) {\n\t\tvar parent = getCachedPredictionContext(context.getParent(i), contextCache, visited);\n\t\tif (changed || parent !== context.getParent(i)) {\n\t\t\tif (!changed) {\n\t\t\t\tparents = [];\n\t\t\t\tfor (var j = 0; j < context.length; j++) {\n\t\t\t\t\tparents[j] = context.getParent(j);\n\t\t\t\t}\n\t\t\t\tchanged = true;\n\t\t\t}\n\t\t\tparents[i] = parent;\n\t\t}\n\t}\n\tif (!changed) {\n\t\tcontextCache.add(context);\n\t\tvisited[context] = context;\n\t\treturn context;\n\t}\n\tvar updated = null;\n\tif (parents.length === 0) {\n\t\tupdated = PredictionContext.EMPTY;\n\t} else if (parents.length === 1) {\n\t\tupdated = SingletonPredictionContext.create(parents[0], context\n\t\t\t\t.getReturnState(0));\n\t} else {\n\t\tupdated = new ArrayPredictionContext(parents, context.returnStates);\n\t}\n\tcontextCache.add(updated);\n\tvisited[updated] = updated;\n\tvisited[context] = updated;\n\n\treturn updated;\n}\n\n// ter's recursive version of Sam's getAllNodes()\nfunction getAllContextNodes(context, nodes, visited) {\n\tif (nodes === null) {\n\t\tnodes = [];\n\t\treturn getAllContextNodes(context, nodes, visited);\n\t} else if (visited === null) {\n\t\tvisited = {};\n\t\treturn getAllContextNodes(context, nodes, visited);\n\t} else {\n\t\tif (context === null || visited[context] !== null) {\n\t\t\treturn nodes;\n\t\t}\n\t\tvisited[context] = context;\n\t\tnodes.push(context);\n\t\tfor (var i = 0; i < context.length; i++) {\n\t\t\tgetAllContextNodes(context.getParent(i), nodes, visited);\n\t\t}\n\t\treturn nodes;\n\t}\n}\n\nexports.merge = merge;\nexports.PredictionContext = PredictionContext;\nexports.PredictionContextCache = PredictionContextCache;\nexports.SingletonPredictionContext = SingletonPredictionContext;\nexports.predictionContextFromRuleContext = predictionContextFromRuleContext;\nexports.getCachedPredictionContext = getCachedPredictionContext;\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nlet _ral;\nfunction RAL() {\n    if (_ral === undefined) {\n        throw new Error(`No runtime abstraction layer installed`);\n    }\n    return _ral;\n}\n(function (RAL) {\n    function install(ral) {\n        if (ral === undefined) {\n            throw new Error(`No runtime abstraction layer provided`);\n        }\n        _ral = ral;\n    }\n    RAL.install = install;\n})(RAL || (RAL = {}));\nexports.default = RAL;\n//# sourceMappingURL=ral.js.map","/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nvar LL1Analyzer = require('./../LL1Analyzer').LL1Analyzer;\nvar IntervalSet = require('./../IntervalSet').IntervalSet;\n\nfunction ATN(grammarType , maxTokenType) {\n\n    // Used for runtime deserialization of ATNs from strings///\n    // The type of the ATN.\n    this.grammarType = grammarType;\n    // The maximum value for any symbol recognized by a transition in the ATN.\n    this.maxTokenType = maxTokenType;\n    this.states = [];\n    // Each subrule/rule is a decision point and we must track them so we\n    //  can go back later and build DFA predictors for them.  This includes\n    //  all the rules, subrules, optional blocks, ()+, ()* etc...\n    this.decisionToState = [];\n    // Maps from rule index to starting state number.\n    this.ruleToStartState = [];\n    // Maps from rule index to stop state number.\n    this.ruleToStopState = null;\n    this.modeNameToStartState = {};\n    // For lexer ATNs, this maps the rule index to the resulting token type.\n    // For parser ATNs, this maps the rule index to the generated bypass token\n    // type if the\n    // {@link ATNDeserializationOptions//isGenerateRuleBypassTransitions}\n    // deserialization option was specified; otherwise, this is {@code null}.\n    this.ruleToTokenType = null;\n    // For lexer ATNs, this is an array of {@link LexerAction} objects which may\n    // be referenced by action transitions in the ATN.\n    this.lexerActions = null;\n    this.modeToStartState = [];\n\n    return this;\n}\n\n// Compute the set of valid tokens that can occur starting in state {@code s}.\n//  If {@code ctx} is null, the set of tokens will not include what can follow\n//  the rule surrounding {@code s}. In other words, the set will be\n//  restricted to tokens reachable staying within {@code s}'s rule.\nATN.prototype.nextTokensInContext = function(s, ctx) {\n    var anal = new LL1Analyzer(this);\n    return anal.LOOK(s, null, ctx);\n};\n\n// Compute the set of valid tokens that can occur starting in {@code s} and\n// staying in same rule. {@link Token//EPSILON} is in set if we reach end of\n// rule.\nATN.prototype.nextTokensNoContext = function(s) {\n    if (s.nextTokenWithinRule !== null ) {\n        return s.nextTokenWithinRule;\n    }\n    s.nextTokenWithinRule = this.nextTokensInContext(s, null);\n    s.nextTokenWithinRule.readOnly = true;\n    return s.nextTokenWithinRule;\n};\n\nATN.prototype.nextTokens = function(s, ctx) {\n    if ( ctx===undefined ) {\n        return this.nextTokensNoContext(s);\n    } else {\n        return this.nextTokensInContext(s, ctx);\n    }\n};\n\nATN.prototype.addState = function( state) {\n    if ( state !== null ) {\n        state.atn = this;\n        state.stateNumber = this.states.length;\n    }\n    this.states.push(state);\n};\n\nATN.prototype.removeState = function( state) {\n    this.states[state.stateNumber] = null; // just free mem, don't shift states in list\n};\n\nATN.prototype.defineDecisionState = function( s) {\n    this.decisionToState.push(s);\n    s.decision = this.decisionToState.length-1;\n    return s.decision;\n};\n\nATN.prototype.getDecisionState = function( decision) {\n    if (this.decisionToState.length===0) {\n        return null;\n    } else {\n        return this.decisionToState[decision];\n    }\n};\n\n// Computes the set of input symbols which could follow ATN state number\n// {@code stateNumber} in the specified full {@code context}. This method\n// considers the complete parser context, but does not evaluate semantic\n// predicates (i.e. all predicates encountered during the calculation are\n// assumed true). If a path in the ATN exists from the starting state to the\n// {@link RuleStopState} of the outermost context without matching any\n// symbols, {@link Token//EOF} is added to the returned set.\n//\n// <p>If {@code context} is {@code null}, it is treated as\n// {@link ParserRuleContext//EMPTY}.</p>\n//\n// @param stateNumber the ATN state number\n// @param context the full parse context\n// @return The set of potentially valid input symbols which could follow the\n// specified state in the specified context.\n// @throws IllegalArgumentException if the ATN does not contain a state with\n// number {@code stateNumber}\nvar Token = require('./../Token').Token;\n\nATN.prototype.getExpectedTokens = function( stateNumber, ctx ) {\n    if ( stateNumber < 0 || stateNumber >= this.states.length ) {\n        throw(\"Invalid state number.\");\n    }\n    var s = this.states[stateNumber];\n    var following = this.nextTokens(s);\n    if (!following.contains(Token.EPSILON)) {\n        return following;\n    }\n    var expected = new IntervalSet();\n    expected.addSet(following);\n    expected.removeOne(Token.EPSILON);\n    while (ctx !== null && ctx.invokingState >= 0 && following.contains(Token.EPSILON)) {\n        var invokingState = this.states[ctx.invokingState];\n        var rt = invokingState.transitions[0];\n        following = this.nextTokens(rt.followState);\n        expected.addSet(following);\n        expected.removeOne(Token.EPSILON);\n        ctx = ctx.parentCtx;\n    }\n    if (following.contains(Token.EPSILON)) {\n        expected.addOne(Token.EOF);\n    }\n    return expected;\n};\n\nATN.INVALID_ALT_NUMBER = 0;\n\nexports.ATN = ATN;","/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n//\n\n//  An ATN transition between any two ATN states.  Subclasses define\n//  atom, set, epsilon, action, predicate, rule transitions.\n//\n//  <p>This is a one way link.  It emanates from a state (usually via a list of\n//  transitions) and has a target state.</p>\n//\n//  <p>Since we never have to change the ATN transitions once we construct it,\n//  we can fix these transitions as specific classes. The DFA transitions\n//  on the other hand need to update the labels as it adds transitions to\n//  the states. We'll use the term Edge for the DFA to distinguish them from\n//  ATN transitions.</p>\n\nvar Token = require('./../Token').Token;\nvar Interval = require('./../IntervalSet').Interval;\nvar IntervalSet = require('./../IntervalSet').IntervalSet;\nvar Predicate = require('./SemanticContext').Predicate;\nvar PrecedencePredicate = require('./SemanticContext').PrecedencePredicate;\n\nfunction Transition (target) {\n    // The target of this transition.\n    if (target===undefined || target===null) {\n        throw \"target cannot be null.\";\n    }\n    this.target = target;\n    // Are we epsilon, action, sempred?\n    this.isEpsilon = false;\n    this.label = null;\n    return this;\n}\n    // constants for serialization\nTransition.EPSILON = 1;\nTransition.RANGE = 2;\nTransition.RULE = 3;\nTransition.PREDICATE = 4; // e.g., {isType(input.LT(1))}?\nTransition.ATOM = 5;\nTransition.ACTION = 6;\nTransition.SET = 7; // ~(A|B) or ~atom, wildcard, which convert to next 2\nTransition.NOT_SET = 8;\nTransition.WILDCARD = 9;\nTransition.PRECEDENCE = 10;\n\nTransition.serializationNames = [\n            \"INVALID\",\n            \"EPSILON\",\n            \"RANGE\",\n            \"RULE\",\n            \"PREDICATE\",\n            \"ATOM\",\n            \"ACTION\",\n            \"SET\",\n            \"NOT_SET\",\n            \"WILDCARD\",\n            \"PRECEDENCE\"\n        ];\n\nTransition.serializationTypes = {\n        EpsilonTransition: Transition.EPSILON,\n        RangeTransition: Transition.RANGE,\n        RuleTransition: Transition.RULE,\n        PredicateTransition: Transition.PREDICATE,\n        AtomTransition: Transition.ATOM,\n        ActionTransition: Transition.ACTION,\n        SetTransition: Transition.SET,\n        NotSetTransition: Transition.NOT_SET,\n        WildcardTransition: Transition.WILDCARD,\n        PrecedencePredicateTransition: Transition.PRECEDENCE\n    };\n\n\n// TODO: make all transitions sets? no, should remove set edges\nfunction AtomTransition(target, label) {\n\tTransition.call(this, target);\n\tthis.label_ = label; // The token type or character value; or, signifies special label.\n    this.label = this.makeLabel();\n    this.serializationType = Transition.ATOM;\n    return this;\n}\n\nAtomTransition.prototype = Object.create(Transition.prototype);\nAtomTransition.prototype.constructor = AtomTransition;\n\nAtomTransition.prototype.makeLabel = function() {\n\tvar s = new IntervalSet();\n    s.addOne(this.label_);\n    return s;\n};\n\nAtomTransition.prototype.matches = function( symbol, minVocabSymbol,  maxVocabSymbol) {\n    return this.label_ === symbol;\n};\n\nAtomTransition.prototype.toString = function() {\n\treturn this.label_;\n};\n\nfunction RuleTransition(ruleStart, ruleIndex, precedence, followState) {\n\tTransition.call(this, ruleStart);\n    this.ruleIndex = ruleIndex; // ptr to the rule definition object for this rule ref\n    this.precedence = precedence;\n    this.followState = followState; // what node to begin computations following ref to rule\n    this.serializationType = Transition.RULE;\n    this.isEpsilon = true;\n    return this;\n}\n\nRuleTransition.prototype = Object.create(Transition.prototype);\nRuleTransition.prototype.constructor = RuleTransition;\n\nRuleTransition.prototype.matches = function(symbol, minVocabSymbol,  maxVocabSymbol) {\n\treturn false;\n};\n\n\nfunction EpsilonTransition(target, outermostPrecedenceReturn) {\n\tTransition.call(this, target);\n    this.serializationType = Transition.EPSILON;\n    this.isEpsilon = true;\n    this.outermostPrecedenceReturn = outermostPrecedenceReturn;\n    return this;\n}\n\nEpsilonTransition.prototype = Object.create(Transition.prototype);\nEpsilonTransition.prototype.constructor = EpsilonTransition;\n\nEpsilonTransition.prototype.matches = function( symbol, minVocabSymbol,  maxVocabSymbol) {\n\treturn false;\n};\n\nEpsilonTransition.prototype.toString = function() {\n\treturn \"epsilon\";\n};\n\nfunction RangeTransition(target, start, stop) {\n\tTransition.call(this, target);\n\tthis.serializationType = Transition.RANGE;\n    this.start = start;\n    this.stop = stop;\n    this.label = this.makeLabel();\n    return this;\n}\n\nRangeTransition.prototype = Object.create(Transition.prototype);\nRangeTransition.prototype.constructor = RangeTransition;\n\nRangeTransition.prototype.makeLabel = function() {\n    var s = new IntervalSet();\n    s.addRange(this.start, this.stop);\n    return s;\n};\n\nRangeTransition.prototype.matches = function(symbol, minVocabSymbol,  maxVocabSymbol) {\n\treturn symbol >= this.start && symbol <= this.stop;\n};\n\nRangeTransition.prototype.toString = function() {\n\treturn \"'\" + String.fromCharCode(this.start) + \"'..'\" + String.fromCharCode(this.stop) + \"'\";\n};\n\nfunction AbstractPredicateTransition(target) {\n\tTransition.call(this, target);\n\treturn this;\n}\n\nAbstractPredicateTransition.prototype = Object.create(Transition.prototype);\nAbstractPredicateTransition.prototype.constructor = AbstractPredicateTransition;\n\nfunction PredicateTransition(target, ruleIndex, predIndex, isCtxDependent) {\n\tAbstractPredicateTransition.call(this, target);\n    this.serializationType = Transition.PREDICATE;\n    this.ruleIndex = ruleIndex;\n    this.predIndex = predIndex;\n    this.isCtxDependent = isCtxDependent; // e.g., $i ref in pred\n    this.isEpsilon = true;\n    return this;\n}\n\nPredicateTransition.prototype = Object.create(AbstractPredicateTransition.prototype);\nPredicateTransition.prototype.constructor = PredicateTransition;\n\nPredicateTransition.prototype.matches = function(symbol, minVocabSymbol,  maxVocabSymbol) {\n\treturn false;\n};\n\nPredicateTransition.prototype.getPredicate = function() {\n\treturn new Predicate(this.ruleIndex, this.predIndex, this.isCtxDependent);\n};\n\nPredicateTransition.prototype.toString = function() {\n\treturn \"pred_\" + this.ruleIndex + \":\" + this.predIndex;\n};\n\nfunction ActionTransition(target, ruleIndex, actionIndex, isCtxDependent) {\n\tTransition.call(this, target);\n    this.serializationType = Transition.ACTION;\n    this.ruleIndex = ruleIndex;\n    this.actionIndex = actionIndex===undefined ? -1 : actionIndex;\n    this.isCtxDependent = isCtxDependent===undefined ? false : isCtxDependent; // e.g., $i ref in pred\n    this.isEpsilon = true;\n    return this;\n}\n\nActionTransition.prototype = Object.create(Transition.prototype);\nActionTransition.prototype.constructor = ActionTransition;\n\n\nActionTransition.prototype.matches = function(symbol, minVocabSymbol,  maxVocabSymbol) {\n\treturn false;\n};\n\nActionTransition.prototype.toString = function() {\n\treturn \"action_\" + this.ruleIndex + \":\" + this.actionIndex;\n};\n\n\n// A transition containing a set of values.\nfunction SetTransition(target, set) {\n\tTransition.call(this, target);\n\tthis.serializationType = Transition.SET;\n    if (set !==undefined && set !==null) {\n        this.label = set;\n    } else {\n        this.label = new IntervalSet();\n        this.label.addOne(Token.INVALID_TYPE);\n    }\n    return this;\n}\n\nSetTransition.prototype = Object.create(Transition.prototype);\nSetTransition.prototype.constructor = SetTransition;\n\nSetTransition.prototype.matches = function(symbol, minVocabSymbol,  maxVocabSymbol) {\n\treturn this.label.contains(symbol);\n};\n\n\nSetTransition.prototype.toString = function() {\n\treturn this.label.toString();\n};\n\nfunction NotSetTransition(target, set) {\n\tSetTransition.call(this, target, set);\n\tthis.serializationType = Transition.NOT_SET;\n\treturn this;\n}\n\nNotSetTransition.prototype = Object.create(SetTransition.prototype);\nNotSetTransition.prototype.constructor = NotSetTransition;\n\nNotSetTransition.prototype.matches = function(symbol, minVocabSymbol,  maxVocabSymbol) {\n\treturn symbol >= minVocabSymbol && symbol <= maxVocabSymbol &&\n\t\t\t!SetTransition.prototype.matches.call(this, symbol, minVocabSymbol, maxVocabSymbol);\n};\n\nNotSetTransition.prototype.toString = function() {\n\treturn '~' + SetTransition.prototype.toString.call(this);\n};\n\nfunction WildcardTransition(target) {\n\tTransition.call(this, target);\n\tthis.serializationType = Transition.WILDCARD;\n\treturn this;\n}\n\nWildcardTransition.prototype = Object.create(Transition.prototype);\nWildcardTransition.prototype.constructor = WildcardTransition;\n\n\nWildcardTransition.prototype.matches = function(symbol, minVocabSymbol,  maxVocabSymbol) {\n\treturn symbol >= minVocabSymbol && symbol <= maxVocabSymbol;\n};\n\nWildcardTransition.prototype.toString = function() {\n\treturn \".\";\n};\n\nfunction PrecedencePredicateTransition(target, precedence) {\n\tAbstractPredicateTransition.call(this, target);\n    this.serializationType = Transition.PRECEDENCE;\n    this.precedence = precedence;\n    this.isEpsilon = true;\n    return this;\n}\n\nPrecedencePredicateTransition.prototype = Object.create(AbstractPredicateTransition.prototype);\nPrecedencePredicateTransition.prototype.constructor = PrecedencePredicateTransition;\n\nPrecedencePredicateTransition.prototype.matches = function(symbol, minVocabSymbol,  maxVocabSymbol) {\n\treturn false;\n};\n\nPrecedencePredicateTransition.prototype.getPredicate = function() {\n\treturn new PrecedencePredicate(this.precedence);\n};\n\nPrecedencePredicateTransition.prototype.toString = function() {\n\treturn this.precedence + \" >= _p\";\n};\n\nexports.Transition = Transition;\nexports.AtomTransition = AtomTransition;\nexports.SetTransition = SetTransition;\nexports.NotSetTransition = NotSetTransition;\nexports.RuleTransition = RuleTransition;\nexports.ActionTransition = ActionTransition;\nexports.EpsilonTransition = EpsilonTransition;\nexports.RangeTransition = RangeTransition;\nexports.WildcardTransition = WildcardTransition;\nexports.PredicateTransition = PredicateTransition;\nexports.PrecedencePredicateTransition = PrecedencePredicateTransition;\nexports.AbstractPredicateTransition = AbstractPredicateTransition;","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\n//\n// Specialized {@link Set}{@code <}{@link ATNConfig}{@code >} that can track\n// info about the set, with support for combining similar configurations using a\n// graph-structured stack.\n///\n\nvar ATN = require('./ATN').ATN;\nvar Utils = require('./../Utils');\nvar Hash = Utils.Hash;\nvar Set = Utils.Set;\nvar SemanticContext = require('./SemanticContext').SemanticContext;\nvar merge = require('./../PredictionContext').merge;\n\nfunction hashATNConfig(c) {\n\treturn c.hashCodeForConfigSet();\n}\n\nfunction equalATNConfigs(a, b) {\n\tif ( a===b ) {\n\t\treturn true;\n\t} else if ( a===null || b===null ) {\n\t\treturn false;\n\t} else\n       return a.equalsForConfigSet(b);\n }\n\n\nfunction ATNConfigSet(fullCtx) {\n\t//\n\t// The reason that we need this is because we don't want the hash map to use\n\t// the standard hash code and equals. We need all configurations with the\n\t// same\n\t// {@code (s,i,_,semctx)} to be equal. Unfortunately, this key effectively\n\t// doubles\n\t// the number of objects associated with ATNConfigs. The other solution is\n\t// to\n\t// use a hash table that lets us specify the equals/hashcode operation.\n\t// All configs but hashed by (s, i, _, pi) not including context. Wiped out\n\t// when we go readonly as this set becomes a DFA state.\n\tthis.configLookup = new Set(hashATNConfig, equalATNConfigs);\n\t// Indicates that this configuration set is part of a full context\n\t// LL prediction. It will be used to determine how to merge $. With SLL\n\t// it's a wildcard whereas it is not for LL context merge.\n\tthis.fullCtx = fullCtx === undefined ? true : fullCtx;\n\t// Indicates that the set of configurations is read-only. Do not\n\t// allow any code to manipulate the set; DFA states will point at\n\t// the sets and they must not change. This does not protect the other\n\t// fields; in particular, conflictingAlts is set after\n\t// we've made this readonly.\n\tthis.readOnly = false;\n\t// Track the elements as they are added to the set; supports get(i)///\n\tthis.configs = [];\n\n\t// TODO: these fields make me pretty uncomfortable but nice to pack up info\n\t// together, saves recomputation\n\t// TODO: can we track conflicts as they are added to save scanning configs\n\t// later?\n\tthis.uniqueAlt = 0;\n\tthis.conflictingAlts = null;\n\n\t// Used in parser and lexer. In lexer, it indicates we hit a pred\n\t// while computing a closure operation. Don't make a DFA state from this.\n\tthis.hasSemanticContext = false;\n\tthis.dipsIntoOuterContext = false;\n\n\tthis.cachedHashCode = -1;\n\n\treturn this;\n}\n\n// Adding a new config means merging contexts with existing configs for\n// {@code (s, i, pi, _)}, where {@code s} is the\n// {@link ATNConfig//state}, {@code i} is the {@link ATNConfig//alt}, and\n// {@code pi} is the {@link ATNConfig//semanticContext}. We use\n// {@code (s,i,pi)} as key.\n//\n// <p>This method updates {@link //dipsIntoOuterContext} and\n// {@link //hasSemanticContext} when necessary.</p>\n// /\nATNConfigSet.prototype.add = function(config, mergeCache) {\n\tif (mergeCache === undefined) {\n\t\tmergeCache = null;\n\t}\n\tif (this.readOnly) {\n\t\tthrow \"This set is readonly\";\n\t}\n\tif (config.semanticContext !== SemanticContext.NONE) {\n\t\tthis.hasSemanticContext = true;\n\t}\n\tif (config.reachesIntoOuterContext > 0) {\n\t\tthis.dipsIntoOuterContext = true;\n\t}\n\tvar existing = this.configLookup.add(config);\n\tif (existing === config) {\n\t\tthis.cachedHashCode = -1;\n\t\tthis.configs.push(config); // track order here\n\t\treturn true;\n\t}\n\t// a previous (s,i,pi,_), merge with it and save result\n\tvar rootIsWildcard = !this.fullCtx;\n\tvar merged = merge(existing.context, config.context, rootIsWildcard, mergeCache);\n\t// no need to check for existing.context, config.context in cache\n\t// since only way to create new graphs is \"call rule\" and here. We\n\t// cache at both places.\n\texisting.reachesIntoOuterContext = Math.max( existing.reachesIntoOuterContext, config.reachesIntoOuterContext);\n\t// make sure to preserve the precedence filter suppression during the merge\n\tif (config.precedenceFilterSuppressed) {\n\t\texisting.precedenceFilterSuppressed = true;\n\t}\n\texisting.context = merged; // replace context; no need to alt mapping\n\treturn true;\n};\n\nATNConfigSet.prototype.getStates = function() {\n\tvar states = new Set();\n\tfor (var i = 0; i < this.configs.length; i++) {\n\t\tstates.add(this.configs[i].state);\n\t}\n\treturn states;\n};\n\nATNConfigSet.prototype.getPredicates = function() {\n\tvar preds = [];\n\tfor (var i = 0; i < this.configs.length; i++) {\n\t\tvar c = this.configs[i].semanticContext;\n\t\tif (c !== SemanticContext.NONE) {\n\t\t\tpreds.push(c.semanticContext);\n\t\t}\n\t}\n\treturn preds;\n};\n\nObject.defineProperty(ATNConfigSet.prototype, \"items\", {\n\tget : function() {\n\t\treturn this.configs;\n\t}\n});\n\nATNConfigSet.prototype.optimizeConfigs = function(interpreter) {\n\tif (this.readOnly) {\n\t\tthrow \"This set is readonly\";\n\t}\n\tif (this.configLookup.length === 0) {\n\t\treturn;\n\t}\n\tfor (var i = 0; i < this.configs.length; i++) {\n\t\tvar config = this.configs[i];\n\t\tconfig.context = interpreter.getCachedContext(config.context);\n\t}\n};\n\nATNConfigSet.prototype.addAll = function(coll) {\n\tfor (var i = 0; i < coll.length; i++) {\n\t\tthis.add(coll[i]);\n\t}\n\treturn false;\n};\n\nATNConfigSet.prototype.equals = function(other) {\n\treturn this === other ||\n\t\t(other instanceof ATNConfigSet &&\n\t\tUtils.equalArrays(this.configs, other.configs) &&\n\t\tthis.fullCtx === other.fullCtx &&\n\t\tthis.uniqueAlt === other.uniqueAlt &&\n\t\tthis.conflictingAlts === other.conflictingAlts &&\n\t\tthis.hasSemanticContext === other.hasSemanticContext &&\n\t\tthis.dipsIntoOuterContext === other.dipsIntoOuterContext);\n};\n\nATNConfigSet.prototype.hashCode = function() {\n    var hash = new Hash();\n    this.updateHashCode(hash);\n    return hash.finish();\n};\n\n\nATNConfigSet.prototype.updateHashCode = function(hash) {\n\tif (this.readOnly) {\n\t\tif (this.cachedHashCode === -1) {\n            var hash = new Hash();\n            hash.update(this.configs);\n\t\t\tthis.cachedHashCode = hash.finish();\n\t\t}\n        hash.update(this.cachedHashCode);\n\t} else {\n        hash.update(this.configs);\n\t}\n};\n\n\nObject.defineProperty(ATNConfigSet.prototype, \"length\", {\n\tget : function() {\n\t\treturn this.configs.length;\n\t}\n});\n\nATNConfigSet.prototype.isEmpty = function() {\n\treturn this.configs.length === 0;\n};\n\nATNConfigSet.prototype.contains = function(item) {\n\tif (this.configLookup === null) {\n\t\tthrow \"This method is not implemented for readonly sets.\";\n\t}\n\treturn this.configLookup.contains(item);\n};\n\nATNConfigSet.prototype.containsFast = function(item) {\n\tif (this.configLookup === null) {\n\t\tthrow \"This method is not implemented for readonly sets.\";\n\t}\n\treturn this.configLookup.containsFast(item);\n};\n\nATNConfigSet.prototype.clear = function() {\n\tif (this.readOnly) {\n\t\tthrow \"This set is readonly\";\n\t}\n\tthis.configs = [];\n\tthis.cachedHashCode = -1;\n\tthis.configLookup = new Set();\n};\n\nATNConfigSet.prototype.setReadonly = function(readOnly) {\n\tthis.readOnly = readOnly;\n\tif (readOnly) {\n\t\tthis.configLookup = null; // can't mod, no need for lookup cache\n\t}\n};\n\nATNConfigSet.prototype.toString = function() {\n\treturn Utils.arrayToString(this.configs) +\n\t\t(this.hasSemanticContext ? \",hasSemanticContext=\" + this.hasSemanticContext : \"\") +\n\t\t(this.uniqueAlt !== ATN.INVALID_ALT_NUMBER ? \",uniqueAlt=\" + this.uniqueAlt : \"\") +\n\t\t(this.conflictingAlts !== null ? \",conflictingAlts=\" + this.conflictingAlts : \"\") +\n\t\t(this.dipsIntoOuterContext ? \",dipsIntoOuterContext\" : \"\");\n};\n\nfunction OrderedATNConfigSet() {\n\tATNConfigSet.call(this);\n\tthis.configLookup = new Set();\n\treturn this;\n}\n\nOrderedATNConfigSet.prototype = Object.create(ATNConfigSet.prototype);\nOrderedATNConfigSet.prototype.constructor = OrderedATNConfigSet;\n\nexports.ATNConfigSet = ATNConfigSet;\nexports.OrderedATNConfigSet = OrderedATNConfigSet;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createMessageConnection = exports.createServerSocketTransport = exports.createClientSocketTransport = exports.createServerPipeTransport = exports.createClientPipeTransport = exports.generateRandomPipeName = exports.StreamMessageWriter = exports.StreamMessageReader = exports.SocketMessageWriter = exports.SocketMessageReader = exports.IPCMessageWriter = exports.IPCMessageReader = void 0;\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ----------------------------------------------------------------------------------------- */\nconst ril_1 = require(\"./ril\");\n// Install the node runtime abstract.\nril_1.default.install();\nconst api_1 = require(\"../common/api\");\nconst path = require(\"path\");\nconst os = require(\"os\");\nconst crypto_1 = require(\"crypto\");\nconst net_1 = require(\"net\");\n__exportStar(require(\"../common/api\"), exports);\nclass IPCMessageReader extends api_1.AbstractMessageReader {\n    constructor(process) {\n        super();\n        this.process = process;\n        let eventEmitter = this.process;\n        eventEmitter.on('error', (error) => this.fireError(error));\n        eventEmitter.on('close', () => this.fireClose());\n    }\n    listen(callback) {\n        this.process.on('message', callback);\n        return api_1.Disposable.create(() => this.process.off('message', callback));\n    }\n}\nexports.IPCMessageReader = IPCMessageReader;\nclass IPCMessageWriter extends api_1.AbstractMessageWriter {\n    constructor(process) {\n        super();\n        this.process = process;\n        this.errorCount = 0;\n        let eventEmitter = this.process;\n        eventEmitter.on('error', (error) => this.fireError(error));\n        eventEmitter.on('close', () => this.fireClose);\n    }\n    write(msg) {\n        try {\n            if (typeof this.process.send === 'function') {\n                this.process.send(msg, undefined, undefined, (error) => {\n                    if (error) {\n                        this.errorCount++;\n                        this.handleError(error, msg);\n                    }\n                    else {\n                        this.errorCount = 0;\n                    }\n                });\n            }\n            return Promise.resolve();\n        }\n        catch (error) {\n            this.handleError(error, msg);\n            return Promise.reject(error);\n        }\n    }\n    handleError(error, msg) {\n        this.errorCount++;\n        this.fireError(error, msg, this.errorCount);\n    }\n    end() {\n    }\n}\nexports.IPCMessageWriter = IPCMessageWriter;\nclass SocketMessageReader extends api_1.ReadableStreamMessageReader {\n    constructor(socket, encoding = 'utf-8') {\n        super(ril_1.default().stream.asReadableStream(socket), encoding);\n    }\n}\nexports.SocketMessageReader = SocketMessageReader;\nclass SocketMessageWriter extends api_1.WriteableStreamMessageWriter {\n    constructor(socket, options) {\n        super(ril_1.default().stream.asWritableStream(socket), options);\n        this.socket = socket;\n    }\n    dispose() {\n        super.dispose();\n        this.socket.destroy();\n    }\n}\nexports.SocketMessageWriter = SocketMessageWriter;\nclass StreamMessageReader extends api_1.ReadableStreamMessageReader {\n    constructor(readble, encoding) {\n        super(ril_1.default().stream.asReadableStream(readble), encoding);\n    }\n}\nexports.StreamMessageReader = StreamMessageReader;\nclass StreamMessageWriter extends api_1.WriteableStreamMessageWriter {\n    constructor(writable, options) {\n        super(ril_1.default().stream.asWritableStream(writable), options);\n    }\n}\nexports.StreamMessageWriter = StreamMessageWriter;\nconst XDG_RUNTIME_DIR = process.env['XDG_RUNTIME_DIR'];\nconst safeIpcPathLengths = new Map([\n    ['linux', 107],\n    ['darwin', 103]\n]);\nfunction generateRandomPipeName() {\n    const randomSuffix = crypto_1.randomBytes(21).toString('hex');\n    if (process.platform === 'win32') {\n        return `\\\\\\\\.\\\\pipe\\\\vscode-jsonrpc-${randomSuffix}-sock`;\n    }\n    let result;\n    if (XDG_RUNTIME_DIR) {\n        result = path.join(XDG_RUNTIME_DIR, `vscode-ipc-${randomSuffix}.sock`);\n    }\n    else {\n        result = path.join(os.tmpdir(), `vscode-${randomSuffix}.sock`);\n    }\n    const limit = safeIpcPathLengths.get(process.platform);\n    if (limit !== undefined && result.length >= limit) {\n        ril_1.default().console.warn(`WARNING: IPC handle \"${result}\" is longer than ${limit} characters.`);\n    }\n    return result;\n}\nexports.generateRandomPipeName = generateRandomPipeName;\nfunction createClientPipeTransport(pipeName, encoding = 'utf-8') {\n    let connectResolve;\n    const connected = new Promise((resolve, _reject) => {\n        connectResolve = resolve;\n    });\n    return new Promise((resolve, reject) => {\n        let server = net_1.createServer((socket) => {\n            server.close();\n            connectResolve([\n                new SocketMessageReader(socket, encoding),\n                new SocketMessageWriter(socket, encoding)\n            ]);\n        });\n        server.on('error', reject);\n        server.listen(pipeName, () => {\n            server.removeListener('error', reject);\n            resolve({\n                onConnected: () => { return connected; }\n            });\n        });\n    });\n}\nexports.createClientPipeTransport = createClientPipeTransport;\nfunction createServerPipeTransport(pipeName, encoding = 'utf-8') {\n    const socket = net_1.createConnection(pipeName);\n    return [\n        new SocketMessageReader(socket, encoding),\n        new SocketMessageWriter(socket, encoding)\n    ];\n}\nexports.createServerPipeTransport = createServerPipeTransport;\nfunction createClientSocketTransport(port, encoding = 'utf-8') {\n    let connectResolve;\n    const connected = new Promise((resolve, _reject) => {\n        connectResolve = resolve;\n    });\n    return new Promise((resolve, reject) => {\n        const server = net_1.createServer((socket) => {\n            server.close();\n            connectResolve([\n                new SocketMessageReader(socket, encoding),\n                new SocketMessageWriter(socket, encoding)\n            ]);\n        });\n        server.on('error', reject);\n        server.listen(port, '127.0.0.1', () => {\n            server.removeListener('error', reject);\n            resolve({\n                onConnected: () => { return connected; }\n            });\n        });\n    });\n}\nexports.createClientSocketTransport = createClientSocketTransport;\nfunction createServerSocketTransport(port, encoding = 'utf-8') {\n    const socket = net_1.createConnection(port, '127.0.0.1');\n    return [\n        new SocketMessageReader(socket, encoding),\n        new SocketMessageWriter(socket, encoding)\n    ];\n}\nexports.createServerSocketTransport = createServerSocketTransport;\nfunction isReadableStream(value) {\n    const candidate = value;\n    return candidate.read !== undefined && candidate.addListener !== undefined;\n}\nfunction isWritableStream(value) {\n    const candidate = value;\n    return candidate.write !== undefined && candidate.addListener !== undefined;\n}\nfunction createMessageConnection(input, output, logger, options) {\n    if (!logger) {\n        logger = api_1.NullLogger;\n    }\n    const reader = isReadableStream(input) ? new StreamMessageReader(input) : input;\n    const writer = isWritableStream(output) ? new StreamMessageWriter(output) : output;\n    if (api_1.ConnectionStrategy.is(options)) {\n        options = { connectionStrategy: options };\n    }\n    return api_1.createMessageConnection(reader, writer, logger, options);\n}\nexports.createMessageConnection = createMessageConnection;\n//# sourceMappingURL=main.js.map","module.exports = require(\"fs\");","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n//\n\n// A tree structure used to record the semantic context in which\n//  an ATN configuration is valid.  It's either a single predicate,\n//  a conjunction {@code p1&&p2}, or a sum of products {@code p1||p2}.\n//\n//  <p>I have scoped the {@link AND}, {@link OR}, and {@link Predicate} subclasses of\n//  {@link SemanticContext} within the scope of this outer class.</p>\n//\n\nvar Set = require('./../Utils').Set;\nvar Hash = require('./../Utils').Hash;\n\nfunction SemanticContext() {\n\treturn this;\n}\n\nSemanticContext.prototype.hashCode = function() {\n    var hash = new Hash();\n    this.updateHashCode(hash);\n    return hash.finish();\n};\n\n// For context independent predicates, we evaluate them without a local\n// context (i.e., null context). That way, we can evaluate them without\n// having to create proper rule-specific context during prediction (as\n// opposed to the parser, which creates them naturally). In a practical\n// sense, this avoids a cast exception from RuleContext to myruleContext.\n//\n// <p>For context dependent predicates, we must pass in a local context so that\n// references such as $arg evaluate properly as _localctx.arg. We only\n// capture context dependent predicates in the context in which we begin\n// prediction, so we passed in the outer context here in case of context\n// dependent predicate evaluation.</p>\n//\nSemanticContext.prototype.evaluate = function(parser, outerContext) {\n};\n\n//\n// Evaluate the precedence predicates for the context and reduce the result.\n//\n// @param parser The parser instance.\n// @param outerContext The current parser context object.\n// @return The simplified semantic context after precedence predicates are\n// evaluated, which will be one of the following values.\n// <ul>\n// <li>{@link //NONE}: if the predicate simplifies to {@code true} after\n// precedence predicates are evaluated.</li>\n// <li>{@code null}: if the predicate simplifies to {@code false} after\n// precedence predicates are evaluated.</li>\n// <li>{@code this}: if the semantic context is not changed as a result of\n// precedence predicate evaluation.</li>\n// <li>A non-{@code null} {@link SemanticContext}: the new simplified\n// semantic context after precedence predicates are evaluated.</li>\n// </ul>\n//\nSemanticContext.prototype.evalPrecedence = function(parser, outerContext) {\n\treturn this;\n};\n\nSemanticContext.andContext = function(a, b) {\n\tif (a === null || a === SemanticContext.NONE) {\n\t\treturn b;\n\t}\n\tif (b === null || b === SemanticContext.NONE) {\n\t\treturn a;\n\t}\n\tvar result = new AND(a, b);\n\tif (result.opnds.length === 1) {\n\t\treturn result.opnds[0];\n\t} else {\n\t\treturn result;\n\t}\n};\n\nSemanticContext.orContext = function(a, b) {\n\tif (a === null) {\n\t\treturn b;\n\t}\n\tif (b === null) {\n\t\treturn a;\n\t}\n\tif (a === SemanticContext.NONE || b === SemanticContext.NONE) {\n\t\treturn SemanticContext.NONE;\n\t}\n\tvar result = new OR(a, b);\n\tif (result.opnds.length === 1) {\n\t\treturn result.opnds[0];\n\t} else {\n\t\treturn result;\n\t}\n};\n\nfunction Predicate(ruleIndex, predIndex, isCtxDependent) {\n\tSemanticContext.call(this);\n\tthis.ruleIndex = ruleIndex === undefined ? -1 : ruleIndex;\n\tthis.predIndex = predIndex === undefined ? -1 : predIndex;\n\tthis.isCtxDependent = isCtxDependent === undefined ? false : isCtxDependent; // e.g., $i ref in pred\n\treturn this;\n}\n\nPredicate.prototype = Object.create(SemanticContext.prototype);\nPredicate.prototype.constructor = Predicate;\n\n//The default {@link SemanticContext}, which is semantically equivalent to\n//a predicate of the form {@code {true}?}.\n//\nSemanticContext.NONE = new Predicate();\n\n\nPredicate.prototype.evaluate = function(parser, outerContext) {\n\tvar localctx = this.isCtxDependent ? outerContext : null;\n\treturn parser.sempred(localctx, this.ruleIndex, this.predIndex);\n};\n\nPredicate.prototype.updateHashCode = function(hash) {\n\thash.update(this.ruleIndex, this.predIndex, this.isCtxDependent);\n};\n\nPredicate.prototype.equals = function(other) {\n\tif (this === other) {\n\t\treturn true;\n\t} else if (!(other instanceof Predicate)) {\n\t\treturn false;\n\t} else {\n\t\treturn this.ruleIndex === other.ruleIndex &&\n\t\t\t\tthis.predIndex === other.predIndex &&\n\t\t\t\tthis.isCtxDependent === other.isCtxDependent;\n\t}\n};\n\nPredicate.prototype.toString = function() {\n\treturn \"{\" + this.ruleIndex + \":\" + this.predIndex + \"}?\";\n};\n\nfunction PrecedencePredicate(precedence) {\n\tSemanticContext.call(this);\n\tthis.precedence = precedence === undefined ? 0 : precedence;\n}\n\nPrecedencePredicate.prototype = Object.create(SemanticContext.prototype);\nPrecedencePredicate.prototype.constructor = PrecedencePredicate;\n\nPrecedencePredicate.prototype.evaluate = function(parser, outerContext) {\n\treturn parser.precpred(outerContext, this.precedence);\n};\n\nPrecedencePredicate.prototype.evalPrecedence = function(parser, outerContext) {\n\tif (parser.precpred(outerContext, this.precedence)) {\n\t\treturn SemanticContext.NONE;\n\t} else {\n\t\treturn null;\n\t}\n};\n\nPrecedencePredicate.prototype.compareTo = function(other) {\n\treturn this.precedence - other.precedence;\n};\n\nPrecedencePredicate.prototype.updateHashCode = function(hash) {\n    hash.update(31);\n};\n\nPrecedencePredicate.prototype.equals = function(other) {\n\tif (this === other) {\n\t\treturn true;\n\t} else if (!(other instanceof PrecedencePredicate)) {\n\t\treturn false;\n\t} else {\n\t\treturn this.precedence === other.precedence;\n\t}\n};\n\nPrecedencePredicate.prototype.toString = function() {\n\treturn \"{\"+this.precedence+\">=prec}?\";\n};\n\n\n\nPrecedencePredicate.filterPrecedencePredicates = function(set) {\n\tvar result = [];\n\tset.values().map( function(context) {\n\t\tif (context instanceof PrecedencePredicate) {\n\t\t\tresult.push(context);\n\t\t}\n\t});\n\treturn result;\n};\n\n\n// A semantic context which is true whenever none of the contained contexts\n// is false.\n//\nfunction AND(a, b) {\n\tSemanticContext.call(this);\n\tvar operands = new Set();\n\tif (a instanceof AND) {\n\t\ta.opnds.map(function(o) {\n\t\t\toperands.add(o);\n\t\t});\n\t} else {\n\t\toperands.add(a);\n\t}\n\tif (b instanceof AND) {\n\t\tb.opnds.map(function(o) {\n\t\t\toperands.add(o);\n\t\t});\n\t} else {\n\t\toperands.add(b);\n\t}\n\tvar precedencePredicates = PrecedencePredicate.filterPrecedencePredicates(operands);\n\tif (precedencePredicates.length > 0) {\n\t\t// interested in the transition with the lowest precedence\n\t\tvar reduced = null;\n\t\tprecedencePredicates.map( function(p) {\n\t\t\tif(reduced===null || p.precedence<reduced.precedence) {\n\t\t\t\treduced = p;\n\t\t\t}\n\t\t});\n\t\toperands.add(reduced);\n\t}\n\tthis.opnds = operands.values();\n\treturn this;\n}\n\nAND.prototype = Object.create(SemanticContext.prototype);\nAND.prototype.constructor = AND;\n\nAND.prototype.equals = function(other) {\n\tif (this === other) {\n\t\treturn true;\n\t} else if (!(other instanceof AND)) {\n\t\treturn false;\n\t} else {\n\t\treturn this.opnds === other.opnds;\n\t}\n};\n\nAND.prototype.updateHashCode = function(hash) {\n    hash.update(this.opnds, \"AND\");\n};\n//\n// {@inheritDoc}\n//\n// <p>\n// The evaluation of predicates by this context is short-circuiting, but\n// unordered.</p>\n//\nAND.prototype.evaluate = function(parser, outerContext) {\n\tfor (var i = 0; i < this.opnds.length; i++) {\n\t\tif (!this.opnds[i].evaluate(parser, outerContext)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n};\n\nAND.prototype.evalPrecedence = function(parser, outerContext) {\n\tvar differs = false;\n\tvar operands = [];\n\tfor (var i = 0; i < this.opnds.length; i++) {\n\t\tvar context = this.opnds[i];\n\t\tvar evaluated = context.evalPrecedence(parser, outerContext);\n\t\tdiffers |= (evaluated !== context);\n\t\tif (evaluated === null) {\n\t\t\t// The AND context is false if any element is false\n\t\t\treturn null;\n\t\t} else if (evaluated !== SemanticContext.NONE) {\n\t\t\t// Reduce the result by skipping true elements\n\t\t\toperands.push(evaluated);\n\t\t}\n\t}\n\tif (!differs) {\n\t\treturn this;\n\t}\n\tif (operands.length === 0) {\n\t\t// all elements were true, so the AND context is true\n\t\treturn SemanticContext.NONE;\n\t}\n\tvar result = null;\n\toperands.map(function(o) {\n\t\tresult = result === null ? o : SemanticContext.andContext(result, o);\n\t});\n\treturn result;\n};\n\nAND.prototype.toString = function() {\n\tvar s = \"\";\n\tthis.opnds.map(function(o) {\n\t\ts += \"&& \" + o.toString();\n\t});\n\treturn s.length > 3 ? s.slice(3) : s;\n};\n\n//\n// A semantic context which is true whenever at least one of the contained\n// contexts is true.\n//\nfunction OR(a, b) {\n\tSemanticContext.call(this);\n\tvar operands = new Set();\n\tif (a instanceof OR) {\n\t\ta.opnds.map(function(o) {\n\t\t\toperands.add(o);\n\t\t});\n\t} else {\n\t\toperands.add(a);\n\t}\n\tif (b instanceof OR) {\n\t\tb.opnds.map(function(o) {\n\t\t\toperands.add(o);\n\t\t});\n\t} else {\n\t\toperands.add(b);\n\t}\n\n\tvar precedencePredicates = PrecedencePredicate.filterPrecedencePredicates(operands);\n\tif (precedencePredicates.length > 0) {\n\t\t// interested in the transition with the highest precedence\n\t\tvar s = precedencePredicates.sort(function(a, b) {\n\t\t\treturn a.compareTo(b);\n\t\t});\n\t\tvar reduced = s[s.length-1];\n\t\toperands.add(reduced);\n\t}\n\tthis.opnds = operands.values();\n\treturn this;\n}\n\nOR.prototype = Object.create(SemanticContext.prototype);\nOR.prototype.constructor = OR;\n\nOR.prototype.constructor = function(other) {\n\tif (this === other) {\n\t\treturn true;\n\t} else if (!(other instanceof OR)) {\n\t\treturn false;\n\t} else {\n\t\treturn this.opnds === other.opnds;\n\t}\n};\n\nOR.prototype.updateHashCode = function(hash) {\n    hash.update(this.opnds, \"OR\");\n};\n\n// <p>\n// The evaluation of predicates by this context is short-circuiting, but\n// unordered.</p>\n//\nOR.prototype.evaluate = function(parser, outerContext) {\n\tfor (var i = 0; i < this.opnds.length; i++) {\n\t\tif (this.opnds[i].evaluate(parser, outerContext)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n};\n\nOR.prototype.evalPrecedence = function(parser, outerContext) {\n\tvar differs = false;\n\tvar operands = [];\n\tfor (var i = 0; i < this.opnds.length; i++) {\n\t\tvar context = this.opnds[i];\n\t\tvar evaluated = context.evalPrecedence(parser, outerContext);\n\t\tdiffers |= (evaluated !== context);\n\t\tif (evaluated === SemanticContext.NONE) {\n\t\t\t// The OR context is true if any element is true\n\t\t\treturn SemanticContext.NONE;\n\t\t} else if (evaluated !== null) {\n\t\t\t// Reduce the result by skipping false elements\n\t\t\toperands.push(evaluated);\n\t\t}\n\t}\n\tif (!differs) {\n\t\treturn this;\n\t}\n\tif (operands.length === 0) {\n\t\t// all elements were false, so the OR context is false\n\t\treturn null;\n\t}\n\tvar result = null;\n\toperands.map(function(o) {\n\t\treturn result === null ? o : SemanticContext.orContext(result, o);\n\t});\n\treturn result;\n};\n\nOR.prototype.toString = function() {\n\tvar s = \"\";\n\tthis.opnds.map(function(o) {\n\t\ts += \"|| \" + o.toString();\n\t});\n\treturn s.length > 3 ? s.slice(3) : s;\n};\n\nexports.SemanticContext = SemanticContext;\nexports.PrecedencePredicate = PrecedencePredicate;\nexports.Predicate = Predicate;\n","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n///\n\nvar ATNConfigSet = require('./../atn/ATNConfigSet').ATNConfigSet;\nvar Utils = require('./../Utils');\nvar Hash = Utils.Hash;\nvar Set = Utils.Set;\n\n// Map a predicate to a predicted alternative.///\n\nfunction PredPrediction(pred, alt) {\n\tthis.alt = alt;\n\tthis.pred = pred;\n\treturn this;\n}\n\nPredPrediction.prototype.toString = function() {\n\treturn \"(\" + this.pred + \", \" + this.alt + \")\";\n};\n\n// A DFA state represents a set of possible ATN configurations.\n// As Aho, Sethi, Ullman p. 117 says \"The DFA uses its state\n// to keep track of all possible states the ATN can be in after\n// reading each input symbol. That is to say, after reading\n// input a1a2..an, the DFA is in a state that represents the\n// subset T of the states of the ATN that are reachable from the\n// ATN's start state along some path labeled a1a2..an.\"\n// In conventional NFA&rarr;DFA conversion, therefore, the subset T\n// would be a bitset representing the set of states the\n// ATN could be in. We need to track the alt predicted by each\n// state as well, however. More importantly, we need to maintain\n// a stack of states, tracking the closure operations as they\n// jump from rule to rule, emulating rule invocations (method calls).\n// I have to add a stack to simulate the proper lookahead sequences for\n// the underlying LL grammar from which the ATN was derived.\n//\n// <p>I use a set of ATNConfig objects not simple states. An ATNConfig\n// is both a state (ala normal conversion) and a RuleContext describing\n// the chain of rules (if any) followed to arrive at that state.</p>\n//\n// <p>A DFA state may have multiple references to a particular state,\n// but with different ATN contexts (with same or different alts)\n// meaning that state was reached via a different set of rule invocations.</p>\n// /\n\nfunction DFAState(stateNumber, configs) {\n\tif (stateNumber === null) {\n\t\tstateNumber = -1;\n\t}\n\tif (configs === null) {\n\t\tconfigs = new ATNConfigSet();\n\t}\n\tthis.stateNumber = stateNumber;\n\tthis.configs = configs;\n\t// {@code edges[symbol]} points to target of symbol. Shift up by 1 so (-1)\n\t// {@link Token//EOF} maps to {@code edges[0]}.\n\tthis.edges = null;\n\tthis.isAcceptState = false;\n\t// if accept state, what ttype do we match or alt do we predict?\n\t// This is set to {@link ATN//INVALID_ALT_NUMBER} when {@link\n\t// //predicates}{@code !=null} or\n\t// {@link //requiresFullContext}.\n\tthis.prediction = 0;\n\tthis.lexerActionExecutor = null;\n\t// Indicates that this state was created during SLL prediction that\n\t// discovered a conflict between the configurations in the state. Future\n\t// {@link ParserATNSimulator//execATN} invocations immediately jumped doing\n\t// full context prediction if this field is true.\n\tthis.requiresFullContext = false;\n\t// During SLL parsing, this is a list of predicates associated with the\n\t// ATN configurations of the DFA state. When we have predicates,\n\t// {@link //requiresFullContext} is {@code false} since full context\n\t// prediction evaluates predicates\n\t// on-the-fly. If this is not null, then {@link //prediction} is\n\t// {@link ATN//INVALID_ALT_NUMBER}.\n\t//\n\t// <p>We only use these for non-{@link //requiresFullContext} but\n\t// conflicting states. That\n\t// means we know from the context (it's $ or we don't dip into outer\n\t// context) that it's an ambiguity not a conflict.</p>\n\t//\n\t// <p>This list is computed by {@link\n\t// ParserATNSimulator//predicateDFAState}.</p>\n\tthis.predicates = null;\n\treturn this;\n}\n\n// Get the set of all alts mentioned by all ATN configurations in this\n// DFA state.\nDFAState.prototype.getAltSet = function() {\n\tvar alts = new Set();\n\tif (this.configs !== null) {\n\t\tfor (var i = 0; i < this.configs.length; i++) {\n\t\t\tvar c = this.configs[i];\n\t\t\talts.add(c.alt);\n\t\t}\n\t}\n\tif (alts.length === 0) {\n\t\treturn null;\n\t} else {\n\t\treturn alts;\n\t}\n};\n\n// Two {@link DFAState} instances are equal if their ATN configuration sets\n// are the same. This method is used to see if a state already exists.\n//\n// <p>Because the number of alternatives and number of ATN configurations are\n// finite, there is a finite number of DFA states that can be processed.\n// This is necessary to show that the algorithm terminates.</p>\n//\n// <p>Cannot test the DFA state numbers here because in\n// {@link ParserATNSimulator//addDFAState} we need to know if any other state\n// exists that has this exact set of ATN configurations. The\n// {@link //stateNumber} is irrelevant.</p>\nDFAState.prototype.equals = function(other) {\n\t// compare set of ATN configurations in this set with other\n\treturn this === other ||\n\t\t\t(other instanceof DFAState &&\n\t\t\t\tthis.configs.equals(other.configs));\n};\n\nDFAState.prototype.toString = function() {\n\tvar s = \"\" + this.stateNumber + \":\" + this.configs;\n\tif(this.isAcceptState) {\n        s = s + \"=>\";\n        if (this.predicates !== null)\n            s = s + this.predicates;\n        else\n            s = s + this.prediction;\n    }\n\treturn s;\n};\n\nDFAState.prototype.hashCode = function() {\n\tvar hash = new Hash();\n\thash.update(this.configs);\n\tif(this.isAcceptState) {\n        if (this.predicates !== null)\n            hash.update(this.predicates);\n        else\n            hash.update(this.prediction);\n    }\n    return hash.finish();\n};\n\nexports.DFAState = DFAState;\nexports.PredPrediction = PredPrediction;\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.stringArray = exports.array = exports.func = exports.error = exports.number = exports.string = exports.boolean = void 0;\nfunction boolean(value) {\n    return value === true || value === false;\n}\nexports.boolean = boolean;\nfunction string(value) {\n    return typeof value === 'string' || value instanceof String;\n}\nexports.string = string;\nfunction number(value) {\n    return typeof value === 'number' || value instanceof Number;\n}\nexports.number = number;\nfunction error(value) {\n    return value instanceof Error;\n}\nexports.error = error;\nfunction func(value) {\n    return typeof value === 'function';\n}\nexports.func = func;\nfunction array(value) {\n    return Array.isArray(value);\n}\nexports.array = array;\nfunction stringArray(value) {\n    return array(value) && value.every(elem => string(elem));\n}\nexports.stringArray = stringArray;\n//# sourceMappingURL=is.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Emitter = exports.Event = void 0;\nconst ral_1 = require(\"./ral\");\nvar Event;\n(function (Event) {\n    const _disposable = { dispose() { } };\n    Event.None = function () { return _disposable; };\n})(Event = exports.Event || (exports.Event = {}));\nclass CallbackList {\n    add(callback, context = null, bucket) {\n        if (!this._callbacks) {\n            this._callbacks = [];\n            this._contexts = [];\n        }\n        this._callbacks.push(callback);\n        this._contexts.push(context);\n        if (Array.isArray(bucket)) {\n            bucket.push({ dispose: () => this.remove(callback, context) });\n        }\n    }\n    remove(callback, context = null) {\n        if (!this._callbacks) {\n            return;\n        }\n        let foundCallbackWithDifferentContext = false;\n        for (let i = 0, len = this._callbacks.length; i < len; i++) {\n            if (this._callbacks[i] === callback) {\n                if (this._contexts[i] === context) {\n                    // callback & context match => remove it\n                    this._callbacks.splice(i, 1);\n                    this._contexts.splice(i, 1);\n                    return;\n                }\n                else {\n                    foundCallbackWithDifferentContext = true;\n                }\n            }\n        }\n        if (foundCallbackWithDifferentContext) {\n            throw new Error('When adding a listener with a context, you should remove it with the same context');\n        }\n    }\n    invoke(...args) {\n        if (!this._callbacks) {\n            return [];\n        }\n        const ret = [], callbacks = this._callbacks.slice(0), contexts = this._contexts.slice(0);\n        for (let i = 0, len = callbacks.length; i < len; i++) {\n            try {\n                ret.push(callbacks[i].apply(contexts[i], args));\n            }\n            catch (e) {\n                // eslint-disable-next-line no-console\n                ral_1.default().console.error(e);\n            }\n        }\n        return ret;\n    }\n    isEmpty() {\n        return !this._callbacks || this._callbacks.length === 0;\n    }\n    dispose() {\n        this._callbacks = undefined;\n        this._contexts = undefined;\n    }\n}\nclass Emitter {\n    constructor(_options) {\n        this._options = _options;\n    }\n    /**\n     * For the public to allow to subscribe\n     * to events from this Emitter\n     */\n    get event() {\n        if (!this._event) {\n            this._event = (listener, thisArgs, disposables) => {\n                if (!this._callbacks) {\n                    this._callbacks = new CallbackList();\n                }\n                if (this._options && this._options.onFirstListenerAdd && this._callbacks.isEmpty()) {\n                    this._options.onFirstListenerAdd(this);\n                }\n                this._callbacks.add(listener, thisArgs);\n                const result = {\n                    dispose: () => {\n                        if (!this._callbacks) {\n                            // disposable is disposed after emitter is disposed.\n                            return;\n                        }\n                        this._callbacks.remove(listener, thisArgs);\n                        result.dispose = Emitter._noop;\n                        if (this._options && this._options.onLastListenerRemove && this._callbacks.isEmpty()) {\n                            this._options.onLastListenerRemove(this);\n                        }\n                    }\n                };\n                if (Array.isArray(disposables)) {\n                    disposables.push(result);\n                }\n                return result;\n            };\n        }\n        return this._event;\n    }\n    /**\n     * To be kept private to fire an event to\n     * subscribers\n     */\n    fire(event) {\n        if (this._callbacks) {\n            this._callbacks.invoke.call(this._callbacks, event);\n        }\n    }\n    dispose() {\n        if (this._callbacks) {\n            this._callbacks.dispose();\n            this._callbacks = undefined;\n        }\n    }\n}\nexports.Emitter = Emitter;\nEmitter._noop = function () { };\n//# sourceMappingURL=events.js.map","module.exports = require(\"path\");","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n///\n\n// A tuple: (ATN state, predicted alt, syntactic, semantic context).\n//  The syntactic context is a graph-structured stack node whose\n//  path(s) to the root is the rule invocation(s)\n//  chain used to arrive at the state.  The semantic context is\n//  the tree of semantic predicates encountered before reaching\n//  an ATN state.\n///\n\nvar DecisionState = require('./ATNState').DecisionState;\nvar SemanticContext = require('./SemanticContext').SemanticContext;\nvar Hash = require(\"../Utils\").Hash;\n\n\nfunction checkParams(params, isCfg) {\n\tif(params===null) {\n\t\tvar result = { state:null, alt:null, context:null, semanticContext:null };\n\t\tif(isCfg) {\n\t\t\tresult.reachesIntoOuterContext = 0;\n\t\t}\n\t\treturn result;\n\t} else {\n\t\tvar props = {};\n\t\tprops.state = params.state || null;\n\t\tprops.alt = (params.alt === undefined) ? null : params.alt;\n\t\tprops.context = params.context || null;\n\t\tprops.semanticContext = params.semanticContext || null;\n\t\tif(isCfg) {\n\t\t\tprops.reachesIntoOuterContext = params.reachesIntoOuterContext || 0;\n\t\t\tprops.precedenceFilterSuppressed = params.precedenceFilterSuppressed || false;\n\t\t}\n\t\treturn props;\n\t}\n}\n\nfunction ATNConfig(params, config) {\n\tthis.checkContext(params, config);\n\tparams = checkParams(params);\n\tconfig = checkParams(config, true);\n    // The ATN state associated with this configuration///\n    this.state = params.state!==null ? params.state : config.state;\n    // What alt (or lexer rule) is predicted by this configuration///\n    this.alt = params.alt!==null ? params.alt : config.alt;\n    // The stack of invoking states leading to the rule/states associated\n    //  with this config.  We track only those contexts pushed during\n    //  execution of the ATN simulator.\n    this.context = params.context!==null ? params.context : config.context;\n    this.semanticContext = params.semanticContext!==null ? params.semanticContext :\n        (config.semanticContext!==null ? config.semanticContext : SemanticContext.NONE);\n    // We cannot execute predicates dependent upon local context unless\n    // we know for sure we are in the correct context. Because there is\n    // no way to do this efficiently, we simply cannot evaluate\n    // dependent predicates unless we are in the rule that initially\n    // invokes the ATN simulator.\n    //\n    // closure() tracks the depth of how far we dip into the\n    // outer context: depth &gt; 0.  Note that it may not be totally\n    // accurate depth since I don't ever decrement. TODO: make it a boolean then\n    this.reachesIntoOuterContext = config.reachesIntoOuterContext;\n    this.precedenceFilterSuppressed = config.precedenceFilterSuppressed;\n    return this;\n}\n\nATNConfig.prototype.checkContext = function(params, config) {\n\tif((params.context===null || params.context===undefined) &&\n\t\t\t(config===null || config.context===null || config.context===undefined)) {\n\t\tthis.context = null;\n\t}\n};\n\n\nATNConfig.prototype.hashCode = function() {\n    var hash = new Hash();\n    this.updateHashCode(hash);\n    return hash.finish();\n};\n\n\nATNConfig.prototype.updateHashCode = function(hash) {\n    hash.update(this.state.stateNumber, this.alt, this.context, this.semanticContext);\n};\n\n// An ATN configuration is equal to another if both have\n//  the same state, they predict the same alternative, and\n//  syntactic/semantic contexts are the same.\n\nATNConfig.prototype.equals = function(other) {\n    if (this === other) {\n        return true;\n    } else if (! (other instanceof ATNConfig)) {\n        return false;\n    } else {\n        return this.state.stateNumber===other.state.stateNumber &&\n            this.alt===other.alt &&\n            (this.context===null ? other.context===null : this.context.equals(other.context)) &&\n            this.semanticContext.equals(other.semanticContext) &&\n            this.precedenceFilterSuppressed===other.precedenceFilterSuppressed;\n    }\n};\n\n\nATNConfig.prototype.hashCodeForConfigSet = function() {\n    var hash = new Hash();\n    hash.update(this.state.stateNumber, this.alt, this.semanticContext);\n    return hash.finish();\n};\n\n\nATNConfig.prototype.equalsForConfigSet = function(other) {\n    if (this === other) {\n        return true;\n    } else if (! (other instanceof ATNConfig)) {\n        return false;\n    } else {\n        return this.state.stateNumber===other.state.stateNumber &&\n            this.alt===other.alt &&\n            this.semanticContext.equals(other.semanticContext);\n    }\n};\n\n\nATNConfig.prototype.toString = function() {\n    return \"(\" + this.state + \",\" + this.alt +\n        (this.context!==null ? \",[\" + this.context.toString() + \"]\" : \"\") +\n        (this.semanticContext !== SemanticContext.NONE ?\n                (\",\" + this.semanticContext.toString())\n                : \"\") +\n        (this.reachesIntoOuterContext>0 ?\n                (\",up=\" + this.reachesIntoOuterContext)\n                : \"\") + \")\";\n};\n\n\nfunction LexerATNConfig(params, config) {\n\tATNConfig.call(this, params, config);\n\n    // This is the backing field for {@link //getLexerActionExecutor}.\n\tvar lexerActionExecutor = params.lexerActionExecutor || null;\n    this.lexerActionExecutor = lexerActionExecutor || (config!==null ? config.lexerActionExecutor : null);\n    this.passedThroughNonGreedyDecision = config!==null ? this.checkNonGreedyDecision(config, this.state) : false;\n    return this;\n}\n\nLexerATNConfig.prototype = Object.create(ATNConfig.prototype);\nLexerATNConfig.prototype.constructor = LexerATNConfig;\n\nLexerATNConfig.prototype.updateHashCode = function(hash) {\n    hash.update(this.state.stateNumber, this.alt, this.context, this.semanticContext, this.passedThroughNonGreedyDecision, this.lexerActionExecutor);\n};\n\nLexerATNConfig.prototype.equals = function(other) {\n    return this === other ||\n            (other instanceof LexerATNConfig &&\n            this.passedThroughNonGreedyDecision == other.passedThroughNonGreedyDecision &&\n            (this.lexerActionExecutor ? this.lexerActionExecutor.equals(other.lexerActionExecutor) : !other.lexerActionExecutor) &&\n            ATNConfig.prototype.equals.call(this, other));\n};\n\nLexerATNConfig.prototype.hashCodeForConfigSet = LexerATNConfig.prototype.hashCode;\n\nLexerATNConfig.prototype.equalsForConfigSet = LexerATNConfig.prototype.equals;\n\n\nLexerATNConfig.prototype.checkNonGreedyDecision = function(source, target) {\n    return source.passedThroughNonGreedyDecision ||\n        (target instanceof DecisionState) && target.nonGreedy;\n};\n\nexports.ATNConfig = ATNConfig;\nexports.LexerATNConfig = LexerATNConfig;","/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n///\n\n//  A rule context is a record of a single rule invocation. It knows\n//  which context invoked it, if any. If there is no parent context, then\n//  naturally the invoking state is not valid.  The parent link\n//  provides a chain upwards from the current rule invocation to the root\n//  of the invocation tree, forming a stack. We actually carry no\n//  information about the rule associated with this context (except\n//  when parsing). We keep only the state number of the invoking state from\n//  the ATN submachine that invoked this. Contrast this with the s\n//  pointer inside ParserRuleContext that tracks the current state\n//  being \"executed\" for the current rule.\n//\n//  The parent contexts are useful for computing lookahead sets and\n//  getting error information.\n//\n//  These objects are used during parsing and prediction.\n//  For the special case of parsers, we use the subclass\n//  ParserRuleContext.\n//\n//  @see ParserRuleContext\n///\n\nvar RuleNode = require('./tree/Tree').RuleNode;\nvar INVALID_INTERVAL = require('./tree/Tree').INVALID_INTERVAL;\nvar INVALID_ALT_NUMBER = require('./atn/ATN').INVALID_ALT_NUMBER;\n\nfunction RuleContext(parent, invokingState) {\n\tRuleNode.call(this);\n\t// What context invoked this rule?\n\tthis.parentCtx = parent || null;\n\t// What state invoked the rule associated with this context?\n\t// The \"return address\" is the followState of invokingState\n\t// If parent is null, this should be -1.\n\tthis.invokingState = invokingState || -1;\n\treturn this;\n}\n\nRuleContext.prototype = Object.create(RuleNode.prototype);\nRuleContext.prototype.constructor = RuleContext;\n\nRuleContext.prototype.depth = function() {\n\tvar n = 0;\n\tvar p = this;\n\twhile (p !== null) {\n\t\tp = p.parentCtx;\n\t\tn += 1;\n\t}\n\treturn n;\n};\n\n// A context is empty if there is no invoking state; meaning nobody call\n// current context.\nRuleContext.prototype.isEmpty = function() {\n\treturn this.invokingState === -1;\n};\n\n// satisfy the ParseTree / SyntaxTree interface\n\nRuleContext.prototype.getSourceInterval = function() {\n\treturn INVALID_INTERVAL;\n};\n\nRuleContext.prototype.getRuleContext = function() {\n\treturn this;\n};\n\nRuleContext.prototype.getPayload = function() {\n\treturn this;\n};\n\n// Return the combined text of all child nodes. This method only considers\n// tokens which have been added to the parse tree.\n// <p>\n// Since tokens on hidden channels (e.g. whitespace or comments) are not\n// added to the parse trees, they will not appear in the output of this\n// method.\n// /\nRuleContext.prototype.getText = function() {\n\tif (this.getChildCount() === 0) {\n\t\treturn \"\";\n\t} else {\n\t\treturn this.children.map(function(child) {\n\t\t\treturn child.getText();\n\t\t}).join(\"\");\n\t}\n};\n\n// For rule associated with this parse tree internal node, return\n// the outer alternative number used to match the input. Default\n// implementation does not compute nor store this alt num. Create\n// a subclass of ParserRuleContext with backing field and set\n// option contextSuperClass.\n// to set it.\nRuleContext.prototype.getAltNumber = function() { return INVALID_ALT_NUMBER; }\n\n// Set the outer alternative number for this context node. Default\n// implementation does nothing to avoid backing field overhead for\n// trees that don't need it.  Create\n// a subclass of ParserRuleContext with backing field and set\n// option contextSuperClass.\nRuleContext.prototype.setAltNumber = function(altNumber) { }\n\nRuleContext.prototype.getChild = function(i) {\n\treturn null;\n};\n\nRuleContext.prototype.getChildCount = function() {\n\treturn 0;\n};\n\nRuleContext.prototype.accept = function(visitor) {\n\treturn visitor.visitChildren(this);\n};\n\n//need to manage circular dependencies, so export now\nexports.RuleContext = RuleContext;\nvar Trees = require('./tree/Trees').Trees;\n\n\n// Print out a whole tree, not just a node, in LISP format\n// (root child1 .. childN). Print just a node if this is a leaf.\n//\n\nRuleContext.prototype.toStringTree = function(ruleNames, recog) {\n\treturn Trees.toStringTree(this, ruleNames, recog);\n};\n\nRuleContext.prototype.toString = function(ruleNames, stop) {\n\truleNames = ruleNames || null;\n\tstop = stop || null;\n\tvar p = this;\n\tvar s = \"[\";\n\twhile (p !== null && p !== stop) {\n\t\tif (ruleNames === null) {\n\t\t\tif (!p.isEmpty()) {\n\t\t\t\ts += p.invokingState;\n\t\t\t}\n\t\t} else {\n\t\t\tvar ri = p.ruleIndex;\n\t\t\tvar ruleName = (ri >= 0 && ri < ruleNames.length) ? ruleNames[ri]\n\t\t\t\t\t: \"\" + ri;\n\t\t\ts += ruleName;\n\t\t}\n\t\tif (p.parentCtx !== null && (ruleNames !== null || !p.parentCtx.isEmpty())) {\n\t\t\ts += \" \";\n\t\t}\n\t\tp = p.parentCtx;\n\t}\n\ts += \"]\";\n\treturn s;\n};\n\n","/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n///\n\n// A lexer is recognizer that draws input symbols from a character stream.\n//  lexer grammars result in a subclass of this object. A Lexer object\n//  uses simplified match() and error recovery mechanisms in the interest of speed.\n\nvar Token = require('./Token').Token;\nvar Recognizer = require('./Recognizer').Recognizer;\nvar CommonTokenFactory = require('./CommonTokenFactory').CommonTokenFactory;\nvar RecognitionException  = require('./error/Errors').RecognitionException;\nvar LexerNoViableAltException = require('./error/Errors').LexerNoViableAltException;\n\nfunction TokenSource() {\n\treturn this;\n}\n\nfunction Lexer(input) {\n\tRecognizer.call(this);\n\tthis._input = input;\n\tthis._factory = CommonTokenFactory.DEFAULT;\n\tthis._tokenFactorySourcePair = [ this, input ];\n\n\tthis._interp = null; // child classes must populate this\n\n\t// The goal of all lexer rules/methods is to create a token object.\n\t// this is an instance variable as multiple rules may collaborate to\n\t// create a single token. nextToken will return this object after\n\t// matching lexer rule(s). If you subclass to allow multiple token\n\t// emissions, then set this to the last token to be matched or\n\t// something nonnull so that the auto token emit mechanism will not\n\t// emit another token.\n\tthis._token = null;\n\n\t// What character index in the stream did the current token start at?\n\t// Needed, for example, to get the text for current token. Set at\n\t// the start of nextToken.\n\tthis._tokenStartCharIndex = -1;\n\n\t// The line on which the first character of the token resides///\n\tthis._tokenStartLine = -1;\n\n\t// The character position of first character within the line///\n\tthis._tokenStartColumn = -1;\n\n\t// Once we see EOF on char stream, next token will be EOF.\n\t// If you have DONE : EOF ; then you see DONE EOF.\n\tthis._hitEOF = false;\n\n\t// The channel number for the current token///\n\tthis._channel = Token.DEFAULT_CHANNEL;\n\n\t// The token type for the current token///\n\tthis._type = Token.INVALID_TYPE;\n\n\tthis._modeStack = [];\n\tthis._mode = Lexer.DEFAULT_MODE;\n\n\t// You can set the text for the current token to override what is in\n\t// the input char buffer. Use setText() or can set this instance var.\n\t// /\n\tthis._text = null;\n\n\treturn this;\n}\n\nLexer.prototype = Object.create(Recognizer.prototype);\nLexer.prototype.constructor = Lexer;\n\nLexer.DEFAULT_MODE = 0;\nLexer.MORE = -2;\nLexer.SKIP = -3;\n\nLexer.DEFAULT_TOKEN_CHANNEL = Token.DEFAULT_CHANNEL;\nLexer.HIDDEN = Token.HIDDEN_CHANNEL;\nLexer.MIN_CHAR_VALUE = 0x0000;\nLexer.MAX_CHAR_VALUE = 0x10FFFF;\n\nLexer.prototype.reset = function() {\n\t// wack Lexer state variables\n\tif (this._input !== null) {\n\t\tthis._input.seek(0); // rewind the input\n\t}\n\tthis._token = null;\n\tthis._type = Token.INVALID_TYPE;\n\tthis._channel = Token.DEFAULT_CHANNEL;\n\tthis._tokenStartCharIndex = -1;\n\tthis._tokenStartColumn = -1;\n\tthis._tokenStartLine = -1;\n\tthis._text = null;\n\n\tthis._hitEOF = false;\n\tthis._mode = Lexer.DEFAULT_MODE;\n\tthis._modeStack = [];\n\n\tthis._interp.reset();\n};\n\n// Return a token from this source; i.e., match a token on the char stream.\nLexer.prototype.nextToken = function() {\n\tif (this._input === null) {\n\t\tthrow \"nextToken requires a non-null input stream.\";\n\t}\n\n\t// Mark start location in char stream so unbuffered streams are\n\t// guaranteed at least have text of current token\n\tvar tokenStartMarker = this._input.mark();\n\ttry {\n\t\twhile (true) {\n\t\t\tif (this._hitEOF) {\n\t\t\t\tthis.emitEOF();\n\t\t\t\treturn this._token;\n\t\t\t}\n\t\t\tthis._token = null;\n\t\t\tthis._channel = Token.DEFAULT_CHANNEL;\n\t\t\tthis._tokenStartCharIndex = this._input.index;\n\t\t\tthis._tokenStartColumn = this._interp.column;\n\t\t\tthis._tokenStartLine = this._interp.line;\n\t\t\tthis._text = null;\n\t\t\tvar continueOuter = false;\n\t\t\twhile (true) {\n\t\t\t\tthis._type = Token.INVALID_TYPE;\n\t\t\t\tvar ttype = Lexer.SKIP;\n\t\t\t\ttry {\n\t\t\t\t\tttype = this._interp.match(this._input, this._mode);\n\t\t\t\t} catch (e) {\n\t\t\t\t    if(e instanceof RecognitionException) {\n                        this.notifyListeners(e); // report error\n                        this.recover(e);\n                    } else {\n                        console.log(e.stack);\n                        throw e;\n                    }\n\t\t\t\t}\n\t\t\t\tif (this._input.LA(1) === Token.EOF) {\n\t\t\t\t\tthis._hitEOF = true;\n\t\t\t\t}\n\t\t\t\tif (this._type === Token.INVALID_TYPE) {\n\t\t\t\t\tthis._type = ttype;\n\t\t\t\t}\n\t\t\t\tif (this._type === Lexer.SKIP) {\n\t\t\t\t\tcontinueOuter = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (this._type !== Lexer.MORE) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (continueOuter) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (this._token === null) {\n\t\t\t\tthis.emit();\n\t\t\t}\n\t\t\treturn this._token;\n\t\t}\n\t} finally {\n\t\t// make sure we release marker after match or\n\t\t// unbuffered char stream will keep buffering\n\t\tthis._input.release(tokenStartMarker);\n\t}\n};\n\n// Instruct the lexer to skip creating a token for current lexer rule\n// and look for another token. nextToken() knows to keep looking when\n// a lexer rule finishes with token set to SKIP_TOKEN. Recall that\n// if token==null at end of any token rule, it creates one for you\n// and emits it.\n// /\nLexer.prototype.skip = function() {\n\tthis._type = Lexer.SKIP;\n};\n\nLexer.prototype.more = function() {\n\tthis._type = Lexer.MORE;\n};\n\nLexer.prototype.mode = function(m) {\n\tthis._mode = m;\n};\n\nLexer.prototype.pushMode = function(m) {\n\tif (this._interp.debug) {\n\t\tconsole.log(\"pushMode \" + m);\n\t}\n\tthis._modeStack.push(this._mode);\n\tthis.mode(m);\n};\n\nLexer.prototype.popMode = function() {\n\tif (this._modeStack.length === 0) {\n\t\tthrow \"Empty Stack\";\n\t}\n\tif (this._interp.debug) {\n\t\tconsole.log(\"popMode back to \" + this._modeStack.slice(0, -1));\n\t}\n\tthis.mode(this._modeStack.pop());\n\treturn this._mode;\n};\n\n// Set the char stream and reset the lexer\nObject.defineProperty(Lexer.prototype, \"inputStream\", {\n\tget : function() {\n\t\treturn this._input;\n\t},\n\tset : function(input) {\n\t\tthis._input = null;\n\t\tthis._tokenFactorySourcePair = [ this, this._input ];\n\t\tthis.reset();\n\t\tthis._input = input;\n\t\tthis._tokenFactorySourcePair = [ this, this._input ];\n\t}\n});\n\nObject.defineProperty(Lexer.prototype, \"sourceName\", {\n\tget : function sourceName() {\n\t\treturn this._input.sourceName;\n\t}\n});\n\n// By default does not support multiple emits per nextToken invocation\n// for efficiency reasons. Subclass and override this method, nextToken,\n// and getToken (to push tokens into a list and pull from that list\n// rather than a single variable as this implementation does).\n// /\nLexer.prototype.emitToken = function(token) {\n\tthis._token = token;\n};\n\n// The standard method called to automatically emit a token at the\n// outermost lexical rule. The token object should point into the\n// char buffer start..stop. If there is a text override in 'text',\n// use that to set the token's text. Override this method to emit\n// custom Token objects or provide a new factory.\n// /\nLexer.prototype.emit = function() {\n\tvar t = this._factory.create(this._tokenFactorySourcePair, this._type,\n\t\t\tthis._text, this._channel, this._tokenStartCharIndex, this\n\t\t\t\t\t.getCharIndex() - 1, this._tokenStartLine,\n\t\t\tthis._tokenStartColumn);\n\tthis.emitToken(t);\n\treturn t;\n};\n\nLexer.prototype.emitEOF = function() {\n\tvar cpos = this.column;\n\tvar lpos = this.line;\n\tvar eof = this._factory.create(this._tokenFactorySourcePair, Token.EOF,\n\t\t\tnull, Token.DEFAULT_CHANNEL, this._input.index,\n\t\t\tthis._input.index - 1, lpos, cpos);\n\tthis.emitToken(eof);\n\treturn eof;\n};\n\nObject.defineProperty(Lexer.prototype, \"type\", {\n\tget : function() {\n\t\treturn this.type;\n\t},\n\tset : function(type) {\n\t\tthis._type = type;\n\t}\n});\n\nObject.defineProperty(Lexer.prototype, \"line\", {\n\tget : function() {\n\t\treturn this._interp.line;\n\t},\n\tset : function(line) {\n\t\tthis._interp.line = line;\n\t}\n});\n\nObject.defineProperty(Lexer.prototype, \"column\", {\n\tget : function() {\n\t\treturn this._interp.column;\n\t},\n\tset : function(column) {\n\t\tthis._interp.column = column;\n\t}\n});\n\n\n// What is the index of the current character of lookahead?///\nLexer.prototype.getCharIndex = function() {\n\treturn this._input.index;\n};\n\n// Return the text matched so far for the current token or any text override.\n//Set the complete text of this token; it wipes any previous changes to the text.\nObject.defineProperty(Lexer.prototype, \"text\", {\n\tget : function() {\n\t\tif (this._text !== null) {\n\t\t\treturn this._text;\n\t\t} else {\n\t\t\treturn this._interp.getText(this._input);\n\t\t}\n\t},\n\tset : function(text) {\n\t\tthis._text = text;\n\t}\n});\n// Return a list of all Token objects in input char stream.\n// Forces load of all tokens. Does not include EOF token.\n// /\nLexer.prototype.getAllTokens = function() {\n\tvar tokens = [];\n\tvar t = this.nextToken();\n\twhile (t.type !== Token.EOF) {\n\t\ttokens.push(t);\n\t\tt = this.nextToken();\n\t}\n\treturn tokens;\n};\n\nLexer.prototype.notifyListeners = function(e) {\n\tvar start = this._tokenStartCharIndex;\n\tvar stop = this._input.index;\n\tvar text = this._input.getText(start, stop);\n\tvar msg = \"token recognition error at: '\" + this.getErrorDisplay(text) + \"'\";\n\tvar listener = this.getErrorListenerDispatch();\n\tlistener.syntaxError(this, null, this._tokenStartLine,\n\t\t\tthis._tokenStartColumn, msg, e);\n};\n\nLexer.prototype.getErrorDisplay = function(s) {\n\tvar d = [];\n\tfor (var i = 0; i < s.length; i++) {\n\t\td.push(s[i]);\n\t}\n\treturn d.join('');\n};\n\nLexer.prototype.getErrorDisplayForChar = function(c) {\n\tif (c.charCodeAt(0) === Token.EOF) {\n\t\treturn \"<EOF>\";\n\t} else if (c === '\\n') {\n\t\treturn \"\\\\n\";\n\t} else if (c === '\\t') {\n\t\treturn \"\\\\t\";\n\t} else if (c === '\\r') {\n\t\treturn \"\\\\r\";\n\t} else {\n\t\treturn c;\n\t}\n};\n\nLexer.prototype.getCharErrorDisplay = function(c) {\n\treturn \"'\" + this.getErrorDisplayForChar(c) + \"'\";\n};\n\n// Lexers can normally match any char in it's vocabulary after matching\n// a token, so do the easy thing and just kill a character and hope\n// it all works out. You can instead use the rule invocation stack\n// to do sophisticated error recovery if you are in a fragment rule.\n// /\nLexer.prototype.recover = function(re) {\n\tif (this._input.LA(1) !== Token.EOF) {\n\t\tif (re instanceof LexerNoViableAltException) {\n\t\t\t// skip a char and try again\n\t\t\tthis._interp.consume(this._input);\n\t\t} else {\n\t\t\t// TODO: Do we lose character or line position information?\n\t\t\tthis._input.consume();\n\t\t}\n\t}\n};\n\nexports.Lexer = Lexer;\n","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\n// Provides an empty default implementation of {@link ANTLRErrorListener}. The\n// default implementation of each method does nothing, but can be overridden as\n// necessary.\n\nfunction ErrorListener() {\n\treturn this;\n}\n\nErrorListener.prototype.syntaxError = function(recognizer, offendingSymbol, line, column, msg, e) {\n};\n\nErrorListener.prototype.reportAmbiguity = function(recognizer, dfa, startIndex, stopIndex, exact, ambigAlts, configs) {\n};\n\nErrorListener.prototype.reportAttemptingFullContext = function(recognizer, dfa, startIndex, stopIndex, conflictingAlts, configs) {\n};\n\nErrorListener.prototype.reportContextSensitivity = function(recognizer, dfa, startIndex, stopIndex, prediction, configs) {\n};\n\nfunction ConsoleErrorListener() {\n\tErrorListener.call(this);\n\treturn this;\n}\n\nConsoleErrorListener.prototype = Object.create(ErrorListener.prototype);\nConsoleErrorListener.prototype.constructor = ConsoleErrorListener;\n\n//\n// Provides a default instance of {@link ConsoleErrorListener}.\n//\nConsoleErrorListener.INSTANCE = new ConsoleErrorListener();\n\n//\n// {@inheritDoc}\n//\n// <p>\n// This implementation prints messages to {@link System//err} containing the\n// values of {@code line}, {@code charPositionInLine}, and {@code msg} using\n// the following format.</p>\n//\n// <pre>\n// line <em>line</em>:<em>charPositionInLine</em> <em>msg</em>\n// </pre>\n//\nConsoleErrorListener.prototype.syntaxError = function(recognizer, offendingSymbol, line, column, msg, e) {\n    console.error(\"line \" + line + \":\" + column + \" \" + msg);\n};\n\nfunction ProxyErrorListener(delegates) {\n\tErrorListener.call(this);\n    if (delegates===null) {\n        throw \"delegates\";\n    }\n    this.delegates = delegates;\n\treturn this;\n}\n\nProxyErrorListener.prototype = Object.create(ErrorListener.prototype);\nProxyErrorListener.prototype.constructor = ProxyErrorListener;\n\nProxyErrorListener.prototype.syntaxError = function(recognizer, offendingSymbol, line, column, msg, e) {\n    this.delegates.map(function(d) { d.syntaxError(recognizer, offendingSymbol, line, column, msg, e); });\n};\n\nProxyErrorListener.prototype.reportAmbiguity = function(recognizer, dfa, startIndex, stopIndex, exact, ambigAlts, configs) {\n    this.delegates.map(function(d) { d.reportAmbiguity(recognizer, dfa, startIndex, stopIndex, exact, ambigAlts, configs); });\n};\n\nProxyErrorListener.prototype.reportAttemptingFullContext = function(recognizer, dfa, startIndex, stopIndex, conflictingAlts, configs) {\n\tthis.delegates.map(function(d) { d.reportAttemptingFullContext(recognizer, dfa, startIndex, stopIndex, conflictingAlts, configs); });\n};\n\nProxyErrorListener.prototype.reportContextSensitivity = function(recognizer, dfa, startIndex, stopIndex, prediction, configs) {\n\tthis.delegates.map(function(d) { d.reportContextSensitivity(recognizer, dfa, startIndex, stopIndex, prediction, configs); });\n};\n\nexports.ErrorListener = ErrorListener;\nexports.ConsoleErrorListener = ConsoleErrorListener;\nexports.ProxyErrorListener = ProxyErrorListener;\n\n","/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\n// A DFA walker that knows how to dump them to serialized strings.#/\n\n\nfunction DFASerializer(dfa, literalNames, symbolicNames) {\n\tthis.dfa = dfa;\n\tthis.literalNames = literalNames || [];\n\tthis.symbolicNames = symbolicNames || [];\n\treturn this;\n}\n\nDFASerializer.prototype.toString = function() {\n   if(this.dfa.s0 === null) {\n       return null;\n   }\n   var buf = \"\";\n   var states = this.dfa.sortedStates();\n   for(var i=0;i<states.length;i++) {\n       var s = states[i];\n       if(s.edges!==null) {\n            var n = s.edges.length;\n            for(var j=0;j<n;j++) {\n                var t = s.edges[j] || null;\n                if(t!==null && t.stateNumber !== 0x7FFFFFFF) {\n                    buf = buf.concat(this.getStateString(s));\n                    buf = buf.concat(\"-\");\n                    buf = buf.concat(this.getEdgeLabel(j));\n                    buf = buf.concat(\"->\");\n                    buf = buf.concat(this.getStateString(t));\n                    buf = buf.concat('\\n');\n                }\n            }\n       }\n   }\n   return buf.length===0 ? null : buf;\n};\n\nDFASerializer.prototype.getEdgeLabel = function(i) {\n    if (i===0) {\n        return \"EOF\";\n    } else if(this.literalNames !==null || this.symbolicNames!==null) {\n        return this.literalNames[i-1] || this.symbolicNames[i-1];\n    } else {\n        return String.fromCharCode(i-1);\n    }\n};\n\nDFASerializer.prototype.getStateString = function(s) {\n    var baseStateStr = ( s.isAcceptState ? \":\" : \"\") + \"s\" + s.stateNumber + ( s.requiresFullContext ? \"^\" : \"\");\n    if(s.isAcceptState) {\n        if (s.predicates !== null) {\n            return baseStateStr + \"=>\" + s.predicates.toString();\n        } else {\n            return baseStateStr + \"=>\" + s.prediction.toString();\n        }\n    } else {\n        return baseStateStr;\n    }\n};\n\nfunction LexerDFASerializer(dfa) {\n\tDFASerializer.call(this, dfa, null);\n\treturn this;\n}\n\nLexerDFASerializer.prototype = Object.create(DFASerializer.prototype);\nLexerDFASerializer.prototype.constructor = LexerDFASerializer;\n\nLexerDFASerializer.prototype.getEdgeLabel = function(i) {\n\treturn \"'\" + String.fromCharCode(i) + \"'\";\n};\n\nexports.DFASerializer = DFASerializer;\nexports.LexerDFASerializer = LexerDFASerializer;\n\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n/// <reference path=\"../../typings/thenable.d.ts\" />\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createConnection = exports.Files = void 0;\nconst Is = require(\"../common/utils/is\");\nconst server_1 = require(\"../common/server\");\nconst fm = require(\"./files\");\nconst node_1 = require(\"vscode-languageserver-protocol/node\");\n__exportStar(require(\"vscode-languageserver-protocol/node\"), exports);\n__exportStar(require(\"../common/api\"), exports);\nvar Files;\n(function (Files) {\n    Files.uriToFilePath = fm.uriToFilePath;\n    Files.resolveGlobalNodePath = fm.resolveGlobalNodePath;\n    Files.resolveGlobalYarnPath = fm.resolveGlobalYarnPath;\n    Files.resolve = fm.resolve;\n    Files.resolveModulePath = fm.resolveModulePath;\n})(Files = exports.Files || (exports.Files = {}));\nlet _protocolConnection;\nfunction endProtocolConnection() {\n    if (_protocolConnection === undefined) {\n        return;\n    }\n    try {\n        _protocolConnection.end();\n    }\n    catch (_err) {\n        // Ignore. The client process could have already\n        // did and we can't send an end into the connection.\n    }\n}\nlet _shutdownReceived = false;\nlet exitTimer = undefined;\nfunction setupExitTimer() {\n    const argName = '--clientProcessId';\n    function runTimer(value) {\n        try {\n            let processId = parseInt(value);\n            if (!isNaN(processId)) {\n                exitTimer = setInterval(() => {\n                    try {\n                        process.kill(processId, 0);\n                    }\n                    catch (ex) {\n                        // Parent process doesn't exist anymore. Exit the server.\n                        endProtocolConnection();\n                        process.exit(_shutdownReceived ? 0 : 1);\n                    }\n                }, 3000);\n            }\n        }\n        catch (e) {\n            // Ignore errors;\n        }\n    }\n    for (let i = 2; i < process.argv.length; i++) {\n        let arg = process.argv[i];\n        if (arg === argName && i + 1 < process.argv.length) {\n            runTimer(process.argv[i + 1]);\n            return;\n        }\n        else {\n            let args = arg.split('=');\n            if (args[0] === argName) {\n                runTimer(args[1]);\n            }\n        }\n    }\n}\nsetupExitTimer();\nconst watchDog = {\n    initialize: (params) => {\n        const processId = params.processId;\n        if (Is.number(processId) && exitTimer === undefined) {\n            // We received a parent process id. Set up a timer to periodically check\n            // if the parent is still alive.\n            setInterval(() => {\n                try {\n                    process.kill(processId, 0);\n                }\n                catch (ex) {\n                    // Parent process doesn't exist anymore. Exit the server.\n                    process.exit(_shutdownReceived ? 0 : 1);\n                }\n            }, 3000);\n        }\n    },\n    get shutdownReceived() {\n        return _shutdownReceived;\n    },\n    set shutdownReceived(value) {\n        _shutdownReceived = value;\n    },\n    exit: (code) => {\n        endProtocolConnection();\n        process.exit(code);\n    }\n};\nfunction createConnection(arg1, arg2, arg3, arg4) {\n    let factories;\n    let input;\n    let output;\n    let options;\n    if (arg1 !== void 0 && arg1.__brand === 'features') {\n        factories = arg1;\n        arg1 = arg2;\n        arg2 = arg3;\n        arg3 = arg4;\n    }\n    if (node_1.ConnectionStrategy.is(arg1) || node_1.ConnectionOptions.is(arg1)) {\n        options = arg1;\n    }\n    else {\n        input = arg1;\n        output = arg2;\n        options = arg3;\n    }\n    return _createConnection(input, output, options, factories);\n}\nexports.createConnection = createConnection;\nfunction _createConnection(input, output, options, factories) {\n    if (!input && !output && process.argv.length > 2) {\n        let port = void 0;\n        let pipeName = void 0;\n        let argv = process.argv.slice(2);\n        for (let i = 0; i < argv.length; i++) {\n            let arg = argv[i];\n            if (arg === '--node-ipc') {\n                input = new node_1.IPCMessageReader(process);\n                output = new node_1.IPCMessageWriter(process);\n                break;\n            }\n            else if (arg === '--stdio') {\n                input = process.stdin;\n                output = process.stdout;\n                break;\n            }\n            else if (arg === '--socket') {\n                port = parseInt(argv[i + 1]);\n                break;\n            }\n            else if (arg === '--pipe') {\n                pipeName = argv[i + 1];\n                break;\n            }\n            else {\n                var args = arg.split('=');\n                if (args[0] === '--socket') {\n                    port = parseInt(args[1]);\n                    break;\n                }\n                else if (args[0] === '--pipe') {\n                    pipeName = args[1];\n                    break;\n                }\n            }\n        }\n        if (port) {\n            let transport = node_1.createServerSocketTransport(port);\n            input = transport[0];\n            output = transport[1];\n        }\n        else if (pipeName) {\n            let transport = node_1.createServerPipeTransport(pipeName);\n            input = transport[0];\n            output = transport[1];\n        }\n    }\n    var commandLineMessage = 'Use arguments of createConnection or set command line parameters: \\'--node-ipc\\', \\'--stdio\\' or \\'--socket={number}\\'';\n    if (!input) {\n        throw new Error('Connection input stream is not set. ' + commandLineMessage);\n    }\n    if (!output) {\n        throw new Error('Connection output stream is not set. ' + commandLineMessage);\n    }\n    // Backwards compatibility\n    if (Is.func(input.read) && Is.func(input.on)) {\n        let inputStream = input;\n        inputStream.on('end', () => {\n            endProtocolConnection();\n            process.exit(_shutdownReceived ? 0 : 1);\n        });\n        inputStream.on('close', () => {\n            endProtocolConnection();\n            process.exit(_shutdownReceived ? 0 : 1);\n        });\n    }\n    const connectionFactory = (logger) => {\n        const result = node_1.createProtocolConnection(input, output, logger, options);\n        return result;\n    };\n    return server_1.createConnection(connectionFactory, watchDog, factories);\n}\n//# sourceMappingURL=main.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.thenable = exports.typedArray = exports.stringArray = exports.array = exports.func = exports.error = exports.number = exports.string = exports.boolean = void 0;\nfunction boolean(value) {\n    return value === true || value === false;\n}\nexports.boolean = boolean;\nfunction string(value) {\n    return typeof value === 'string' || value instanceof String;\n}\nexports.string = string;\nfunction number(value) {\n    return typeof value === 'number' || value instanceof Number;\n}\nexports.number = number;\nfunction error(value) {\n    return value instanceof Error;\n}\nexports.error = error;\nfunction func(value) {\n    return typeof value === 'function';\n}\nexports.func = func;\nfunction array(value) {\n    return Array.isArray(value);\n}\nexports.array = array;\nfunction stringArray(value) {\n    return array(value) && value.every(elem => string(elem));\n}\nexports.stringArray = stringArray;\nfunction typedArray(value, check) {\n    return Array.isArray(value) && value.every(check);\n}\nexports.typedArray = typedArray;\nfunction thenable(value) {\n    return value && func(value.then);\n}\nexports.thenable = thenable;\n//# sourceMappingURL=is.js.map","/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\n//* A rule invocation record for parsing.\n//\n//  Contains all of the information about the current rule not stored in the\n//  RuleContext. It handles parse tree children list, Any ATN state\n//  tracing, and the default values available for rule indications:\n//  start, stop, rule index, current alt number, current\n//  ATN state.\n//\n//  Subclasses made for each rule and grammar track the parameters,\n//  return values, locals, and labels specific to that rule. These\n//  are the objects that are returned from rules.\n//\n//  Note text is not an actual field of a rule return value; it is computed\n//  from start and stop using the input stream's toString() method.  I\n//  could add a ctor to this so that we can pass in and store the input\n//  stream, but I'm not sure we want to do that.  It would seem to be undefined\n//  to get the .text property anyway if the rule matches tokens from multiple\n//  input streams.\n//\n//  I do not use getters for fields of objects that are used simply to\n//  group values such as this aggregate.  The getters/setters are there to\n//  satisfy the superclass interface.\n\nvar RuleContext = require('./RuleContext').RuleContext;\nvar Tree = require('./tree/Tree');\nvar INVALID_INTERVAL = Tree.INVALID_INTERVAL;\nvar TerminalNode = Tree.TerminalNode;\nvar TerminalNodeImpl = Tree.TerminalNodeImpl;\nvar ErrorNodeImpl = Tree.ErrorNodeImpl;\nvar Interval = require(\"./IntervalSet\").Interval;\n\nfunction ParserRuleContext(parent, invokingStateNumber) {\n\tparent = parent || null;\n\tinvokingStateNumber = invokingStateNumber || null;\n\tRuleContext.call(this, parent, invokingStateNumber);\n\tthis.ruleIndex = -1;\n    // * If we are debugging or building a parse tree for a visitor,\n    // we need to track all of the tokens and rule invocations associated\n    // with this rule's context. This is empty for parsing w/o tree constr.\n    // operation because we don't the need to track the details about\n    // how we parse this rule.\n    // /\n    this.children = null;\n    this.start = null;\n    this.stop = null;\n    // The exception that forced this rule to return. If the rule successfully\n    // completed, this is {@code null}.\n    this.exception = null;\n}\n\nParserRuleContext.prototype = Object.create(RuleContext.prototype);\nParserRuleContext.prototype.constructor = ParserRuleContext;\n\n// * COPY a ctx (I'm deliberately not using copy constructor)///\nParserRuleContext.prototype.copyFrom = function(ctx) {\n    // from RuleContext\n    this.parentCtx = ctx.parentCtx;\n    this.invokingState = ctx.invokingState;\n    this.children = null;\n    this.start = ctx.start;\n    this.stop = ctx.stop;\n    // copy any error nodes to alt label node\n    if(ctx.children) {\n        this.children = [];\n        // reset parent pointer for any error nodes\n    \tctx.children.map(function(child) {\n    \t\tif (child instanceof ErrorNodeImpl) {\n                this.children.push(child);\n                child.parentCtx = this;\n            }\n\t\t}, this);\n\t}\n};\n\n// Double dispatch methods for listeners\nParserRuleContext.prototype.enterRule = function(listener) {\n};\n\nParserRuleContext.prototype.exitRule = function(listener) {\n};\n\n// * Does not set parent link; other add methods do that///\nParserRuleContext.prototype.addChild = function(child) {\n    if (this.children === null) {\n        this.children = [];\n    }\n    this.children.push(child);\n    return child;\n};\n\n// * Used by enterOuterAlt to toss out a RuleContext previously added as\n// we entered a rule. If we have // label, we will need to remove\n// generic ruleContext object.\n// /\nParserRuleContext.prototype.removeLastChild = function() {\n    if (this.children !== null) {\n        this.children.pop();\n    }\n};\n\nParserRuleContext.prototype.addTokenNode = function(token) {\n    var node = new TerminalNodeImpl(token);\n    this.addChild(node);\n    node.parentCtx = this;\n    return node;\n};\n\nParserRuleContext.prototype.addErrorNode = function(badToken) {\n    var node = new ErrorNodeImpl(badToken);\n    this.addChild(node);\n    node.parentCtx = this;\n    return node;\n};\n\nParserRuleContext.prototype.getChild = function(i, type) {\n\ttype = type || null;\n\tif (this.children === null || i < 0 || i >= this.children.length) {\n\t\treturn null;\n\t}\n\tif (type === null) {\n\t\treturn this.children[i];\n\t} else {\n\t\tfor(var j=0; j<this.children.length; j++) {\n\t\t\tvar child = this.children[j];\n\t\t\tif(child instanceof type) {\n\t\t\t\tif(i===0) {\n\t\t\t\t\treturn child;\n\t\t\t\t} else {\n\t\t\t\t\ti -= 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n    }\n};\n\n\nParserRuleContext.prototype.getToken = function(ttype, i) {\n\tif (this.children === null || i < 0 || i >= this.children.length) {\n\t\treturn null;\n\t}\n\tfor(var j=0; j<this.children.length; j++) {\n\t\tvar child = this.children[j];\n\t\tif (child instanceof TerminalNode) {\n\t\t\tif (child.symbol.type === ttype) {\n\t\t\t\tif(i===0) {\n\t\t\t\t\treturn child;\n\t\t\t\t} else {\n\t\t\t\t\ti -= 1;\n\t\t\t\t}\n\t\t\t}\n        }\n\t}\n    return null;\n};\n\nParserRuleContext.prototype.getTokens = function(ttype ) {\n    if (this.children=== null) {\n        return [];\n    } else {\n\t\tvar tokens = [];\n\t\tfor(var j=0; j<this.children.length; j++) {\n\t\t\tvar child = this.children[j];\n\t\t\tif (child instanceof TerminalNode) {\n\t\t\t\tif (child.symbol.type === ttype) {\n\t\t\t\t\ttokens.push(child);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn tokens;\n    }\n};\n\nParserRuleContext.prototype.getTypedRuleContext = function(ctxType, i) {\n    return this.getChild(i, ctxType);\n};\n\nParserRuleContext.prototype.getTypedRuleContexts = function(ctxType) {\n    if (this.children=== null) {\n        return [];\n    } else {\n\t\tvar contexts = [];\n\t\tfor(var j=0; j<this.children.length; j++) {\n\t\t\tvar child = this.children[j];\n\t\t\tif (child instanceof ctxType) {\n\t\t\t\tcontexts.push(child);\n\t\t\t}\n\t\t}\n\t\treturn contexts;\n\t}\n};\n\nParserRuleContext.prototype.getChildCount = function() {\n\tif (this.children=== null) {\n\t\treturn 0;\n\t} else {\n\t\treturn this.children.length;\n\t}\n};\n\nParserRuleContext.prototype.getSourceInterval = function() {\n    if( this.start === null || this.stop === null) {\n        return INVALID_INTERVAL;\n    } else {\n        return new Interval(this.start.tokenIndex, this.stop.tokenIndex);\n    }\n};\n\nRuleContext.EMPTY = new ParserRuleContext();\n\nfunction InterpreterRuleContext(parent, invokingStateNumber, ruleIndex) {\n\tParserRuleContext.call(parent, invokingStateNumber);\n    this.ruleIndex = ruleIndex;\n    return this;\n}\n\nInterpreterRuleContext.prototype = Object.create(ParserRuleContext.prototype);\nInterpreterRuleContext.prototype.constructor = InterpreterRuleContext;\n\nexports.ParserRuleContext = ParserRuleContext;","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n//\n\nvar Token = require('./Token').Token;\nrequire('./polyfills/codepointat');\nrequire('./polyfills/fromcodepoint');\n\n// Vacuum all input from a string and then treat it like a buffer.\n\nfunction _loadString(stream) {\n\tstream._index = 0;\n\tstream.data = [];\n\tif (stream.decodeToUnicodeCodePoints) {\n\t\tfor (var i = 0; i < stream.strdata.length; ) {\n\t\t\tvar codePoint = stream.strdata.codePointAt(i);\n\t\t\tstream.data.push(codePoint);\n\t\t\ti += codePoint <= 0xFFFF ? 1 : 2;\n\t\t}\n\t} else {\n\t\tfor (var i = 0; i < stream.strdata.length; i++) {\n\t\t\tvar codeUnit = stream.strdata.charCodeAt(i);\n\t\t\tstream.data.push(codeUnit);\n\t\t}\n\t}\n\tstream._size = stream.data.length;\n}\n\n// If decodeToUnicodeCodePoints is true, the input is treated\n// as a series of Unicode code points.\n//\n// Otherwise, the input is treated as a series of 16-bit UTF-16 code\n// units.\nfunction InputStream(data, decodeToUnicodeCodePoints) {\n\tthis.name = \"<empty>\";\n\tthis.strdata = data;\n\tthis.decodeToUnicodeCodePoints = decodeToUnicodeCodePoints || false;\n\t_loadString(this);\n\treturn this;\n}\n\nObject.defineProperty(InputStream.prototype, \"index\", {\n\tget : function() {\n\t\treturn this._index;\n\t}\n});\n\nObject.defineProperty(InputStream.prototype, \"size\", {\n\tget : function() {\n\t\treturn this._size;\n\t}\n});\n\n// Reset the stream so that it's in the same state it was\n// when the object was created *except* the data array is not\n// touched.\n//\nInputStream.prototype.reset = function() {\n\tthis._index = 0;\n};\n\nInputStream.prototype.consume = function() {\n\tif (this._index >= this._size) {\n\t\t// assert this.LA(1) == Token.EOF\n\t\tthrow (\"cannot consume EOF\");\n\t}\n\tthis._index += 1;\n};\n\nInputStream.prototype.LA = function(offset) {\n\tif (offset === 0) {\n\t\treturn 0; // undefined\n\t}\n\tif (offset < 0) {\n\t\toffset += 1; // e.g., translate LA(-1) to use offset=0\n\t}\n\tvar pos = this._index + offset - 1;\n\tif (pos < 0 || pos >= this._size) { // invalid\n\t\treturn Token.EOF;\n\t}\n\treturn this.data[pos];\n};\n\nInputStream.prototype.LT = function(offset) {\n\treturn this.LA(offset);\n};\n\n// mark/release do nothing; we have entire buffer\nInputStream.prototype.mark = function() {\n\treturn -1;\n};\n\nInputStream.prototype.release = function(marker) {\n};\n\n// consume() ahead until p==_index; can't just set p=_index as we must\n// update line and column. If we seek backwards, just set p\n//\nInputStream.prototype.seek = function(_index) {\n\tif (_index <= this._index) {\n\t\tthis._index = _index; // just jump; don't update stream state (line,\n\t\t\t\t\t\t\t\t// ...)\n\t\treturn;\n\t}\n\t// seek forward\n\tthis._index = Math.min(_index, this._size);\n};\n\nInputStream.prototype.getText = function(start, stop) {\n\tif (stop >= this._size) {\n\t\tstop = this._size - 1;\n\t}\n\tif (start >= this._size) {\n\t\treturn \"\";\n\t} else {\n\t\tif (this.decodeToUnicodeCodePoints) {\n\t\t\tvar result = \"\";\n\t\t\tfor (var i = start; i <= stop; i++) {\n\t\t\t\tresult += String.fromCodePoint(this.data[i]);\n\t\t\t}\n\t\t\treturn result;\n\t\t} else {\n\t\t\treturn this.strdata.slice(start, stop + 1);\n\t\t}\n\t}\n};\n\nInputStream.prototype.toString = function() {\n\treturn this.strdata;\n};\n\nexports.InputStream = InputStream;\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createConnection = exports.combineFeatures = exports.combineLanguagesFeatures = exports.combineWorkspaceFeatures = exports.combineWindowFeatures = exports.combineClientFeatures = exports.combineTracerFeatures = exports.combineTelemetryFeatures = exports.combineConsoleFeatures = exports._LanguagesImpl = exports.BulkUnregistration = exports.BulkRegistration = exports.ErrorMessageTracker = exports.TextDocuments = void 0;\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst Is = require(\"./utils/is\");\nconst UUID = require(\"./utils/uuid\");\nconst progress_1 = require(\"./progress\");\nconst configuration_1 = require(\"./configuration\");\nconst workspaceFolders_1 = require(\"./workspaceFolders\");\nconst callHierarchy_1 = require(\"./callHierarchy\");\nconst semanticTokens_1 = require(\"./semanticTokens\");\nconst showDocument_1 = require(\"./showDocument\");\nconst fileOperations_1 = require(\"./fileOperations\");\nconst linkedEditingRange_1 = require(\"./linkedEditingRange\");\nconst moniker_1 = require(\"./moniker\");\nfunction null2Undefined(value) {\n    if (value === null) {\n        return undefined;\n    }\n    return value;\n}\n/**\n * A manager for simple text documents\n */\nclass TextDocuments {\n    /**\n     * Create a new text document manager.\n     */\n    constructor(configuration) {\n        this._documents = Object.create(null);\n        this._configuration = configuration;\n        this._onDidChangeContent = new vscode_languageserver_protocol_1.Emitter();\n        this._onDidOpen = new vscode_languageserver_protocol_1.Emitter();\n        this._onDidClose = new vscode_languageserver_protocol_1.Emitter();\n        this._onDidSave = new vscode_languageserver_protocol_1.Emitter();\n        this._onWillSave = new vscode_languageserver_protocol_1.Emitter();\n    }\n    /**\n     * An event that fires when a text document managed by this manager\n     * has been opened or the content changes.\n     */\n    get onDidChangeContent() {\n        return this._onDidChangeContent.event;\n    }\n    /**\n     * An event that fires when a text document managed by this manager\n     * has been opened.\n     */\n    get onDidOpen() {\n        return this._onDidOpen.event;\n    }\n    /**\n     * An event that fires when a text document managed by this manager\n     * will be saved.\n     */\n    get onWillSave() {\n        return this._onWillSave.event;\n    }\n    /**\n     * Sets a handler that will be called if a participant wants to provide\n     * edits during a text document save.\n     */\n    onWillSaveWaitUntil(handler) {\n        this._willSaveWaitUntil = handler;\n    }\n    /**\n     * An event that fires when a text document managed by this manager\n     * has been saved.\n     */\n    get onDidSave() {\n        return this._onDidSave.event;\n    }\n    /**\n     * An event that fires when a text document managed by this manager\n     * has been closed.\n     */\n    get onDidClose() {\n        return this._onDidClose.event;\n    }\n    /**\n     * Returns the document for the given URI. Returns undefined if\n     * the document is not managed by this instance.\n     *\n     * @param uri The text document's URI to retrieve.\n     * @return the text document or `undefined`.\n     */\n    get(uri) {\n        return this._documents[uri];\n    }\n    /**\n     * Returns all text documents managed by this instance.\n     *\n     * @return all text documents.\n     */\n    all() {\n        return Object.keys(this._documents).map(key => this._documents[key]);\n    }\n    /**\n     * Returns the URIs of all text documents managed by this instance.\n     *\n     * @return the URI's of all text documents.\n     */\n    keys() {\n        return Object.keys(this._documents);\n    }\n    /**\n     * Listens for `low level` notification on the given connection to\n     * update the text documents managed by this instance.\n     *\n     * Please note that the connection only provides handlers not an event model. Therefore\n     * listening on a connection will overwrite the following handlers on a connection:\n     * `onDidOpenTextDocument`, `onDidChangeTextDocument`, `onDidCloseTextDocument`,\n     * `onWillSaveTextDocument`, `onWillSaveTextDocumentWaitUntil` and `onDidSaveTextDocument`.\n     *\n     * Use the corresponding events on the TextDocuments instance instead.\n     *\n     * @param connection The connection to listen on.\n     */\n    listen(connection) {\n        connection.__textDocumentSync = vscode_languageserver_protocol_1.TextDocumentSyncKind.Full;\n        connection.onDidOpenTextDocument((event) => {\n            let td = event.textDocument;\n            let document = this._configuration.create(td.uri, td.languageId, td.version, td.text);\n            this._documents[td.uri] = document;\n            let toFire = Object.freeze({ document });\n            this._onDidOpen.fire(toFire);\n            this._onDidChangeContent.fire(toFire);\n        });\n        connection.onDidChangeTextDocument((event) => {\n            let td = event.textDocument;\n            let changes = event.contentChanges;\n            if (changes.length === 0) {\n                return;\n            }\n            let document = this._documents[td.uri];\n            const { version } = td;\n            if (version === null || version === undefined) {\n                throw new Error(`Received document change event for ${td.uri} without valid version identifier`);\n            }\n            document = this._configuration.update(document, changes, version);\n            this._documents[td.uri] = document;\n            this._onDidChangeContent.fire(Object.freeze({ document }));\n        });\n        connection.onDidCloseTextDocument((event) => {\n            let document = this._documents[event.textDocument.uri];\n            if (document) {\n                delete this._documents[event.textDocument.uri];\n                this._onDidClose.fire(Object.freeze({ document }));\n            }\n        });\n        connection.onWillSaveTextDocument((event) => {\n            let document = this._documents[event.textDocument.uri];\n            if (document) {\n                this._onWillSave.fire(Object.freeze({ document, reason: event.reason }));\n            }\n        });\n        connection.onWillSaveTextDocumentWaitUntil((event, token) => {\n            let document = this._documents[event.textDocument.uri];\n            if (document && this._willSaveWaitUntil) {\n                return this._willSaveWaitUntil(Object.freeze({ document, reason: event.reason }), token);\n            }\n            else {\n                return [];\n            }\n        });\n        connection.onDidSaveTextDocument((event) => {\n            let document = this._documents[event.textDocument.uri];\n            if (document) {\n                this._onDidSave.fire(Object.freeze({ document }));\n            }\n        });\n    }\n}\nexports.TextDocuments = TextDocuments;\n/**\n * Helps tracking error message. Equal occurrences of the same\n * message are only stored once. This class is for example\n * useful if text documents are validated in a loop and equal\n * error message should be folded into one.\n */\nclass ErrorMessageTracker {\n    constructor() {\n        this._messages = Object.create(null);\n    }\n    /**\n     * Add a message to the tracker.\n     *\n     * @param message The message to add.\n     */\n    add(message) {\n        let count = this._messages[message];\n        if (!count) {\n            count = 0;\n        }\n        count++;\n        this._messages[message] = count;\n    }\n    /**\n     * Send all tracked messages to the connection's window.\n     *\n     * @param connection The connection established between client and server.\n     */\n    sendErrors(connection) {\n        Object.keys(this._messages).forEach(message => {\n            connection.window.showErrorMessage(message);\n        });\n    }\n}\nexports.ErrorMessageTracker = ErrorMessageTracker;\nclass RemoteConsoleImpl {\n    constructor() {\n    }\n    rawAttach(connection) {\n        this._rawConnection = connection;\n    }\n    attach(connection) {\n        this._connection = connection;\n    }\n    get connection() {\n        if (!this._connection) {\n            throw new Error('Remote is not attached to a connection yet.');\n        }\n        return this._connection;\n    }\n    fillServerCapabilities(_capabilities) {\n    }\n    initialize(_capabilities) {\n    }\n    error(message) {\n        this.send(vscode_languageserver_protocol_1.MessageType.Error, message);\n    }\n    warn(message) {\n        this.send(vscode_languageserver_protocol_1.MessageType.Warning, message);\n    }\n    info(message) {\n        this.send(vscode_languageserver_protocol_1.MessageType.Info, message);\n    }\n    log(message) {\n        this.send(vscode_languageserver_protocol_1.MessageType.Log, message);\n    }\n    send(type, message) {\n        if (this._rawConnection) {\n            this._rawConnection.sendNotification(vscode_languageserver_protocol_1.LogMessageNotification.type, { type, message });\n        }\n    }\n}\nclass _RemoteWindowImpl {\n    constructor() {\n    }\n    attach(connection) {\n        this._connection = connection;\n    }\n    get connection() {\n        if (!this._connection) {\n            throw new Error('Remote is not attached to a connection yet.');\n        }\n        return this._connection;\n    }\n    initialize(_capabilities) {\n    }\n    fillServerCapabilities(_capabilities) {\n    }\n    showErrorMessage(message, ...actions) {\n        let params = { type: vscode_languageserver_protocol_1.MessageType.Error, message, actions };\n        return this.connection.sendRequest(vscode_languageserver_protocol_1.ShowMessageRequest.type, params).then(null2Undefined);\n    }\n    showWarningMessage(message, ...actions) {\n        let params = { type: vscode_languageserver_protocol_1.MessageType.Warning, message, actions };\n        return this.connection.sendRequest(vscode_languageserver_protocol_1.ShowMessageRequest.type, params).then(null2Undefined);\n    }\n    showInformationMessage(message, ...actions) {\n        let params = { type: vscode_languageserver_protocol_1.MessageType.Info, message, actions };\n        return this.connection.sendRequest(vscode_languageserver_protocol_1.ShowMessageRequest.type, params).then(null2Undefined);\n    }\n}\nconst RemoteWindowImpl = showDocument_1.ShowDocumentFeature(progress_1.ProgressFeature(_RemoteWindowImpl));\nvar BulkRegistration;\n(function (BulkRegistration) {\n    /**\n     * Creates a new bulk registration.\n     * @return an empty bulk registration.\n     */\n    function create() {\n        return new BulkRegistrationImpl();\n    }\n    BulkRegistration.create = create;\n})(BulkRegistration = exports.BulkRegistration || (exports.BulkRegistration = {}));\nclass BulkRegistrationImpl {\n    constructor() {\n        this._registrations = [];\n        this._registered = new Set();\n    }\n    add(type, registerOptions) {\n        const method = Is.string(type) ? type : type.method;\n        if (this._registered.has(method)) {\n            throw new Error(`${method} is already added to this registration`);\n        }\n        const id = UUID.generateUuid();\n        this._registrations.push({\n            id: id,\n            method: method,\n            registerOptions: registerOptions || {}\n        });\n        this._registered.add(method);\n    }\n    asRegistrationParams() {\n        return {\n            registrations: this._registrations\n        };\n    }\n}\nvar BulkUnregistration;\n(function (BulkUnregistration) {\n    function create() {\n        return new BulkUnregistrationImpl(undefined, []);\n    }\n    BulkUnregistration.create = create;\n})(BulkUnregistration = exports.BulkUnregistration || (exports.BulkUnregistration = {}));\nclass BulkUnregistrationImpl {\n    constructor(_connection, unregistrations) {\n        this._connection = _connection;\n        this._unregistrations = new Map();\n        unregistrations.forEach(unregistration => {\n            this._unregistrations.set(unregistration.method, unregistration);\n        });\n    }\n    get isAttached() {\n        return !!this._connection;\n    }\n    attach(connection) {\n        this._connection = connection;\n    }\n    add(unregistration) {\n        this._unregistrations.set(unregistration.method, unregistration);\n    }\n    dispose() {\n        let unregistrations = [];\n        for (let unregistration of this._unregistrations.values()) {\n            unregistrations.push(unregistration);\n        }\n        let params = {\n            unregisterations: unregistrations\n        };\n        this._connection.sendRequest(vscode_languageserver_protocol_1.UnregistrationRequest.type, params).then(undefined, (_error) => {\n            this._connection.console.info(`Bulk unregistration failed.`);\n        });\n    }\n    disposeSingle(arg) {\n        const method = Is.string(arg) ? arg : arg.method;\n        const unregistration = this._unregistrations.get(method);\n        if (!unregistration) {\n            return false;\n        }\n        let params = {\n            unregisterations: [unregistration]\n        };\n        this._connection.sendRequest(vscode_languageserver_protocol_1.UnregistrationRequest.type, params).then(() => {\n            this._unregistrations.delete(method);\n        }, (_error) => {\n            this._connection.console.info(`Un-registering request handler for ${unregistration.id} failed.`);\n        });\n        return true;\n    }\n}\nclass RemoteClientImpl {\n    attach(connection) {\n        this._connection = connection;\n    }\n    get connection() {\n        if (!this._connection) {\n            throw new Error('Remote is not attached to a connection yet.');\n        }\n        return this._connection;\n    }\n    initialize(_capabilities) {\n    }\n    fillServerCapabilities(_capabilities) {\n    }\n    register(typeOrRegistrations, registerOptionsOrType, registerOptions) {\n        if (typeOrRegistrations instanceof BulkRegistrationImpl) {\n            return this.registerMany(typeOrRegistrations);\n        }\n        else if (typeOrRegistrations instanceof BulkUnregistrationImpl) {\n            return this.registerSingle1(typeOrRegistrations, registerOptionsOrType, registerOptions);\n        }\n        else {\n            return this.registerSingle2(typeOrRegistrations, registerOptionsOrType);\n        }\n    }\n    registerSingle1(unregistration, type, registerOptions) {\n        const method = Is.string(type) ? type : type.method;\n        const id = UUID.generateUuid();\n        let params = {\n            registrations: [{ id, method, registerOptions: registerOptions || {} }]\n        };\n        if (!unregistration.isAttached) {\n            unregistration.attach(this.connection);\n        }\n        return this.connection.sendRequest(vscode_languageserver_protocol_1.RegistrationRequest.type, params).then((_result) => {\n            unregistration.add({ id: id, method: method });\n            return unregistration;\n        }, (_error) => {\n            this.connection.console.info(`Registering request handler for ${method} failed.`);\n            return Promise.reject(_error);\n        });\n    }\n    registerSingle2(type, registerOptions) {\n        const method = Is.string(type) ? type : type.method;\n        const id = UUID.generateUuid();\n        let params = {\n            registrations: [{ id, method, registerOptions: registerOptions || {} }]\n        };\n        return this.connection.sendRequest(vscode_languageserver_protocol_1.RegistrationRequest.type, params).then((_result) => {\n            return vscode_languageserver_protocol_1.Disposable.create(() => {\n                this.unregisterSingle(id, method);\n            });\n        }, (_error) => {\n            this.connection.console.info(`Registering request handler for ${method} failed.`);\n            return Promise.reject(_error);\n        });\n    }\n    unregisterSingle(id, method) {\n        let params = {\n            unregisterations: [{ id, method }]\n        };\n        return this.connection.sendRequest(vscode_languageserver_protocol_1.UnregistrationRequest.type, params).then(undefined, (_error) => {\n            this.connection.console.info(`Un-registering request handler for ${id} failed.`);\n        });\n    }\n    registerMany(registrations) {\n        let params = registrations.asRegistrationParams();\n        return this.connection.sendRequest(vscode_languageserver_protocol_1.RegistrationRequest.type, params).then(() => {\n            return new BulkUnregistrationImpl(this._connection, params.registrations.map(registration => { return { id: registration.id, method: registration.method }; }));\n        }, (_error) => {\n            this.connection.console.info(`Bulk registration failed.`);\n            return Promise.reject(_error);\n        });\n    }\n}\nclass _RemoteWorkspaceImpl {\n    constructor() {\n    }\n    attach(connection) {\n        this._connection = connection;\n    }\n    get connection() {\n        if (!this._connection) {\n            throw new Error('Remote is not attached to a connection yet.');\n        }\n        return this._connection;\n    }\n    initialize(_capabilities) {\n    }\n    fillServerCapabilities(_capabilities) {\n    }\n    applyEdit(paramOrEdit) {\n        function isApplyWorkspaceEditParams(value) {\n            return value && !!value.edit;\n        }\n        let params = isApplyWorkspaceEditParams(paramOrEdit) ? paramOrEdit : { edit: paramOrEdit };\n        return this.connection.sendRequest(vscode_languageserver_protocol_1.ApplyWorkspaceEditRequest.type, params);\n    }\n}\nconst RemoteWorkspaceImpl = fileOperations_1.FileOperationsFeature(workspaceFolders_1.WorkspaceFoldersFeature(configuration_1.ConfigurationFeature(_RemoteWorkspaceImpl)));\nclass TracerImpl {\n    constructor() {\n        this._trace = vscode_languageserver_protocol_1.Trace.Off;\n    }\n    attach(connection) {\n        this._connection = connection;\n    }\n    get connection() {\n        if (!this._connection) {\n            throw new Error('Remote is not attached to a connection yet.');\n        }\n        return this._connection;\n    }\n    initialize(_capabilities) {\n    }\n    fillServerCapabilities(_capabilities) {\n    }\n    set trace(value) {\n        this._trace = value;\n    }\n    log(message, verbose) {\n        if (this._trace === vscode_languageserver_protocol_1.Trace.Off) {\n            return;\n        }\n        this.connection.sendNotification(vscode_languageserver_protocol_1.LogTraceNotification.type, {\n            message: message,\n            verbose: this._trace === vscode_languageserver_protocol_1.Trace.Verbose ? verbose : undefined\n        });\n    }\n}\nclass TelemetryImpl {\n    constructor() {\n    }\n    attach(connection) {\n        this._connection = connection;\n    }\n    get connection() {\n        if (!this._connection) {\n            throw new Error('Remote is not attached to a connection yet.');\n        }\n        return this._connection;\n    }\n    initialize(_capabilities) {\n    }\n    fillServerCapabilities(_capabilities) {\n    }\n    logEvent(data) {\n        this.connection.sendNotification(vscode_languageserver_protocol_1.TelemetryEventNotification.type, data);\n    }\n}\nclass _LanguagesImpl {\n    constructor() {\n    }\n    attach(connection) {\n        this._connection = connection;\n    }\n    get connection() {\n        if (!this._connection) {\n            throw new Error('Remote is not attached to a connection yet.');\n        }\n        return this._connection;\n    }\n    initialize(_capabilities) {\n    }\n    fillServerCapabilities(_capabilities) {\n    }\n    attachWorkDoneProgress(params) {\n        return progress_1.attachWorkDone(this.connection, params);\n    }\n    attachPartialResultProgress(_type, params) {\n        return progress_1.attachPartialResult(this.connection, params);\n    }\n}\nexports._LanguagesImpl = _LanguagesImpl;\nconst LanguagesImpl = moniker_1.MonikerFeature(linkedEditingRange_1.LinkedEditingRangeFeature(semanticTokens_1.SemanticTokensFeature(callHierarchy_1.CallHierarchyFeature(_LanguagesImpl))));\nfunction combineConsoleFeatures(one, two) {\n    return function (Base) {\n        return two(one(Base));\n    };\n}\nexports.combineConsoleFeatures = combineConsoleFeatures;\nfunction combineTelemetryFeatures(one, two) {\n    return function (Base) {\n        return two(one(Base));\n    };\n}\nexports.combineTelemetryFeatures = combineTelemetryFeatures;\nfunction combineTracerFeatures(one, two) {\n    return function (Base) {\n        return two(one(Base));\n    };\n}\nexports.combineTracerFeatures = combineTracerFeatures;\nfunction combineClientFeatures(one, two) {\n    return function (Base) {\n        return two(one(Base));\n    };\n}\nexports.combineClientFeatures = combineClientFeatures;\nfunction combineWindowFeatures(one, two) {\n    return function (Base) {\n        return two(one(Base));\n    };\n}\nexports.combineWindowFeatures = combineWindowFeatures;\nfunction combineWorkspaceFeatures(one, two) {\n    return function (Base) {\n        return two(one(Base));\n    };\n}\nexports.combineWorkspaceFeatures = combineWorkspaceFeatures;\nfunction combineLanguagesFeatures(one, two) {\n    return function (Base) {\n        return two(one(Base));\n    };\n}\nexports.combineLanguagesFeatures = combineLanguagesFeatures;\nfunction combineFeatures(one, two) {\n    function combine(one, two, func) {\n        if (one && two) {\n            return func(one, two);\n        }\n        else if (one) {\n            return one;\n        }\n        else {\n            return two;\n        }\n    }\n    let result = {\n        __brand: 'features',\n        console: combine(one.console, two.console, combineConsoleFeatures),\n        tracer: combine(one.tracer, two.tracer, combineTracerFeatures),\n        telemetry: combine(one.telemetry, two.telemetry, combineTelemetryFeatures),\n        client: combine(one.client, two.client, combineClientFeatures),\n        window: combine(one.window, two.window, combineWindowFeatures),\n        workspace: combine(one.workspace, two.workspace, combineWorkspaceFeatures)\n    };\n    return result;\n}\nexports.combineFeatures = combineFeatures;\nfunction createConnection(connectionFactory, watchDog, factories) {\n    const logger = (factories && factories.console ? new (factories.console(RemoteConsoleImpl))() : new RemoteConsoleImpl());\n    const connection = connectionFactory(logger);\n    logger.rawAttach(connection);\n    const tracer = (factories && factories.tracer ? new (factories.tracer(TracerImpl))() : new TracerImpl());\n    const telemetry = (factories && factories.telemetry ? new (factories.telemetry(TelemetryImpl))() : new TelemetryImpl());\n    const client = (factories && factories.client ? new (factories.client(RemoteClientImpl))() : new RemoteClientImpl());\n    const remoteWindow = (factories && factories.window ? new (factories.window(RemoteWindowImpl))() : new RemoteWindowImpl());\n    const workspace = (factories && factories.workspace ? new (factories.workspace(RemoteWorkspaceImpl))() : new RemoteWorkspaceImpl());\n    const languages = (factories && factories.languages ? new (factories.languages(LanguagesImpl))() : new LanguagesImpl());\n    const allRemotes = [logger, tracer, telemetry, client, remoteWindow, workspace, languages];\n    function asPromise(value) {\n        if (value instanceof Promise) {\n            return value;\n        }\n        else if (Is.thenable(value)) {\n            return new Promise((resolve, reject) => {\n                value.then((resolved) => resolve(resolved), (error) => reject(error));\n            });\n        }\n        else {\n            return Promise.resolve(value);\n        }\n    }\n    let shutdownHandler = undefined;\n    let initializeHandler = undefined;\n    let exitHandler = undefined;\n    let protocolConnection = {\n        listen: () => connection.listen(),\n        sendRequest: (type, ...params) => connection.sendRequest(Is.string(type) ? type : type.method, ...params),\n        onRequest: (type, handler) => connection.onRequest(type, handler),\n        sendNotification: (type, param) => {\n            const method = Is.string(type) ? type : type.method;\n            if (arguments.length === 1) {\n                connection.sendNotification(method);\n            }\n            else {\n                connection.sendNotification(method, param);\n            }\n        },\n        onNotification: (type, handler) => connection.onNotification(type, handler),\n        onProgress: connection.onProgress,\n        sendProgress: connection.sendProgress,\n        onInitialize: (handler) => initializeHandler = handler,\n        onInitialized: (handler) => connection.onNotification(vscode_languageserver_protocol_1.InitializedNotification.type, handler),\n        onShutdown: (handler) => shutdownHandler = handler,\n        onExit: (handler) => exitHandler = handler,\n        get console() { return logger; },\n        get telemetry() { return telemetry; },\n        get tracer() { return tracer; },\n        get client() { return client; },\n        get window() { return remoteWindow; },\n        get workspace() { return workspace; },\n        get languages() { return languages; },\n        onDidChangeConfiguration: (handler) => connection.onNotification(vscode_languageserver_protocol_1.DidChangeConfigurationNotification.type, handler),\n        onDidChangeWatchedFiles: (handler) => connection.onNotification(vscode_languageserver_protocol_1.DidChangeWatchedFilesNotification.type, handler),\n        __textDocumentSync: undefined,\n        onDidOpenTextDocument: (handler) => connection.onNotification(vscode_languageserver_protocol_1.DidOpenTextDocumentNotification.type, handler),\n        onDidChangeTextDocument: (handler) => connection.onNotification(vscode_languageserver_protocol_1.DidChangeTextDocumentNotification.type, handler),\n        onDidCloseTextDocument: (handler) => connection.onNotification(vscode_languageserver_protocol_1.DidCloseTextDocumentNotification.type, handler),\n        onWillSaveTextDocument: (handler) => connection.onNotification(vscode_languageserver_protocol_1.WillSaveTextDocumentNotification.type, handler),\n        onWillSaveTextDocumentWaitUntil: (handler) => connection.onRequest(vscode_languageserver_protocol_1.WillSaveTextDocumentWaitUntilRequest.type, handler),\n        onDidSaveTextDocument: (handler) => connection.onNotification(vscode_languageserver_protocol_1.DidSaveTextDocumentNotification.type, handler),\n        sendDiagnostics: (params) => connection.sendNotification(vscode_languageserver_protocol_1.PublishDiagnosticsNotification.type, params),\n        onHover: (handler) => connection.onRequest(vscode_languageserver_protocol_1.HoverRequest.type, (params, cancel) => {\n            return handler(params, cancel, progress_1.attachWorkDone(connection, params), undefined);\n        }),\n        onCompletion: (handler) => connection.onRequest(vscode_languageserver_protocol_1.CompletionRequest.type, (params, cancel) => {\n            return handler(params, cancel, progress_1.attachWorkDone(connection, params), progress_1.attachPartialResult(connection, params));\n        }),\n        onCompletionResolve: (handler) => connection.onRequest(vscode_languageserver_protocol_1.CompletionResolveRequest.type, handler),\n        onSignatureHelp: (handler) => connection.onRequest(vscode_languageserver_protocol_1.SignatureHelpRequest.type, (params, cancel) => {\n            return handler(params, cancel, progress_1.attachWorkDone(connection, params), undefined);\n        }),\n        onDeclaration: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DeclarationRequest.type, (params, cancel) => {\n            return handler(params, cancel, progress_1.attachWorkDone(connection, params), progress_1.attachPartialResult(connection, params));\n        }),\n        onDefinition: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DefinitionRequest.type, (params, cancel) => {\n            return handler(params, cancel, progress_1.attachWorkDone(connection, params), progress_1.attachPartialResult(connection, params));\n        }),\n        onTypeDefinition: (handler) => connection.onRequest(vscode_languageserver_protocol_1.TypeDefinitionRequest.type, (params, cancel) => {\n            return handler(params, cancel, progress_1.attachWorkDone(connection, params), progress_1.attachPartialResult(connection, params));\n        }),\n        onImplementation: (handler) => connection.onRequest(vscode_languageserver_protocol_1.ImplementationRequest.type, (params, cancel) => {\n            return handler(params, cancel, progress_1.attachWorkDone(connection, params), progress_1.attachPartialResult(connection, params));\n        }),\n        onReferences: (handler) => connection.onRequest(vscode_languageserver_protocol_1.ReferencesRequest.type, (params, cancel) => {\n            return handler(params, cancel, progress_1.attachWorkDone(connection, params), progress_1.attachPartialResult(connection, params));\n        }),\n        onDocumentHighlight: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DocumentHighlightRequest.type, (params, cancel) => {\n            return handler(params, cancel, progress_1.attachWorkDone(connection, params), progress_1.attachPartialResult(connection, params));\n        }),\n        onDocumentSymbol: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DocumentSymbolRequest.type, (params, cancel) => {\n            return handler(params, cancel, progress_1.attachWorkDone(connection, params), progress_1.attachPartialResult(connection, params));\n        }),\n        onWorkspaceSymbol: (handler) => connection.onRequest(vscode_languageserver_protocol_1.WorkspaceSymbolRequest.type, (params, cancel) => {\n            return handler(params, cancel, progress_1.attachWorkDone(connection, params), progress_1.attachPartialResult(connection, params));\n        }),\n        onCodeAction: (handler) => connection.onRequest(vscode_languageserver_protocol_1.CodeActionRequest.type, (params, cancel) => {\n            return handler(params, cancel, progress_1.attachWorkDone(connection, params), progress_1.attachPartialResult(connection, params));\n        }),\n        onCodeActionResolve: (handler) => connection.onRequest(vscode_languageserver_protocol_1.CodeActionResolveRequest.type, (params, cancel) => {\n            return handler(params, cancel);\n        }),\n        onCodeLens: (handler) => connection.onRequest(vscode_languageserver_protocol_1.CodeLensRequest.type, (params, cancel) => {\n            return handler(params, cancel, progress_1.attachWorkDone(connection, params), progress_1.attachPartialResult(connection, params));\n        }),\n        onCodeLensResolve: (handler) => connection.onRequest(vscode_languageserver_protocol_1.CodeLensResolveRequest.type, (params, cancel) => {\n            return handler(params, cancel);\n        }),\n        onDocumentFormatting: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DocumentFormattingRequest.type, (params, cancel) => {\n            return handler(params, cancel, progress_1.attachWorkDone(connection, params), undefined);\n        }),\n        onDocumentRangeFormatting: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DocumentRangeFormattingRequest.type, (params, cancel) => {\n            return handler(params, cancel, progress_1.attachWorkDone(connection, params), undefined);\n        }),\n        onDocumentOnTypeFormatting: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DocumentOnTypeFormattingRequest.type, (params, cancel) => {\n            return handler(params, cancel);\n        }),\n        onRenameRequest: (handler) => connection.onRequest(vscode_languageserver_protocol_1.RenameRequest.type, (params, cancel) => {\n            return handler(params, cancel, progress_1.attachWorkDone(connection, params), undefined);\n        }),\n        onPrepareRename: (handler) => connection.onRequest(vscode_languageserver_protocol_1.PrepareRenameRequest.type, (params, cancel) => {\n            return handler(params, cancel);\n        }),\n        onDocumentLinks: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DocumentLinkRequest.type, (params, cancel) => {\n            return handler(params, cancel, progress_1.attachWorkDone(connection, params), progress_1.attachPartialResult(connection, params));\n        }),\n        onDocumentLinkResolve: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DocumentLinkResolveRequest.type, (params, cancel) => {\n            return handler(params, cancel);\n        }),\n        onDocumentColor: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DocumentColorRequest.type, (params, cancel) => {\n            return handler(params, cancel, progress_1.attachWorkDone(connection, params), progress_1.attachPartialResult(connection, params));\n        }),\n        onColorPresentation: (handler) => connection.onRequest(vscode_languageserver_protocol_1.ColorPresentationRequest.type, (params, cancel) => {\n            return handler(params, cancel, progress_1.attachWorkDone(connection, params), progress_1.attachPartialResult(connection, params));\n        }),\n        onFoldingRanges: (handler) => connection.onRequest(vscode_languageserver_protocol_1.FoldingRangeRequest.type, (params, cancel) => {\n            return handler(params, cancel, progress_1.attachWorkDone(connection, params), progress_1.attachPartialResult(connection, params));\n        }),\n        onSelectionRanges: (handler) => connection.onRequest(vscode_languageserver_protocol_1.SelectionRangeRequest.type, (params, cancel) => {\n            return handler(params, cancel, progress_1.attachWorkDone(connection, params), progress_1.attachPartialResult(connection, params));\n        }),\n        onExecuteCommand: (handler) => connection.onRequest(vscode_languageserver_protocol_1.ExecuteCommandRequest.type, (params, cancel) => {\n            return handler(params, cancel, progress_1.attachWorkDone(connection, params), undefined);\n        }),\n        dispose: () => connection.dispose()\n    };\n    for (let remote of allRemotes) {\n        remote.attach(protocolConnection);\n    }\n    connection.onRequest(vscode_languageserver_protocol_1.InitializeRequest.type, (params) => {\n        watchDog.initialize(params);\n        if (Is.string(params.trace)) {\n            tracer.trace = vscode_languageserver_protocol_1.Trace.fromString(params.trace);\n        }\n        for (let remote of allRemotes) {\n            remote.initialize(params.capabilities);\n        }\n        if (initializeHandler) {\n            let result = initializeHandler(params, new vscode_languageserver_protocol_1.CancellationTokenSource().token, progress_1.attachWorkDone(connection, params), undefined);\n            return asPromise(result).then((value) => {\n                if (value instanceof vscode_languageserver_protocol_1.ResponseError) {\n                    return value;\n                }\n                let result = value;\n                if (!result) {\n                    result = { capabilities: {} };\n                }\n                let capabilities = result.capabilities;\n                if (!capabilities) {\n                    capabilities = {};\n                    result.capabilities = capabilities;\n                }\n                if (capabilities.textDocumentSync === undefined || capabilities.textDocumentSync === null) {\n                    capabilities.textDocumentSync = Is.number(protocolConnection.__textDocumentSync) ? protocolConnection.__textDocumentSync : vscode_languageserver_protocol_1.TextDocumentSyncKind.None;\n                }\n                else if (!Is.number(capabilities.textDocumentSync) && !Is.number(capabilities.textDocumentSync.change)) {\n                    capabilities.textDocumentSync.change = Is.number(protocolConnection.__textDocumentSync) ? protocolConnection.__textDocumentSync : vscode_languageserver_protocol_1.TextDocumentSyncKind.None;\n                }\n                for (let remote of allRemotes) {\n                    remote.fillServerCapabilities(capabilities);\n                }\n                return result;\n            });\n        }\n        else {\n            let result = { capabilities: { textDocumentSync: vscode_languageserver_protocol_1.TextDocumentSyncKind.None } };\n            for (let remote of allRemotes) {\n                remote.fillServerCapabilities(result.capabilities);\n            }\n            return result;\n        }\n    });\n    connection.onRequest(vscode_languageserver_protocol_1.ShutdownRequest.type, () => {\n        watchDog.shutdownReceived = true;\n        if (shutdownHandler) {\n            return shutdownHandler(new vscode_languageserver_protocol_1.CancellationTokenSource().token);\n        }\n        else {\n            return undefined;\n        }\n    });\n    connection.onNotification(vscode_languageserver_protocol_1.ExitNotification.type, () => {\n        try {\n            if (exitHandler) {\n                exitHandler();\n            }\n        }\n        finally {\n            if (watchDog.shutdownReceived) {\n                watchDog.exit(0);\n            }\n            else {\n                watchDog.exit(1);\n            }\n        }\n    });\n    connection.onNotification(vscode_languageserver_protocol_1.SetTraceNotification.type, (params) => {\n        tracer.trace = vscode_languageserver_protocol_1.Trace.fromString(params.value);\n    });\n    return protocolConnection;\n}\nexports.createConnection = createConnection;\n//# sourceMappingURL=server.js.map","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ----------------------------------------------------------------------------------------- */\n'use strict';\n\nmodule.exports = require('./lib/node/main');","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Disposable = void 0;\nvar Disposable;\n(function (Disposable) {\n    function create(func) {\n        return {\n            dispose: func\n        };\n    }\n    Disposable.create = create;\n})(Disposable = exports.Disposable || (exports.Disposable = {}));\n//# sourceMappingURL=disposable.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n/// <reference path=\"../../typings/thenable.d.ts\" />\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CancellationSenderStrategy = exports.CancellationReceiverStrategy = exports.ConnectionError = exports.ConnectionErrors = exports.LogTraceNotification = exports.SetTraceNotification = exports.TraceFormat = exports.Trace = exports.ProgressType = exports.createMessageConnection = exports.NullLogger = exports.ConnectionOptions = exports.ConnectionStrategy = exports.WriteableStreamMessageWriter = exports.AbstractMessageWriter = exports.MessageWriter = exports.ReadableStreamMessageReader = exports.AbstractMessageReader = exports.MessageReader = exports.CancellationToken = exports.CancellationTokenSource = exports.Emitter = exports.Event = exports.Disposable = exports.ParameterStructures = exports.NotificationType9 = exports.NotificationType8 = exports.NotificationType7 = exports.NotificationType6 = exports.NotificationType5 = exports.NotificationType4 = exports.NotificationType3 = exports.NotificationType2 = exports.NotificationType1 = exports.NotificationType0 = exports.NotificationType = exports.ErrorCodes = exports.ResponseError = exports.RequestType9 = exports.RequestType8 = exports.RequestType7 = exports.RequestType6 = exports.RequestType5 = exports.RequestType4 = exports.RequestType3 = exports.RequestType2 = exports.RequestType1 = exports.RequestType0 = exports.RequestType = exports.RAL = void 0;\nexports.CancellationStrategy = void 0;\nconst messages_1 = require(\"../common/messages\");\nObject.defineProperty(exports, \"RequestType\", { enumerable: true, get: function () { return messages_1.RequestType; } });\nObject.defineProperty(exports, \"RequestType0\", { enumerable: true, get: function () { return messages_1.RequestType0; } });\nObject.defineProperty(exports, \"RequestType1\", { enumerable: true, get: function () { return messages_1.RequestType1; } });\nObject.defineProperty(exports, \"RequestType2\", { enumerable: true, get: function () { return messages_1.RequestType2; } });\nObject.defineProperty(exports, \"RequestType3\", { enumerable: true, get: function () { return messages_1.RequestType3; } });\nObject.defineProperty(exports, \"RequestType4\", { enumerable: true, get: function () { return messages_1.RequestType4; } });\nObject.defineProperty(exports, \"RequestType5\", { enumerable: true, get: function () { return messages_1.RequestType5; } });\nObject.defineProperty(exports, \"RequestType6\", { enumerable: true, get: function () { return messages_1.RequestType6; } });\nObject.defineProperty(exports, \"RequestType7\", { enumerable: true, get: function () { return messages_1.RequestType7; } });\nObject.defineProperty(exports, \"RequestType8\", { enumerable: true, get: function () { return messages_1.RequestType8; } });\nObject.defineProperty(exports, \"RequestType9\", { enumerable: true, get: function () { return messages_1.RequestType9; } });\nObject.defineProperty(exports, \"ResponseError\", { enumerable: true, get: function () { return messages_1.ResponseError; } });\nObject.defineProperty(exports, \"ErrorCodes\", { enumerable: true, get: function () { return messages_1.ErrorCodes; } });\nObject.defineProperty(exports, \"NotificationType\", { enumerable: true, get: function () { return messages_1.NotificationType; } });\nObject.defineProperty(exports, \"NotificationType0\", { enumerable: true, get: function () { return messages_1.NotificationType0; } });\nObject.defineProperty(exports, \"NotificationType1\", { enumerable: true, get: function () { return messages_1.NotificationType1; } });\nObject.defineProperty(exports, \"NotificationType2\", { enumerable: true, get: function () { return messages_1.NotificationType2; } });\nObject.defineProperty(exports, \"NotificationType3\", { enumerable: true, get: function () { return messages_1.NotificationType3; } });\nObject.defineProperty(exports, \"NotificationType4\", { enumerable: true, get: function () { return messages_1.NotificationType4; } });\nObject.defineProperty(exports, \"NotificationType5\", { enumerable: true, get: function () { return messages_1.NotificationType5; } });\nObject.defineProperty(exports, \"NotificationType6\", { enumerable: true, get: function () { return messages_1.NotificationType6; } });\nObject.defineProperty(exports, \"NotificationType7\", { enumerable: true, get: function () { return messages_1.NotificationType7; } });\nObject.defineProperty(exports, \"NotificationType8\", { enumerable: true, get: function () { return messages_1.NotificationType8; } });\nObject.defineProperty(exports, \"NotificationType9\", { enumerable: true, get: function () { return messages_1.NotificationType9; } });\nObject.defineProperty(exports, \"ParameterStructures\", { enumerable: true, get: function () { return messages_1.ParameterStructures; } });\nconst disposable_1 = require(\"../common/disposable\");\nObject.defineProperty(exports, \"Disposable\", { enumerable: true, get: function () { return disposable_1.Disposable; } });\nconst events_1 = require(\"../common/events\");\nObject.defineProperty(exports, \"Event\", { enumerable: true, get: function () { return events_1.Event; } });\nObject.defineProperty(exports, \"Emitter\", { enumerable: true, get: function () { return events_1.Emitter; } });\nconst cancellation_1 = require(\"../common/cancellation\");\nObject.defineProperty(exports, \"CancellationTokenSource\", { enumerable: true, get: function () { return cancellation_1.CancellationTokenSource; } });\nObject.defineProperty(exports, \"CancellationToken\", { enumerable: true, get: function () { return cancellation_1.CancellationToken; } });\nconst messageReader_1 = require(\"../common/messageReader\");\nObject.defineProperty(exports, \"MessageReader\", { enumerable: true, get: function () { return messageReader_1.MessageReader; } });\nObject.defineProperty(exports, \"AbstractMessageReader\", { enumerable: true, get: function () { return messageReader_1.AbstractMessageReader; } });\nObject.defineProperty(exports, \"ReadableStreamMessageReader\", { enumerable: true, get: function () { return messageReader_1.ReadableStreamMessageReader; } });\nconst messageWriter_1 = require(\"../common/messageWriter\");\nObject.defineProperty(exports, \"MessageWriter\", { enumerable: true, get: function () { return messageWriter_1.MessageWriter; } });\nObject.defineProperty(exports, \"AbstractMessageWriter\", { enumerable: true, get: function () { return messageWriter_1.AbstractMessageWriter; } });\nObject.defineProperty(exports, \"WriteableStreamMessageWriter\", { enumerable: true, get: function () { return messageWriter_1.WriteableStreamMessageWriter; } });\nconst connection_1 = require(\"../common/connection\");\nObject.defineProperty(exports, \"ConnectionStrategy\", { enumerable: true, get: function () { return connection_1.ConnectionStrategy; } });\nObject.defineProperty(exports, \"ConnectionOptions\", { enumerable: true, get: function () { return connection_1.ConnectionOptions; } });\nObject.defineProperty(exports, \"NullLogger\", { enumerable: true, get: function () { return connection_1.NullLogger; } });\nObject.defineProperty(exports, \"createMessageConnection\", { enumerable: true, get: function () { return connection_1.createMessageConnection; } });\nObject.defineProperty(exports, \"ProgressType\", { enumerable: true, get: function () { return connection_1.ProgressType; } });\nObject.defineProperty(exports, \"Trace\", { enumerable: true, get: function () { return connection_1.Trace; } });\nObject.defineProperty(exports, \"TraceFormat\", { enumerable: true, get: function () { return connection_1.TraceFormat; } });\nObject.defineProperty(exports, \"SetTraceNotification\", { enumerable: true, get: function () { return connection_1.SetTraceNotification; } });\nObject.defineProperty(exports, \"LogTraceNotification\", { enumerable: true, get: function () { return connection_1.LogTraceNotification; } });\nObject.defineProperty(exports, \"ConnectionErrors\", { enumerable: true, get: function () { return connection_1.ConnectionErrors; } });\nObject.defineProperty(exports, \"ConnectionError\", { enumerable: true, get: function () { return connection_1.ConnectionError; } });\nObject.defineProperty(exports, \"CancellationReceiverStrategy\", { enumerable: true, get: function () { return connection_1.CancellationReceiverStrategy; } });\nObject.defineProperty(exports, \"CancellationSenderStrategy\", { enumerable: true, get: function () { return connection_1.CancellationSenderStrategy; } });\nObject.defineProperty(exports, \"CancellationStrategy\", { enumerable: true, get: function () { return connection_1.CancellationStrategy; } });\nconst ral_1 = require(\"./ral\");\nexports.RAL = ral_1.default;\n//# sourceMappingURL=api.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isResponseMessage = exports.isNotificationMessage = exports.isRequestMessage = exports.NotificationType9 = exports.NotificationType8 = exports.NotificationType7 = exports.NotificationType6 = exports.NotificationType5 = exports.NotificationType4 = exports.NotificationType3 = exports.NotificationType2 = exports.NotificationType1 = exports.NotificationType0 = exports.NotificationType = exports.RequestType9 = exports.RequestType8 = exports.RequestType7 = exports.RequestType6 = exports.RequestType5 = exports.RequestType4 = exports.RequestType3 = exports.RequestType2 = exports.RequestType1 = exports.RequestType = exports.RequestType0 = exports.AbstractMessageSignature = exports.ParameterStructures = exports.ResponseError = exports.ErrorCodes = void 0;\nconst is = require(\"./is\");\n/**\n * Predefined error codes.\n */\nvar ErrorCodes;\n(function (ErrorCodes) {\n    // Defined by JSON RPC\n    ErrorCodes.ParseError = -32700;\n    ErrorCodes.InvalidRequest = -32600;\n    ErrorCodes.MethodNotFound = -32601;\n    ErrorCodes.InvalidParams = -32602;\n    ErrorCodes.InternalError = -32603;\n    /**\n     * This is the start range of JSON RPC reserved error codes.\n     * It doesn't denote a real error code. No application error codes should\n     * be defined between the start and end range. For backwards\n     * compatibility the `ServerNotInitialized` and the `UnknownErrorCode`\n     * are left in the range.\n     *\n     * @since 3.16.0\n    */\n    ErrorCodes.jsonrpcReservedErrorRangeStart = -32099;\n    /** @deprecated use  jsonrpcReservedErrorRangeStart */\n    ErrorCodes.serverErrorStart = ErrorCodes.jsonrpcReservedErrorRangeStart;\n    ErrorCodes.MessageWriteError = -32099;\n    ErrorCodes.MessageReadError = -32098;\n    ErrorCodes.ServerNotInitialized = -32002;\n    ErrorCodes.UnknownErrorCode = -32001;\n    /**\n     * This is the end range of JSON RPC reserved error codes.\n     * It doesn't denote a real error code.\n     *\n     * @since 3.16.0\n    */\n    ErrorCodes.jsonrpcReservedErrorRangeEnd = -32000;\n    /** @deprecated use  jsonrpcReservedErrorRangeEnd */\n    ErrorCodes.serverErrorEnd = ErrorCodes.jsonrpcReservedErrorRangeEnd;\n})(ErrorCodes = exports.ErrorCodes || (exports.ErrorCodes = {}));\n/**\n * An error object return in a response in case a request\n * has failed.\n */\nclass ResponseError extends Error {\n    constructor(code, message, data) {\n        super(message);\n        this.code = is.number(code) ? code : ErrorCodes.UnknownErrorCode;\n        this.data = data;\n        Object.setPrototypeOf(this, ResponseError.prototype);\n    }\n    toJson() {\n        return {\n            code: this.code,\n            message: this.message,\n            data: this.data,\n        };\n    }\n}\nexports.ResponseError = ResponseError;\nclass ParameterStructures {\n    constructor(kind) {\n        this.kind = kind;\n    }\n    static is(value) {\n        return value === ParameterStructures.auto || value === ParameterStructures.byName || value === ParameterStructures.byPosition;\n    }\n    toString() {\n        return this.kind;\n    }\n}\nexports.ParameterStructures = ParameterStructures;\n/**\n * The parameter structure is automatically inferred on the number of parameters\n * and the parameter type in case of a single param.\n */\nParameterStructures.auto = new ParameterStructures('auto');\n/**\n * Forces `byPosition` parameter structure. This is useful if you have a single\n * parameter which has a literal type.\n */\nParameterStructures.byPosition = new ParameterStructures('byPosition');\n/**\n * Forces `byName` parameter structure. This is only useful when having a single\n * parameter. The library will report errors if used with a different number of\n * parameters.\n */\nParameterStructures.byName = new ParameterStructures('byName');\n/**\n * An abstract implementation of a MessageType.\n */\nclass AbstractMessageSignature {\n    constructor(method, numberOfParams) {\n        this.method = method;\n        this.numberOfParams = numberOfParams;\n    }\n    get parameterStructures() {\n        return ParameterStructures.auto;\n    }\n}\nexports.AbstractMessageSignature = AbstractMessageSignature;\n/**\n * Classes to type request response pairs\n */\nclass RequestType0 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 0);\n    }\n}\nexports.RequestType0 = RequestType0;\nclass RequestType extends AbstractMessageSignature {\n    constructor(method, _parameterStructures = ParameterStructures.auto) {\n        super(method, 1);\n        this._parameterStructures = _parameterStructures;\n    }\n    get parameterStructures() {\n        return this._parameterStructures;\n    }\n}\nexports.RequestType = RequestType;\nclass RequestType1 extends AbstractMessageSignature {\n    constructor(method, _parameterStructures = ParameterStructures.auto) {\n        super(method, 1);\n        this._parameterStructures = _parameterStructures;\n    }\n    get parameterStructures() {\n        return this._parameterStructures;\n    }\n}\nexports.RequestType1 = RequestType1;\nclass RequestType2 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 2);\n    }\n}\nexports.RequestType2 = RequestType2;\nclass RequestType3 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 3);\n    }\n}\nexports.RequestType3 = RequestType3;\nclass RequestType4 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 4);\n    }\n}\nexports.RequestType4 = RequestType4;\nclass RequestType5 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 5);\n    }\n}\nexports.RequestType5 = RequestType5;\nclass RequestType6 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 6);\n    }\n}\nexports.RequestType6 = RequestType6;\nclass RequestType7 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 7);\n    }\n}\nexports.RequestType7 = RequestType7;\nclass RequestType8 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 8);\n    }\n}\nexports.RequestType8 = RequestType8;\nclass RequestType9 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 9);\n    }\n}\nexports.RequestType9 = RequestType9;\nclass NotificationType extends AbstractMessageSignature {\n    constructor(method, _parameterStructures = ParameterStructures.auto) {\n        super(method, 1);\n        this._parameterStructures = _parameterStructures;\n    }\n    get parameterStructures() {\n        return this._parameterStructures;\n    }\n}\nexports.NotificationType = NotificationType;\nclass NotificationType0 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 0);\n    }\n}\nexports.NotificationType0 = NotificationType0;\nclass NotificationType1 extends AbstractMessageSignature {\n    constructor(method, _parameterStructures = ParameterStructures.auto) {\n        super(method, 1);\n        this._parameterStructures = _parameterStructures;\n    }\n    get parameterStructures() {\n        return this._parameterStructures;\n    }\n}\nexports.NotificationType1 = NotificationType1;\nclass NotificationType2 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 2);\n    }\n}\nexports.NotificationType2 = NotificationType2;\nclass NotificationType3 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 3);\n    }\n}\nexports.NotificationType3 = NotificationType3;\nclass NotificationType4 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 4);\n    }\n}\nexports.NotificationType4 = NotificationType4;\nclass NotificationType5 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 5);\n    }\n}\nexports.NotificationType5 = NotificationType5;\nclass NotificationType6 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 6);\n    }\n}\nexports.NotificationType6 = NotificationType6;\nclass NotificationType7 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 7);\n    }\n}\nexports.NotificationType7 = NotificationType7;\nclass NotificationType8 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 8);\n    }\n}\nexports.NotificationType8 = NotificationType8;\nclass NotificationType9 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 9);\n    }\n}\nexports.NotificationType9 = NotificationType9;\n/**\n * Tests if the given message is a request message\n */\nfunction isRequestMessage(message) {\n    const candidate = message;\n    return candidate && is.string(candidate.method) && (is.string(candidate.id) || is.number(candidate.id));\n}\nexports.isRequestMessage = isRequestMessage;\n/**\n * Tests if the given message is a notification message\n */\nfunction isNotificationMessage(message) {\n    const candidate = message;\n    return candidate && is.string(candidate.method) && message.id === void 0;\n}\nexports.isNotificationMessage = isNotificationMessage;\n/**\n * Tests if the given message is a response message\n */\nfunction isResponseMessage(message) {\n    const candidate = message;\n    return candidate && (candidate.result !== void 0 || !!candidate.error) && (is.string(candidate.id) || is.number(candidate.id) || candidate.id === null);\n}\nexports.isResponseMessage = isResponseMessage;\n//# sourceMappingURL=messages.js.map","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CancellationTokenSource = exports.CancellationToken = void 0;\nconst ral_1 = require(\"./ral\");\nconst Is = require(\"./is\");\nconst events_1 = require(\"./events\");\nvar CancellationToken;\n(function (CancellationToken) {\n    CancellationToken.None = Object.freeze({\n        isCancellationRequested: false,\n        onCancellationRequested: events_1.Event.None\n    });\n    CancellationToken.Cancelled = Object.freeze({\n        isCancellationRequested: true,\n        onCancellationRequested: events_1.Event.None\n    });\n    function is(value) {\n        const candidate = value;\n        return candidate && (candidate === CancellationToken.None\n            || candidate === CancellationToken.Cancelled\n            || (Is.boolean(candidate.isCancellationRequested) && !!candidate.onCancellationRequested));\n    }\n    CancellationToken.is = is;\n})(CancellationToken = exports.CancellationToken || (exports.CancellationToken = {}));\nconst shortcutEvent = Object.freeze(function (callback, context) {\n    const handle = ral_1.default().timer.setTimeout(callback.bind(context), 0);\n    return { dispose() { ral_1.default().timer.clearTimeout(handle); } };\n});\nclass MutableToken {\n    constructor() {\n        this._isCancelled = false;\n    }\n    cancel() {\n        if (!this._isCancelled) {\n            this._isCancelled = true;\n            if (this._emitter) {\n                this._emitter.fire(undefined);\n                this.dispose();\n            }\n        }\n    }\n    get isCancellationRequested() {\n        return this._isCancelled;\n    }\n    get onCancellationRequested() {\n        if (this._isCancelled) {\n            return shortcutEvent;\n        }\n        if (!this._emitter) {\n            this._emitter = new events_1.Emitter();\n        }\n        return this._emitter.event;\n    }\n    dispose() {\n        if (this._emitter) {\n            this._emitter.dispose();\n            this._emitter = undefined;\n        }\n    }\n}\nclass CancellationTokenSource {\n    get token() {\n        if (!this._token) {\n            // be lazy and create the token only when\n            // actually needed\n            this._token = new MutableToken();\n        }\n        return this._token;\n    }\n    cancel() {\n        if (!this._token) {\n            // save an object by returning the default\n            // cancelled token when cancellation happens\n            // before someone asks for the token\n            this._token = CancellationToken.Cancelled;\n        }\n        else {\n            this._token.cancel();\n        }\n    }\n    dispose() {\n        if (!this._token) {\n            // ensure to initialize with an empty token if we had none\n            this._token = CancellationToken.None;\n        }\n        else if (this._token instanceof MutableToken) {\n            // actually dispose\n            this._token.dispose();\n        }\n    }\n}\nexports.CancellationTokenSource = CancellationTokenSource;\n//# sourceMappingURL=cancellation.js.map","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.generateUuid = exports.parse = exports.isUUID = exports.v4 = exports.empty = void 0;\nclass ValueUUID {\n    constructor(_value) {\n        this._value = _value;\n        // empty\n    }\n    asHex() {\n        return this._value;\n    }\n    equals(other) {\n        return this.asHex() === other.asHex();\n    }\n}\nclass V4UUID extends ValueUUID {\n    constructor() {\n        super([\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            '-',\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            '-',\n            '4',\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            '-',\n            V4UUID._oneOf(V4UUID._timeHighBits),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            '-',\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n        ].join(''));\n    }\n    static _oneOf(array) {\n        return array[Math.floor(array.length * Math.random())];\n    }\n    static _randomHex() {\n        return V4UUID._oneOf(V4UUID._chars);\n    }\n}\nV4UUID._chars = ['0', '1', '2', '3', '4', '5', '6', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];\nV4UUID._timeHighBits = ['8', '9', 'a', 'b'];\n/**\n * An empty UUID that contains only zeros.\n */\nexports.empty = new ValueUUID('00000000-0000-0000-0000-000000000000');\nfunction v4() {\n    return new V4UUID();\n}\nexports.v4 = v4;\nconst _UUIDPattern = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;\nfunction isUUID(value) {\n    return _UUIDPattern.test(value);\n}\nexports.isUUID = isUUID;\n/**\n * Parses a UUID that is of the format xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx.\n * @param value A uuid string.\n */\nfunction parse(value) {\n    if (!isUUID(value)) {\n        throw new Error('invalid uuid');\n    }\n    return new ValueUUID(value);\n}\nexports.parse = parse;\nfunction generateUuid() {\n    return v4().asHex();\n}\nexports.generateUuid = generateUuid;\n//# sourceMappingURL=uuid.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SemanticTokensBuilder = exports.SemanticTokensFeature = void 0;\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst SemanticTokensFeature = (Base) => {\n    return class extends Base {\n        get semanticTokens() {\n            return {\n                on: (handler) => {\n                    const type = vscode_languageserver_protocol_1.SemanticTokensRequest.type;\n                    this.connection.onRequest(type, (params, cancel) => {\n                        return handler(params, cancel, this.attachWorkDoneProgress(params), this.attachPartialResultProgress(type, params));\n                    });\n                },\n                onDelta: (handler) => {\n                    const type = vscode_languageserver_protocol_1.SemanticTokensDeltaRequest.type;\n                    this.connection.onRequest(type, (params, cancel) => {\n                        return handler(params, cancel, this.attachWorkDoneProgress(params), this.attachPartialResultProgress(type, params));\n                    });\n                },\n                onRange: (handler) => {\n                    const type = vscode_languageserver_protocol_1.SemanticTokensRangeRequest.type;\n                    this.connection.onRequest(type, (params, cancel) => {\n                        return handler(params, cancel, this.attachWorkDoneProgress(params), this.attachPartialResultProgress(type, params));\n                    });\n                }\n            };\n        }\n    };\n};\nexports.SemanticTokensFeature = SemanticTokensFeature;\nclass SemanticTokensBuilder {\n    constructor() {\n        this._prevData = undefined;\n        this.initialize();\n    }\n    initialize() {\n        this._id = Date.now();\n        this._prevLine = 0;\n        this._prevChar = 0;\n        this._data = [];\n        this._dataLen = 0;\n    }\n    push(line, char, length, tokenType, tokenModifiers) {\n        let pushLine = line;\n        let pushChar = char;\n        if (this._dataLen > 0) {\n            pushLine -= this._prevLine;\n            if (pushLine === 0) {\n                pushChar -= this._prevChar;\n            }\n        }\n        this._data[this._dataLen++] = pushLine;\n        this._data[this._dataLen++] = pushChar;\n        this._data[this._dataLen++] = length;\n        this._data[this._dataLen++] = tokenType;\n        this._data[this._dataLen++] = tokenModifiers;\n        this._prevLine = line;\n        this._prevChar = char;\n    }\n    get id() {\n        return this._id.toString();\n    }\n    previousResult(id) {\n        if (this.id === id) {\n            this._prevData = this._data;\n        }\n        this.initialize();\n    }\n    build() {\n        this._prevData = undefined;\n        return {\n            resultId: this.id,\n            data: this._data\n        };\n    }\n    canBuildEdits() {\n        return this._prevData !== undefined;\n    }\n    buildEdits() {\n        if (this._prevData !== undefined) {\n            const prevDataLength = this._prevData.length;\n            const dataLength = this._data.length;\n            let startIndex = 0;\n            while (startIndex < dataLength && startIndex < prevDataLength && this._prevData[startIndex] === this._data[startIndex]) {\n                startIndex++;\n            }\n            if (startIndex < dataLength && startIndex < prevDataLength) {\n                // Find end index\n                let endIndex = 0;\n                while (endIndex < dataLength && endIndex < prevDataLength && this._prevData[prevDataLength - 1 - endIndex] === this._data[dataLength - 1 - endIndex]) {\n                    endIndex++;\n                }\n                const newData = this._data.slice(startIndex, dataLength - endIndex);\n                const result = {\n                    resultId: this.id,\n                    edits: [\n                        { start: startIndex, deleteCount: prevDataLength - endIndex - startIndex, data: newData }\n                    ]\n                };\n                return result;\n            }\n            else if (startIndex < dataLength) {\n                return { resultId: this.id, edits: [\n                        { start: startIndex, deleteCount: 0, data: this._data.slice(startIndex) }\n                    ] };\n            }\n            else if (startIndex < prevDataLength) {\n                return { resultId: this.id, edits: [\n                        { start: startIndex, deleteCount: prevDataLength - startIndex }\n                    ] };\n            }\n            else {\n                return { resultId: this.id, edits: [] };\n            }\n        }\n        else {\n            return this.build();\n        }\n    }\n}\nexports.SemanticTokensBuilder = SemanticTokensBuilder;\n//# sourceMappingURL=semanticTokens.js.map","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ----------------------------------------------------------------------------------------- */\n'use strict';\n\nmodule.exports = require('./lib/node/main');","exports.parse = exports.decode = decode\n\nexports.stringify = exports.encode = encode\n\nexports.safe = safe\nexports.unsafe = unsafe\n\nvar eol = typeof process !== 'undefined' &&\n  process.platform === 'win32' ? '\\r\\n' : '\\n'\n\nfunction encode (obj, opt) {\n  var children = []\n  var out = ''\n\n  if (typeof opt === 'string') {\n    opt = {\n      section: opt,\n      whitespace: false,\n    }\n  } else {\n    opt = opt || {}\n    opt.whitespace = opt.whitespace === true\n  }\n\n  var separator = opt.whitespace ? ' = ' : '='\n\n  Object.keys(obj).forEach(function (k, _, __) {\n    var val = obj[k]\n    if (val && Array.isArray(val)) {\n      val.forEach(function (item) {\n        out += safe(k + '[]') + separator + safe(item) + '\\n'\n      })\n    } else if (val && typeof val === 'object')\n      children.push(k)\n    else\n      out += safe(k) + separator + safe(val) + eol\n  })\n\n  if (opt.section && out.length)\n    out = '[' + safe(opt.section) + ']' + eol + out\n\n  children.forEach(function (k, _, __) {\n    var nk = dotSplit(k).join('\\\\.')\n    var section = (opt.section ? opt.section + '.' : '') + nk\n    var child = encode(obj[k], {\n      section: section,\n      whitespace: opt.whitespace,\n    })\n    if (out.length && child.length)\n      out += eol\n\n    out += child\n  })\n\n  return out\n}\n\nfunction dotSplit (str) {\n  return str.replace(/\\1/g, '\\u0002LITERAL\\\\1LITERAL\\u0002')\n    .replace(/\\\\\\./g, '\\u0001')\n    .split(/\\./).map(function (part) {\n      return part.replace(/\\1/g, '\\\\.')\n        .replace(/\\2LITERAL\\\\1LITERAL\\2/g, '\\u0001')\n    })\n}\n\nfunction decode (str) {\n  var out = {}\n  var p = out\n  var section = null\n  //          section     |key      = value\n  var re = /^\\[([^\\]]*)\\]$|^([^=]+)(=(.*))?$/i\n  var lines = str.split(/[\\r\\n]+/g)\n\n  lines.forEach(function (line, _, __) {\n    if (!line || line.match(/^\\s*[;#]/))\n      return\n    var match = line.match(re)\n    if (!match)\n      return\n    if (match[1] !== undefined) {\n      section = unsafe(match[1])\n      if (section === '__proto__') {\n        // not allowed\n        // keep parsing the section, but don't attach it.\n        p = {}\n        return\n      }\n      p = out[section] = out[section] || {}\n      return\n    }\n    var key = unsafe(match[2])\n    if (key === '__proto__')\n      return\n    var value = match[3] ? unsafe(match[4]) : true\n    switch (value) {\n      case 'true':\n      case 'false':\n      case 'null': value = JSON.parse(value)\n    }\n\n    // Convert keys with '[]' suffix to an array\n    if (key.length > 2 && key.slice(-2) === '[]') {\n      key = key.substring(0, key.length - 2)\n      if (key === '__proto__')\n        return\n      if (!p[key])\n        p[key] = []\n      else if (!Array.isArray(p[key]))\n        p[key] = [p[key]]\n    }\n\n    // safeguard against resetting a previously defined\n    // array by accidentally forgetting the brackets\n    if (Array.isArray(p[key]))\n      p[key].push(value)\n    else\n      p[key] = value\n  })\n\n  // {a:{y:1},\"a.b\":{x:2}} --> {a:{y:1,b:{x:2}}}\n  // use a filter to return the keys that have to be deleted.\n  Object.keys(out).filter(function (k, _, __) {\n    if (!out[k] ||\n      typeof out[k] !== 'object' ||\n      Array.isArray(out[k]))\n      return false\n\n    // see if the parent section is also an object.\n    // if so, add it to that, and mark this one for deletion\n    var parts = dotSplit(k)\n    var p = out\n    var l = parts.pop()\n    var nl = l.replace(/\\\\\\./g, '.')\n    parts.forEach(function (part, _, __) {\n      if (part === '__proto__')\n        return\n      if (!p[part] || typeof p[part] !== 'object')\n        p[part] = {}\n      p = p[part]\n    })\n    if (p === out && nl === l)\n      return false\n\n    p[nl] = out[k]\n    return true\n  }).forEach(function (del, _, __) {\n    delete out[del]\n  })\n\n  return out\n}\n\nfunction isQuoted (val) {\n  return (val.charAt(0) === '\"' && val.slice(-1) === '\"') ||\n    (val.charAt(0) === \"'\" && val.slice(-1) === \"'\")\n}\n\nfunction safe (val) {\n  return (typeof val !== 'string' ||\n    val.match(/[=\\r\\n]/) ||\n    val.match(/^\\[/) ||\n    (val.length > 1 &&\n     isQuoted(val)) ||\n    val !== val.trim())\n    ? JSON.stringify(val)\n    : val.replace(/;/g, '\\\\;').replace(/#/g, '\\\\#')\n}\n\nfunction unsafe (val, doUnesc) {\n  val = (val || '').trim()\n  if (isQuoted(val)) {\n    // remove the single quotes before calling JSON.parse\n    if (val.charAt(0) === \"'\")\n      val = val.substr(1, val.length - 2)\n\n    try {\n      val = JSON.parse(val)\n    } catch (_) {}\n  } else {\n    // walk the val to find the first not-escaped ; character\n    var esc = false\n    var unesc = ''\n    for (var i = 0, l = val.length; i < l; i++) {\n      var c = val.charAt(i)\n      if (esc) {\n        if ('\\\\;#'.indexOf(c) !== -1)\n          unesc += c\n        else\n          unesc += '\\\\' + c\n\n        esc = false\n      } else if (';#'.indexOf(c) !== -1)\n        break\n      else if (c === '\\\\')\n        esc = true\n      else\n        unesc += c\n    }\n    if (esc)\n      unesc += '\\\\'\n\n    return unesc.trim()\n  }\n  return val\n}\n","import { CommonToken } from \"antlr4\";\r\nimport { TBSyntaxError } from \"./types\";\r\n\r\nconst antlr4 = require('antlr4');\r\n\r\n// const { SyntaxGenericError } = require(path.resolve('error', 'helper'));\r\n\r\n/**\r\n * Custom Error Listener\r\n *\r\n * @returns {object}\r\n */\r\n\r\n\r\nexport default class TibboBasicErrorListener extends antlr4.error.ErrorListener {\r\n\r\n\terrors: Array<TBSyntaxError> = [];\r\n\r\n\t/**\r\n\t * Checks syntax error\r\n\t *\r\n\t * @param {object} recognizer The parsing support code essentially. Most of it is error recovery stuff\r\n\t * @param {object} symbol Offending symbol\r\n\t * @param {number} line Line of offending symbol\r\n\t * @param {number} column Position in line of offending symbol\r\n\t * @param {string} message Error message\r\n\t * @param {string} payload Stack trace\r\n\t */\r\n\tsyntaxError(recognizer: object, symbol: CommonToken, line: number, column: number, message: string, payload: string) {\r\n\t\t// throw new Error(JSON.stringify({ line, column, message }));\r\n\t\tthis.errors.push({ symbol: symbol, line, column, message });\r\n\t}\r\n}\r\n","/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nvar Utils = require('./../Utils');\nvar Token = require('./../Token').Token;\nvar RuleNode = require('./Tree').RuleNode;\nvar ErrorNode = require('./Tree').ErrorNode;\nvar TerminalNode = require('./Tree').TerminalNode;\nvar ParserRuleContext = require('./../ParserRuleContext').ParserRuleContext;\nvar RuleContext = require('./../RuleContext').RuleContext;\nvar INVALID_ALT_NUMBER = require('./../atn/ATN').INVALID_ALT_NUMBER;\n\n\n/** A set of utility routines useful for all kinds of ANTLR trees. */\nfunction Trees() {\n}\n\n// Print out a whole tree in LISP form. {@link //getNodeText} is used on the\n//  node payloads to get the text for the nodes.  Detect\n//  parse trees and extract data appropriately.\nTrees.toStringTree = function(tree, ruleNames, recog) {\n\truleNames = ruleNames || null;\n\trecog = recog || null;\n    if(recog!==null) {\n       ruleNames = recog.ruleNames;\n    }\n    var s = Trees.getNodeText(tree, ruleNames);\n    s = Utils.escapeWhitespace(s, false);\n    var c = tree.getChildCount();\n    if(c===0) {\n        return s;\n    }\n    var res = \"(\" + s + ' ';\n    if(c>0) {\n        s = Trees.toStringTree(tree.getChild(0), ruleNames);\n        res = res.concat(s);\n    }\n    for(var i=1;i<c;i++) {\n        s = Trees.toStringTree(tree.getChild(i), ruleNames);\n        res = res.concat(' ' + s);\n    }\n    res = res.concat(\")\");\n    return res;\n};\n\nTrees.getNodeText = function(t, ruleNames, recog) {\n\truleNames = ruleNames || null;\n\trecog = recog || null;\n    if(recog!==null) {\n        ruleNames = recog.ruleNames;\n    }\n    if(ruleNames!==null) {\n       if (t instanceof RuleContext) {\n           var altNumber = t.getAltNumber();\n           if ( altNumber!=INVALID_ALT_NUMBER ) {\n               return ruleNames[t.ruleIndex]+\":\"+altNumber;\n           }\n           return ruleNames[t.ruleIndex];\n       } else if ( t instanceof ErrorNode) {\n           return t.toString();\n       } else if(t instanceof TerminalNode) {\n           if(t.symbol!==null) {\n               return t.symbol.text;\n           }\n       }\n    }\n    // no recog for rule names\n    var payload = t.getPayload();\n    if (payload instanceof Token ) {\n       return payload.text;\n    }\n    return t.getPayload().toString();\n};\n\n\n// Return ordered list of all children of this node\nTrees.getChildren = function(t) {\n\tvar list = [];\n\tfor(var i=0;i<t.getChildCount();i++) {\n\t\tlist.push(t.getChild(i));\n\t}\n\treturn list;\n};\n\n// Return a list of all ancestors of this node.  The first node of\n//  list is the root and the last is the parent of this node.\n//\nTrees.getAncestors = function(t) {\n    var ancestors = [];\n    t = t.getParent();\n    while(t!==null) {\n        ancestors = [t].concat(ancestors);\n        t = t.getParent();\n    }\n    return ancestors;\n};\n\nTrees.findAllTokenNodes = function(t, ttype) {\n    return Trees.findAllNodes(t, ttype, true);\n};\n\nTrees.findAllRuleNodes = function(t, ruleIndex) {\n\treturn Trees.findAllNodes(t, ruleIndex, false);\n};\n\nTrees.findAllNodes = function(t, index, findTokens) {\n\tvar nodes = [];\n\tTrees._findAllNodes(t, index, findTokens, nodes);\n\treturn nodes;\n};\n\nTrees._findAllNodes = function(t, index, findTokens, nodes) {\n\t// check this node (the root) first\n\tif(findTokens && (t instanceof TerminalNode)) {\n\t\tif(t.symbol.type===index) {\n\t\t\tnodes.push(t);\n\t\t}\n\t} else if(!findTokens && (t instanceof ParserRuleContext)) {\n\t\tif(t.ruleIndex===index) {\n\t\t\tnodes.push(t);\n\t\t}\n\t}\n\t// check children\n\tfor(var i=0;i<t.getChildCount();i++) {\n\t\tTrees._findAllNodes(t.getChild(i), index, findTokens, nodes);\n\t}\n};\n\nTrees.descendants = function(t) {\n\tvar nodes = [t];\n    for(var i=0;i<t.getChildCount();i++) {\n        nodes = nodes.concat(Trees.descendants(t.getChild(i)));\n    }\n    return nodes;\n};\n\n\nexports.Trees = Trees;","/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nvar Token = require('./../Token').Token;\nvar ATN = require('./ATN').ATN;\nvar ATNType = require('./ATNType').ATNType;\nvar ATNStates = require('./ATNState');\nvar ATNState = ATNStates.ATNState;\nvar BasicState = ATNStates.BasicState;\nvar DecisionState = ATNStates.DecisionState;\nvar BlockStartState = ATNStates.BlockStartState;\nvar BlockEndState = ATNStates.BlockEndState;\nvar LoopEndState = ATNStates.LoopEndState;\nvar RuleStartState = ATNStates.RuleStartState;\nvar RuleStopState = ATNStates.RuleStopState;\nvar TokensStartState = ATNStates.TokensStartState;\nvar PlusLoopbackState = ATNStates.PlusLoopbackState;\nvar StarLoopbackState = ATNStates.StarLoopbackState;\nvar StarLoopEntryState = ATNStates.StarLoopEntryState;\nvar PlusBlockStartState = ATNStates.PlusBlockStartState;\nvar StarBlockStartState = ATNStates.StarBlockStartState;\nvar BasicBlockStartState = ATNStates.BasicBlockStartState;\nvar Transitions = require('./Transition');\nvar Transition = Transitions.Transition;\nvar AtomTransition = Transitions.AtomTransition;\nvar SetTransition = Transitions.SetTransition;\nvar NotSetTransition = Transitions.NotSetTransition;\nvar RuleTransition = Transitions.RuleTransition;\nvar RangeTransition = Transitions.RangeTransition;\nvar ActionTransition = Transitions.ActionTransition;\nvar EpsilonTransition = Transitions.EpsilonTransition;\nvar WildcardTransition = Transitions.WildcardTransition;\nvar PredicateTransition = Transitions.PredicateTransition;\nvar PrecedencePredicateTransition = Transitions.PrecedencePredicateTransition;\nvar IntervalSet = require('./../IntervalSet').IntervalSet;\nvar Interval = require('./../IntervalSet').Interval;\nvar ATNDeserializationOptions = require('./ATNDeserializationOptions').ATNDeserializationOptions;\nvar LexerActions = require('./LexerAction');\nvar LexerActionType = LexerActions.LexerActionType;\nvar LexerSkipAction = LexerActions.LexerSkipAction;\nvar LexerChannelAction = LexerActions.LexerChannelAction;\nvar LexerCustomAction = LexerActions.LexerCustomAction;\nvar LexerMoreAction = LexerActions.LexerMoreAction;\nvar LexerTypeAction = LexerActions.LexerTypeAction;\nvar LexerPushModeAction = LexerActions.LexerPushModeAction;\nvar LexerPopModeAction = LexerActions.LexerPopModeAction;\nvar LexerModeAction = LexerActions.LexerModeAction;\n// This is the earliest supported serialized UUID.\n// stick to serialized version for now, we don't need a UUID instance\nvar BASE_SERIALIZED_UUID = \"AADB8D7E-AEEF-4415-AD2B-8204D6CF042E\";\n\n//\n// This UUID indicates the serialized ATN contains two sets of\n// IntervalSets, where the second set's values are encoded as\n// 32-bit integers to support the full Unicode SMP range up to U+10FFFF.\n//\nvar ADDED_UNICODE_SMP = \"59627784-3BE5-417A-B9EB-8131A7286089\";\n\n// This list contains all of the currently supported UUIDs, ordered by when\n// the feature first appeared in this branch.\nvar SUPPORTED_UUIDS = [ BASE_SERIALIZED_UUID, ADDED_UNICODE_SMP ];\n\nvar SERIALIZED_VERSION = 3;\n\n// This is the current serialized UUID.\nvar SERIALIZED_UUID = ADDED_UNICODE_SMP;\n\nfunction initArray( length, value) {\n\tvar tmp = [];\n\ttmp[length-1] = value;\n\treturn tmp.map(function(i) {return value;});\n}\n\nfunction ATNDeserializer (options) {\n\n    if ( options=== undefined || options === null ) {\n        options = ATNDeserializationOptions.defaultOptions;\n    }\n    this.deserializationOptions = options;\n    this.stateFactories = null;\n    this.actionFactories = null;\n\n    return this;\n}\n\n// Determines if a particular serialized representation of an ATN supports\n// a particular feature, identified by the {@link UUID} used for serializing\n// the ATN at the time the feature was first introduced.\n//\n// @param feature The {@link UUID} marking the first time the feature was\n// supported in the serialized ATN.\n// @param actualUuid The {@link UUID} of the actual serialized ATN which is\n// currently being deserialized.\n// @return {@code true} if the {@code actualUuid} value represents a\n// serialized ATN at or after the feature identified by {@code feature} was\n// introduced; otherwise, {@code false}.\n\nATNDeserializer.prototype.isFeatureSupported = function(feature, actualUuid) {\n    var idx1 = SUPPORTED_UUIDS.indexOf(feature);\n    if (idx1<0) {\n        return false;\n    }\n    var idx2 = SUPPORTED_UUIDS.indexOf(actualUuid);\n    return idx2 >= idx1;\n};\n\nATNDeserializer.prototype.deserialize = function(data) {\n    this.reset(data);\n    this.checkVersion();\n    this.checkUUID();\n    var atn = this.readATN();\n    this.readStates(atn);\n    this.readRules(atn);\n    this.readModes(atn);\n    var sets = [];\n    // First, deserialize sets with 16-bit arguments <= U+FFFF.\n    this.readSets(atn, sets, this.readInt.bind(this));\n    // Next, if the ATN was serialized with the Unicode SMP feature,\n    // deserialize sets with 32-bit arguments <= U+10FFFF.\n    if (this.isFeatureSupported(ADDED_UNICODE_SMP, this.uuid)) {\n        this.readSets(atn, sets, this.readInt32.bind(this));\n    }\n    this.readEdges(atn, sets);\n    this.readDecisions(atn);\n    this.readLexerActions(atn);\n    this.markPrecedenceDecisions(atn);\n    this.verifyATN(atn);\n    if (this.deserializationOptions.generateRuleBypassTransitions && atn.grammarType === ATNType.PARSER ) {\n        this.generateRuleBypassTransitions(atn);\n        // re-verify after modification\n        this.verifyATN(atn);\n    }\n    return atn;\n};\n\nATNDeserializer.prototype.reset = function(data) {\n\tvar adjust = function(c) {\n        var v = c.charCodeAt(0);\n        return v>1  ? v-2 : v + 65533;\n\t};\n    var temp = data.split(\"\").map(adjust);\n    // don't adjust the first value since that's the version number\n    temp[0] = data.charCodeAt(0);\n    this.data = temp;\n    this.pos = 0;\n};\n\nATNDeserializer.prototype.checkVersion = function() {\n    var version = this.readInt();\n    if ( version !== SERIALIZED_VERSION ) {\n        throw (\"Could not deserialize ATN with version \" + version + \" (expected \" + SERIALIZED_VERSION + \").\");\n    }\n};\n\nATNDeserializer.prototype.checkUUID = function() {\n    var uuid = this.readUUID();\n    if (SUPPORTED_UUIDS.indexOf(uuid)<0) {\n        throw (\"Could not deserialize ATN with UUID: \" + uuid +\n                        \" (expected \" + SERIALIZED_UUID + \" or a legacy UUID).\", uuid, SERIALIZED_UUID);\n    }\n    this.uuid = uuid;\n};\n\nATNDeserializer.prototype.readATN = function() {\n    var grammarType = this.readInt();\n    var maxTokenType = this.readInt();\n    return new ATN(grammarType, maxTokenType);\n};\n\nATNDeserializer.prototype.readStates = function(atn) {\n\tvar j, pair, stateNumber;\n    var loopBackStateNumbers = [];\n    var endStateNumbers = [];\n    var nstates = this.readInt();\n    for(var i=0; i<nstates; i++) {\n        var stype = this.readInt();\n        // ignore bad type of states\n        if (stype===ATNState.INVALID_TYPE) {\n            atn.addState(null);\n            continue;\n        }\n        var ruleIndex = this.readInt();\n        if (ruleIndex === 0xFFFF) {\n            ruleIndex = -1;\n        }\n        var s = this.stateFactory(stype, ruleIndex);\n        if (stype === ATNState.LOOP_END) { // special case\n            var loopBackStateNumber = this.readInt();\n            loopBackStateNumbers.push([s, loopBackStateNumber]);\n        } else if(s instanceof BlockStartState) {\n            var endStateNumber = this.readInt();\n            endStateNumbers.push([s, endStateNumber]);\n        }\n        atn.addState(s);\n    }\n    // delay the assignment of loop back and end states until we know all the\n\t// state instances have been initialized\n    for (j=0; j<loopBackStateNumbers.length; j++) {\n        pair = loopBackStateNumbers[j];\n        pair[0].loopBackState = atn.states[pair[1]];\n    }\n\n    for (j=0; j<endStateNumbers.length; j++) {\n        pair = endStateNumbers[j];\n        pair[0].endState = atn.states[pair[1]];\n    }\n\n    var numNonGreedyStates = this.readInt();\n    for (j=0; j<numNonGreedyStates; j++) {\n        stateNumber = this.readInt();\n        atn.states[stateNumber].nonGreedy = true;\n    }\n\n    var numPrecedenceStates = this.readInt();\n    for (j=0; j<numPrecedenceStates; j++) {\n        stateNumber = this.readInt();\n        atn.states[stateNumber].isPrecedenceRule = true;\n    }\n};\n\nATNDeserializer.prototype.readRules = function(atn) {\n    var i;\n    var nrules = this.readInt();\n    if (atn.grammarType === ATNType.LEXER ) {\n        atn.ruleToTokenType = initArray(nrules, 0);\n    }\n    atn.ruleToStartState = initArray(nrules, 0);\n    for (i=0; i<nrules; i++) {\n        var s = this.readInt();\n        var startState = atn.states[s];\n        atn.ruleToStartState[i] = startState;\n        if ( atn.grammarType === ATNType.LEXER ) {\n            var tokenType = this.readInt();\n            if (tokenType === 0xFFFF) {\n                tokenType = Token.EOF;\n            }\n            atn.ruleToTokenType[i] = tokenType;\n        }\n    }\n    atn.ruleToStopState = initArray(nrules, 0);\n    for (i=0; i<atn.states.length; i++) {\n        var state = atn.states[i];\n        if (!(state instanceof RuleStopState)) {\n            continue;\n        }\n        atn.ruleToStopState[state.ruleIndex] = state;\n        atn.ruleToStartState[state.ruleIndex].stopState = state;\n    }\n};\n\nATNDeserializer.prototype.readModes = function(atn) {\n    var nmodes = this.readInt();\n    for (var i=0; i<nmodes; i++) {\n        var s = this.readInt();\n        atn.modeToStartState.push(atn.states[s]);\n    }\n};\n\nATNDeserializer.prototype.readSets = function(atn, sets, readUnicode) {\n    var m = this.readInt();\n    for (var i=0; i<m; i++) {\n        var iset = new IntervalSet();\n        sets.push(iset);\n        var n = this.readInt();\n        var containsEof = this.readInt();\n        if (containsEof!==0) {\n            iset.addOne(-1);\n        }\n        for (var j=0; j<n; j++) {\n            var i1 = readUnicode();\n            var i2 = readUnicode();\n            iset.addRange(i1, i2);\n        }\n    }\n};\n\nATNDeserializer.prototype.readEdges = function(atn, sets) {\n\tvar i, j, state, trans, target;\n    var nedges = this.readInt();\n    for (i=0; i<nedges; i++) {\n        var src = this.readInt();\n        var trg = this.readInt();\n        var ttype = this.readInt();\n        var arg1 = this.readInt();\n        var arg2 = this.readInt();\n        var arg3 = this.readInt();\n        trans = this.edgeFactory(atn, ttype, src, trg, arg1, arg2, arg3, sets);\n        var srcState = atn.states[src];\n        srcState.addTransition(trans);\n    }\n    // edges for rule stop states can be derived, so they aren't serialized\n    for (i=0; i<atn.states.length; i++) {\n        state = atn.states[i];\n        for (j=0; j<state.transitions.length; j++) {\n            var t = state.transitions[j];\n            if (!(t instanceof RuleTransition)) {\n                continue;\n            }\n\t\t\tvar outermostPrecedenceReturn = -1;\n\t\t\tif (atn.ruleToStartState[t.target.ruleIndex].isPrecedenceRule) {\n\t\t\t\tif (t.precedence === 0) {\n\t\t\t\t\toutermostPrecedenceReturn = t.target.ruleIndex;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttrans = new EpsilonTransition(t.followState, outermostPrecedenceReturn);\n            atn.ruleToStopState[t.target.ruleIndex].addTransition(trans);\n        }\n    }\n\n    for (i=0; i<atn.states.length; i++) {\n        state = atn.states[i];\n        if (state instanceof BlockStartState) {\n            // we need to know the end state to set its start state\n            if (state.endState === null) {\n                throw (\"IllegalState\");\n            }\n            // block end states can only be associated to a single block start\n\t\t\t// state\n            if ( state.endState.startState !== null) {\n                throw (\"IllegalState\");\n            }\n            state.endState.startState = state;\n        }\n        if (state instanceof PlusLoopbackState) {\n            for (j=0; j<state.transitions.length; j++) {\n                target = state.transitions[j].target;\n                if (target instanceof PlusBlockStartState) {\n                    target.loopBackState = state;\n                }\n            }\n        } else if (state instanceof StarLoopbackState) {\n            for (j=0; j<state.transitions.length; j++) {\n                target = state.transitions[j].target;\n                if (target instanceof StarLoopEntryState) {\n                    target.loopBackState = state;\n                }\n            }\n        }\n    }\n};\n\nATNDeserializer.prototype.readDecisions = function(atn) {\n    var ndecisions = this.readInt();\n    for (var i=0; i<ndecisions; i++) {\n        var s = this.readInt();\n        var decState = atn.states[s];\n        atn.decisionToState.push(decState);\n        decState.decision = i;\n    }\n};\n\nATNDeserializer.prototype.readLexerActions = function(atn) {\n    if (atn.grammarType === ATNType.LEXER) {\n        var count = this.readInt();\n        atn.lexerActions = initArray(count, null);\n        for (var i=0; i<count; i++) {\n            var actionType = this.readInt();\n            var data1 = this.readInt();\n            if (data1 === 0xFFFF) {\n                data1 = -1;\n            }\n            var data2 = this.readInt();\n            if (data2 === 0xFFFF) {\n                data2 = -1;\n            }\n            var lexerAction = this.lexerActionFactory(actionType, data1, data2);\n            atn.lexerActions[i] = lexerAction;\n        }\n    }\n};\n\nATNDeserializer.prototype.generateRuleBypassTransitions = function(atn) {\n\tvar i;\n    var count = atn.ruleToStartState.length;\n    for(i=0; i<count; i++) {\n        atn.ruleToTokenType[i] = atn.maxTokenType + i + 1;\n    }\n    for(i=0; i<count; i++) {\n        this.generateRuleBypassTransition(atn, i);\n    }\n};\n\nATNDeserializer.prototype.generateRuleBypassTransition = function(atn, idx) {\n\tvar i, state;\n    var bypassStart = new BasicBlockStartState();\n    bypassStart.ruleIndex = idx;\n    atn.addState(bypassStart);\n\n    var bypassStop = new BlockEndState();\n    bypassStop.ruleIndex = idx;\n    atn.addState(bypassStop);\n\n    bypassStart.endState = bypassStop;\n    atn.defineDecisionState(bypassStart);\n\n    bypassStop.startState = bypassStart;\n\n    var excludeTransition = null;\n    var endState = null;\n\n    if (atn.ruleToStartState[idx].isPrecedenceRule) {\n        // wrap from the beginning of the rule to the StarLoopEntryState\n        endState = null;\n        for(i=0; i<atn.states.length; i++) {\n            state = atn.states[i];\n            if (this.stateIsEndStateFor(state, idx)) {\n                endState = state;\n                excludeTransition = state.loopBackState.transitions[0];\n                break;\n            }\n        }\n        if (excludeTransition === null) {\n            throw (\"Couldn't identify final state of the precedence rule prefix section.\");\n        }\n    } else {\n        endState = atn.ruleToStopState[idx];\n    }\n\n    // all non-excluded transitions that currently target end state need to\n\t// target blockEnd instead\n    for(i=0; i<atn.states.length; i++) {\n        state = atn.states[i];\n        for(var j=0; j<state.transitions.length; j++) {\n            var transition = state.transitions[j];\n            if (transition === excludeTransition) {\n                continue;\n            }\n            if (transition.target === endState) {\n                transition.target = bypassStop;\n            }\n        }\n    }\n\n    // all transitions leaving the rule start state need to leave blockStart\n\t// instead\n    var ruleToStartState = atn.ruleToStartState[idx];\n    var count = ruleToStartState.transitions.length;\n    while ( count > 0) {\n        bypassStart.addTransition(ruleToStartState.transitions[count-1]);\n        ruleToStartState.transitions = ruleToStartState.transitions.slice(-1);\n    }\n    // link the new states\n    atn.ruleToStartState[idx].addTransition(new EpsilonTransition(bypassStart));\n    bypassStop.addTransition(new EpsilonTransition(endState));\n\n    var matchState = new BasicState();\n    atn.addState(matchState);\n    matchState.addTransition(new AtomTransition(bypassStop, atn.ruleToTokenType[idx]));\n    bypassStart.addTransition(new EpsilonTransition(matchState));\n};\n\nATNDeserializer.prototype.stateIsEndStateFor = function(state, idx) {\n    if ( state.ruleIndex !== idx) {\n        return null;\n    }\n    if (!( state instanceof StarLoopEntryState)) {\n        return null;\n    }\n    var maybeLoopEndState = state.transitions[state.transitions.length - 1].target;\n    if (!( maybeLoopEndState instanceof LoopEndState)) {\n        return null;\n    }\n    if (maybeLoopEndState.epsilonOnlyTransitions &&\n        (maybeLoopEndState.transitions[0].target instanceof RuleStopState)) {\n        return state;\n    } else {\n        return null;\n    }\n};\n\n//\n// Analyze the {@link StarLoopEntryState} states in the specified ATN to set\n// the {@link StarLoopEntryState//isPrecedenceDecision} field to the\n// correct value.\n//\n// @param atn The ATN.\n//\nATNDeserializer.prototype.markPrecedenceDecisions = function(atn) {\n\tfor(var i=0; i<atn.states.length; i++) {\n\t\tvar state = atn.states[i];\n\t\tif (!( state instanceof StarLoopEntryState)) {\n            continue;\n        }\n        // We analyze the ATN to determine if this ATN decision state is the\n        // decision for the closure block that determines whether a\n        // precedence rule should continue or complete.\n        //\n        if ( atn.ruleToStartState[state.ruleIndex].isPrecedenceRule) {\n            var maybeLoopEndState = state.transitions[state.transitions.length - 1].target;\n            if (maybeLoopEndState instanceof LoopEndState) {\n                if ( maybeLoopEndState.epsilonOnlyTransitions &&\n                        (maybeLoopEndState.transitions[0].target instanceof RuleStopState)) {\n                    state.isPrecedenceDecision = true;\n                }\n            }\n        }\n\t}\n};\n\nATNDeserializer.prototype.verifyATN = function(atn) {\n    if (!this.deserializationOptions.verifyATN) {\n        return;\n    }\n    // verify assumptions\n\tfor(var i=0; i<atn.states.length; i++) {\n        var state = atn.states[i];\n        if (state === null) {\n            continue;\n        }\n        this.checkCondition(state.epsilonOnlyTransitions || state.transitions.length <= 1);\n        if (state instanceof PlusBlockStartState) {\n            this.checkCondition(state.loopBackState !== null);\n        } else  if (state instanceof StarLoopEntryState) {\n            this.checkCondition(state.loopBackState !== null);\n            this.checkCondition(state.transitions.length === 2);\n            if (state.transitions[0].target instanceof StarBlockStartState) {\n                this.checkCondition(state.transitions[1].target instanceof LoopEndState);\n                this.checkCondition(!state.nonGreedy);\n            } else if (state.transitions[0].target instanceof LoopEndState) {\n                this.checkCondition(state.transitions[1].target instanceof StarBlockStartState);\n                this.checkCondition(state.nonGreedy);\n            } else {\n                throw(\"IllegalState\");\n            }\n        } else if (state instanceof StarLoopbackState) {\n            this.checkCondition(state.transitions.length === 1);\n            this.checkCondition(state.transitions[0].target instanceof StarLoopEntryState);\n        } else if (state instanceof LoopEndState) {\n            this.checkCondition(state.loopBackState !== null);\n        } else if (state instanceof RuleStartState) {\n            this.checkCondition(state.stopState !== null);\n        } else if (state instanceof BlockStartState) {\n            this.checkCondition(state.endState !== null);\n        } else if (state instanceof BlockEndState) {\n            this.checkCondition(state.startState !== null);\n        } else if (state instanceof DecisionState) {\n            this.checkCondition(state.transitions.length <= 1 || state.decision >= 0);\n        } else {\n            this.checkCondition(state.transitions.length <= 1 || (state instanceof RuleStopState));\n        }\n\t}\n};\n\nATNDeserializer.prototype.checkCondition = function(condition, message) {\n    if (!condition) {\n        if (message === undefined || message===null) {\n            message = \"IllegalState\";\n        }\n        throw (message);\n    }\n};\n\nATNDeserializer.prototype.readInt = function() {\n    return this.data[this.pos++];\n};\n\nATNDeserializer.prototype.readInt32 = function() {\n    var low = this.readInt();\n    var high = this.readInt();\n    return low | (high << 16);\n};\n\nATNDeserializer.prototype.readLong = function() {\n    var low = this.readInt32();\n    var high = this.readInt32();\n    return (low & 0x00000000FFFFFFFF) | (high << 32);\n};\n\nfunction createByteToHex() {\n\tvar bth = [];\n\tfor (var i = 0; i < 256; i++) {\n\t\tbth[i] = (i + 0x100).toString(16).substr(1).toUpperCase();\n\t}\n\treturn bth;\n}\n\nvar byteToHex = createByteToHex();\n\nATNDeserializer.prototype.readUUID = function() {\n\tvar bb = [];\n\tfor(var i=7;i>=0;i--) {\n\t\tvar int = this.readInt();\n\t\t/* jshint bitwise: false */\n\t\tbb[(2*i)+1] = int & 0xFF;\n\t\tbb[2*i] = (int >> 8) & 0xFF;\n\t}\n    return byteToHex[bb[0]] + byteToHex[bb[1]] +\n    byteToHex[bb[2]] + byteToHex[bb[3]] + '-' +\n    byteToHex[bb[4]] + byteToHex[bb[5]] + '-' +\n    byteToHex[bb[6]] + byteToHex[bb[7]] + '-' +\n    byteToHex[bb[8]] + byteToHex[bb[9]] + '-' +\n    byteToHex[bb[10]] + byteToHex[bb[11]] +\n    byteToHex[bb[12]] + byteToHex[bb[13]] +\n    byteToHex[bb[14]] + byteToHex[bb[15]];\n};\n\nATNDeserializer.prototype.edgeFactory = function(atn, type, src, trg, arg1, arg2, arg3, sets) {\n    var target = atn.states[trg];\n    switch(type) {\n    case Transition.EPSILON:\n        return new EpsilonTransition(target);\n    case Transition.RANGE:\n        return arg3 !== 0 ? new RangeTransition(target, Token.EOF, arg2) : new RangeTransition(target, arg1, arg2);\n    case Transition.RULE:\n        return new RuleTransition(atn.states[arg1], arg2, arg3, target);\n    case Transition.PREDICATE:\n        return new PredicateTransition(target, arg1, arg2, arg3 !== 0);\n    case Transition.PRECEDENCE:\n        return new PrecedencePredicateTransition(target, arg1);\n    case Transition.ATOM:\n        return arg3 !== 0 ? new AtomTransition(target, Token.EOF) : new AtomTransition(target, arg1);\n    case Transition.ACTION:\n        return new ActionTransition(target, arg1, arg2, arg3 !== 0);\n    case Transition.SET:\n        return new SetTransition(target, sets[arg1]);\n    case Transition.NOT_SET:\n        return new NotSetTransition(target, sets[arg1]);\n    case Transition.WILDCARD:\n        return new WildcardTransition(target);\n    default:\n        throw \"The specified transition type: \" + type + \" is not valid.\";\n    }\n};\n\nATNDeserializer.prototype.stateFactory = function(type, ruleIndex) {\n    if (this.stateFactories === null) {\n        var sf = [];\n        sf[ATNState.INVALID_TYPE] = null;\n        sf[ATNState.BASIC] = function() { return new BasicState(); };\n        sf[ATNState.RULE_START] = function() { return new RuleStartState(); };\n        sf[ATNState.BLOCK_START] = function() { return new BasicBlockStartState(); };\n        sf[ATNState.PLUS_BLOCK_START] = function() { return new PlusBlockStartState(); };\n        sf[ATNState.STAR_BLOCK_START] = function() { return new StarBlockStartState(); };\n        sf[ATNState.TOKEN_START] = function() { return new TokensStartState(); };\n        sf[ATNState.RULE_STOP] = function() { return new RuleStopState(); };\n        sf[ATNState.BLOCK_END] = function() { return new BlockEndState(); };\n        sf[ATNState.STAR_LOOP_BACK] = function() { return new StarLoopbackState(); };\n        sf[ATNState.STAR_LOOP_ENTRY] = function() { return new StarLoopEntryState(); };\n        sf[ATNState.PLUS_LOOP_BACK] = function() { return new PlusLoopbackState(); };\n        sf[ATNState.LOOP_END] = function() { return new LoopEndState(); };\n        this.stateFactories = sf;\n    }\n    if (type>this.stateFactories.length || this.stateFactories[type] === null) {\n        throw(\"The specified state type \" + type + \" is not valid.\");\n    } else {\n        var s = this.stateFactories[type]();\n        if (s!==null) {\n            s.ruleIndex = ruleIndex;\n            return s;\n        }\n    }\n};\n\nATNDeserializer.prototype.lexerActionFactory = function(type, data1, data2) {\n    if (this.actionFactories === null) {\n        var af = [];\n        af[LexerActionType.CHANNEL] = function(data1, data2) { return new LexerChannelAction(data1); };\n        af[LexerActionType.CUSTOM] = function(data1, data2) { return new LexerCustomAction(data1, data2); };\n        af[LexerActionType.MODE] = function(data1, data2) { return new LexerModeAction(data1); };\n        af[LexerActionType.MORE] = function(data1, data2) { return LexerMoreAction.INSTANCE; };\n        af[LexerActionType.POP_MODE] = function(data1, data2) { return LexerPopModeAction.INSTANCE; };\n        af[LexerActionType.PUSH_MODE] = function(data1, data2) { return new LexerPushModeAction(data1); };\n        af[LexerActionType.SKIP] = function(data1, data2) { return LexerSkipAction.INSTANCE; };\n        af[LexerActionType.TYPE] = function(data1, data2) { return new LexerTypeAction(data1); };\n        this.actionFactories = af;\n    }\n    if (type>this.actionFactories.length || this.actionFactories[type] === null) {\n        throw(\"The specified lexer action type \" + type + \" is not valid.\");\n    } else {\n        return this.actionFactories[type](data1, data2);\n    }\n};\n\n\nexports.ATNDeserializer = ATNDeserializer;","/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nfunction ATNDeserializationOptions(copyFrom) {\n\tif(copyFrom===undefined) {\n\t\tcopyFrom = null;\n\t}\n\tthis.readOnly = false;\n    this.verifyATN = copyFrom===null ? true : copyFrom.verifyATN;\n    this.generateRuleBypassTransitions = copyFrom===null ? false : copyFrom.generateRuleBypassTransitions;\n\n    return this;\n}\n\nATNDeserializationOptions.defaultOptions = new ATNDeserializationOptions();\nATNDeserializationOptions.defaultOptions.readOnly = true;\n\n//    def __setattr__(self, key, value):\n//        if key!=\"readOnly\" and self.readOnly:\n//            raise Exception(\"The object is read only.\")\n//        super(type(self), self).__setattr__(key,value)\n\nexports.ATNDeserializationOptions = ATNDeserializationOptions;\n","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n //\n\nfunction LexerActionType() {\n}\n\nLexerActionType.CHANNEL = 0;     //The type of a {@link LexerChannelAction} action.\nLexerActionType.CUSTOM = 1;      //The type of a {@link LexerCustomAction} action.\nLexerActionType.MODE = 2;        //The type of a {@link LexerModeAction} action.\nLexerActionType.MORE = 3;        //The type of a {@link LexerMoreAction} action.\nLexerActionType.POP_MODE = 4;    //The type of a {@link LexerPopModeAction} action.\nLexerActionType.PUSH_MODE = 5;   //The type of a {@link LexerPushModeAction} action.\nLexerActionType.SKIP = 6;        //The type of a {@link LexerSkipAction} action.\nLexerActionType.TYPE = 7;        //The type of a {@link LexerTypeAction} action.\n\nfunction LexerAction(action) {\n    this.actionType = action;\n    this.isPositionDependent = false;\n    return this;\n}\n\nLexerAction.prototype.hashCode = function() {\n    var hash = new Hash();\n    this.updateHashCode(hash);\n    return hash.finish()\n};\n\nLexerAction.prototype.updateHashCode = function(hash) {\n    hash.update(this.actionType);\n};\n\nLexerAction.prototype.equals = function(other) {\n    return this === other;\n};\n\n\n\n//\n// Implements the {@code skip} lexer action by calling {@link Lexer//skip}.\n//\n// <p>The {@code skip} command does not have any parameters, so this action is\n// implemented as a singleton instance exposed by {@link //INSTANCE}.</p>\nfunction LexerSkipAction() {\n\tLexerAction.call(this, LexerActionType.SKIP);\n\treturn this;\n}\n\nLexerSkipAction.prototype = Object.create(LexerAction.prototype);\nLexerSkipAction.prototype.constructor = LexerSkipAction;\n\n// Provides a singleton instance of this parameterless lexer action.\nLexerSkipAction.INSTANCE = new LexerSkipAction();\n\nLexerSkipAction.prototype.execute = function(lexer) {\n    lexer.skip();\n};\n\nLexerSkipAction.prototype.toString = function() {\n\treturn \"skip\";\n};\n\n//  Implements the {@code type} lexer action by calling {@link Lexer//setType}\n// with the assigned type.\nfunction LexerTypeAction(type) {\n\tLexerAction.call(this, LexerActionType.TYPE);\n\tthis.type = type;\n\treturn this;\n}\n\nLexerTypeAction.prototype = Object.create(LexerAction.prototype);\nLexerTypeAction.prototype.constructor = LexerTypeAction;\n\nLexerTypeAction.prototype.execute = function(lexer) {\n    lexer.type = this.type;\n};\n\nLexerTypeAction.prototype.updateHashCode = function(hash) {\n    hash.update(this.actionType, this.type);\n};\n\n\nLexerTypeAction.prototype.equals = function(other) {\n    if(this === other) {\n        return true;\n    } else if (! (other instanceof LexerTypeAction)) {\n        return false;\n    } else {\n        return this.type === other.type;\n    }\n};\n\nLexerTypeAction.prototype.toString = function() {\n    return \"type(\" + this.type + \")\";\n};\n\n// Implements the {@code pushMode} lexer action by calling\n// {@link Lexer//pushMode} with the assigned mode.\nfunction LexerPushModeAction(mode) {\n\tLexerAction.call(this, LexerActionType.PUSH_MODE);\n    this.mode = mode;\n    return this;\n}\n\nLexerPushModeAction.prototype = Object.create(LexerAction.prototype);\nLexerPushModeAction.prototype.constructor = LexerPushModeAction;\n\n// <p>This action is implemented by calling {@link Lexer//pushMode} with the\n// value provided by {@link //getMode}.</p>\nLexerPushModeAction.prototype.execute = function(lexer) {\n    lexer.pushMode(this.mode);\n};\n\nLexerPushModeAction.prototype.updateHashCode = function(hash) {\n    hash.update(this.actionType, this.mode);\n};\n\nLexerPushModeAction.prototype.equals = function(other) {\n    if (this === other) {\n        return true;\n    } else if (! (other instanceof LexerPushModeAction)) {\n        return false;\n    } else {\n        return this.mode === other.mode;\n    }\n};\n\nLexerPushModeAction.prototype.toString = function() {\n\treturn \"pushMode(\" + this.mode + \")\";\n};\n\n\n// Implements the {@code popMode} lexer action by calling {@link Lexer//popMode}.\n//\n// <p>The {@code popMode} command does not have any parameters, so this action is\n// implemented as a singleton instance exposed by {@link //INSTANCE}.</p>\nfunction LexerPopModeAction() {\n\tLexerAction.call(this,LexerActionType.POP_MODE);\n\treturn this;\n}\n\nLexerPopModeAction.prototype = Object.create(LexerAction.prototype);\nLexerPopModeAction.prototype.constructor = LexerPopModeAction;\n\nLexerPopModeAction.INSTANCE = new LexerPopModeAction();\n\n// <p>This action is implemented by calling {@link Lexer//popMode}.</p>\nLexerPopModeAction.prototype.execute = function(lexer) {\n    lexer.popMode();\n};\n\nLexerPopModeAction.prototype.toString = function() {\n\treturn \"popMode\";\n};\n\n// Implements the {@code more} lexer action by calling {@link Lexer//more}.\n//\n// <p>The {@code more} command does not have any parameters, so this action is\n// implemented as a singleton instance exposed by {@link //INSTANCE}.</p>\nfunction LexerMoreAction() {\n\tLexerAction.call(this, LexerActionType.MORE);\n\treturn this;\n}\n\nLexerMoreAction.prototype = Object.create(LexerAction.prototype);\nLexerMoreAction.prototype.constructor = LexerMoreAction;\n\nLexerMoreAction.INSTANCE = new LexerMoreAction();\n\n// <p>This action is implemented by calling {@link Lexer//popMode}.</p>\nLexerMoreAction.prototype.execute = function(lexer) {\n    lexer.more();\n};\n\nLexerMoreAction.prototype.toString = function() {\n    return \"more\";\n};\n\n\n// Implements the {@code mode} lexer action by calling {@link Lexer//mode} with\n// the assigned mode.\nfunction LexerModeAction(mode) {\n\tLexerAction.call(this, LexerActionType.MODE);\n    this.mode = mode;\n    return this;\n}\n\nLexerModeAction.prototype = Object.create(LexerAction.prototype);\nLexerModeAction.prototype.constructor = LexerModeAction;\n\n// <p>This action is implemented by calling {@link Lexer//mode} with the\n// value provided by {@link //getMode}.</p>\nLexerModeAction.prototype.execute = function(lexer) {\n    lexer.mode(this.mode);\n};\n\nLexerModeAction.prototype.updateHashCode = function(hash) {\n    hash.update(this.actionType, this.mode);\n};\n\nLexerModeAction.prototype.equals = function(other) {\n    if (this === other) {\n        return true;\n    } else if (! (other instanceof LexerModeAction)) {\n        return false;\n    } else {\n        return this.mode === other.mode;\n    }\n};\n\nLexerModeAction.prototype.toString = function() {\n    return \"mode(\" + this.mode + \")\";\n};\n\n// Executes a custom lexer action by calling {@link Recognizer//action} with the\n// rule and action indexes assigned to the custom action. The implementation of\n// a custom action is added to the generated code for the lexer in an override\n// of {@link Recognizer//action} when the grammar is compiled.\n//\n// <p>This class may represent embedded actions created with the <code>{...}</code>\n// syntax in ANTLR 4, as well as actions created for lexer commands where the\n// command argument could not be evaluated when the grammar was compiled.</p>\n\n\n    // Constructs a custom lexer action with the specified rule and action\n    // indexes.\n    //\n    // @param ruleIndex The rule index to use for calls to\n    // {@link Recognizer//action}.\n    // @param actionIndex The action index to use for calls to\n    // {@link Recognizer//action}.\n\nfunction LexerCustomAction(ruleIndex, actionIndex) {\n\tLexerAction.call(this, LexerActionType.CUSTOM);\n    this.ruleIndex = ruleIndex;\n    this.actionIndex = actionIndex;\n    this.isPositionDependent = true;\n    return this;\n}\n\nLexerCustomAction.prototype = Object.create(LexerAction.prototype);\nLexerCustomAction.prototype.constructor = LexerCustomAction;\n\n// <p>Custom actions are implemented by calling {@link Lexer//action} with the\n// appropriate rule and action indexes.</p>\nLexerCustomAction.prototype.execute = function(lexer) {\n    lexer.action(null, this.ruleIndex, this.actionIndex);\n};\n\nLexerCustomAction.prototype.updateHashCode = function(hash) {\n    hash.update(this.actionType, this.ruleIndex, this.actionIndex);\n};\n\nLexerCustomAction.prototype.equals = function(other) {\n    if (this === other) {\n        return true;\n    } else if (! (other instanceof LexerCustomAction)) {\n        return false;\n    } else {\n        return this.ruleIndex === other.ruleIndex && this.actionIndex === other.actionIndex;\n    }\n};\n\n// Implements the {@code channel} lexer action by calling\n// {@link Lexer//setChannel} with the assigned channel.\n// Constructs a new {@code channel} action with the specified channel value.\n// @param channel The channel value to pass to {@link Lexer//setChannel}.\nfunction LexerChannelAction(channel) {\n\tLexerAction.call(this, LexerActionType.CHANNEL);\n    this.channel = channel;\n    return this;\n}\n\nLexerChannelAction.prototype = Object.create(LexerAction.prototype);\nLexerChannelAction.prototype.constructor = LexerChannelAction;\n\n// <p>This action is implemented by calling {@link Lexer//setChannel} with the\n// value provided by {@link //getChannel}.</p>\nLexerChannelAction.prototype.execute = function(lexer) {\n    lexer._channel = this.channel;\n};\n\nLexerChannelAction.prototype.updateHashCode = function(hash) {\n    hash.update(this.actionType, this.channel);\n};\n\nLexerChannelAction.prototype.equals = function(other) {\n    if (this === other) {\n        return true;\n    } else if (! (other instanceof LexerChannelAction)) {\n        return false;\n    } else {\n        return this.channel === other.channel;\n    }\n};\n\nLexerChannelAction.prototype.toString = function() {\n    return \"channel(\" + this.channel + \")\";\n};\n\n// This implementation of {@link LexerAction} is used for tracking input offsets\n// for position-dependent actions within a {@link LexerActionExecutor}.\n//\n// <p>This action is not serialized as part of the ATN, and is only required for\n// position-dependent lexer actions which appear at a location other than the\n// end of a rule. For more information about DFA optimizations employed for\n// lexer actions, see {@link LexerActionExecutor//append} and\n// {@link LexerActionExecutor//fixOffsetBeforeMatch}.</p>\n\n// Constructs a new indexed custom action by associating a character offset\n// with a {@link LexerAction}.\n//\n// <p>Note: This class is only required for lexer actions for which\n// {@link LexerAction//isPositionDependent} returns {@code true}.</p>\n//\n// @param offset The offset into the input {@link CharStream}, relative to\n// the token start index, at which the specified lexer action should be\n// executed.\n// @param action The lexer action to execute at a particular offset in the\n// input {@link CharStream}.\nfunction LexerIndexedCustomAction(offset, action) {\n\tLexerAction.call(this, action.actionType);\n    this.offset = offset;\n    this.action = action;\n    this.isPositionDependent = true;\n    return this;\n}\n\nLexerIndexedCustomAction.prototype = Object.create(LexerAction.prototype);\nLexerIndexedCustomAction.prototype.constructor = LexerIndexedCustomAction;\n\n// <p>This method calls {@link //execute} on the result of {@link //getAction}\n// using the provided {@code lexer}.</p>\nLexerIndexedCustomAction.prototype.execute = function(lexer) {\n    // assume the input stream position was properly set by the calling code\n    this.action.execute(lexer);\n};\n\nLexerIndexedCustomAction.prototype.updateHashCode = function(hash) {\n    hash.update(this.actionType, this.offset, this.action);\n};\n\nLexerIndexedCustomAction.prototype.equals = function(other) {\n    if (this === other) {\n        return true;\n    } else if (! (other instanceof LexerIndexedCustomAction)) {\n        return false;\n    } else {\n        return this.offset === other.offset && this.action === other.action;\n    }\n};\n\n\nexports.LexerActionType = LexerActionType;\nexports.LexerSkipAction = LexerSkipAction;\nexports.LexerChannelAction = LexerChannelAction;\nexports.LexerCustomAction = LexerCustomAction;\nexports.LexerIndexedCustomAction = LexerIndexedCustomAction;\nexports.LexerMoreAction = LexerMoreAction;\nexports.LexerTypeAction = LexerTypeAction;\nexports.LexerPushModeAction = LexerPushModeAction;\nexports.LexerPopModeAction = LexerPopModeAction;\nexports.LexerModeAction = LexerModeAction;","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n//\n\nvar Token = require('./Token').Token;\nvar ConsoleErrorListener = require('./error/ErrorListener').ConsoleErrorListener;\nvar ProxyErrorListener = require('./error/ErrorListener').ProxyErrorListener;\n\nfunction Recognizer() {\n    this._listeners = [ ConsoleErrorListener.INSTANCE ];\n    this._interp = null;\n    this._stateNumber = -1;\n    return this;\n}\n\nRecognizer.tokenTypeMapCache = {};\nRecognizer.ruleIndexMapCache = {};\n\n\nRecognizer.prototype.checkVersion = function(toolVersion) {\n    var runtimeVersion = \"4.7.2\";\n    if (runtimeVersion!==toolVersion) {\n        console.log(\"ANTLR runtime and generated code versions disagree: \"+runtimeVersion+\"!=\"+toolVersion);\n    }\n};\n\nRecognizer.prototype.addErrorListener = function(listener) {\n    this._listeners.push(listener);\n};\n\nRecognizer.prototype.removeErrorListeners = function() {\n    this._listeners = [];\n};\n\nRecognizer.prototype.getTokenTypeMap = function() {\n    var tokenNames = this.getTokenNames();\n    if (tokenNames===null) {\n        throw(\"The current recognizer does not provide a list of token names.\");\n    }\n    var result = this.tokenTypeMapCache[tokenNames];\n    if(result===undefined) {\n        result = tokenNames.reduce(function(o, k, i) { o[k] = i; });\n        result.EOF = Token.EOF;\n        this.tokenTypeMapCache[tokenNames] = result;\n    }\n    return result;\n};\n\n// Get a map from rule names to rule indexes.\n//\n// <p>Used for XPath and tree pattern compilation.</p>\n//\nRecognizer.prototype.getRuleIndexMap = function() {\n    var ruleNames = this.ruleNames;\n    if (ruleNames===null) {\n        throw(\"The current recognizer does not provide a list of rule names.\");\n    }\n    var result = this.ruleIndexMapCache[ruleNames];\n    if(result===undefined) {\n        result = ruleNames.reduce(function(o, k, i) { o[k] = i; });\n        this.ruleIndexMapCache[ruleNames] = result;\n    }\n    return result;\n};\n\nRecognizer.prototype.getTokenType = function(tokenName) {\n    var ttype = this.getTokenTypeMap()[tokenName];\n    if (ttype !==undefined) {\n        return ttype;\n    } else {\n        return Token.INVALID_TYPE;\n    }\n};\n\n\n// What is the error header, normally line/character position information?//\nRecognizer.prototype.getErrorHeader = function(e) {\n    var line = e.getOffendingToken().line;\n    var column = e.getOffendingToken().column;\n    return \"line \" + line + \":\" + column;\n};\n\n\n// How should a token be displayed in an error message? The default\n//  is to display just the text, but during development you might\n//  want to have a lot of information spit out.  Override in that case\n//  to use t.toString() (which, for CommonToken, dumps everything about\n//  the token). This is better than forcing you to override a method in\n//  your token objects because you don't have to go modify your lexer\n//  so that it creates a new Java type.\n//\n// @deprecated This method is not called by the ANTLR 4 Runtime. Specific\n// implementations of {@link ANTLRErrorStrategy} may provide a similar\n// feature when necessary. For example, see\n// {@link DefaultErrorStrategy//getTokenErrorDisplay}.\n//\nRecognizer.prototype.getTokenErrorDisplay = function(t) {\n    if (t===null) {\n        return \"<no token>\";\n    }\n    var s = t.text;\n    if (s===null) {\n        if (t.type===Token.EOF) {\n            s = \"<EOF>\";\n        } else {\n            s = \"<\" + t.type + \">\";\n        }\n    }\n    s = s.replace(\"\\n\",\"\\\\n\").replace(\"\\r\",\"\\\\r\").replace(\"\\t\",\"\\\\t\");\n    return \"'\" + s + \"'\";\n};\n\nRecognizer.prototype.getErrorListenerDispatch = function() {\n    return new ProxyErrorListener(this._listeners);\n};\n\n// subclass needs to override these if there are sempreds or actions\n// that the ATN interp needs to execute\nRecognizer.prototype.sempred = function(localctx, ruleIndex, actionIndex) {\n    return true;\n};\n\nRecognizer.prototype.precpred = function(localctx , precedence) {\n    return true;\n};\n\n//Indicate that the recognizer has changed internal state that is\n//consistent with the ATN state passed in.  This way we always know\n//where we are in the ATN as the parser goes along. The rule\n//context objects form a stack that lets us see the stack of\n//invoking rules. Combine this and we have complete ATN\n//configuration information.\n\nObject.defineProperty(Recognizer.prototype, \"state\", {\n\tget : function() {\n\t\treturn this._stateNumber;\n\t},\n\tset : function(state) {\n\t\tthis._stateNumber = state;\n\t}\n});\n\n\nexports.Recognizer = Recognizer;\n","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n///\n\nvar DFAState = require('./../dfa/DFAState').DFAState;\nvar ATNConfigSet = require('./ATNConfigSet').ATNConfigSet;\nvar getCachedPredictionContext = require('./../PredictionContext').getCachedPredictionContext;\n\nfunction ATNSimulator(atn, sharedContextCache) {\n\n    // The context cache maps all PredictionContext objects that are ==\n    //  to a single cached copy. This cache is shared across all contexts\n    //  in all ATNConfigs in all DFA states.  We rebuild each ATNConfigSet\n    //  to use only cached nodes/graphs in addDFAState(). We don't want to\n    //  fill this during closure() since there are lots of contexts that\n    //  pop up but are not used ever again. It also greatly slows down closure().\n    //\n    //  <p>This cache makes a huge difference in memory and a little bit in speed.\n    //  For the Java grammar on java.*, it dropped the memory requirements\n    //  at the end from 25M to 16M. We don't store any of the full context\n    //  graphs in the DFA because they are limited to local context only,\n    //  but apparently there's a lot of repetition there as well. We optimize\n    //  the config contexts before storing the config set in the DFA states\n    //  by literally rebuilding them with cached subgraphs only.</p>\n    //\n    //  <p>I tried a cache for use during closure operations, that was\n    //  whacked after each adaptivePredict(). It cost a little bit\n    //  more time I think and doesn't save on the overall footprint\n    //  so it's not worth the complexity.</p>\n    ///\n    this.atn = atn;\n    this.sharedContextCache = sharedContextCache;\n    return this;\n}\n\n// Must distinguish between missing edge and edge we know leads nowhere///\nATNSimulator.ERROR = new DFAState(0x7FFFFFFF, new ATNConfigSet());\n\n\nATNSimulator.prototype.getCachedContext = function(context) {\n    if (this.sharedContextCache ===null) {\n        return context;\n    }\n    var visited = {};\n    return getCachedPredictionContext(context, this.sharedContextCache, visited);\n};\n\nexports.ATNSimulator = ATNSimulator;\n","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n//\n//\n// This enumeration defines the prediction modes available in ANTLR 4 along with\n// utility methods for analyzing configuration sets for conflicts and/or\n// ambiguities.\n\nvar Set = require('./../Utils').Set;\nvar Map = require('./../Utils').Map;\nvar BitSet = require('./../Utils').BitSet;\nvar AltDict = require('./../Utils').AltDict;\nvar ATN = require('./ATN').ATN;\nvar RuleStopState = require('./ATNState').RuleStopState;\nvar ATNConfigSet = require('./ATNConfigSet').ATNConfigSet;\nvar ATNConfig = require('./ATNConfig').ATNConfig;\nvar SemanticContext = require('./SemanticContext').SemanticContext;\nvar Hash = require(\"../Utils\").Hash;\nvar hashStuff = require('./../Utils').hashStuff;\nvar equalArrays = require('./../Utils').equalArrays;\n\nfunction PredictionMode() {\n\treturn this;\n}\n\n//\n// The SLL(*) prediction mode. This prediction mode ignores the current\n// parser context when making predictions. This is the fastest prediction\n// mode, and provides correct results for many grammars. This prediction\n// mode is more powerful than the prediction mode provided by ANTLR 3, but\n// may result in syntax errors for grammar and input combinations which are\n// not SLL.\n//\n// <p>\n// When using this prediction mode, the parser will either return a correct\n// parse tree (i.e. the same parse tree that would be returned with the\n// {@link //LL} prediction mode), or it will report a syntax error. If a\n// syntax error is encountered when using the {@link //SLL} prediction mode,\n// it may be due to either an actual syntax error in the input or indicate\n// that the particular combination of grammar and input requires the more\n// powerful {@link //LL} prediction abilities to complete successfully.</p>\n//\n// <p>\n// This prediction mode does not provide any guarantees for prediction\n// behavior for syntactically-incorrect inputs.</p>\n//\nPredictionMode.SLL = 0;\n//\n// The LL(*) prediction mode. This prediction mode allows the current parser\n// context to be used for resolving SLL conflicts that occur during\n// prediction. This is the fastest prediction mode that guarantees correct\n// parse results for all combinations of grammars with syntactically correct\n// inputs.\n//\n// <p>\n// When using this prediction mode, the parser will make correct decisions\n// for all syntactically-correct grammar and input combinations. However, in\n// cases where the grammar is truly ambiguous this prediction mode might not\n// report a precise answer for <em>exactly which</em> alternatives are\n// ambiguous.</p>\n//\n// <p>\n// This prediction mode does not provide any guarantees for prediction\n// behavior for syntactically-incorrect inputs.</p>\n//\nPredictionMode.LL = 1;\n//\n// The LL(*) prediction mode with exact ambiguity detection. In addition to\n// the correctness guarantees provided by the {@link //LL} prediction mode,\n// this prediction mode instructs the prediction algorithm to determine the\n// complete and exact set of ambiguous alternatives for every ambiguous\n// decision encountered while parsing.\n//\n// <p>\n// This prediction mode may be used for diagnosing ambiguities during\n// grammar development. Due to the performance overhead of calculating sets\n// of ambiguous alternatives, this prediction mode should be avoided when\n// the exact results are not necessary.</p>\n//\n// <p>\n// This prediction mode does not provide any guarantees for prediction\n// behavior for syntactically-incorrect inputs.</p>\n//\nPredictionMode.LL_EXACT_AMBIG_DETECTION = 2;\n\n\n//\n// Computes the SLL prediction termination condition.\n//\n// <p>\n// This method computes the SLL prediction termination condition for both of\n// the following cases.</p>\n//\n// <ul>\n// <li>The usual SLL+LL fallback upon SLL conflict</li>\n// <li>Pure SLL without LL fallback</li>\n// </ul>\n//\n// <p><strong>COMBINED SLL+LL PARSING</strong></p>\n//\n// <p>When LL-fallback is enabled upon SLL conflict, correct predictions are\n// ensured regardless of how the termination condition is computed by this\n// method. Due to the substantially higher cost of LL prediction, the\n// prediction should only fall back to LL when the additional lookahead\n// cannot lead to a unique SLL prediction.</p>\n//\n// <p>Assuming combined SLL+LL parsing, an SLL configuration set with only\n// conflicting subsets should fall back to full LL, even if the\n// configuration sets don't resolve to the same alternative (e.g.\n// {@code {1,2}} and {@code {3,4}}. If there is at least one non-conflicting\n// configuration, SLL could continue with the hopes that more lookahead will\n// resolve via one of those non-conflicting configurations.</p>\n//\n// <p>Here's the prediction termination rule them: SLL (for SLL+LL parsing)\n// stops when it sees only conflicting configuration subsets. In contrast,\n// full LL keeps going when there is uncertainty.</p>\n//\n// <p><strong>HEURISTIC</strong></p>\n//\n// <p>As a heuristic, we stop prediction when we see any conflicting subset\n// unless we see a state that only has one alternative associated with it.\n// The single-alt-state thing lets prediction continue upon rules like\n// (otherwise, it would admit defeat too soon):</p>\n//\n// <p>{@code [12|1|[], 6|2|[], 12|2|[]]. s : (ID | ID ID?) ';' ;}</p>\n//\n// <p>When the ATN simulation reaches the state before {@code ';'}, it has a\n// DFA state that looks like: {@code [12|1|[], 6|2|[], 12|2|[]]}. Naturally\n// {@code 12|1|[]} and {@code 12|2|[]} conflict, but we cannot stop\n// processing this node because alternative to has another way to continue,\n// via {@code [6|2|[]]}.</p>\n//\n// <p>It also let's us continue for this rule:</p>\n//\n// <p>{@code [1|1|[], 1|2|[], 8|3|[]] a : A | A | A B ;}</p>\n//\n// <p>After matching input A, we reach the stop state for rule A, state 1.\n// State 8 is the state right before B. Clearly alternatives 1 and 2\n// conflict and no amount of further lookahead will separate the two.\n// However, alternative 3 will be able to continue and so we do not stop\n// working on this state. In the previous example, we're concerned with\n// states associated with the conflicting alternatives. Here alt 3 is not\n// associated with the conflicting configs, but since we can continue\n// looking for input reasonably, don't declare the state done.</p>\n//\n// <p><strong>PURE SLL PARSING</strong></p>\n//\n// <p>To handle pure SLL parsing, all we have to do is make sure that we\n// combine stack contexts for configurations that differ only by semantic\n// predicate. From there, we can do the usual SLL termination heuristic.</p>\n//\n// <p><strong>PREDICATES IN SLL+LL PARSING</strong></p>\n//\n// <p>SLL decisions don't evaluate predicates until after they reach DFA stop\n// states because they need to create the DFA cache that works in all\n// semantic situations. In contrast, full LL evaluates predicates collected\n// during start state computation so it can ignore predicates thereafter.\n// This means that SLL termination detection can totally ignore semantic\n// predicates.</p>\n//\n// <p>Implementation-wise, {@link ATNConfigSet} combines stack contexts but not\n// semantic predicate contexts so we might see two configurations like the\n// following.</p>\n//\n// <p>{@code (s, 1, x, {}), (s, 1, x', {p})}</p>\n//\n// <p>Before testing these configurations against others, we have to merge\n// {@code x} and {@code x'} (without modifying the existing configurations).\n// For example, we test {@code (x+x')==x''} when looking for conflicts in\n// the following configurations.</p>\n//\n// <p>{@code (s, 1, x, {}), (s, 1, x', {p}), (s, 2, x'', {})}</p>\n//\n// <p>If the configuration set has predicates (as indicated by\n// {@link ATNConfigSet//hasSemanticContext}), this algorithm makes a copy of\n// the configurations to strip out all of the predicates so that a standard\n// {@link ATNConfigSet} will merge everything ignoring predicates.</p>\n//\nPredictionMode.hasSLLConflictTerminatingPrediction = function( mode, configs) {\n    // Configs in rule stop states indicate reaching the end of the decision\n    // rule (local context) or end of start rule (full context). If all\n    // configs meet this condition, then none of the configurations is able\n    // to match additional input so we terminate prediction.\n    //\n    if (PredictionMode.allConfigsInRuleStopStates(configs)) {\n        return true;\n    }\n    // pure SLL mode parsing\n    if (mode === PredictionMode.SLL) {\n        // Don't bother with combining configs from different semantic\n        // contexts if we can fail over to full LL; costs more time\n        // since we'll often fail over anyway.\n        if (configs.hasSemanticContext) {\n            // dup configs, tossing out semantic predicates\n            var dup = new ATNConfigSet();\n            for(var i=0;i<configs.items.length;i++) {\n            \tvar c = configs.items[i];\n                c = new ATNConfig({semanticContext:SemanticContext.NONE}, c);\n                dup.add(c);\n            }\n            configs = dup;\n        }\n        // now we have combined contexts for configs with dissimilar preds\n    }\n    // pure SLL or combined SLL+LL mode parsing\n    var altsets = PredictionMode.getConflictingAltSubsets(configs);\n    return PredictionMode.hasConflictingAltSet(altsets) && !PredictionMode.hasStateAssociatedWithOneAlt(configs);\n};\n\n// Checks if any configuration in {@code configs} is in a\n// {@link RuleStopState}. Configurations meeting this condition have reached\n// the end of the decision rule (local context) or end of start rule (full\n// context).\n//\n// @param configs the configuration set to test\n// @return {@code true} if any configuration in {@code configs} is in a\n// {@link RuleStopState}, otherwise {@code false}\nPredictionMode.hasConfigInRuleStopState = function(configs) {\n\tfor(var i=0;i<configs.items.length;i++) {\n\t\tvar c = configs.items[i];\n        if (c.state instanceof RuleStopState) {\n            return true;\n        }\n\t}\n    return false;\n};\n\n// Checks if all configurations in {@code configs} are in a\n// {@link RuleStopState}. Configurations meeting this condition have reached\n// the end of the decision rule (local context) or end of start rule (full\n// context).\n//\n// @param configs the configuration set to test\n// @return {@code true} if all configurations in {@code configs} are in a\n// {@link RuleStopState}, otherwise {@code false}\nPredictionMode.allConfigsInRuleStopStates = function(configs) {\n\tfor(var i=0;i<configs.items.length;i++) {\n\t\tvar c = configs.items[i];\n        if (!(c.state instanceof RuleStopState)) {\n            return false;\n        }\n\t}\n    return true;\n};\n\n//\n// Full LL prediction termination.\n//\n// <p>Can we stop looking ahead during ATN simulation or is there some\n// uncertainty as to which alternative we will ultimately pick, after\n// consuming more input? Even if there are partial conflicts, we might know\n// that everything is going to resolve to the same minimum alternative. That\n// means we can stop since no more lookahead will change that fact. On the\n// other hand, there might be multiple conflicts that resolve to different\n// minimums. That means we need more look ahead to decide which of those\n// alternatives we should predict.</p>\n//\n// <p>The basic idea is to split the set of configurations {@code C}, into\n// conflicting subsets {@code (s, _, ctx, _)} and singleton subsets with\n// non-conflicting configurations. Two configurations conflict if they have\n// identical {@link ATNConfig//state} and {@link ATNConfig//context} values\n// but different {@link ATNConfig//alt} value, e.g. {@code (s, i, ctx, _)}\n// and {@code (s, j, ctx, _)} for {@code i!=j}.</p>\n//\n// <p>Reduce these configuration subsets to the set of possible alternatives.\n// You can compute the alternative subsets in one pass as follows:</p>\n//\n// <p>{@code A_s,ctx = {i | (s, i, ctx, _)}} for each configuration in\n// {@code C} holding {@code s} and {@code ctx} fixed.</p>\n//\n// <p>Or in pseudo-code, for each configuration {@code c} in {@code C}:</p>\n//\n// <pre>\n// map[c] U= c.{@link ATNConfig//alt alt} // map hash/equals uses s and x, not\n// alt and not pred\n// </pre>\n//\n// <p>The values in {@code map} are the set of {@code A_s,ctx} sets.</p>\n//\n// <p>If {@code |A_s,ctx|=1} then there is no conflict associated with\n// {@code s} and {@code ctx}.</p>\n//\n// <p>Reduce the subsets to singletons by choosing a minimum of each subset. If\n// the union of these alternative subsets is a singleton, then no amount of\n// more lookahead will help us. We will always pick that alternative. If,\n// however, there is more than one alternative, then we are uncertain which\n// alternative to predict and must continue looking for resolution. We may\n// or may not discover an ambiguity in the future, even if there are no\n// conflicting subsets this round.</p>\n//\n// <p>The biggest sin is to terminate early because it means we've made a\n// decision but were uncertain as to the eventual outcome. We haven't used\n// enough lookahead. On the other hand, announcing a conflict too late is no\n// big deal; you will still have the conflict. It's just inefficient. It\n// might even look until the end of file.</p>\n//\n// <p>No special consideration for semantic predicates is required because\n// predicates are evaluated on-the-fly for full LL prediction, ensuring that\n// no configuration contains a semantic context during the termination\n// check.</p>\n//\n// <p><strong>CONFLICTING CONFIGS</strong></p>\n//\n// <p>Two configurations {@code (s, i, x)} and {@code (s, j, x')}, conflict\n// when {@code i!=j} but {@code x=x'}. Because we merge all\n// {@code (s, i, _)} configurations together, that means that there are at\n// most {@code n} configurations associated with state {@code s} for\n// {@code n} possible alternatives in the decision. The merged stacks\n// complicate the comparison of configuration contexts {@code x} and\n// {@code x'}. Sam checks to see if one is a subset of the other by calling\n// merge and checking to see if the merged result is either {@code x} or\n// {@code x'}. If the {@code x} associated with lowest alternative {@code i}\n// is the superset, then {@code i} is the only possible prediction since the\n// others resolve to {@code min(i)} as well. However, if {@code x} is\n// associated with {@code j>i} then at least one stack configuration for\n// {@code j} is not in conflict with alternative {@code i}. The algorithm\n// should keep going, looking for more lookahead due to the uncertainty.</p>\n//\n// <p>For simplicity, I'm doing a equality check between {@code x} and\n// {@code x'} that lets the algorithm continue to consume lookahead longer\n// than necessary. The reason I like the equality is of course the\n// simplicity but also because that is the test you need to detect the\n// alternatives that are actually in conflict.</p>\n//\n// <p><strong>CONTINUE/STOP RULE</strong></p>\n//\n// <p>Continue if union of resolved alternative sets from non-conflicting and\n// conflicting alternative subsets has more than one alternative. We are\n// uncertain about which alternative to predict.</p>\n//\n// <p>The complete set of alternatives, {@code [i for (_,i,_)]}, tells us which\n// alternatives are still in the running for the amount of input we've\n// consumed at this point. The conflicting sets let us to strip away\n// configurations that won't lead to more states because we resolve\n// conflicts to the configuration with a minimum alternate for the\n// conflicting set.</p>\n//\n// <p><strong>CASES</strong></p>\n//\n// <ul>\n//\n// <li>no conflicts and more than 1 alternative in set =&gt; continue</li>\n//\n// <li> {@code (s, 1, x)}, {@code (s, 2, x)}, {@code (s, 3, z)},\n// {@code (s', 1, y)}, {@code (s', 2, y)} yields non-conflicting set\n// {@code {3}} U conflicting sets {@code min({1,2})} U {@code min({1,2})} =\n// {@code {1,3}} =&gt; continue\n// </li>\n//\n// <li>{@code (s, 1, x)}, {@code (s, 2, x)}, {@code (s', 1, y)},\n// {@code (s', 2, y)}, {@code (s'', 1, z)} yields non-conflicting set\n// {@code {1}} U conflicting sets {@code min({1,2})} U {@code min({1,2})} =\n// {@code {1}} =&gt; stop and predict 1</li>\n//\n// <li>{@code (s, 1, x)}, {@code (s, 2, x)}, {@code (s', 1, y)},\n// {@code (s', 2, y)} yields conflicting, reduced sets {@code {1}} U\n// {@code {1}} = {@code {1}} =&gt; stop and predict 1, can announce\n// ambiguity {@code {1,2}}</li>\n//\n// <li>{@code (s, 1, x)}, {@code (s, 2, x)}, {@code (s', 2, y)},\n// {@code (s', 3, y)} yields conflicting, reduced sets {@code {1}} U\n// {@code {2}} = {@code {1,2}} =&gt; continue</li>\n//\n// <li>{@code (s, 1, x)}, {@code (s, 2, x)}, {@code (s', 3, y)},\n// {@code (s', 4, y)} yields conflicting, reduced sets {@code {1}} U\n// {@code {3}} = {@code {1,3}} =&gt; continue</li>\n//\n// </ul>\n//\n// <p><strong>EXACT AMBIGUITY DETECTION</strong></p>\n//\n// <p>If all states report the same conflicting set of alternatives, then we\n// know we have the exact ambiguity set.</p>\n//\n// <p><code>|A_<em>i</em>|&gt;1</code> and\n// <code>A_<em>i</em> = A_<em>j</em></code> for all <em>i</em>, <em>j</em>.</p>\n//\n// <p>In other words, we continue examining lookahead until all {@code A_i}\n// have more than one alternative and all {@code A_i} are the same. If\n// {@code A={{1,2}, {1,3}}}, then regular LL prediction would terminate\n// because the resolved set is {@code {1}}. To determine what the real\n// ambiguity is, we have to know whether the ambiguity is between one and\n// two or one and three so we keep going. We can only stop prediction when\n// we need exact ambiguity detection when the sets look like\n// {@code A={{1,2}}} or {@code {{1,2},{1,2}}}, etc...</p>\n//\nPredictionMode.resolvesToJustOneViableAlt = function(altsets) {\n    return PredictionMode.getSingleViableAlt(altsets);\n};\n\n//\n// Determines if every alternative subset in {@code altsets} contains more\n// than one alternative.\n//\n// @param altsets a collection of alternative subsets\n// @return {@code true} if every {@link BitSet} in {@code altsets} has\n// {@link BitSet//cardinality cardinality} &gt; 1, otherwise {@code false}\n//\nPredictionMode.allSubsetsConflict = function(altsets) {\n    return ! PredictionMode.hasNonConflictingAltSet(altsets);\n};\n//\n// Determines if any single alternative subset in {@code altsets} contains\n// exactly one alternative.\n//\n// @param altsets a collection of alternative subsets\n// @return {@code true} if {@code altsets} contains a {@link BitSet} with\n// {@link BitSet//cardinality cardinality} 1, otherwise {@code false}\n//\nPredictionMode.hasNonConflictingAltSet = function(altsets) {\n\tfor(var i=0;i<altsets.length;i++) {\n\t\tvar alts = altsets[i];\n        if (alts.length===1) {\n            return true;\n        }\n\t}\n    return false;\n};\n\n//\n// Determines if any single alternative subset in {@code altsets} contains\n// more than one alternative.\n//\n// @param altsets a collection of alternative subsets\n// @return {@code true} if {@code altsets} contains a {@link BitSet} with\n// {@link BitSet//cardinality cardinality} &gt; 1, otherwise {@code false}\n//\nPredictionMode.hasConflictingAltSet = function(altsets) {\n\tfor(var i=0;i<altsets.length;i++) {\n\t\tvar alts = altsets[i];\n        if (alts.length>1) {\n            return true;\n        }\n\t}\n    return false;\n};\n\n//\n// Determines if every alternative subset in {@code altsets} is equivalent.\n//\n// @param altsets a collection of alternative subsets\n// @return {@code true} if every member of {@code altsets} is equal to the\n// others, otherwise {@code false}\n//\nPredictionMode.allSubsetsEqual = function(altsets) {\n    var first = null;\n\tfor(var i=0;i<altsets.length;i++) {\n\t\tvar alts = altsets[i];\n        if (first === null) {\n            first = alts;\n        } else if (alts!==first) {\n            return false;\n        }\n\t}\n    return true;\n};\n\n//\n// Returns the unique alternative predicted by all alternative subsets in\n// {@code altsets}. If no such alternative exists, this method returns\n// {@link ATN//INVALID_ALT_NUMBER}.\n//\n// @param altsets a collection of alternative subsets\n//\nPredictionMode.getUniqueAlt = function(altsets) {\n    var all = PredictionMode.getAlts(altsets);\n    if (all.length===1) {\n        return all.minValue();\n    } else {\n        return ATN.INVALID_ALT_NUMBER;\n    }\n};\n\n// Gets the complete set of represented alternatives for a collection of\n// alternative subsets. This method returns the union of each {@link BitSet}\n// in {@code altsets}.\n//\n// @param altsets a collection of alternative subsets\n// @return the set of represented alternatives in {@code altsets}\n//\nPredictionMode.getAlts = function(altsets) {\n    var all = new BitSet();\n    altsets.map( function(alts) { all.or(alts); });\n    return all;\n};\n\n//\n// This function gets the conflicting alt subsets from a configuration set.\n// For each configuration {@code c} in {@code configs}:\n//\n// <pre>\n// map[c] U= c.{@link ATNConfig//alt alt} // map hash/equals uses s and x, not\n// alt and not pred\n// </pre>\n\nPredictionMode.getConflictingAltSubsets = function(configs) {\n    var configToAlts = new Map();\n    configToAlts.hashFunction = function(cfg) { hashStuff(cfg.state.stateNumber, cfg.context); };\n    configToAlts.equalsFunction = function(c1, c2) { return c1.state.stateNumber==c2.state.stateNumber && c1.context.equals(c2.context);}\n    configs.items.map(function(cfg) {\n        var alts = configToAlts.get(cfg);\n        if (alts === null) {\n            alts = new BitSet();\n            configToAlts.put(cfg, alts);\n        }\n        alts.add(cfg.alt);\n\t});\n    return configToAlts.getValues();\n};\n\n//\n// Get a map from state to alt subset from a configuration set. For each\n// configuration {@code c} in {@code configs}:\n//\n// <pre>\n// map[c.{@link ATNConfig//state state}] U= c.{@link ATNConfig//alt alt}\n// </pre>\n//\nPredictionMode.getStateToAltMap = function(configs) {\n    var m = new AltDict();\n    configs.items.map(function(c) {\n        var alts = m.get(c.state);\n        if (alts === null) {\n            alts = new BitSet();\n            m.put(c.state, alts);\n        }\n        alts.add(c.alt);\n    });\n    return m;\n};\n\nPredictionMode.hasStateAssociatedWithOneAlt = function(configs) {\n    var values = PredictionMode.getStateToAltMap(configs).values();\n    for(var i=0;i<values.length;i++) {\n        if (values[i].length===1) {\n            return true;\n        }\n    }\n    return false;\n};\n\nPredictionMode.getSingleViableAlt = function(altsets) {\n    var result = null;\n\tfor(var i=0;i<altsets.length;i++) {\n\t\tvar alts = altsets[i];\n        var minAlt = alts.minValue();\n        if(result===null) {\n            result = minAlt;\n        } else if(result!==minAlt) { // more than 1 viable alt\n            return ATN.INVALID_ALT_NUMBER;\n        }\n\t}\n    return result;\n};\n\nexports.PredictionMode = PredictionMode;\n","/*! https://mths.be/codepointat v0.2.0 by @mathias */\nif (!String.prototype.codePointAt) {\n\t(function() {\n\t\t'use strict'; // needed to support `apply`/`call` with `undefined`/`null`\n\t\tvar defineProperty = (function() {\n\t\t\t// IE 8 only supports `Object.defineProperty` on DOM elements\n\t\t\ttry {\n\t\t\t\tvar object = {};\n\t\t\t\tvar $defineProperty = Object.defineProperty;\n\t\t\t\tvar result = $defineProperty(object, object, object) && $defineProperty;\n\t\t\t} catch(error) {}\n\t\t\treturn result;\n\t\t}());\n\t\tvar codePointAt = function(position) {\n\t\t\tif (this == null) {\n\t\t\t\tthrow TypeError();\n\t\t\t}\n\t\t\tvar string = String(this);\n\t\t\tvar size = string.length;\n\t\t\t// `ToInteger`\n\t\t\tvar index = position ? Number(position) : 0;\n\t\t\tif (index != index) { // better `isNaN`\n\t\t\t\tindex = 0;\n\t\t\t}\n\t\t\t// Account for out-of-bounds indices:\n\t\t\tif (index < 0 || index >= size) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\t// Get the first code unit\n\t\t\tvar first = string.charCodeAt(index);\n\t\t\tvar second;\n\t\t\tif ( // check if it’s the start of a surrogate pair\n\t\t\t\tfirst >= 0xD800 && first <= 0xDBFF && // high surrogate\n\t\t\t\tsize > index + 1 // there is a next code unit\n\t\t\t) {\n\t\t\t\tsecond = string.charCodeAt(index + 1);\n\t\t\t\tif (second >= 0xDC00 && second <= 0xDFFF) { // low surrogate\n\t\t\t\t\t// https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n\t\t\t\t\treturn (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn first;\n\t\t};\n\t\tif (defineProperty) {\n\t\t\tdefineProperty(String.prototype, 'codePointAt', {\n\t\t\t\t'value': codePointAt,\n\t\t\t\t'configurable': true,\n\t\t\t\t'writable': true\n\t\t\t});\n\t\t} else {\n\t\t\tString.prototype.codePointAt = codePointAt;\n\t\t}\n\t}());\n}\n","/*! https://mths.be/fromcodepoint v0.2.1 by @mathias */\nif (!String.fromCodePoint) {\n\t(function() {\n\t\tvar defineProperty = (function() {\n\t\t\t// IE 8 only supports `Object.defineProperty` on DOM elements\n\t\t\ttry {\n\t\t\t\tvar object = {};\n\t\t\t\tvar $defineProperty = Object.defineProperty;\n\t\t\t\tvar result = $defineProperty(object, object, object) && $defineProperty;\n\t\t\t} catch(error) {}\n\t\t\treturn result;\n\t\t}());\n\t\tvar stringFromCharCode = String.fromCharCode;\n\t\tvar floor = Math.floor;\n\t\tvar fromCodePoint = function(_) {\n\t\t\tvar MAX_SIZE = 0x4000;\n\t\t\tvar codeUnits = [];\n\t\t\tvar highSurrogate;\n\t\t\tvar lowSurrogate;\n\t\t\tvar index = -1;\n\t\t\tvar length = arguments.length;\n\t\t\tif (!length) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\tvar result = '';\n\t\t\twhile (++index < length) {\n\t\t\t\tvar codePoint = Number(arguments[index]);\n\t\t\t\tif (\n\t\t\t\t\t!isFinite(codePoint) || // `NaN`, `+Infinity`, or `-Infinity`\n\t\t\t\t\tcodePoint < 0 || // not a valid Unicode code point\n\t\t\t\t\tcodePoint > 0x10FFFF || // not a valid Unicode code point\n\t\t\t\t\tfloor(codePoint) != codePoint // not an integer\n\t\t\t\t) {\n\t\t\t\t\tthrow RangeError('Invalid code point: ' + codePoint);\n\t\t\t\t}\n\t\t\t\tif (codePoint <= 0xFFFF) { // BMP code point\n\t\t\t\t\tcodeUnits.push(codePoint);\n\t\t\t\t} else { // Astral code point; split in surrogate halves\n\t\t\t\t\t// https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n\t\t\t\t\tcodePoint -= 0x10000;\n\t\t\t\t\thighSurrogate = (codePoint >> 10) + 0xD800;\n\t\t\t\t\tlowSurrogate = (codePoint % 0x400) + 0xDC00;\n\t\t\t\t\tcodeUnits.push(highSurrogate, lowSurrogate);\n\t\t\t\t}\n\t\t\t\tif (index + 1 == length || codeUnits.length > MAX_SIZE) {\n\t\t\t\t\tresult += stringFromCharCode.apply(null, codeUnits);\n\t\t\t\t\tcodeUnits.length = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t};\n\t\tif (defineProperty) {\n\t\t\tdefineProperty(String, 'fromCodePoint', {\n\t\t\t\t'value': fromCodePoint,\n\t\t\t\t'configurable': true,\n\t\t\t\t'writable': true\n\t\t\t});\n\t\t} else {\n\t\t\tString.fromCodePoint = fromCodePoint;\n\t\t}\n\t}());\n}\n","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n//\n\nvar Token = require('./../Token').Token;\nvar Errors = require('./Errors');\nvar NoViableAltException = Errors.NoViableAltException;\nvar InputMismatchException = Errors.InputMismatchException;\nvar FailedPredicateException = Errors.FailedPredicateException;\nvar ParseCancellationException = Errors.ParseCancellationException;\nvar ATNState = require('./../atn/ATNState').ATNState;\nvar Interval = require('./../IntervalSet').Interval;\nvar IntervalSet = require('./../IntervalSet').IntervalSet;\n\nfunction ErrorStrategy() {\n\n}\n\nErrorStrategy.prototype.reset = function(recognizer){\n};\n\nErrorStrategy.prototype.recoverInline = function(recognizer){\n};\n\nErrorStrategy.prototype.recover = function(recognizer, e){\n};\n\nErrorStrategy.prototype.sync = function(recognizer){\n};\n\nErrorStrategy.prototype.inErrorRecoveryMode = function(recognizer){\n};\n\nErrorStrategy.prototype.reportError = function(recognizer){\n};\n\n\n\n// This is the default implementation of {@link ANTLRErrorStrategy} used for\n// error reporting and recovery in ANTLR parsers.\n//\nfunction DefaultErrorStrategy() {\n\tErrorStrategy.call(this);\n    // Indicates whether the error strategy is currently \"recovering from an\n    // error\". This is used to suppress reporting multiple error messages while\n    // attempting to recover from a detected syntax error.\n    //\n    // @see //inErrorRecoveryMode\n    //\n    this.errorRecoveryMode = false;\n\n    // The index into the input stream where the last error occurred.\n    // This is used to prevent infinite loops where an error is found\n    // but no token is consumed during recovery...another error is found,\n    // ad nauseum. This is a failsafe mechanism to guarantee that at least\n    // one token/tree node is consumed for two errors.\n    //\n    this.lastErrorIndex = -1;\n    this.lastErrorStates = null;\n    return this;\n}\n\nDefaultErrorStrategy.prototype = Object.create(ErrorStrategy.prototype);\nDefaultErrorStrategy.prototype.constructor = DefaultErrorStrategy;\n\n// <p>The default implementation simply calls {@link //endErrorCondition} to\n// ensure that the handler is not in error recovery mode.</p>\nDefaultErrorStrategy.prototype.reset = function(recognizer) {\n    this.endErrorCondition(recognizer);\n};\n\n//\n// This method is called to enter error recovery mode when a recognition\n// exception is reported.\n//\n// @param recognizer the parser instance\n//\nDefaultErrorStrategy.prototype.beginErrorCondition = function(recognizer) {\n    this.errorRecoveryMode = true;\n};\n\nDefaultErrorStrategy.prototype.inErrorRecoveryMode = function(recognizer) {\n    return this.errorRecoveryMode;\n};\n\n//\n// This method is called to leave error recovery mode after recovering from\n// a recognition exception.\n//\n// @param recognizer\n//\nDefaultErrorStrategy.prototype.endErrorCondition = function(recognizer) {\n    this.errorRecoveryMode = false;\n    this.lastErrorStates = null;\n    this.lastErrorIndex = -1;\n};\n\n//\n// {@inheritDoc}\n//\n// <p>The default implementation simply calls {@link //endErrorCondition}.</p>\n//\nDefaultErrorStrategy.prototype.reportMatch = function(recognizer) {\n    this.endErrorCondition(recognizer);\n};\n\n//\n// {@inheritDoc}\n//\n// <p>The default implementation returns immediately if the handler is already\n// in error recovery mode. Otherwise, it calls {@link //beginErrorCondition}\n// and dispatches the reporting task based on the runtime type of {@code e}\n// according to the following table.</p>\n//\n// <ul>\n// <li>{@link NoViableAltException}: Dispatches the call to\n// {@link //reportNoViableAlternative}</li>\n// <li>{@link InputMismatchException}: Dispatches the call to\n// {@link //reportInputMismatch}</li>\n// <li>{@link FailedPredicateException}: Dispatches the call to\n// {@link //reportFailedPredicate}</li>\n// <li>All other types: calls {@link Parser//notifyErrorListeners} to report\n// the exception</li>\n// </ul>\n//\nDefaultErrorStrategy.prototype.reportError = function(recognizer, e) {\n   // if we've already reported an error and have not matched a token\n   // yet successfully, don't report any errors.\n    if(this.inErrorRecoveryMode(recognizer)) {\n        return; // don't report spurious errors\n    }\n    this.beginErrorCondition(recognizer);\n    if ( e instanceof NoViableAltException ) {\n        this.reportNoViableAlternative(recognizer, e);\n    } else if ( e instanceof InputMismatchException ) {\n        this.reportInputMismatch(recognizer, e);\n    } else if ( e instanceof FailedPredicateException ) {\n        this.reportFailedPredicate(recognizer, e);\n    } else {\n        console.log(\"unknown recognition error type: \" + e.constructor.name);\n        console.log(e.stack);\n        recognizer.notifyErrorListeners(e.getOffendingToken(), e.getMessage(), e);\n    }\n};\n//\n// {@inheritDoc}\n//\n// <p>The default implementation resynchronizes the parser by consuming tokens\n// until we find one in the resynchronization set--loosely the set of tokens\n// that can follow the current rule.</p>\n//\nDefaultErrorStrategy.prototype.recover = function(recognizer, e) {\n    if (this.lastErrorIndex===recognizer.getInputStream().index &&\n        this.lastErrorStates !== null && this.lastErrorStates.indexOf(recognizer.state)>=0) {\n\t\t// uh oh, another error at same token index and previously-visited\n\t\t// state in ATN; must be a case where LT(1) is in the recovery\n\t\t// token set so nothing got consumed. Consume a single token\n\t\t// at least to prevent an infinite loop; this is a failsafe.\n\t\trecognizer.consume();\n    }\n    this.lastErrorIndex = recognizer._input.index;\n    if (this.lastErrorStates === null) {\n        this.lastErrorStates = [];\n    }\n    this.lastErrorStates.push(recognizer.state);\n    var followSet = this.getErrorRecoverySet(recognizer);\n    this.consumeUntil(recognizer, followSet);\n};\n\n// The default implementation of {@link ANTLRErrorStrategy//sync} makes sure\n// that the current lookahead symbol is consistent with what were expecting\n// at this point in the ATN. You can call this anytime but ANTLR only\n// generates code to check before subrules/loops and each iteration.\n//\n// <p>Implements Jim Idle's magic sync mechanism in closures and optional\n// subrules. E.g.,</p>\n//\n// <pre>\n// a : sync ( stuff sync )* ;\n// sync : {consume to what can follow sync} ;\n// </pre>\n//\n// At the start of a sub rule upon error, {@link //sync} performs single\n// token deletion, if possible. If it can't do that, it bails on the current\n// rule and uses the default error recovery, which consumes until the\n// resynchronization set of the current rule.\n//\n// <p>If the sub rule is optional ({@code (...)?}, {@code (...)*}, or block\n// with an empty alternative), then the expected set includes what follows\n// the subrule.</p>\n//\n// <p>During loop iteration, it consumes until it sees a token that can start a\n// sub rule or what follows loop. Yes, that is pretty aggressive. We opt to\n// stay in the loop as long as possible.</p>\n//\n// <p><strong>ORIGINS</strong></p>\n//\n// <p>Previous versions of ANTLR did a poor job of their recovery within loops.\n// A single mismatch token or missing token would force the parser to bail\n// out of the entire rules surrounding the loop. So, for rule</p>\n//\n// <pre>\n// classDef : 'class' ID '{' member* '}'\n// </pre>\n//\n// input with an extra token between members would force the parser to\n// consume until it found the next class definition rather than the next\n// member definition of the current class.\n//\n// <p>This functionality cost a little bit of effort because the parser has to\n// compare token set at the start of the loop and at each iteration. If for\n// some reason speed is suffering for you, you can turn off this\n// functionality by simply overriding this method as a blank { }.</p>\n//\nDefaultErrorStrategy.prototype.sync = function(recognizer) {\n    // If already recovering, don't try to sync\n    if (this.inErrorRecoveryMode(recognizer)) {\n        return;\n    }\n    var s = recognizer._interp.atn.states[recognizer.state];\n    var la = recognizer.getTokenStream().LA(1);\n    // try cheaper subset first; might get lucky. seems to shave a wee bit off\n    var nextTokens = recognizer.atn.nextTokens(s);\n    if (nextTokens.contains(Token.EPSILON) || nextTokens.contains(la)) {\n        return;\n    }\n    switch (s.stateType) {\n    case ATNState.BLOCK_START:\n    case ATNState.STAR_BLOCK_START:\n    case ATNState.PLUS_BLOCK_START:\n    case ATNState.STAR_LOOP_ENTRY:\n       // report error and recover if possible\n        if( this.singleTokenDeletion(recognizer) !== null) {\n            return;\n        } else {\n            throw new InputMismatchException(recognizer);\n        }\n        break;\n    case ATNState.PLUS_LOOP_BACK:\n    case ATNState.STAR_LOOP_BACK:\n        this.reportUnwantedToken(recognizer);\n        var expecting = new IntervalSet();\n        expecting.addSet(recognizer.getExpectedTokens());\n        var whatFollowsLoopIterationOrRule = expecting.addSet(this.getErrorRecoverySet(recognizer));\n        this.consumeUntil(recognizer, whatFollowsLoopIterationOrRule);\n        break;\n    default:\n        // do nothing if we can't identify the exact kind of ATN state\n    }\n};\n\n// This is called by {@link //reportError} when the exception is a\n// {@link NoViableAltException}.\n//\n// @see //reportError\n//\n// @param recognizer the parser instance\n// @param e the recognition exception\n//\nDefaultErrorStrategy.prototype.reportNoViableAlternative = function(recognizer, e) {\n    var tokens = recognizer.getTokenStream();\n    var input;\n    if(tokens !== null) {\n        if (e.startToken.type===Token.EOF) {\n            input = \"<EOF>\";\n        } else {\n            input = tokens.getText(new Interval(e.startToken.tokenIndex, e.offendingToken.tokenIndex));\n        }\n    } else {\n        input = \"<unknown input>\";\n    }\n    var msg = \"no viable alternative at input \" + this.escapeWSAndQuote(input);\n    recognizer.notifyErrorListeners(msg, e.offendingToken, e);\n};\n\n//\n// This is called by {@link //reportError} when the exception is an\n// {@link InputMismatchException}.\n//\n// @see //reportError\n//\n// @param recognizer the parser instance\n// @param e the recognition exception\n//\nDefaultErrorStrategy.prototype.reportInputMismatch = function(recognizer, e) {\n    var msg = \"mismatched input \" + this.getTokenErrorDisplay(e.offendingToken) +\n          \" expecting \" + e.getExpectedTokens().toString(recognizer.literalNames, recognizer.symbolicNames);\n    recognizer.notifyErrorListeners(msg, e.offendingToken, e);\n};\n\n//\n// This is called by {@link //reportError} when the exception is a\n// {@link FailedPredicateException}.\n//\n// @see //reportError\n//\n// @param recognizer the parser instance\n// @param e the recognition exception\n//\nDefaultErrorStrategy.prototype.reportFailedPredicate = function(recognizer, e) {\n    var ruleName = recognizer.ruleNames[recognizer._ctx.ruleIndex];\n    var msg = \"rule \" + ruleName + \" \" + e.message;\n    recognizer.notifyErrorListeners(msg, e.offendingToken, e);\n};\n\n// This method is called to report a syntax error which requires the removal\n// of a token from the input stream. At the time this method is called, the\n// erroneous symbol is current {@code LT(1)} symbol and has not yet been\n// removed from the input stream. When this method returns,\n// {@code recognizer} is in error recovery mode.\n//\n// <p>This method is called when {@link //singleTokenDeletion} identifies\n// single-token deletion as a viable recovery strategy for a mismatched\n// input error.</p>\n//\n// <p>The default implementation simply returns if the handler is already in\n// error recovery mode. Otherwise, it calls {@link //beginErrorCondition} to\n// enter error recovery mode, followed by calling\n// {@link Parser//notifyErrorListeners}.</p>\n//\n// @param recognizer the parser instance\n//\nDefaultErrorStrategy.prototype.reportUnwantedToken = function(recognizer) {\n    if (this.inErrorRecoveryMode(recognizer)) {\n        return;\n    }\n    this.beginErrorCondition(recognizer);\n    var t = recognizer.getCurrentToken();\n    var tokenName = this.getTokenErrorDisplay(t);\n    var expecting = this.getExpectedTokens(recognizer);\n    var msg = \"extraneous input \" + tokenName + \" expecting \" +\n        expecting.toString(recognizer.literalNames, recognizer.symbolicNames);\n    recognizer.notifyErrorListeners(msg, t, null);\n};\n// This method is called to report a syntax error which requires the\n// insertion of a missing token into the input stream. At the time this\n// method is called, the missing token has not yet been inserted. When this\n// method returns, {@code recognizer} is in error recovery mode.\n//\n// <p>This method is called when {@link //singleTokenInsertion} identifies\n// single-token insertion as a viable recovery strategy for a mismatched\n// input error.</p>\n//\n// <p>The default implementation simply returns if the handler is already in\n// error recovery mode. Otherwise, it calls {@link //beginErrorCondition} to\n// enter error recovery mode, followed by calling\n// {@link Parser//notifyErrorListeners}.</p>\n//\n// @param recognizer the parser instance\n//\nDefaultErrorStrategy.prototype.reportMissingToken = function(recognizer) {\n    if ( this.inErrorRecoveryMode(recognizer)) {\n        return;\n    }\n    this.beginErrorCondition(recognizer);\n    var t = recognizer.getCurrentToken();\n    var expecting = this.getExpectedTokens(recognizer);\n    var msg = \"missing \" + expecting.toString(recognizer.literalNames, recognizer.symbolicNames) +\n          \" at \" + this.getTokenErrorDisplay(t);\n    recognizer.notifyErrorListeners(msg, t, null);\n};\n\n// <p>The default implementation attempts to recover from the mismatched input\n// by using single token insertion and deletion as described below. If the\n// recovery attempt fails, this method throws an\n// {@link InputMismatchException}.</p>\n//\n// <p><strong>EXTRA TOKEN</strong> (single token deletion)</p>\n//\n// <p>{@code LA(1)} is not what we are looking for. If {@code LA(2)} has the\n// right token, however, then assume {@code LA(1)} is some extra spurious\n// token and delete it. Then consume and return the next token (which was\n// the {@code LA(2)} token) as the successful result of the match operation.</p>\n//\n// <p>This recovery strategy is implemented by {@link\n// //singleTokenDeletion}.</p>\n//\n// <p><strong>MISSING TOKEN</strong> (single token insertion)</p>\n//\n// <p>If current token (at {@code LA(1)}) is consistent with what could come\n// after the expected {@code LA(1)} token, then assume the token is missing\n// and use the parser's {@link TokenFactory} to create it on the fly. The\n// \"insertion\" is performed by returning the created token as the successful\n// result of the match operation.</p>\n//\n// <p>This recovery strategy is implemented by {@link\n// //singleTokenInsertion}.</p>\n//\n// <p><strong>EXAMPLE</strong></p>\n//\n// <p>For example, Input {@code i=(3;} is clearly missing the {@code ')'}. When\n// the parser returns from the nested call to {@code expr}, it will have\n// call chain:</p>\n//\n// <pre>\n// stat &rarr; expr &rarr; atom\n// </pre>\n//\n// and it will be trying to match the {@code ')'} at this point in the\n// derivation:\n//\n// <pre>\n// =&gt; ID '=' '(' INT ')' ('+' atom)* ';'\n// ^\n// </pre>\n//\n// The attempt to match {@code ')'} will fail when it sees {@code ';'} and\n// call {@link //recoverInline}. To recover, it sees that {@code LA(1)==';'}\n// is in the set of tokens that can follow the {@code ')'} token reference\n// in rule {@code atom}. It can assume that you forgot the {@code ')'}.\n//\nDefaultErrorStrategy.prototype.recoverInline = function(recognizer) {\n    // SINGLE TOKEN DELETION\n    var matchedSymbol = this.singleTokenDeletion(recognizer);\n    if (matchedSymbol !== null) {\n        // we have deleted the extra token.\n        // now, move past ttype token as if all were ok\n        recognizer.consume();\n        return matchedSymbol;\n    }\n    // SINGLE TOKEN INSERTION\n    if (this.singleTokenInsertion(recognizer)) {\n        return this.getMissingSymbol(recognizer);\n    }\n    // even that didn't work; must throw the exception\n    throw new InputMismatchException(recognizer);\n};\n\n//\n// This method implements the single-token insertion inline error recovery\n// strategy. It is called by {@link //recoverInline} if the single-token\n// deletion strategy fails to recover from the mismatched input. If this\n// method returns {@code true}, {@code recognizer} will be in error recovery\n// mode.\n//\n// <p>This method determines whether or not single-token insertion is viable by\n// checking if the {@code LA(1)} input symbol could be successfully matched\n// if it were instead the {@code LA(2)} symbol. If this method returns\n// {@code true}, the caller is responsible for creating and inserting a\n// token with the correct type to produce this behavior.</p>\n//\n// @param recognizer the parser instance\n// @return {@code true} if single-token insertion is a viable recovery\n// strategy for the current mismatched input, otherwise {@code false}\n//\nDefaultErrorStrategy.prototype.singleTokenInsertion = function(recognizer) {\n    var currentSymbolType = recognizer.getTokenStream().LA(1);\n    // if current token is consistent with what could come after current\n    // ATN state, then we know we're missing a token; error recovery\n    // is free to conjure up and insert the missing token\n    var atn = recognizer._interp.atn;\n    var currentState = atn.states[recognizer.state];\n    var next = currentState.transitions[0].target;\n    var expectingAtLL2 = atn.nextTokens(next, recognizer._ctx);\n    if (expectingAtLL2.contains(currentSymbolType) ){\n        this.reportMissingToken(recognizer);\n        return true;\n    } else {\n        return false;\n    }\n};\n\n// This method implements the single-token deletion inline error recovery\n// strategy. It is called by {@link //recoverInline} to attempt to recover\n// from mismatched input. If this method returns null, the parser and error\n// handler state will not have changed. If this method returns non-null,\n// {@code recognizer} will <em>not</em> be in error recovery mode since the\n// returned token was a successful match.\n//\n// <p>If the single-token deletion is successful, this method calls\n// {@link //reportUnwantedToken} to report the error, followed by\n// {@link Parser//consume} to actually \"delete\" the extraneous token. Then,\n// before returning {@link //reportMatch} is called to signal a successful\n// match.</p>\n//\n// @param recognizer the parser instance\n// @return the successfully matched {@link Token} instance if single-token\n// deletion successfully recovers from the mismatched input, otherwise\n// {@code null}\n//\nDefaultErrorStrategy.prototype.singleTokenDeletion = function(recognizer) {\n    var nextTokenType = recognizer.getTokenStream().LA(2);\n    var expecting = this.getExpectedTokens(recognizer);\n    if (expecting.contains(nextTokenType)) {\n        this.reportUnwantedToken(recognizer);\n        // print(\"recoverFromMismatchedToken deleting \" \\\n        // + str(recognizer.getTokenStream().LT(1)) \\\n        // + \" since \" + str(recognizer.getTokenStream().LT(2)) \\\n        // + \" is what we want\", file=sys.stderr)\n        recognizer.consume(); // simply delete extra token\n        // we want to return the token we're actually matching\n        var matchedSymbol = recognizer.getCurrentToken();\n        this.reportMatch(recognizer); // we know current token is correct\n        return matchedSymbol;\n    } else {\n        return null;\n    }\n};\n\n// Conjure up a missing token during error recovery.\n//\n// The recognizer attempts to recover from single missing\n// symbols. But, actions might refer to that missing symbol.\n// For example, x=ID {f($x);}. The action clearly assumes\n// that there has been an identifier matched previously and that\n// $x points at that token. If that token is missing, but\n// the next token in the stream is what we want we assume that\n// this token is missing and we keep going. Because we\n// have to return some token to replace the missing token,\n// we have to conjure one up. This method gives the user control\n// over the tokens returned for missing tokens. Mostly,\n// you will want to create something special for identifier\n// tokens. For literals such as '{' and ',', the default\n// action in the parser or tree parser works. It simply creates\n// a CommonToken of the appropriate type. The text will be the token.\n// If you change what tokens must be created by the lexer,\n// override this method to create the appropriate tokens.\n//\nDefaultErrorStrategy.prototype.getMissingSymbol = function(recognizer) {\n    var currentSymbol = recognizer.getCurrentToken();\n    var expecting = this.getExpectedTokens(recognizer);\n    var expectedTokenType = expecting.first(); // get any element\n    var tokenText;\n    if (expectedTokenType===Token.EOF) {\n        tokenText = \"<missing EOF>\";\n    } else {\n        tokenText = \"<missing \" + recognizer.literalNames[expectedTokenType] + \">\";\n    }\n    var current = currentSymbol;\n    var lookback = recognizer.getTokenStream().LT(-1);\n    if (current.type===Token.EOF && lookback !== null) {\n        current = lookback;\n    }\n    return recognizer.getTokenFactory().create(current.source,\n        expectedTokenType, tokenText, Token.DEFAULT_CHANNEL,\n        -1, -1, current.line, current.column);\n};\n\nDefaultErrorStrategy.prototype.getExpectedTokens = function(recognizer) {\n    return recognizer.getExpectedTokens();\n};\n\n// How should a token be displayed in an error message? The default\n// is to display just the text, but during development you might\n// want to have a lot of information spit out. Override in that case\n// to use t.toString() (which, for CommonToken, dumps everything about\n// the token). This is better than forcing you to override a method in\n// your token objects because you don't have to go modify your lexer\n// so that it creates a new Java type.\n//\nDefaultErrorStrategy.prototype.getTokenErrorDisplay = function(t) {\n    if (t === null) {\n        return \"<no token>\";\n    }\n    var s = t.text;\n    if (s === null) {\n        if (t.type===Token.EOF) {\n            s = \"<EOF>\";\n        } else {\n            s = \"<\" + t.type + \">\";\n        }\n    }\n    return this.escapeWSAndQuote(s);\n};\n\nDefaultErrorStrategy.prototype.escapeWSAndQuote = function(s) {\n    s = s.replace(/\\n/g,\"\\\\n\");\n    s = s.replace(/\\r/g,\"\\\\r\");\n    s = s.replace(/\\t/g,\"\\\\t\");\n    return \"'\" + s + \"'\";\n};\n\n// Compute the error recovery set for the current rule. During\n// rule invocation, the parser pushes the set of tokens that can\n// follow that rule reference on the stack; this amounts to\n// computing FIRST of what follows the rule reference in the\n// enclosing rule. See LinearApproximator.FIRST().\n// This local follow set only includes tokens\n// from within the rule; i.e., the FIRST computation done by\n// ANTLR stops at the end of a rule.\n//\n// EXAMPLE\n//\n// When you find a \"no viable alt exception\", the input is not\n// consistent with any of the alternatives for rule r. The best\n// thing to do is to consume tokens until you see something that\n// can legally follow a call to r//or* any rule that called r.\n// You don't want the exact set of viable next tokens because the\n// input might just be missing a token--you might consume the\n// rest of the input looking for one of the missing tokens.\n//\n// Consider grammar:\n//\n// a : '[' b ']'\n// | '(' b ')'\n// ;\n// b : c '^' INT ;\n// c : ID\n// | INT\n// ;\n//\n// At each rule invocation, the set of tokens that could follow\n// that rule is pushed on a stack. Here are the various\n// context-sensitive follow sets:\n//\n// FOLLOW(b1_in_a) = FIRST(']') = ']'\n// FOLLOW(b2_in_a) = FIRST(')') = ')'\n// FOLLOW(c_in_b) = FIRST('^') = '^'\n//\n// Upon erroneous input \"[]\", the call chain is\n//\n// a -> b -> c\n//\n// and, hence, the follow context stack is:\n//\n// depth follow set start of rule execution\n// 0 <EOF> a (from main())\n// 1 ']' b\n// 2 '^' c\n//\n// Notice that ')' is not included, because b would have to have\n// been called from a different context in rule a for ')' to be\n// included.\n//\n// For error recovery, we cannot consider FOLLOW(c)\n// (context-sensitive or otherwise). We need the combined set of\n// all context-sensitive FOLLOW sets--the set of all tokens that\n// could follow any reference in the call chain. We need to\n// resync to one of those tokens. Note that FOLLOW(c)='^' and if\n// we resync'd to that token, we'd consume until EOF. We need to\n// sync to context-sensitive FOLLOWs for a, b, and c: {']','^'}.\n// In this case, for input \"[]\", LA(1) is ']' and in the set, so we would\n// not consume anything. After printing an error, rule c would\n// return normally. Rule b would not find the required '^' though.\n// At this point, it gets a mismatched token error and throws an\n// exception (since LA(1) is not in the viable following token\n// set). The rule exception handler tries to recover, but finds\n// the same recovery set and doesn't consume anything. Rule b\n// exits normally returning to rule a. Now it finds the ']' (and\n// with the successful match exits errorRecovery mode).\n//\n// So, you can see that the parser walks up the call chain looking\n// for the token that was a member of the recovery set.\n//\n// Errors are not generated in errorRecovery mode.\n//\n// ANTLR's error recovery mechanism is based upon original ideas:\n//\n// \"Algorithms + Data Structures = Programs\" by Niklaus Wirth\n//\n// and\n//\n// \"A note on error recovery in recursive descent parsers\":\n// http://portal.acm.org/citation.cfm?id=947902.947905\n//\n// Later, Josef Grosch had some good ideas:\n//\n// \"Efficient and Comfortable Error Recovery in Recursive Descent\n// Parsers\":\n// ftp://www.cocolab.com/products/cocktail/doca4.ps/ell.ps.zip\n//\n// Like Grosch I implement context-sensitive FOLLOW sets that are combined\n// at run-time upon error to avoid overhead during parsing.\n//\nDefaultErrorStrategy.prototype.getErrorRecoverySet = function(recognizer) {\n    var atn = recognizer._interp.atn;\n    var ctx = recognizer._ctx;\n    var recoverSet = new IntervalSet();\n    while (ctx !== null && ctx.invokingState>=0) {\n        // compute what follows who invoked us\n        var invokingState = atn.states[ctx.invokingState];\n        var rt = invokingState.transitions[0];\n        var follow = atn.nextTokens(rt.followState);\n        recoverSet.addSet(follow);\n        ctx = ctx.parentCtx;\n    }\n    recoverSet.removeOne(Token.EPSILON);\n    return recoverSet;\n};\n\n// Consume tokens until one matches the given token set.//\nDefaultErrorStrategy.prototype.consumeUntil = function(recognizer, set) {\n    var ttype = recognizer.getTokenStream().LA(1);\n    while( ttype !== Token.EOF && !set.contains(ttype)) {\n        recognizer.consume();\n        ttype = recognizer.getTokenStream().LA(1);\n    }\n};\n\n//\n// This implementation of {@link ANTLRErrorStrategy} responds to syntax errors\n// by immediately canceling the parse operation with a\n// {@link ParseCancellationException}. The implementation ensures that the\n// {@link ParserRuleContext//exception} field is set for all parse tree nodes\n// that were not completed prior to encountering the error.\n//\n// <p>\n// This error strategy is useful in the following scenarios.</p>\n//\n// <ul>\n// <li><strong>Two-stage parsing:</strong> This error strategy allows the first\n// stage of two-stage parsing to immediately terminate if an error is\n// encountered, and immediately fall back to the second stage. In addition to\n// avoiding wasted work by attempting to recover from errors here, the empty\n// implementation of {@link BailErrorStrategy//sync} improves the performance of\n// the first stage.</li>\n// <li><strong>Silent validation:</strong> When syntax errors are not being\n// reported or logged, and the parse result is simply ignored if errors occur,\n// the {@link BailErrorStrategy} avoids wasting work on recovering from errors\n// when the result will be ignored either way.</li>\n// </ul>\n//\n// <p>\n// {@code myparser.setErrorHandler(new BailErrorStrategy());}</p>\n//\n// @see Parser//setErrorHandler(ANTLRErrorStrategy)\n//\nfunction BailErrorStrategy() {\n\tDefaultErrorStrategy.call(this);\n\treturn this;\n}\n\nBailErrorStrategy.prototype = Object.create(DefaultErrorStrategy.prototype);\nBailErrorStrategy.prototype.constructor = BailErrorStrategy;\n\n// Instead of recovering from exception {@code e}, re-throw it wrapped\n// in a {@link ParseCancellationException} so it is not caught by the\n// rule function catches. Use {@link Exception//getCause()} to get the\n// original {@link RecognitionException}.\n//\nBailErrorStrategy.prototype.recover = function(recognizer, e) {\n    var context = recognizer._ctx;\n    while (context !== null) {\n        context.exception = e;\n        context = context.parentCtx;\n    }\n    throw new ParseCancellationException(e);\n};\n\n// Make sure we don't attempt to recover inline; if the parser\n// successfully recovers, it won't throw an exception.\n//\nBailErrorStrategy.prototype.recoverInline = function(recognizer) {\n    this.recover(recognizer, new InputMismatchException(recognizer));\n};\n\n// Make sure we don't attempt to recover from problems in subrules.//\nBailErrorStrategy.prototype.sync = function(recognizer) {\n    // pass\n};\n\nexports.BailErrorStrategy = BailErrorStrategy;\nexports.DefaultErrorStrategy = DefaultErrorStrategy;\n","// Generated from /Users/jimmyhu/Projects/TIDEDesktopService/language/TibboBasic/TibboBasicPreprocessorParser.g4 by ANTLR 4.8\r\n// jshint ignore: start\r\nvar antlr4 = require('antlr4/index');\r\n\r\n// This class defines a complete listener for a parse tree produced by TibboBasicPreprocessorParser.\r\nfunction TibboBasicPreprocessorParserListener() {\r\n\tantlr4.tree.ParseTreeListener.call(this);\r\n\treturn this;\r\n}\r\n\r\nTibboBasicPreprocessorParserListener.prototype = Object.create(antlr4.tree.ParseTreeListener.prototype);\r\nTibboBasicPreprocessorParserListener.prototype.constructor = TibboBasicPreprocessorParserListener;\r\n\r\n// Enter a parse tree produced by TibboBasicPreprocessorParser#preprocessor.\r\nTibboBasicPreprocessorParserListener.prototype.enterPreprocessor = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by TibboBasicPreprocessorParser#preprocessor.\r\nTibboBasicPreprocessorParserListener.prototype.exitPreprocessor = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by TibboBasicPreprocessorParser#line.\r\nTibboBasicPreprocessorParserListener.prototype.enterLine = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by TibboBasicPreprocessorParser#line.\r\nTibboBasicPreprocessorParserListener.prototype.exitLine = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by TibboBasicPreprocessorParser#text.\r\nTibboBasicPreprocessorParserListener.prototype.enterText = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by TibboBasicPreprocessorParser#text.\r\nTibboBasicPreprocessorParserListener.prototype.exitText = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by TibboBasicPreprocessorParser#codeLine.\r\nTibboBasicPreprocessorParserListener.prototype.enterCodeLine = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by TibboBasicPreprocessorParser#codeLine.\r\nTibboBasicPreprocessorParserListener.prototype.exitCodeLine = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by TibboBasicPreprocessorParser#preprocessorConditional.\r\nTibboBasicPreprocessorParserListener.prototype.enterPreprocessorConditional = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by TibboBasicPreprocessorParser#preprocessorConditional.\r\nTibboBasicPreprocessorParserListener.prototype.exitPreprocessorConditional = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by TibboBasicPreprocessorParser#preprocessorEndConditional.\r\nTibboBasicPreprocessorParserListener.prototype.enterPreprocessorEndConditional = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by TibboBasicPreprocessorParser#preprocessorEndConditional.\r\nTibboBasicPreprocessorParserListener.prototype.exitPreprocessorEndConditional = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by TibboBasicPreprocessorParser#preprocessorDef.\r\nTibboBasicPreprocessorParserListener.prototype.enterPreprocessorDef = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by TibboBasicPreprocessorParser#preprocessorDef.\r\nTibboBasicPreprocessorParserListener.prototype.exitPreprocessorDef = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by TibboBasicPreprocessorParser#preprocessorUndef.\r\nTibboBasicPreprocessorParserListener.prototype.enterPreprocessorUndef = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by TibboBasicPreprocessorParser#preprocessorUndef.\r\nTibboBasicPreprocessorParserListener.prototype.exitPreprocessorUndef = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by TibboBasicPreprocessorParser#preprocessorPragma.\r\nTibboBasicPreprocessorParserListener.prototype.enterPreprocessorPragma = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by TibboBasicPreprocessorParser#preprocessorPragma.\r\nTibboBasicPreprocessorParserListener.prototype.exitPreprocessorPragma = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by TibboBasicPreprocessorParser#preprocessorError.\r\nTibboBasicPreprocessorParserListener.prototype.enterPreprocessorError = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by TibboBasicPreprocessorParser#preprocessorError.\r\nTibboBasicPreprocessorParserListener.prototype.exitPreprocessorError = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by TibboBasicPreprocessorParser#preprocessorDefine.\r\nTibboBasicPreprocessorParserListener.prototype.enterPreprocessorDefine = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by TibboBasicPreprocessorParser#preprocessorDefine.\r\nTibboBasicPreprocessorParserListener.prototype.exitPreprocessorDefine = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by TibboBasicPreprocessorParser#preprocessorInclude.\r\nTibboBasicPreprocessorParserListener.prototype.enterPreprocessorInclude = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by TibboBasicPreprocessorParser#preprocessorInclude.\r\nTibboBasicPreprocessorParserListener.prototype.exitPreprocessorInclude = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by TibboBasicPreprocessorParser#directive_text.\r\nTibboBasicPreprocessorParserListener.prototype.enterDirective_text = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by TibboBasicPreprocessorParser#directive_text.\r\nTibboBasicPreprocessorParserListener.prototype.exitDirective_text = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by TibboBasicPreprocessorParser#preprocessorBinary.\r\nTibboBasicPreprocessorParserListener.prototype.enterPreprocessorBinary = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by TibboBasicPreprocessorParser#preprocessorBinary.\r\nTibboBasicPreprocessorParserListener.prototype.exitPreprocessorBinary = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by TibboBasicPreprocessorParser#preprocessorConstant.\r\nTibboBasicPreprocessorParserListener.prototype.enterPreprocessorConstant = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by TibboBasicPreprocessorParser#preprocessorConstant.\r\nTibboBasicPreprocessorParserListener.prototype.exitPreprocessorConstant = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by TibboBasicPreprocessorParser#preprocessorConditionalSymbol.\r\nTibboBasicPreprocessorParserListener.prototype.enterPreprocessorConditionalSymbol = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by TibboBasicPreprocessorParser#preprocessorConditionalSymbol.\r\nTibboBasicPreprocessorParserListener.prototype.exitPreprocessorConditionalSymbol = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by TibboBasicPreprocessorParser#preprocessor_item.\r\nTibboBasicPreprocessorParserListener.prototype.enterPreprocessor_item = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by TibboBasicPreprocessorParser#preprocessor_item.\r\nTibboBasicPreprocessorParserListener.prototype.exitPreprocessor_item = function(ctx) {\r\n};\r\n\r\n\r\n\r\nexports.TibboBasicPreprocessorParserListener = TibboBasicPreprocessorParserListener;","// Generated from /Users/jimmyhu/Projects/tibbo-basic/server/language/TibboBasic/TibboBasicParser.g4 by ANTLR 4.8\r\n// jshint ignore: start\r\nvar antlr4 = require('antlr4/index');\r\nvar TibboBasicParserListener = require('./TibboBasicParserListener').TibboBasicParserListener;\r\nvar TibboBasicParserVisitor = require('./TibboBasicParserVisitor').TibboBasicParserVisitor;\r\n\r\nvar grammarFileName = \"TibboBasicParser.g4\";\r\n\r\n\r\nvar serializedATN = [\"\\u0003\\u608b\\ua72a\\u8133\\ub9ed\\u417c\\u3be7\\u7786\\u5964\",\r\n    \"\\u0003\\u0092\\u030e\\u0004\\u0002\\t\\u0002\\u0004\\u0003\\t\\u0003\\u0004\\u0004\",\r\n    \"\\t\\u0004\\u0004\\u0005\\t\\u0005\\u0004\\u0006\\t\\u0006\\u0004\\u0007\\t\\u0007\",\r\n    \"\\u0004\\b\\t\\b\\u0004\\t\\t\\t\\u0004\\n\\t\\n\\u0004\\u000b\\t\\u000b\\u0004\\f\\t\\f\",\r\n    \"\\u0004\\r\\t\\r\\u0004\\u000e\\t\\u000e\\u0004\\u000f\\t\\u000f\\u0004\\u0010\\t\\u0010\",\r\n    \"\\u0004\\u0011\\t\\u0011\\u0004\\u0012\\t\\u0012\\u0004\\u0013\\t\\u0013\\u0004\\u0014\",\r\n    \"\\t\\u0014\\u0004\\u0015\\t\\u0015\\u0004\\u0016\\t\\u0016\\u0004\\u0017\\t\\u0017\",\r\n    \"\\u0004\\u0018\\t\\u0018\\u0004\\u0019\\t\\u0019\\u0004\\u001a\\t\\u001a\\u0004\\u001b\",\r\n    \"\\t\\u001b\\u0004\\u001c\\t\\u001c\\u0004\\u001d\\t\\u001d\\u0004\\u001e\\t\\u001e\",\r\n    \"\\u0004\\u001f\\t\\u001f\\u0004 \\t \\u0004!\\t!\\u0004\\\"\\t\\\"\\u0004#\\t#\\u0004\",\r\n    \"$\\t$\\u0004%\\t%\\u0004&\\t&\\u0004\\'\\t\\'\\u0004(\\t(\\u0004)\\t)\\u0004*\\t*\\u0004\",\r\n    \"+\\t+\\u0004,\\t,\\u0004-\\t-\\u0004.\\t.\\u0004/\\t/\\u00040\\t0\\u00041\\t1\\u0004\",\r\n    \"2\\t2\\u00043\\t3\\u00044\\t4\\u00045\\t5\\u00046\\t6\\u00047\\t7\\u00048\\t8\\u0004\",\r\n    \"9\\t9\\u0004:\\t:\\u0004;\\t;\\u0004<\\t<\\u0004=\\t=\\u0004>\\t>\\u0004?\\t?\\u0003\",\r\n    \"\\u0002\\u0007\\u0002\\u0080\\n\\u0002\\f\\u0002\\u000e\\u0002\\u0083\\u000b\\u0002\",\r\n    \"\\u0003\\u0002\\u0003\\u0002\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\",\r\n    \"\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\",\r\n    \"\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0005\\u0003\",\r\n    \"\\u0096\\n\\u0003\\u0003\\u0004\\u0003\\u0004\\u0003\\u0004\\u0003\\u0005\\u0003\",\r\n    \"\\u0005\\u0003\\u0005\\u0003\\u0006\\u0005\\u0006\\u009f\\n\\u0006\\u0003\\u0006\",\r\n    \"\\u0007\\u0006\\u00a2\\n\\u0006\\f\\u0006\\u000e\\u0006\\u00a5\\u000b\\u0006\\u0003\",\r\n    \"\\u0007\\u0003\\u0007\\u0003\\u0007\\u0003\\u0007\\u0003\\u0007\\u0003\\u0007\\u0003\",\r\n    \"\\u0007\\u0003\\u0007\\u0003\\u0007\\u0003\\u0007\\u0005\\u0007\\u00b1\\n\\u0007\",\r\n    \"\\u0003\\b\\u0003\\b\\u0003\\b\\u0003\\b\\u0007\\b\\u00b7\\n\\b\\f\\b\\u000e\\b\\u00ba\",\r\n    \"\\u000b\\b\\u0003\\t\\u0003\\t\\u0005\\t\\u00be\\n\\t\\u0003\\t\\u0003\\t\\u0003\\t\\u0003\",\r\n    \"\\n\\u0005\\n\\u00c4\\n\\n\\u0003\\n\\u0003\\n\\u0003\\n\\u0003\\u000b\\u0003\\u000b\",\r\n    \"\\u0003\\u000b\\u0003\\u000b\\u0005\\u000b\\u00cd\\n\\u000b\\u0003\\u000b\\u0003\",\r\n    \"\\u000b\\u0005\\u000b\\u00d1\\n\\u000b\\u0003\\f\\u0003\\f\\u0003\\f\\u0003\\f\\u0005\",\r\n    \"\\f\\u00d7\\n\\f\\u0003\\f\\u0003\\f\\u0005\\f\\u00db\\n\\f\\u0003\\f\\u0003\\f\\u0003\",\r\n    \"\\r\\u0003\\r\\u0003\\r\\u0003\\r\\u0003\\r\\u0003\\r\\u0003\\r\\u0003\\r\\u0003\\r\\u0003\",\r\n    \"\\r\\u0003\\r\\u0003\\r\\u0003\\r\\u0003\\r\\u0003\\r\\u0003\\r\\u0005\\r\\u00ef\\n\\r\",\r\n    \"\\u0003\\u000e\\u0003\\u000e\\u0003\\u000e\\u0007\\u000e\\u00f4\\n\\u000e\\f\\u000e\",\r\n    \"\\u000e\\u000e\\u00f7\\u000b\\u000e\\u0003\\u000e\\u0003\\u000e\\u0003\\u000f\\u0003\",\r\n    \"\\u000f\\u0003\\u000f\\u0005\\u000f\\u00fe\\n\\u000f\\u0003\\u000f\\u0005\\u000f\",\r\n    \"\\u0101\\n\\u000f\\u0003\\u0010\\u0003\\u0010\\u0003\\u0011\\u0003\\u0011\\u0003\",\r\n    \"\\u0011\\u0003\\u0011\\u0003\\u0011\\u0003\\u0011\\u0005\\u0011\\u010b\\n\\u0011\",\r\n    \"\\u0003\\u0011\\u0003\\u0011\\u0003\\u0011\\u0005\\u0011\\u0110\\n\\u0011\\u0003\",\r\n    \"\\u0012\\u0005\\u0012\\u0113\\n\\u0012\\u0003\\u0012\\u0003\\u0012\\u0003\\u0012\",\r\n    \"\\u0005\\u0012\\u0118\\n\\u0012\\u0003\\u0012\\u0003\\u0012\\u0005\\u0012\\u011c\",\r\n    \"\\n\\u0012\\u0003\\u0012\\u0003\\u0012\\u0003\\u0012\\u0003\\u0012\\u0003\\u0013\",\r\n    \"\\u0003\\u0013\\u0005\\u0013\\u0124\\n\\u0013\\u0003\\u0014\\u0003\\u0014\\u0003\",\r\n    \"\\u0014\\u0003\\u0015\\u0003\\u0015\\u0003\\u0015\\u0003\\u0015\\u0003\\u0015\\u0005\",\r\n    \"\\u0015\\u012e\\n\\u0015\\u0003\\u0015\\u0003\\u0015\\u0003\\u0015\\u0005\\u0015\",\r\n    \"\\u0133\\n\\u0015\\u0005\\u0015\\u0135\\n\\u0015\\u0003\\u0015\\u0003\\u0015\\u0003\",\r\n    \"\\u0015\\u0003\\u0015\\u0003\\u0015\\u0003\\u0015\\u0006\\u0015\\u013d\\n\\u0015\",\r\n    \"\\r\\u0015\\u000e\\u0015\\u013e\\u0003\\u0015\\u0003\\u0015\\u0003\\u0015\\u0003\",\r\n    \"\\u0015\\u0003\\u0015\\u0003\\u0015\\u0007\\u0015\\u0147\\n\\u0015\\f\\u0015\\u000e\",\r\n    \"\\u0015\\u014a\\u000b\\u0015\\u0003\\u0015\\u0003\\u0015\\u0005\\u0015\\u014e\\n\",\r\n    \"\\u0015\\u0003\\u0015\\u0003\\u0015\\u0005\\u0015\\u0152\\n\\u0015\\u0003\\u0016\",\r\n    \"\\u0003\\u0016\\u0003\\u0017\\u0003\\u0017\\u0005\\u0017\\u0158\\n\\u0017\\u0003\",\r\n    \"\\u0017\\u0003\\u0017\\u0003\\u0017\\u0003\\u0017\\u0007\\u0017\\u015e\\n\\u0017\",\r\n    \"\\f\\u0017\\u000e\\u0017\\u0161\\u000b\\u0017\\u0003\\u0017\\u0003\\u0017\\u0003\",\r\n    \"\\u0018\\u0003\\u0018\\u0005\\u0018\\u0167\\n\\u0018\\u0003\\u0019\\u0003\\u0019\",\r\n    \"\\u0003\\u0019\\u0003\\u0019\\u0003\\u0019\\u0003\\u0019\\u0003\\u0019\\u0003\\u0019\",\r\n    \"\\u0005\\u0019\\u0171\\n\\u0019\\u0005\\u0019\\u0173\\n\\u0019\\u0005\\u0019\\u0175\",\r\n    \"\\n\\u0019\\u0003\\u0019\\u0003\\u0019\\u0003\\u0019\\u0003\\u001a\\u0003\\u001a\",\r\n    \"\\u0003\\u001a\\u0003\\u001a\\u0003\\u001a\\u0003\\u001a\\u0003\\u001a\\u0003\\u001a\",\r\n    \"\\u0005\\u001a\\u0182\\n\\u001a\\u0005\\u001a\\u0184\\n\\u001a\\u0005\\u001a\\u0186\",\r\n    \"\\n\\u001a\\u0003\\u001a\\u0003\\u001a\\u0003\\u001a\\u0003\\u001b\\u0003\\u001b\",\r\n    \"\\u0003\\u001b\\u0003\\u001b\\u0003\\u001b\\u0003\\u001b\\u0005\\u001b\\u0191\\n\",\r\n    \"\\u001b\\u0003\\u001c\\u0003\\u001c\\u0003\\u001c\\u0003\\u001c\\u0003\\u001c\\u0003\",\r\n    \"\\u001c\\u0005\\u001c\\u0199\\n\\u001c\\u0005\\u001c\\u019b\\n\\u001c\\u0005\\u001c\",\r\n    \"\\u019d\\n\\u001c\\u0003\\u001c\\u0003\\u001c\\u0003\\u001c\\u0005\\u001c\\u01a2\",\r\n    \"\\n\\u001c\\u0003\\u001d\\u0003\\u001d\\u0005\\u001d\\u01a6\\n\\u001d\\u0003\\u001d\",\r\n    \"\\u0003\\u001d\\u0005\\u001d\\u01aa\\n\\u001d\\u0003\\u001d\\u0005\\u001d\\u01ad\",\r\n    \"\\n\\u001d\\u0003\\u001e\\u0003\\u001e\\u0003\\u001e\\u0005\\u001e\\u01b2\\n\\u001e\",\r\n    \"\\u0003\\u001e\\u0003\\u001e\\u0005\\u001e\\u01b6\\n\\u001e\\u0003\\u001e\\u0005\",\r\n    \"\\u001e\\u01b9\\n\\u001e\\u0003\\u001f\\u0003\\u001f\\u0003\\u001f\\u0003\\u001f\",\r\n    \"\\u0007\\u001f\\u01bf\\n\\u001f\\f\\u001f\\u000e\\u001f\\u01c2\\u000b\\u001f\\u0005\",\r\n    \"\\u001f\\u01c4\\n\\u001f\\u0003\\u001f\\u0003\\u001f\\u0003 \\u0005 \\u01c9\\n \",\r\n    \"\\u0003 \\u0003 \\u0005 \\u01cd\\n \\u0003!\\u0003!\\u0003!\\u0003!\\u0005!\\u01d3\",\r\n    \"\\n!\\u0003!\\u0007!\\u01d6\\n!\\f!\\u000e!\\u01d9\\u000b!\\u0003!\\u0005!\\u01dc\",\r\n    \"\\n!\\u0003!\\u0003!\\u0003\\\"\\u0003\\\"\\u0003\\\"\\u0003\\\"\\u0007\\\"\\u01e4\\n\\\"\",\r\n    \"\\f\\\"\\u000e\\\"\\u01e7\\u000b\\\"\\u0003\\\"\\u0005\\\"\\u01ea\\n\\\"\\u0003\\\"\\u0003\\\"\",\r\n    \"\\u0003#\\u0003#\\u0005#\\u01f0\\n#\\u0003#\\u0003#\\u0003$\\u0003$\\u0003%\\u0005\",\r\n    \"%\\u01f7\\n%\\u0003%\\u0003%\\u0003%\\u0005%\\u01fc\\n%\\u0003%\\u0003%\\u0005\",\r\n    \"%\\u0200\\n%\\u0003%\\u0003%\\u0003%\\u0003&\\u0005&\\u0206\\n&\\u0003&\\u0003\",\r\n    \"&\\u0003&\\u0007&\\u020b\\n&\\f&\\u000e&\\u020e\\u000b&\\u0003&\\u0003&\\u0003\",\r\n    \"\\'\\u0003\\'\\u0003\\'\\u0003\\'\\u0003\\'\\u0005\\'\\u0217\\n\\'\\u0003\\'\\u0003\\'\",\r\n    \"\\u0003(\\u0003(\\u0003(\\u0003(\\u0003(\\u0003(\\u0005(\\u0221\\n(\\u0003(\\u0003\",\r\n    \"(\\u0003(\\u0003(\\u0003(\\u0003(\\u0003(\\u0003(\\u0003(\\u0003(\\u0003(\\u0003\",\r\n    \"(\\u0003(\\u0003(\\u0003(\\u0007(\\u0232\\n(\\f(\\u000e(\\u0235\\u000b(\\u0003\",\r\n    \")\\u0003)\\u0003)\\u0003)\\u0005)\\u023b\\n)\\u0003*\\u0003*\\u0003+\\u0003+\\u0003\",\r\n    \"+\\u0007+\\u0242\\n+\\f+\\u000e+\\u0245\\u000b+\\u0003+\\u0003+\\u0003+\\u0003\",\r\n    \"+\\u0007+\\u024b\\n+\\f+\\u000e+\\u024e\\u000b+\\u0007+\\u0250\\n+\\f+\\u000e+\\u0253\",\r\n    \"\\u000b+\\u0003,\\u0003,\\u0003-\\u0003-\\u0003-\\u0003-\\u0003-\\u0005-\\u025c\",\r\n    \"\\n-\\u0003.\\u0005.\\u025f\\n.\\u0003.\\u0003.\\u0003.\\u0003/\\u0003/\\u0003\",\r\n    \"/\\u0005/\\u0267\\n/\\u0007/\\u0269\\n/\\f/\\u000e/\\u026c\\u000b/\\u0003/\\u0003\",\r\n    \"/\\u0003/\\u0003/\\u0005/\\u0272\\n/\\u0005/\\u0274\\n/\\u00030\\u00030\\u0003\",\r\n    \"0\\u00030\\u00030\\u00050\\u027b\\n0\\u00031\\u00031\\u00031\\u00031\\u00031\\u0003\",\r\n    \"2\\u00032\\u00032\\u00033\\u00033\\u00033\\u00033\\u00073\\u0289\\n3\\f3\\u000e\",\r\n    \"3\\u028c\\u000b3\\u00053\\u028e\\n3\\u00033\\u00033\\u00034\\u00034\\u00035\\u0003\",\r\n    \"5\\u00035\\u00035\\u00075\\u0298\\n5\\f5\\u000e5\\u029b\\u000b5\\u00055\\u029d\",\r\n    \"\\n5\\u00035\\u00035\\u00036\\u00056\\u02a2\\n6\\u00036\\u00036\\u00036\\u0003\",\r\n    \"6\\u00056\\u02a8\\n6\\u00036\\u00056\\u02ab\\n6\\u00037\\u00037\\u00057\\u02af\",\r\n    \"\\n7\\u00037\\u00037\\u00057\\u02b3\\n7\\u00038\\u00038\\u00038\\u00038\\u0003\",\r\n    \"8\\u00038\\u00038\\u00038\\u00038\\u00038\\u00038\\u00038\\u00058\\u02c1\\n8\\u0003\",\r\n    \"8\\u00038\\u00058\\u02c5\\n8\\u00038\\u00058\\u02c8\\n8\\u00058\\u02ca\\n8\\u0003\",\r\n    \"9\\u00039\\u00039\\u00079\\u02cf\\n9\\f9\\u000e9\\u02d2\\u000b9\\u0003:\\u0003\",\r\n    \":\\u0003:\\u0003;\\u0003;\\u0003;\\u0003<\\u0003<\\u0003<\\u0005<\\u02dd\\n<\\u0003\",\r\n    \"<\\u0006<\\u02e0\\n<\\r<\\u000e<\\u02e1\\u0003<\\u0005<\\u02e5\\n<\\u0003<\\u0003\",\r\n    \"<\\u0003<\\u0003<\\u0003<\\u0003<\\u0005<\\u02ed\\n<\\u0003=\\u0003=\\u0003=\\u0005\",\r\n    \"=\\u02f2\\n=\\u0003=\\u0003=\\u0003=\\u0005=\\u02f7\\n=\\u0007=\\u02f9\\n=\\f=\\u000e\",\r\n    \"=\\u02fc\\u000b=\\u0003=\\u0005=\\u02ff\\n=\\u0003=\\u0003=\\u0003>\\u0003>\\u0005\",\r\n    \">\\u0305\\n>\\u0003>\\u0003>\\u0003>\\u0005>\\u030a\\n>\\u0003?\\u0003?\\u0003\",\r\n    \"?\\u0002\\u0004NT@\\u0002\\u0004\\u0006\\b\\n\\f\\u000e\\u0010\\u0012\\u0014\\u0016\",\r\n    \"\\u0018\\u001a\\u001c\\u001e \\\"$&(*,.02468:<>@BDFHJLNPRTVXZ\\\\^`bdfhjlnp\",\r\n    \"rtvxz|\\u0002\\u000e\\u0004\\u0002JJLL\\u0003\\u0002\\\"\\'\\u0004\\u0002PPpp\\u0004\",\r\n    \"\\u0002\\b\\b\\n\\n\\u0005\\u000266UU]]\\u0004\\u0002\\\\\\\\__\\u0004\\u0002WY[[\\u0004\",\r\n    \"\\u0002VV^^\\u0007\\u0002\\u0004\\u000489>>@@NN\\u0004\\u000288\\\\\\\\\\u0003\\u0002\",\r\n    \"kl\\u0004\\u0002TTpp\\u0002\\u035e\\u0002\\u0081\\u0003\\u0002\\u0002\\u0002\\u0004\",\r\n    \"\\u0095\\u0003\\u0002\\u0002\\u0002\\u0006\\u0097\\u0003\\u0002\\u0002\\u0002\\b\",\r\n    \"\\u009a\\u0003\\u0002\\u0002\\u0002\\n\\u00a3\\u0003\\u0002\\u0002\\u0002\\f\\u00b0\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u000e\\u00b2\\u0003\\u0002\\u0002\\u0002\\u0010\\u00bb\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0012\\u00c3\\u0003\\u0002\\u0002\\u0002\\u0014\\u00c8\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0016\\u00d2\\u0003\\u0002\\u0002\\u0002\\u0018\\u00ee\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u001a\\u00f0\\u0003\\u0002\\u0002\\u0002\\u001c\\u00fa\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u001e\\u0102\\u0003\\u0002\\u0002\\u0002 \\u0104\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\\"\\u0112\\u0003\\u0002\\u0002\\u0002$\\u0123\\u0003\",\r\n    \"\\u0002\\u0002\\u0002&\\u0125\\u0003\\u0002\\u0002\\u0002(\\u0151\\u0003\\u0002\",\r\n    \"\\u0002\\u0002*\\u0153\\u0003\\u0002\\u0002\\u0002,\\u0155\\u0003\\u0002\\u0002\",\r\n    \"\\u0002.\\u0166\\u0003\\u0002\\u0002\\u00020\\u0168\\u0003\\u0002\\u0002\\u0002\",\r\n    \"2\\u0179\\u0003\\u0002\\u0002\\u00024\\u018a\\u0003\\u0002\\u0002\\u00026\\u0192\",\r\n    \"\\u0003\\u0002\\u0002\\u00028\\u01a5\\u0003\\u0002\\u0002\\u0002:\\u01ae\\u0003\",\r\n    \"\\u0002\\u0002\\u0002<\\u01ba\\u0003\\u0002\\u0002\\u0002>\\u01c8\\u0003\\u0002\",\r\n    \"\\u0002\\u0002@\\u01ce\\u0003\\u0002\\u0002\\u0002B\\u01df\\u0003\\u0002\\u0002\",\r\n    \"\\u0002D\\u01ed\\u0003\\u0002\\u0002\\u0002F\\u01f3\\u0003\\u0002\\u0002\\u0002\",\r\n    \"H\\u01f6\\u0003\\u0002\\u0002\\u0002J\\u0205\\u0003\\u0002\\u0002\\u0002L\\u0211\",\r\n    \"\\u0003\\u0002\\u0002\\u0002N\\u0220\\u0003\\u0002\\u0002\\u0002P\\u023a\\u0003\",\r\n    \"\\u0002\\u0002\\u0002R\\u023c\\u0003\\u0002\\u0002\\u0002T\\u023e\\u0003\\u0002\",\r\n    \"\\u0002\\u0002V\\u0254\\u0003\\u0002\\u0002\\u0002X\\u025b\\u0003\\u0002\\u0002\",\r\n    \"\\u0002Z\\u025e\\u0003\\u0002\\u0002\\u0002\\\\\\u0263\\u0003\\u0002\\u0002\\u0002\",\r\n    \"^\\u0275\\u0003\\u0002\\u0002\\u0002`\\u027c\\u0003\\u0002\\u0002\\u0002b\\u0281\",\r\n    \"\\u0003\\u0002\\u0002\\u0002d\\u0284\\u0003\\u0002\\u0002\\u0002f\\u0291\\u0003\",\r\n    \"\\u0002\\u0002\\u0002h\\u0293\\u0003\\u0002\\u0002\\u0002j\\u02a1\\u0003\\u0002\",\r\n    \"\\u0002\\u0002l\\u02ac\\u0003\\u0002\\u0002\\u0002n\\u02c9\\u0003\\u0002\\u0002\",\r\n    \"\\u0002p\\u02cb\\u0003\\u0002\\u0002\\u0002r\\u02d3\\u0003\\u0002\\u0002\\u0002\",\r\n    \"t\\u02d6\\u0003\\u0002\\u0002\\u0002v\\u02ec\\u0003\\u0002\\u0002\\u0002x\\u02ee\",\r\n    \"\\u0003\\u0002\\u0002\\u0002z\\u0304\\u0003\\u0002\\u0002\\u0002|\\u030b\\u0003\",\r\n    \"\\u0002\\u0002\\u0002~\\u0080\\u0005\\u0004\\u0003\\u0002\\u007f~\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0080\\u0083\\u0003\\u0002\\u0002\\u0002\\u0081\\u007f\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0081\\u0082\\u0003\\u0002\\u0002\\u0002\\u0082\\u0084\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0083\\u0081\\u0003\\u0002\\u0002\\u0002\\u0084\\u0085\\u0007\\u0002\",\r\n    \"\\u0002\\u0003\\u0085\\u0003\\u0003\\u0002\\u0002\\u0002\\u0086\\u0096\\u0005\\u0006\",\r\n    \"\\u0004\\u0002\\u0087\\u0096\\u0005\\b\\u0005\\u0002\\u0088\\u0096\\u0005\\u001a\",\r\n    \"\\u000e\\u0002\\u0089\\u0096\\u0005\\u000e\\b\\u0002\\u008a\\u0096\\u0005\\u0014\",\r\n    \"\\u000b\\u0002\\u008b\\u0096\\u0005\\u0016\\f\\u0002\\u008c\\u0096\\u0005\\u0012\",\r\n    \"\\n\\u0002\\u008d\\u0096\\u0005Z.\\u0002\\u008e\\u0096\\u0005H%\\u0002\\u008f\\u0096\",\r\n    \"\\u0005\\\"\\u0012\\u0002\\u0090\\u0096\\u0005b2\\u0002\\u0091\\u0096\\u0005,\\u0017\",\r\n    \"\\u0002\\u0092\\u0096\\u00054\\u001b\\u0002\\u0093\\u0096\\u00056\\u001c\\u0002\",\r\n    \"\\u0094\\u0096\\u0005J&\\u0002\\u0095\\u0086\\u0003\\u0002\\u0002\\u0002\\u0095\",\r\n    \"\\u0087\\u0003\\u0002\\u0002\\u0002\\u0095\\u0088\\u0003\\u0002\\u0002\\u0002\\u0095\",\r\n    \"\\u0089\\u0003\\u0002\\u0002\\u0002\\u0095\\u008a\\u0003\\u0002\\u0002\\u0002\\u0095\",\r\n    \"\\u008b\\u0003\\u0002\\u0002\\u0002\\u0095\\u008c\\u0003\\u0002\\u0002\\u0002\\u0095\",\r\n    \"\\u008d\\u0003\\u0002\\u0002\\u0002\\u0095\\u008e\\u0003\\u0002\\u0002\\u0002\\u0095\",\r\n    \"\\u008f\\u0003\\u0002\\u0002\\u0002\\u0095\\u0090\\u0003\\u0002\\u0002\\u0002\\u0095\",\r\n    \"\\u0091\\u0003\\u0002\\u0002\\u0002\\u0095\\u0092\\u0003\\u0002\\u0002\\u0002\\u0095\",\r\n    \"\\u0093\\u0003\\u0002\\u0002\\u0002\\u0095\\u0094\\u0003\\u0002\\u0002\\u0002\\u0096\",\r\n    \"\\u0005\\u0003\\u0002\\u0002\\u0002\\u0097\\u0098\\u00071\\u0002\\u0002\\u0098\",\r\n    \"\\u0099\\u0007P\\u0002\\u0002\\u0099\\u0007\\u0003\\u0002\\u0002\\u0002\\u009a\",\r\n    \"\\u009b\\u00072\\u0002\\u0002\\u009b\\u009c\\u0007P\\u0002\\u0002\\u009c\\t\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u009d\\u009f\\u0005t;\\u0002\\u009e\\u009d\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u009e\\u009f\\u0003\\u0002\\u0002\\u0002\\u009f\\u00a0\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u00a0\\u00a2\\u0005\\f\\u0007\\u0002\\u00a1\\u009e\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u00a2\\u00a5\\u0003\\u0002\\u0002\\u0002\\u00a3\\u00a1\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u00a3\\u00a4\\u0003\\u0002\\u0002\\u0002\\u00a4\\u000b\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u00a5\\u00a3\\u0003\\u0002\\u0002\\u0002\\u00a6\\u00b1\\u0005t\",\r\n    \";\\u0002\\u00a7\\u00b1\\u0005\\u000e\\b\\u0002\\u00a8\\u00b1\\u0005\\u0018\\r\\u0002\",\r\n    \"\\u00a9\\u00b1\\u0005 \\u0011\\u0002\\u00aa\\u00b1\\u0005$\\u0013\\u0002\\u00ab\",\r\n    \"\\u00b1\\u0005(\\u0015\\u0002\\u00ac\\u00b1\\u0005@!\\u0002\\u00ad\\u00b1\\u0005\",\r\n    \"Z.\\u0002\\u00ae\\u00b1\\u0005`1\\u0002\\u00af\\u00b1\\u0005N(\\u0002\\u00b0\\u00a6\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u00b0\\u00a7\\u0003\\u0002\\u0002\\u0002\\u00b0\\u00a8\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u00b0\\u00a9\\u0003\\u0002\\u0002\\u0002\\u00b0\\u00aa\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u00b0\\u00ab\\u0003\\u0002\\u0002\\u0002\\u00b0\\u00ac\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u00b0\\u00ad\\u0003\\u0002\\u0002\\u0002\\u00b0\\u00ae\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u00b0\\u00af\\u0003\\u0002\\u0002\\u0002\\u00b1\\r\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u00b2\\u00b3\\u0007\\u000e\\u0002\\u0002\\u00b3\\u00b8\",\r\n    \"\\u0005\\u0010\\t\\u0002\\u00b4\\u00b5\\u0007j\\u0002\\u0002\\u00b5\\u00b7\\u0005\",\r\n    \"\\u0010\\t\\u0002\\u00b6\\u00b4\\u0003\\u0002\\u0002\\u0002\\u00b7\\u00ba\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u00b8\\u00b6\\u0003\\u0002\\u0002\\u0002\\u00b8\\u00b9\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u00b9\\u000f\\u0003\\u0002\\u0002\\u0002\\u00ba\\u00b8\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u00bb\\u00bd\\u0007p\\u0002\\u0002\\u00bc\\u00be\\u0005\",\r\n    \"l7\\u0002\\u00bd\\u00bc\\u0003\\u0002\\u0002\\u0002\\u00bd\\u00be\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u00be\\u00bf\\u0003\\u0002\\u0002\\u0002\\u00bf\\u00c0\\u0007V\",\r\n    \"\\u0002\\u0002\\u00c0\\u00c1\\u0005N(\\u0002\\u00c1\\u0011\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u00c2\\u00c4\\u0005|?\\u0002\\u00c3\\u00c2\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u00c3\\u00c4\\u0003\\u0002\\u0002\\u0002\\u00c4\\u00c5\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u00c5\\u00c6\\u0007\\u0010\\u0002\\u0002\\u00c6\\u00c7\\u0005\\\\/\\u0002\\u00c7\",\r\n    \"\\u0013\\u0003\\u0002\\u0002\\u0002\\u00c8\\u00c9\\u0007\\u0010\\u0002\\u0002\\u00c9\",\r\n    \"\\u00cc\\u0007D\\u0002\\u0002\\u00ca\\u00cb\\u0007p\\u0002\\u0002\\u00cb\\u00cd\",\r\n    \"\\u0007k\\u0002\\u0002\\u00cc\\u00ca\\u0003\\u0002\\u0002\\u0002\\u00cc\\u00cd\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u00cd\\u00ce\\u0003\\u0002\\u0002\\u0002\\u00ce\\u00d0\",\r\n    \"\\u0007p\\u0002\\u0002\\u00cf\\u00d1\\u0005h5\\u0002\\u00d0\\u00cf\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u00d0\\u00d1\\u0003\\u0002\\u0002\\u0002\\u00d1\\u0015\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u00d2\\u00d3\\u0007\\u0010\\u0002\\u0002\\u00d3\\u00d6\\u0007+\",\r\n    \"\\u0002\\u0002\\u00d4\\u00d5\\u0007p\\u0002\\u0002\\u00d5\\u00d7\\u0007k\\u0002\",\r\n    \"\\u0002\\u00d6\\u00d4\\u0003\\u0002\\u0002\\u0002\\u00d6\\u00d7\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u00d7\\u00d8\\u0003\\u0002\\u0002\\u0002\\u00d8\\u00da\\u0007p\\u0002\",\r\n    \"\\u0002\\u00d9\\u00db\\u0005h5\\u0002\\u00da\\u00d9\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u00da\\u00db\\u0003\\u0002\\u0002\\u0002\\u00db\\u00dc\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u00dc\\u00dd\\u0005l7\\u0002\\u00dd\\u0017\\u0003\\u0002\\u0002\\u0002\\u00de\",\r\n    \"\\u00df\\u0007\\u0012\\u0002\\u0002\\u00df\\u00e0\\u0005\\n\\u0006\\u0002\\u00e0\",\r\n    \"\\u00e1\\u00075\\u0002\\u0002\\u00e1\\u00ef\\u0003\\u0002\\u0002\\u0002\\u00e2\",\r\n    \"\\u00e3\\u0007\\u0012\\u0002\\u0002\\u00e3\\u00e4\\t\\u0002\\u0002\\u0002\\u00e4\",\r\n    \"\\u00e5\\u0005N(\\u0002\\u00e5\\u00e6\\u0005\\n\\u0006\\u0002\\u00e6\\u00e7\\u0007\",\r\n    \"5\\u0002\\u0002\\u00e7\\u00ef\\u0003\\u0002\\u0002\\u0002\\u00e8\\u00e9\\u0007\",\r\n    \"\\u0012\\u0002\\u0002\\u00e9\\u00ea\\u0005\\n\\u0006\\u0002\\u00ea\\u00eb\\u0007\",\r\n    \"5\\u0002\\u0002\\u00eb\\u00ec\\t\\u0002\\u0002\\u0002\\u00ec\\u00ed\\u0005N(\\u0002\",\r\n    \"\\u00ed\\u00ef\\u0003\\u0002\\u0002\\u0002\\u00ee\\u00de\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u00ee\\u00e2\\u0003\\u0002\\u0002\\u0002\\u00ee\\u00e8\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u00ef\\u0019\\u0003\\u0002\\u0002\\u0002\\u00f0\\u00f1\\u0007\\u0018\\u0002\\u0002\",\r\n    \"\\u00f1\\u00f5\\u0007p\\u0002\\u0002\\u00f2\\u00f4\\u0005\\u001c\\u000f\\u0002\",\r\n    \"\\u00f3\\u00f2\\u0003\\u0002\\u0002\\u0002\\u00f4\\u00f7\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u00f5\\u00f3\\u0003\\u0002\\u0002\\u0002\\u00f5\\u00f6\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u00f6\\u00f8\\u0003\\u0002\\u0002\\u0002\\u00f7\\u00f5\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u00f8\\u00f9\\u0007\\u0019\\u0002\\u0002\\u00f9\\u001b\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u00fa\\u00fd\\u0007p\\u0002\\u0002\\u00fb\\u00fc\\u0007V\\u0002\\u0002\\u00fc\",\r\n    \"\\u00fe\\u0005N(\\u0002\\u00fd\\u00fb\\u0003\\u0002\\u0002\\u0002\\u00fd\\u00fe\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u00fe\\u0100\\u0003\\u0002\\u0002\\u0002\\u00ff\\u0101\",\r\n    \"\\u0007j\\u0002\\u0002\\u0100\\u00ff\\u0003\\u0002\\u0002\\u0002\\u0100\\u0101\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0101\\u001d\\u0003\\u0002\\u0002\\u0002\\u0102\\u0103\",\r\n    \"\\t\\u0003\\u0002\\u0002\\u0103\\u001f\\u0003\\u0002\\u0002\\u0002\\u0104\\u0105\",\r\n    \"\\u0007*\\u0002\\u0002\\u0105\\u0106\\u0005N(\\u0002\\u0106\\u0107\\u0007F\\u0002\",\r\n    \"\\u0002\\u0107\\u010a\\u0005N(\\u0002\\u0108\\u0109\\u0007B\\u0002\\u0002\\u0109\",\r\n    \"\\u010b\\u0005N(\\u0002\\u010a\\u0108\\u0003\\u0002\\u0002\\u0002\\u010a\\u010b\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u010b\\u010c\\u0003\\u0002\\u0002\\u0002\\u010c\\u010d\",\r\n    \"\\u0005\\n\\u0006\\u0002\\u010d\\u010f\\u00077\\u0002\\u0002\\u010e\\u0110\\u0005\",\r\n    \"N(\\u0002\\u010f\\u010e\\u0003\\u0002\\u0002\\u0002\\u010f\\u0110\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0110!\\u0003\\u0002\\u0002\\u0002\\u0111\\u0113\\u0005|?\\u0002\",\r\n    \"\\u0112\\u0111\\u0003\\u0002\\u0002\\u0002\\u0112\\u0113\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0113\\u0114\\u0003\\u0002\\u0002\\u0002\\u0114\\u0117\\u0007+\\u0002\\u0002\",\r\n    \"\\u0115\\u0116\\u0007p\\u0002\\u0002\\u0116\\u0118\\u0007k\\u0002\\u0002\\u0117\",\r\n    \"\\u0115\\u0003\\u0002\\u0002\\u0002\\u0117\\u0118\\u0003\\u0002\\u0002\\u0002\\u0118\",\r\n    \"\\u0119\\u0003\\u0002\\u0002\\u0002\\u0119\\u011b\\u0007p\\u0002\\u0002\\u011a\",\r\n    \"\\u011c\\u0005h5\\u0002\\u011b\\u011a\\u0003\\u0002\\u0002\\u0002\\u011b\\u011c\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u011c\\u011d\\u0003\\u0002\\u0002\\u0002\\u011d\\u011e\",\r\n    \"\\u0005l7\\u0002\\u011e\\u011f\\u0005\\n\\u0006\\u0002\\u011f\\u0120\\u0007\\u001a\",\r\n    \"\\u0002\\u0002\\u0120#\\u0003\\u0002\\u0002\\u0002\\u0121\\u0124\\u0005&\\u0014\",\r\n    \"\\u0002\\u0122\\u0124\\u0005\\u001e\\u0010\\u0002\\u0123\\u0121\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u0123\\u0122\\u0003\\u0002\\u0002\\u0002\\u0124%\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u0125\\u0126\\u0007-\\u0002\\u0002\\u0126\\u0127\\u0007p\\u0002\\u0002\",\r\n    \"\\u0127\\'\\u0003\\u0002\\u0002\\u0002\\u0128\\u0129\\u0007.\\u0002\\u0002\\u0129\",\r\n    \"\\u012a\\u0005N(\\u0002\\u012a\\u012d\\u0007E\\u0002\\u0002\\u012b\\u012e\\u0005\",\r\n    \"\\f\\u0007\\u0002\\u012c\\u012e\\u0005$\\u0013\\u0002\\u012d\\u012b\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u012d\\u012c\\u0003\\u0002\\u0002\\u0002\\u012e\\u0134\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u012f\\u0132\\u0007\\u0014\\u0002\\u0002\\u0130\\u0133\\u0005\\f\",\r\n    \"\\u0007\\u0002\\u0131\\u0133\\u0005$\\u0013\\u0002\\u0132\\u0130\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0132\\u0131\\u0003\\u0002\\u0002\\u0002\\u0133\\u0135\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0134\\u012f\\u0003\\u0002\\u0002\\u0002\\u0134\\u0135\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0135\\u0136\\u0003\\u0002\\u0002\\u0002\\u0136\\u0137\\u0007e\",\r\n    \"\\u0002\\u0002\\u0137\\u0152\\u0003\\u0002\\u0002\\u0002\\u0138\\u0139\\u0007.\",\r\n    \"\\u0002\\u0002\\u0139\\u013a\\u0005N(\\u0002\\u013a\\u013c\\u0007E\\u0002\\u0002\",\r\n    \"\\u013b\\u013d\\u0007e\\u0002\\u0002\\u013c\\u013b\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u013d\\u013e\\u0003\\u0002\\u0002\\u0002\\u013e\\u013c\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u013e\\u013f\\u0003\\u0002\\u0002\\u0002\\u013f\\u0140\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0140\\u0148\\u0005\\n\\u0006\\u0002\\u0141\\u0142\\u0007\\u0017\\u0002\\u0002\",\r\n    \"\\u0142\\u0143\\u0005*\\u0016\\u0002\\u0143\\u0144\\u0007E\\u0002\\u0002\\u0144\",\r\n    \"\\u0145\\u0005\\n\\u0006\\u0002\\u0145\\u0147\\u0003\\u0002\\u0002\\u0002\\u0146\",\r\n    \"\\u0141\\u0003\\u0002\\u0002\\u0002\\u0147\\u014a\\u0003\\u0002\\u0002\\u0002\\u0148\",\r\n    \"\\u0146\\u0003\\u0002\\u0002\\u0002\\u0148\\u0149\\u0003\\u0002\\u0002\\u0002\\u0149\",\r\n    \"\\u014d\\u0003\\u0002\\u0002\\u0002\\u014a\\u0148\\u0003\\u0002\\u0002\\u0002\\u014b\",\r\n    \"\\u014c\\u0007\\u0014\\u0002\\u0002\\u014c\\u014e\\u0005\\n\\u0006\\u0002\\u014d\",\r\n    \"\\u014b\\u0003\\u0002\\u0002\\u0002\\u014d\\u014e\\u0003\\u0002\\u0002\\u0002\\u014e\",\r\n    \"\\u014f\\u0003\\u0002\\u0002\\u0002\\u014f\\u0150\\u0007\\u001b\\u0002\\u0002\\u0150\",\r\n    \"\\u0152\\u0003\\u0002\\u0002\\u0002\\u0151\\u0128\\u0003\\u0002\\u0002\\u0002\\u0151\",\r\n    \"\\u0138\\u0003\\u0002\\u0002\\u0002\\u0152)\\u0003\\u0002\\u0002\\u0002\\u0153\",\r\n    \"\\u0154\\u0005N(\\u0002\\u0154+\\u0003\\u0002\\u0002\\u0002\\u0155\\u0157\\u0007\",\r\n    \":\\u0002\\u0002\\u0156\\u0158\\u0007l\\u0002\\u0002\\u0157\\u0156\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0157\\u0158\\u0003\\u0002\\u0002\\u0002\\u0158\\u0159\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0159\\u015a\\u0007p\\u0002\\u0002\\u015a\\u015b\\u0007k\\u0002\",\r\n    \"\\u0002\\u015b\\u015f\\u0007p\\u0002\\u0002\\u015c\\u015e\\u0005.\\u0018\\u0002\",\r\n    \"\\u015d\\u015c\\u0003\\u0002\\u0002\\u0002\\u015e\\u0161\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u015f\\u015d\\u0003\\u0002\\u0002\\u0002\\u015f\\u0160\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0160\\u0162\\u0003\\u0002\\u0002\\u0002\\u0161\\u015f\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0162\\u0163\\u0007\\u001c\\u0002\\u0002\\u0163-\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0164\\u0167\\u00050\\u0019\\u0002\\u0165\\u0167\\u00052\\u001a\\u0002\\u0166\",\r\n    \"\\u0164\\u0003\\u0002\\u0002\\u0002\\u0166\\u0165\\u0003\\u0002\\u0002\\u0002\\u0167\",\r\n    \"/\\u0003\\u0002\\u0002\\u0002\\u0168\\u0169\\u0007,\\u0002\\u0002\\u0169\\u016a\",\r\n    \"\\u0007V\\u0002\\u0002\\u016a\\u016b\\u0007n\\u0002\\u0002\\u016b\\u0174\\u0007\",\r\n    \"Z\\u0002\\u0002\\u016c\\u0172\\u0007T\\u0002\\u0002\\u016d\\u016e\\u0007j\\u0002\",\r\n    \"\\u0002\\u016e\\u0170\\t\\u0004\\u0002\\u0002\\u016f\\u0171\\u0007_\\u0002\\u0002\",\r\n    \"\\u0170\\u016f\\u0003\\u0002\\u0002\\u0002\\u0170\\u0171\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0171\\u0173\\u0003\\u0002\\u0002\\u0002\\u0172\\u016d\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0172\\u0173\\u0003\\u0002\\u0002\\u0002\\u0173\\u0175\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0174\\u016c\\u0003\\u0002\\u0002\\u0002\\u0174\\u0175\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0175\\u0176\\u0003\\u0002\\u0002\\u0002\\u0176\\u0177\\u0007`\\u0002\\u0002\",\r\n    \"\\u0177\\u0178\\u0005l7\\u0002\\u01781\\u0003\\u0002\\u0002\\u0002\\u0179\\u017a\",\r\n    \"\\u0007=\\u0002\\u0002\\u017a\\u017b\\u0007V\\u0002\\u0002\\u017b\\u017c\\u0007\",\r\n    \"n\\u0002\\u0002\\u017c\\u0185\\u0007Z\\u0002\\u0002\\u017d\\u0183\\u0007T\\u0002\",\r\n    \"\\u0002\\u017e\\u017f\\u0007j\\u0002\\u0002\\u017f\\u0181\\t\\u0004\\u0002\\u0002\",\r\n    \"\\u0180\\u0182\\u0007_\\u0002\\u0002\\u0181\\u0180\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0181\\u0182\\u0003\\u0002\\u0002\\u0002\\u0182\\u0184\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0183\\u017e\\u0003\\u0002\\u0002\\u0002\\u0183\\u0184\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0184\\u0186\\u0003\\u0002\\u0002\\u0002\\u0185\\u017d\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0185\\u0186\\u0003\\u0002\\u0002\\u0002\\u0186\\u0187\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0187\\u0188\\u0007`\\u0002\\u0002\\u0188\\u0189\\u0005h5\\u0002\\u01893\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u018a\\u018b\\u0007!\\u0002\\u0002\\u018b\\u018c\\u0007\",\r\n    \"Z\\u0002\\u0002\\u018c\\u018d\\u0007T\\u0002\\u0002\\u018d\\u018e\\u0007`\\u0002\",\r\n    \"\\u0002\\u018e\\u0190\\u0007p\\u0002\\u0002\\u018f\\u0191\\u0005h5\\u0002\\u0190\",\r\n    \"\\u018f\\u0003\\u0002\\u0002\\u0002\\u0190\\u0191\\u0003\\u0002\\u0002\\u0002\\u0191\",\r\n    \"5\\u0003\\u0002\\u0002\\u0002\\u0192\\u0193\\u0007n\\u0002\\u0002\\u0193\\u019c\",\r\n    \"\\u0007Z\\u0002\\u0002\\u0194\\u019a\\u0007T\\u0002\\u0002\\u0195\\u0196\\u0007\",\r\n    \"j\\u0002\\u0002\\u0196\\u0198\\t\\u0004\\u0002\\u0002\\u0197\\u0199\\u0007_\\u0002\",\r\n    \"\\u0002\\u0198\\u0197\\u0003\\u0002\\u0002\\u0002\\u0198\\u0199\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u0199\\u019b\\u0003\\u0002\\u0002\\u0002\\u019a\\u0195\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u019a\\u019b\\u0003\\u0002\\u0002\\u0002\\u019b\\u019d\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u019c\\u0194\\u0003\\u0002\\u0002\\u0002\\u019c\\u019d\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u019d\\u019e\\u0003\\u0002\\u0002\\u0002\\u019e\\u01a1\\u0007`\\u0002\",\r\n    \"\\u0002\\u019f\\u01a2\\u00058\\u001d\\u0002\\u01a0\\u01a2\\u0005:\\u001e\\u0002\",\r\n    \"\\u01a1\\u019f\\u0003\\u0002\\u0002\\u0002\\u01a1\\u01a0\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u01a27\\u0003\\u0002\\u0002\\u0002\\u01a3\\u01a4\\u0007p\\u0002\\u0002\\u01a4\",\r\n    \"\\u01a6\\u0007k\\u0002\\u0002\\u01a5\\u01a3\\u0003\\u0002\\u0002\\u0002\\u01a5\",\r\n    \"\\u01a6\\u0003\\u0002\\u0002\\u0002\\u01a6\\u01a7\\u0003\\u0002\\u0002\\u0002\\u01a7\",\r\n    \"\\u01a9\\u0007p\\u0002\\u0002\\u01a8\\u01aa\\u0005h5\\u0002\\u01a9\\u01a8\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u01a9\\u01aa\\u0003\\u0002\\u0002\\u0002\\u01aa\\u01ac\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u01ab\\u01ad\\u0005l7\\u0002\\u01ac\\u01ab\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u01ac\\u01ad\\u0003\\u0002\\u0002\\u0002\\u01ad9\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u01ae\\u01b1\\u0007l\\u0002\\u0002\\u01af\\u01b0\\u0007p\\u0002\",\r\n    \"\\u0002\\u01b0\\u01b2\\u0007k\\u0002\\u0002\\u01b1\\u01af\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u01b1\\u01b2\\u0003\\u0002\\u0002\\u0002\\u01b2\\u01b3\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u01b3\\u01b5\\u0007p\\u0002\\u0002\\u01b4\\u01b6\\u0005<\\u001f\\u0002\",\r\n    \"\\u01b5\\u01b4\\u0003\\u0002\\u0002\\u0002\\u01b5\\u01b6\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u01b6\\u01b8\\u0003\\u0002\\u0002\\u0002\\u01b7\\u01b9\\u0005l7\\u0002\\u01b8\",\r\n    \"\\u01b7\\u0003\\u0002\\u0002\\u0002\\u01b8\\u01b9\\u0003\\u0002\\u0002\\u0002\\u01b9\",\r\n    \";\\u0003\\u0002\\u0002\\u0002\\u01ba\\u01c3\\u0007Z\\u0002\\u0002\\u01bb\\u01c0\",\r\n    \"\\u0005> \\u0002\\u01bc\\u01bd\\u0007j\\u0002\\u0002\\u01bd\\u01bf\\u0005> \\u0002\",\r\n    \"\\u01be\\u01bc\\u0003\\u0002\\u0002\\u0002\\u01bf\\u01c2\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u01c0\\u01be\\u0003\\u0002\\u0002\\u0002\\u01c0\\u01c1\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u01c1\\u01c4\\u0003\\u0002\\u0002\\u0002\\u01c2\\u01c0\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u01c3\\u01bb\\u0003\\u0002\\u0002\\u0002\\u01c3\\u01c4\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u01c4\\u01c5\\u0003\\u0002\\u0002\\u0002\\u01c5\\u01c6\\u0007`\\u0002\\u0002\",\r\n    \"\\u01c6=\\u0003\\u0002\\u0002\\u0002\\u01c7\\u01c9\\t\\u0005\\u0002\\u0002\\u01c8\",\r\n    \"\\u01c7\\u0003\\u0002\\u0002\\u0002\\u01c8\\u01c9\\u0003\\u0002\\u0002\\u0002\\u01c9\",\r\n    \"\\u01ca\\u0003\\u0002\\u0002\\u0002\\u01ca\\u01cc\\u0007p\\u0002\\u0002\\u01cb\",\r\n    \"\\u01cd\\u0005l7\\u0002\\u01cc\\u01cb\\u0003\\u0002\\u0002\\u0002\\u01cc\\u01cd\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u01cd?\\u0003\\u0002\\u0002\\u0002\\u01ce\\u01cf\",\r\n    \"\\u0007<\\u0002\\u0002\\u01cf\\u01d0\\u0007\\u000b\\u0002\\u0002\\u01d0\\u01d2\",\r\n    \"\\u0005N(\\u0002\\u01d1\\u01d3\\u0007h\\u0002\\u0002\\u01d2\\u01d1\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u01d2\\u01d3\\u0003\\u0002\\u0002\\u0002\\u01d3\\u01d7\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u01d4\\u01d6\\u0005B\\\"\\u0002\\u01d5\\u01d4\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u01d6\\u01d9\\u0003\\u0002\\u0002\\u0002\\u01d7\\u01d5\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u01d7\\u01d8\\u0003\\u0002\\u0002\\u0002\\u01d8\\u01db\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u01d9\\u01d7\\u0003\\u0002\\u0002\\u0002\\u01da\\u01dc\\u0005D#\\u0002\",\r\n    \"\\u01db\\u01da\\u0003\\u0002\\u0002\\u0002\\u01db\\u01dc\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u01dc\\u01dd\\u0003\\u0002\\u0002\\u0002\\u01dd\\u01de\\u0007\\u001d\\u0002\\u0002\",\r\n    \"\\u01deA\\u0003\\u0002\\u0002\\u0002\\u01df\\u01e0\\u0007\\u000b\\u0002\\u0002\",\r\n    \"\\u01e0\\u01e5\\u0005F$\\u0002\\u01e1\\u01e2\\u0007j\\u0002\\u0002\\u01e2\\u01e4\",\r\n    \"\\u0005F$\\u0002\\u01e3\\u01e1\\u0003\\u0002\\u0002\\u0002\\u01e4\\u01e7\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u01e5\\u01e3\\u0003\\u0002\\u0002\\u0002\\u01e5\\u01e6\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u01e6\\u01e9\\u0003\\u0002\\u0002\\u0002\\u01e7\\u01e5\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u01e8\\u01ea\\u0007h\\u0002\\u0002\\u01e9\\u01e8\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u01e9\\u01ea\\u0003\\u0002\\u0002\\u0002\\u01ea\\u01eb\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u01eb\\u01ec\\u0005\\n\\u0006\\u0002\\u01ecC\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u01ed\\u01ef\\u0007\\f\\u0002\\u0002\\u01ee\\u01f0\\u0007h\\u0002\",\r\n    \"\\u0002\\u01ef\\u01ee\\u0003\\u0002\\u0002\\u0002\\u01ef\\u01f0\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u01f0\\u01f1\\u0003\\u0002\\u0002\\u0002\\u01f1\\u01f2\\u0005\\n\\u0006\",\r\n    \"\\u0002\\u01f2E\\u0003\\u0002\\u0002\\u0002\\u01f3\\u01f4\\u0005N(\\u0002\\u01f4\",\r\n    \"G\\u0003\\u0002\\u0002\\u0002\\u01f5\\u01f7\\u0005|?\\u0002\\u01f6\\u01f5\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u01f6\\u01f7\\u0003\\u0002\\u0002\\u0002\\u01f7\\u01f8\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u01f8\\u01fb\\u0007D\\u0002\\u0002\\u01f9\\u01fa\\u0007\",\r\n    \"p\\u0002\\u0002\\u01fa\\u01fc\\u0007k\\u0002\\u0002\\u01fb\\u01f9\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u01fb\\u01fc\\u0003\\u0002\\u0002\\u0002\\u01fc\\u01fd\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u01fd\\u01ff\\u0007p\\u0002\\u0002\\u01fe\\u0200\\u0005h5\\u0002\",\r\n    \"\\u01ff\\u01fe\\u0003\\u0002\\u0002\\u0002\\u01ff\\u0200\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0200\\u0201\\u0003\\u0002\\u0002\\u0002\\u0201\\u0202\\u0005\\n\\u0006\\u0002\",\r\n    \"\\u0202\\u0203\\u0007\\u001e\\u0002\\u0002\\u0203I\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0204\\u0206\\u0005|?\\u0002\\u0205\\u0204\\u0003\\u0002\\u0002\\u0002\\u0205\",\r\n    \"\\u0206\\u0003\\u0002\\u0002\\u0002\\u0206\\u0207\\u0003\\u0002\\u0002\\u0002\\u0207\",\r\n    \"\\u0208\\u0007H\\u0002\\u0002\\u0208\\u020c\\u0007p\\u0002\\u0002\\u0209\\u020b\",\r\n    \"\\u0005L\\'\\u0002\\u020a\\u0209\\u0003\\u0002\\u0002\\u0002\\u020b\\u020e\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u020c\\u020a\\u0003\\u0002\\u0002\\u0002\\u020c\\u020d\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u020d\\u020f\\u0003\\u0002\\u0002\\u0002\\u020e\\u020c\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u020f\\u0210\\u0007\\u001f\\u0002\\u0002\\u0210K\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0211\\u0216\\u0007p\\u0002\\u0002\\u0212\\u0213\\u0007\",\r\n    \"Z\\u0002\\u0002\\u0213\\u0214\\u0005v<\\u0002\\u0214\\u0215\\u0007`\\u0002\\u0002\",\r\n    \"\\u0215\\u0217\\u0003\\u0002\\u0002\\u0002\\u0216\\u0212\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0216\\u0217\\u0003\\u0002\\u0002\\u0002\\u0217\\u0218\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0218\\u0219\\u0005l7\\u0002\\u0219M\\u0003\\u0002\\u0002\\u0002\\u021a\\u021b\",\r\n    \"\\b(\\u0001\\u0002\\u021b\\u0221\\u0005P)\\u0002\\u021c\\u021d\\u0007Z\\u0002\\u0002\",\r\n    \"\\u021d\\u021e\\u0005N(\\u0002\\u021e\\u021f\\u0007`\\u0002\\u0002\\u021f\\u0221\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0220\\u021a\\u0003\\u0002\\u0002\\u0002\\u0220\\u021c\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0221\\u0233\\u0003\\u0002\\u0002\\u0002\\u0222\\u0223\",\r\n    \"\\f\\b\\u0002\\u0002\\u0223\\u0224\\t\\u0006\\u0002\\u0002\\u0224\\u0232\\u0005N\",\r\n    \"(\\t\\u0225\\u0226\\f\\u0007\\u0002\\u0002\\u0226\\u0227\\t\\u0007\\u0002\\u0002\",\r\n    \"\\u0227\\u0232\\u0005N(\\b\\u0228\\u0229\\f\\u0006\\u0002\\u0002\\u0229\\u022a\\t\",\r\n    \"\\b\\u0002\\u0002\\u022a\\u0232\\u0005N(\\u0007\\u022b\\u022c\\f\\u0005\\u0002\\u0002\",\r\n    \"\\u022c\\u022d\\t\\t\\u0002\\u0002\\u022d\\u0232\\u0005N(\\u0006\\u022e\\u022f\\f\",\r\n    \"\\u0004\\u0002\\u0002\\u022f\\u0230\\t\\n\\u0002\\u0002\\u0230\\u0232\\u0005N(\\u0005\",\r\n    \"\\u0231\\u0222\\u0003\\u0002\\u0002\\u0002\\u0231\\u0225\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0231\\u0228\\u0003\\u0002\\u0002\\u0002\\u0231\\u022b\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0231\\u022e\\u0003\\u0002\\u0002\\u0002\\u0232\\u0235\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0233\\u0231\\u0003\\u0002\\u0002\\u0002\\u0233\\u0234\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0234O\\u0003\\u0002\\u0002\\u0002\\u0235\\u0233\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0236\\u023b\\u0005T+\\u0002\\u0237\\u0238\\u0005R*\\u0002\\u0238\\u0239\\u0005\",\r\n    \"X-\\u0002\\u0239\\u023b\\u0003\\u0002\\u0002\\u0002\\u023a\\u0236\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u023a\\u0237\\u0003\\u0002\\u0002\\u0002\\u023bQ\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u023c\\u023d\\t\\u000b\\u0002\\u0002\\u023dS\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u023e\\u023f\\b+\\u0001\\u0002\\u023f\\u0243\\u0005X-\\u0002\\u0240\\u0242\",\r\n    \"\\u0005V,\\u0002\\u0241\\u0240\\u0003\\u0002\\u0002\\u0002\\u0242\\u0245\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0243\\u0241\\u0003\\u0002\\u0002\\u0002\\u0243\\u0244\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0244\\u0251\\u0003\\u0002\\u0002\\u0002\\u0245\\u0243\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0246\\u0247\\f\\u0003\\u0002\\u0002\\u0247\\u0248\\u0007\",\r\n    \"k\\u0002\\u0002\\u0248\\u024c\\u0007p\\u0002\\u0002\\u0249\\u024b\\u0005V,\\u0002\",\r\n    \"\\u024a\\u0249\\u0003\\u0002\\u0002\\u0002\\u024b\\u024e\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u024c\\u024a\\u0003\\u0002\\u0002\\u0002\\u024c\\u024d\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u024d\\u0250\\u0003\\u0002\\u0002\\u0002\\u024e\\u024c\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u024f\\u0246\\u0003\\u0002\\u0002\\u0002\\u0250\\u0253\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0251\\u024f\\u0003\\u0002\\u0002\\u0002\\u0251\\u0252\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0252U\\u0003\\u0002\\u0002\\u0002\\u0253\\u0251\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0254\\u0255\\u0005d3\\u0002\\u0255W\\u0003\\u0002\\u0002\\u0002\\u0256\\u025c\",\r\n    \"\\u0005v<\\u0002\\u0257\\u0258\\u0007Z\\u0002\\u0002\\u0258\\u0259\\u0005N(\\u0002\",\r\n    \"\\u0259\\u025a\\u0007`\\u0002\\u0002\\u025a\\u025c\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u025b\\u0256\\u0003\\u0002\\u0002\\u0002\\u025b\\u0257\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u025cY\\u0003\\u0002\\u0002\\u0002\\u025d\\u025f\\u0005|?\\u0002\\u025e\\u025d\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u025e\\u025f\\u0003\\u0002\\u0002\\u0002\\u025f\\u0260\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0260\\u0261\\u0007\\u0011\\u0002\\u0002\\u0261\\u0262\",\r\n    \"\\u0005\\\\/\\u0002\\u0262[\\u0003\\u0002\\u0002\\u0002\\u0263\\u026a\\u0005^0\\u0002\",\r\n    \"\\u0264\\u0266\\u0007j\\u0002\\u0002\\u0265\\u0267\\u0005^0\\u0002\\u0266\\u0265\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0266\\u0267\\u0003\\u0002\\u0002\\u0002\\u0267\\u0269\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0268\\u0264\\u0003\\u0002\\u0002\\u0002\\u0269\\u026c\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u026a\\u0268\\u0003\\u0002\\u0002\\u0002\\u026a\\u026b\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u026b\\u026d\\u0003\\u0002\\u0002\\u0002\\u026c\\u026a\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u026d\\u0273\\u0005l7\\u0002\\u026e\\u0271\\u0007\",\r\n    \"V\\u0002\\u0002\\u026f\\u0272\\u0005N(\\u0002\\u0270\\u0272\\u0005x=\\u0002\\u0271\",\r\n    \"\\u026f\\u0003\\u0002\\u0002\\u0002\\u0271\\u0270\\u0003\\u0002\\u0002\\u0002\\u0272\",\r\n    \"\\u0274\\u0003\\u0002\\u0002\\u0002\\u0273\\u026e\\u0003\\u0002\\u0002\\u0002\\u0273\",\r\n    \"\\u0274\\u0003\\u0002\\u0002\\u0002\\u0274]\\u0003\\u0002\\u0002\\u0002\\u0275\",\r\n    \"\\u027a\\u0007p\\u0002\\u0002\\u0276\\u0277\\u0007Z\\u0002\\u0002\\u0277\\u0278\",\r\n    \"\\u0005v<\\u0002\\u0278\\u0279\\u0007`\\u0002\\u0002\\u0279\\u027b\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u027a\\u0276\\u0003\\u0002\\u0002\\u0002\\u027a\\u027b\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u027b_\\u0003\\u0002\\u0002\\u0002\\u027c\\u027d\\u0007L\\u0002\",\r\n    \"\\u0002\\u027d\\u027e\\u0005N(\\u0002\\u027e\\u027f\\u0005\\n\\u0006\\u0002\\u027f\",\r\n    \"\\u0280\\u0007K\\u0002\\u0002\\u0280a\\u0003\\u0002\\u0002\\u0002\\u0281\\u0282\",\r\n    \"\\u0007\\u0003\\u0002\\u0002\\u0282\\u0283\\u0007p\\u0002\\u0002\\u0283c\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0284\\u028d\\u0007Z\\u0002\\u0002\\u0285\\u028a\\u0005\",\r\n    \"f4\\u0002\\u0286\\u0287\\u0007j\\u0002\\u0002\\u0287\\u0289\\u0005f4\\u0002\\u0288\",\r\n    \"\\u0286\\u0003\\u0002\\u0002\\u0002\\u0289\\u028c\\u0003\\u0002\\u0002\\u0002\\u028a\",\r\n    \"\\u0288\\u0003\\u0002\\u0002\\u0002\\u028a\\u028b\\u0003\\u0002\\u0002\\u0002\\u028b\",\r\n    \"\\u028e\\u0003\\u0002\\u0002\\u0002\\u028c\\u028a\\u0003\\u0002\\u0002\\u0002\\u028d\",\r\n    \"\\u0285\\u0003\\u0002\\u0002\\u0002\\u028d\\u028e\\u0003\\u0002\\u0002\\u0002\\u028e\",\r\n    \"\\u028f\\u0003\\u0002\\u0002\\u0002\\u028f\\u0290\\u0007`\\u0002\\u0002\\u0290\",\r\n    \"e\\u0003\\u0002\\u0002\\u0002\\u0291\\u0292\\u0005N(\\u0002\\u0292g\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0293\\u029c\\u0007Z\\u0002\\u0002\\u0294\\u0299\\u0005j6\\u0002\",\r\n    \"\\u0295\\u0296\\u0007j\\u0002\\u0002\\u0296\\u0298\\u0005j6\\u0002\\u0297\\u0295\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0298\\u029b\\u0003\\u0002\\u0002\\u0002\\u0299\\u0297\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0299\\u029a\\u0003\\u0002\\u0002\\u0002\\u029a\\u029d\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u029b\\u0299\\u0003\\u0002\\u0002\\u0002\\u029c\\u0294\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u029c\\u029d\\u0003\\u0002\\u0002\\u0002\\u029d\\u029e\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u029e\\u029f\\u0007`\\u0002\\u0002\\u029fi\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u02a0\\u02a2\\t\\u0005\\u0002\\u0002\\u02a1\\u02a0\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u02a1\\u02a2\\u0003\\u0002\\u0002\\u0002\\u02a2\\u02a3\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u02a3\\u02a7\\u0007p\\u0002\\u0002\\u02a4\\u02a5\\u0007\",\r\n    \"Z\\u0002\\u0002\\u02a5\\u02a6\\u0007T\\u0002\\u0002\\u02a6\\u02a8\\u0007`\\u0002\",\r\n    \"\\u0002\\u02a7\\u02a4\\u0003\\u0002\\u0002\\u0002\\u02a7\\u02a8\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u02a8\\u02aa\\u0003\\u0002\\u0002\\u0002\\u02a9\\u02ab\\u0005l7\\u0002\",\r\n    \"\\u02aa\\u02a9\\u0003\\u0002\\u0002\\u0002\\u02aa\\u02ab\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u02abk\\u0003\\u0002\\u0002\\u0002\\u02ac\\u02ae\\u0007\\u0005\\u0002\\u0002\",\r\n    \"\\u02ad\\u02af\\u0007\\u0018\\u0002\\u0002\\u02ae\\u02ad\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u02ae\\u02af\\u0003\\u0002\\u0002\\u0002\\u02af\\u02b0\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u02b0\\u02b2\\u0005z>\\u0002\\u02b1\\u02b3\\u0005r:\\u0002\\u02b2\\u02b1\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u02b2\\u02b3\\u0003\\u0002\\u0002\\u0002\\u02b3m\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u02b4\\u02ca\\u0007\\r\\u0002\\u0002\\u02b5\\u02ca\\u0007\",\r\n    \"?\\u0002\\u0002\\u02b6\\u02ca\\u0007M\\u0002\\u0002\\u02b7\\u02ca\\u0007\\u0013\",\r\n    \"\\u0002\\u0002\\u02b8\\u02ca\\u0007)\\u0002\\u0002\\u02b9\\u02ca\\u0007\\u0007\",\r\n    \"\\u0002\\u0002\\u02ba\\u02ca\\u0007\\u0006\\u0002\\u0002\\u02bb\\u02ca\\u0007\\t\",\r\n    \"\\u0002\\u0002\\u02bc\\u02ca\\u00073\\u0002\\u0002\\u02bd\\u02ca\\u00074\\u0002\",\r\n    \"\\u0002\\u02be\\u02c7\\u0007C\\u0002\\u0002\\u02bf\\u02c1\\u0007o\\u0002\\u0002\",\r\n    \"\\u02c0\\u02bf\\u0003\\u0002\\u0002\\u0002\\u02c0\\u02c1\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u02c1\\u02c2\\u0003\\u0002\\u0002\\u0002\\u02c2\\u02c4\\u0007]\\u0002\\u0002\",\r\n    \"\\u02c3\\u02c5\\u0007o\\u0002\\u0002\\u02c4\\u02c3\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u02c4\\u02c5\\u0003\\u0002\\u0002\\u0002\\u02c5\\u02c6\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u02c6\\u02c8\\u0005N(\\u0002\\u02c7\\u02c0\\u0003\\u0002\\u0002\\u0002\\u02c7\",\r\n    \"\\u02c8\\u0003\\u0002\\u0002\\u0002\\u02c8\\u02ca\\u0003\\u0002\\u0002\\u0002\\u02c9\",\r\n    \"\\u02b4\\u0003\\u0002\\u0002\\u0002\\u02c9\\u02b5\\u0003\\u0002\\u0002\\u0002\\u02c9\",\r\n    \"\\u02b6\\u0003\\u0002\\u0002\\u0002\\u02c9\\u02b7\\u0003\\u0002\\u0002\\u0002\\u02c9\",\r\n    \"\\u02b8\\u0003\\u0002\\u0002\\u0002\\u02c9\\u02b9\\u0003\\u0002\\u0002\\u0002\\u02c9\",\r\n    \"\\u02ba\\u0003\\u0002\\u0002\\u0002\\u02c9\\u02bb\\u0003\\u0002\\u0002\\u0002\\u02c9\",\r\n    \"\\u02bc\\u0003\\u0002\\u0002\\u0002\\u02c9\\u02bd\\u0003\\u0002\\u0002\\u0002\\u02c9\",\r\n    \"\\u02be\\u0003\\u0002\\u0002\\u0002\\u02cao\\u0003\\u0002\\u0002\\u0002\\u02cb\",\r\n    \"\\u02d0\\u0007p\\u0002\\u0002\\u02cc\\u02cd\\t\\f\\u0002\\u0002\\u02cd\\u02cf\\u0007\",\r\n    \"p\\u0002\\u0002\\u02ce\\u02cc\\u0003\\u0002\\u0002\\u0002\\u02cf\\u02d2\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u02d0\\u02ce\\u0003\\u0002\\u0002\\u0002\\u02d0\\u02d1\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u02d1q\\u0003\\u0002\\u0002\\u0002\\u02d2\\u02d0\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u02d3\\u02d4\\u0007]\\u0002\\u0002\\u02d4\\u02d5\\t\\r\\u0002\",\r\n    \"\\u0002\\u02d5s\\u0003\\u0002\\u0002\\u0002\\u02d6\\u02d7\\u0007p\\u0002\\u0002\",\r\n    \"\\u02d7\\u02d8\\u0007h\\u0002\\u0002\\u02d8u\\u0003\\u0002\\u0002\\u0002\\u02d9\",\r\n    \"\\u02ed\\u0007R\\u0002\\u0002\\u02da\\u02ed\\u0007S\\u0002\\u0002\\u02db\\u02dd\",\r\n    \"\\t\\u0007\\u0002\\u0002\\u02dc\\u02db\\u0003\\u0002\\u0002\\u0002\\u02dc\\u02dd\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u02dd\\u02e4\\u0003\\u0002\\u0002\\u0002\\u02de\\u02e0\",\r\n    \"\\u0007T\\u0002\\u0002\\u02df\\u02de\\u0003\\u0002\\u0002\\u0002\\u02e0\\u02e1\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u02e1\\u02df\\u0003\\u0002\\u0002\\u0002\\u02e1\\u02e2\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u02e2\\u02e3\\u0003\\u0002\\u0002\\u0002\\u02e3\\u02e5\",\r\n    \"\\u0007k\\u0002\\u0002\\u02e4\\u02df\\u0003\\u0002\\u0002\\u0002\\u02e4\\u02e5\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u02e5\\u02e6\\u0003\\u0002\\u0002\\u0002\\u02e6\\u02ed\",\r\n    \"\\u0007T\\u0002\\u0002\\u02e7\\u02ed\\u0007P\\u0002\\u0002\\u02e8\\u02ed\\u0007\",\r\n    \"Q\\u0002\\u0002\\u02e9\\u02ed\\u0007G\\u0002\\u0002\\u02ea\\u02ed\\u0007(\\u0002\",\r\n    \"\\u0002\\u02eb\\u02ed\\u0007p\\u0002\\u0002\\u02ec\\u02d9\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u02ec\\u02da\\u0003\\u0002\\u0002\\u0002\\u02ec\\u02dc\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u02ec\\u02e7\\u0003\\u0002\\u0002\\u0002\\u02ec\\u02e8\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u02ec\\u02e9\\u0003\\u0002\\u0002\\u0002\\u02ec\\u02ea\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u02ec\\u02eb\\u0003\\u0002\\u0002\\u0002\\u02edw\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u02ee\\u02f1\\u0007c\\u0002\\u0002\\u02ef\\u02f2\\u0005v<\\u0002\\u02f0\",\r\n    \"\\u02f2\\u0005x=\\u0002\\u02f1\\u02ef\\u0003\\u0002\\u0002\\u0002\\u02f1\\u02f0\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u02f2\\u02fa\\u0003\\u0002\\u0002\\u0002\\u02f3\\u02f6\",\r\n    \"\\u0007j\\u0002\\u0002\\u02f4\\u02f7\\u0005v<\\u0002\\u02f5\\u02f7\\u0005x=\\u0002\",\r\n    \"\\u02f6\\u02f4\\u0003\\u0002\\u0002\\u0002\\u02f6\\u02f5\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u02f7\\u02f9\\u0003\\u0002\\u0002\\u0002\\u02f8\\u02f3\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u02f9\\u02fc\\u0003\\u0002\\u0002\\u0002\\u02fa\\u02f8\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u02fa\\u02fb\\u0003\\u0002\\u0002\\u0002\\u02fb\\u02fe\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u02fc\\u02fa\\u0003\\u0002\\u0002\\u0002\\u02fd\\u02ff\\u0007j\\u0002\\u0002\",\r\n    \"\\u02fe\\u02fd\\u0003\\u0002\\u0002\\u0002\\u02fe\\u02ff\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u02ff\\u0300\\u0003\\u0002\\u0002\\u0002\\u0300\\u0301\\u0007d\\u0002\\u0002\",\r\n    \"\\u0301y\\u0003\\u0002\\u0002\\u0002\\u0302\\u0305\\u0005n8\\u0002\\u0303\\u0305\",\r\n    \"\\u0005p9\\u0002\\u0304\\u0302\\u0003\\u0002\\u0002\\u0002\\u0304\\u0303\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0305\\u0309\\u0003\\u0002\\u0002\\u0002\\u0306\\u0307\\u0007\",\r\n    \"Z\\u0002\\u0002\\u0307\\u0308\\t\\r\\u0002\\u0002\\u0308\\u030a\\u0007`\\u0002\\u0002\",\r\n    \"\\u0309\\u0306\\u0003\\u0002\\u0002\\u0002\\u0309\\u030a\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u030a{\\u0003\\u0002\\u0002\\u0002\\u030b\\u030c\\u0007;\\u0002\\u0002\\u030c\",\r\n    \"}\\u0003\\u0002\\u0002\\u0002i\\u0081\\u0095\\u009e\\u00a3\\u00b0\\u00b8\\u00bd\",\r\n    \"\\u00c3\\u00cc\\u00d0\\u00d6\\u00da\\u00ee\\u00f5\\u00fd\\u0100\\u010a\\u010f\\u0112\",\r\n    \"\\u0117\\u011b\\u0123\\u012d\\u0132\\u0134\\u013e\\u0148\\u014d\\u0151\\u0157\\u015f\",\r\n    \"\\u0166\\u0170\\u0172\\u0174\\u0181\\u0183\\u0185\\u0190\\u0198\\u019a\\u019c\\u01a1\",\r\n    \"\\u01a5\\u01a9\\u01ac\\u01b1\\u01b5\\u01b8\\u01c0\\u01c3\\u01c8\\u01cc\\u01d2\\u01d7\",\r\n    \"\\u01db\\u01e5\\u01e9\\u01ef\\u01f6\\u01fb\\u01ff\\u0205\\u020c\\u0216\\u0220\\u0231\",\r\n    \"\\u0233\\u023a\\u0243\\u024c\\u0251\\u025b\\u025e\\u0266\\u026a\\u0271\\u0273\\u027a\",\r\n    \"\\u028a\\u028d\\u0299\\u029c\\u02a1\\u02a7\\u02aa\\u02ae\\u02b2\\u02c0\\u02c4\\u02c7\",\r\n    \"\\u02c9\\u02d0\\u02dc\\u02e1\\u02e4\\u02ec\\u02f1\\u02f6\\u02fa\\u02fe\\u0304\\u0309\"].join(\"\");\r\n\r\n\r\nvar atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);\r\n\r\nvar decisionsToDFA = atn.decisionToState.map( function(ds, index) { return new antlr4.dfa.DFA(ds, index); });\r\n\r\nvar sharedContextCache = new antlr4.PredictionContextCache();\r\n\r\nvar literalNames = [ null, null, null, null, null, null, null, null, null, \r\n                     null, null, null, null, null, null, null, null, null, \r\n                     null, null, null, null, null, null, null, null, null, \r\n                     null, null, null, null, null, null, null, null, null, \r\n                     null, null, null, null, null, null, null, null, null, \r\n                     null, null, null, null, null, null, null, null, null, \r\n                     null, null, null, null, null, null, null, null, null, \r\n                     null, null, null, null, null, null, null, null, null, \r\n                     null, null, null, null, null, null, null, null, null, \r\n                     null, null, null, null, null, null, null, null, null, \r\n                     \"'-'\", \"'*'\", null, \"'+'\", null, \"'['\", \"']'\", \"'{'\", \r\n                     \"'}'\", null, null, \"'''\", \"':'\", \"';'\", \"','\", \"'.'\", \r\n                     null, \"'_'\" ];\r\n\r\nvar symbolicNames = [ null, \"OBJECT\", \"AND\", \"AS\", \"BOOLEAN\", \"REAL\", \"BYREF\", \r\n                      \"BYTE\", \"BYVAL\", \"CASE\", \"CASE_ELSE\", \"CHAR\", \"CONST\", \r\n                      \"COUNTOF\", \"DECLARE\", \"DIM\", \"DO\", \"DWORD\", \"ELSE\", \r\n                      \"ELIF\", \"END\", \"ELSEIF\", \"ENUM\", \"END_ENUM\", \"END_FUNCTION\", \r\n                      \"END_IF\", \"END_PROPERTY\", \"END_SELECT\", \"END_SUB\", \r\n                      \"END_TYPE\", \"END_WITH\", \"EVENT\", \"EXIT_DO\", \"EXIT_FOR\", \r\n                      \"EXIT_FUNCTION\", \"EXIT_PROPERTY\", \"EXIT_SUB\", \"EXIT_WHILE\", \r\n                      \"FALSE\", \"FLOAT\", \"FOR\", \"FUNCTION\", \"GET\", \"GOTO\", \r\n                      \"IF\", \"IFDEF\", \"IFNDEF\", \"INCLUDE\", \"INCLUDEPP\", \"INTEGER\", \r\n                      \"LONG\", \"LOOP\", \"MOD\", \"NEXT\", \"NOT\", \"OR\", \"PROPERTY\", \r\n                      \"PUBLIC\", \"SELECT\", \"SET\", \"SHL\", \"SHORT\", \"SHR\", \r\n                      \"SIZEOF\", \"STEP\", \"STRING\", \"SUB\", \"THEN\", \"TO\", \"TRUE\", \r\n                      \"TYPE\", \"UNDEF\", \"UNTIL\", \"WEND\", \"WHILE\", \"WORD\", \r\n                      \"XOR\", \"SHARP\", \"STRINGLITERAL\", \"TemplateStringLiteral\", \r\n                      \"HEXLITERAL\", \"BINLITERAL\", \"INTEGERLITERAL\", \"DIV\", \r\n                      \"EQ\", \"GEQ\", \"GT\", \"LEQ\", \"LPAREN\", \"LT\", \"MINUS\", \r\n                      \"MULT\", \"NEQ\", \"PLUS\", \"RPAREN\", \"L_SQUARE_BRACKET\", \r\n                      \"R_SQUARE_BRACKET\", \"L_CURLY_BRACKET\", \"R_CURLY_BRACKET\", \r\n                      \"NEWLINE\", \"COMMENT\", \"SINGLEQUOTE\", \"COLON\", \"SEMICOLON\", \r\n                      \"COMMA\", \"DOT\", \"BANG\", \"UNDERSCORE\", \"SYSCALL\", \"WS\", \r\n                      \"IDENTIFIER\", \"DIRECTIVE_INCLUDE\", \"DIRECTIVE_INCLUDEPP\", \r\n                      \"DIRECTIVE_DEFINE\", \"DIRECTIVE_IF\", \"DIRECTIVE_ELIF\", \r\n                      \"DIRECTIVE_ELSE\", \"DIRECTIVE_UNDEF\", \"DIRECTIVE_IFDEF\", \r\n                      \"DIRECTIVE_IFNDEF\", \"DIRECTIVE_ENDIF\", \"DIRECTIVE_ERROR\", \r\n                      \"DIRECTIVE_BANG\", \"DIRECTIVE_LP\", \"DIRECTIVE_RP\", \r\n                      \"DIRECTIVE_EQUAL\", \"DIRECTIVE_NOTEQUAL\", \"DIRECTIVE_AND\", \r\n                      \"DIRECTIVE_OR\", \"DIRECTIVE_LT\", \"DIRECTIVE_GT\", \"DIRECTIVE_LE\", \r\n                      \"DIRECTIVE_GE\", \"DIRECTIVE_ID\", \"DIRECTIVE_DECIMAL_LITERAL\", \r\n                      \"DIRECTIVE_FLOAT\", \"DIRECTIVE_NEWLINE\", \"DIRECTIVE_SINGLE_COMMENT\", \r\n                      \"DIRECTIVE_BACKSLASH_NEWLINE\", \"DIRECTIVE_TEXT_NEWLINE\", \r\n                      \"DIRECTIVE_TEXT_BACKSLASH_NEWLINE\", \"DIRECTIVE_TEXT_MULTI_COMMENT\", \r\n                      \"DIRECTIVE_TEXT_SINGLE_COMMENT\", \"DIRECTIVE_TEXT\", \r\n                      \"ANY\" ];\r\n\r\nvar ruleNames =  [ \"startRule\", \"topLevelDeclaration\", \"includeStmt\", \"includeppStmt\", \r\n                   \"block\", \"statement\", \"constStmt\", \"constSubStmt\", \"declareVariableStmt\", \r\n                   \"declareSubStmt\", \"declareFuncStmt\", \"doLoopStmt\", \"enumerationStmt\", \r\n                   \"enumerationStmt_Constant\", \"exitStmt\", \"forNextStmt\", \r\n                   \"functionStmt\", \"jumpStmt\", \"goToStmt\", \"ifThenElseStmt\", \r\n                   \"ifConditionStmt\", \"propertyDefineStmt\", \"propertyDefineStmt_InStmt\", \r\n                   \"propertyGetStmt\", \"propertySetStmt\", \"eventDeclaration\", \r\n                   \"syscallDeclaration\", \"syscallDeclarationInner\", \"syscallInternalDeclarationInner\", \r\n                   \"syscallInternalParamList\", \"paramInternal\", \"selectCaseStmt\", \r\n                   \"sC_Case\", \"sC_Default\", \"sC_Cond\", \"subStmt\", \"typeStmt\", \r\n                   \"typeStmtElement\", \"expression\", \"unaryExpression\", \"unaryOperator\", \r\n                   \"postfixExpression\", \"postfix\", \"primaryExpression\", \r\n                   \"variableStmt\", \"variableListStmt\", \"variableListItem\", \r\n                   \"whileWendStmt\", \"objectDeclaration\", \"argList\", \"arg\", \r\n                   \"paramList\", \"param\", \"asTypeClause\", \"baseType\", \"complexType\", \r\n                   \"fieldLength\", \"lineLabel\", \"literal\", \"arrayLiteral\", \r\n                   \"type\", \"visibility\" ];\r\n\r\nfunction TibboBasicParser (input) {\r\n\tantlr4.Parser.call(this, input);\r\n    this._interp = new antlr4.atn.ParserATNSimulator(this, atn, decisionsToDFA, sharedContextCache);\r\n    this.ruleNames = ruleNames;\r\n    this.literalNames = literalNames;\r\n    this.symbolicNames = symbolicNames;\r\n    return this;\r\n}\r\n\r\nTibboBasicParser.prototype = Object.create(antlr4.Parser.prototype);\r\nTibboBasicParser.prototype.constructor = TibboBasicParser;\r\n\r\nObject.defineProperty(TibboBasicParser.prototype, \"atn\", {\r\n\tget : function() {\r\n\t\treturn atn;\r\n\t}\r\n});\r\n\r\nTibboBasicParser.EOF = antlr4.Token.EOF;\r\nTibboBasicParser.OBJECT = 1;\r\nTibboBasicParser.AND = 2;\r\nTibboBasicParser.AS = 3;\r\nTibboBasicParser.BOOLEAN = 4;\r\nTibboBasicParser.REAL = 5;\r\nTibboBasicParser.BYREF = 6;\r\nTibboBasicParser.BYTE = 7;\r\nTibboBasicParser.BYVAL = 8;\r\nTibboBasicParser.CASE = 9;\r\nTibboBasicParser.CASE_ELSE = 10;\r\nTibboBasicParser.CHAR = 11;\r\nTibboBasicParser.CONST = 12;\r\nTibboBasicParser.COUNTOF = 13;\r\nTibboBasicParser.DECLARE = 14;\r\nTibboBasicParser.DIM = 15;\r\nTibboBasicParser.DO = 16;\r\nTibboBasicParser.DWORD = 17;\r\nTibboBasicParser.ELSE = 18;\r\nTibboBasicParser.ELIF = 19;\r\nTibboBasicParser.END = 20;\r\nTibboBasicParser.ELSEIF = 21;\r\nTibboBasicParser.ENUM = 22;\r\nTibboBasicParser.END_ENUM = 23;\r\nTibboBasicParser.END_FUNCTION = 24;\r\nTibboBasicParser.END_IF = 25;\r\nTibboBasicParser.END_PROPERTY = 26;\r\nTibboBasicParser.END_SELECT = 27;\r\nTibboBasicParser.END_SUB = 28;\r\nTibboBasicParser.END_TYPE = 29;\r\nTibboBasicParser.END_WITH = 30;\r\nTibboBasicParser.EVENT = 31;\r\nTibboBasicParser.EXIT_DO = 32;\r\nTibboBasicParser.EXIT_FOR = 33;\r\nTibboBasicParser.EXIT_FUNCTION = 34;\r\nTibboBasicParser.EXIT_PROPERTY = 35;\r\nTibboBasicParser.EXIT_SUB = 36;\r\nTibboBasicParser.EXIT_WHILE = 37;\r\nTibboBasicParser.FALSE = 38;\r\nTibboBasicParser.FLOAT = 39;\r\nTibboBasicParser.FOR = 40;\r\nTibboBasicParser.FUNCTION = 41;\r\nTibboBasicParser.GET = 42;\r\nTibboBasicParser.GOTO = 43;\r\nTibboBasicParser.IF = 44;\r\nTibboBasicParser.IFDEF = 45;\r\nTibboBasicParser.IFNDEF = 46;\r\nTibboBasicParser.INCLUDE = 47;\r\nTibboBasicParser.INCLUDEPP = 48;\r\nTibboBasicParser.INTEGER = 49;\r\nTibboBasicParser.LONG = 50;\r\nTibboBasicParser.LOOP = 51;\r\nTibboBasicParser.MOD = 52;\r\nTibboBasicParser.NEXT = 53;\r\nTibboBasicParser.NOT = 54;\r\nTibboBasicParser.OR = 55;\r\nTibboBasicParser.PROPERTY = 56;\r\nTibboBasicParser.PUBLIC = 57;\r\nTibboBasicParser.SELECT = 58;\r\nTibboBasicParser.SET = 59;\r\nTibboBasicParser.SHL = 60;\r\nTibboBasicParser.SHORT = 61;\r\nTibboBasicParser.SHR = 62;\r\nTibboBasicParser.SIZEOF = 63;\r\nTibboBasicParser.STEP = 64;\r\nTibboBasicParser.STRING = 65;\r\nTibboBasicParser.SUB = 66;\r\nTibboBasicParser.THEN = 67;\r\nTibboBasicParser.TO = 68;\r\nTibboBasicParser.TRUE = 69;\r\nTibboBasicParser.TYPE = 70;\r\nTibboBasicParser.UNDEF = 71;\r\nTibboBasicParser.UNTIL = 72;\r\nTibboBasicParser.WEND = 73;\r\nTibboBasicParser.WHILE = 74;\r\nTibboBasicParser.WORD = 75;\r\nTibboBasicParser.XOR = 76;\r\nTibboBasicParser.SHARP = 77;\r\nTibboBasicParser.STRINGLITERAL = 78;\r\nTibboBasicParser.TemplateStringLiteral = 79;\r\nTibboBasicParser.HEXLITERAL = 80;\r\nTibboBasicParser.BINLITERAL = 81;\r\nTibboBasicParser.INTEGERLITERAL = 82;\r\nTibboBasicParser.DIV = 83;\r\nTibboBasicParser.EQ = 84;\r\nTibboBasicParser.GEQ = 85;\r\nTibboBasicParser.GT = 86;\r\nTibboBasicParser.LEQ = 87;\r\nTibboBasicParser.LPAREN = 88;\r\nTibboBasicParser.LT = 89;\r\nTibboBasicParser.MINUS = 90;\r\nTibboBasicParser.MULT = 91;\r\nTibboBasicParser.NEQ = 92;\r\nTibboBasicParser.PLUS = 93;\r\nTibboBasicParser.RPAREN = 94;\r\nTibboBasicParser.L_SQUARE_BRACKET = 95;\r\nTibboBasicParser.R_SQUARE_BRACKET = 96;\r\nTibboBasicParser.L_CURLY_BRACKET = 97;\r\nTibboBasicParser.R_CURLY_BRACKET = 98;\r\nTibboBasicParser.NEWLINE = 99;\r\nTibboBasicParser.COMMENT = 100;\r\nTibboBasicParser.SINGLEQUOTE = 101;\r\nTibboBasicParser.COLON = 102;\r\nTibboBasicParser.SEMICOLON = 103;\r\nTibboBasicParser.COMMA = 104;\r\nTibboBasicParser.DOT = 105;\r\nTibboBasicParser.BANG = 106;\r\nTibboBasicParser.UNDERSCORE = 107;\r\nTibboBasicParser.SYSCALL = 108;\r\nTibboBasicParser.WS = 109;\r\nTibboBasicParser.IDENTIFIER = 110;\r\nTibboBasicParser.DIRECTIVE_INCLUDE = 111;\r\nTibboBasicParser.DIRECTIVE_INCLUDEPP = 112;\r\nTibboBasicParser.DIRECTIVE_DEFINE = 113;\r\nTibboBasicParser.DIRECTIVE_IF = 114;\r\nTibboBasicParser.DIRECTIVE_ELIF = 115;\r\nTibboBasicParser.DIRECTIVE_ELSE = 116;\r\nTibboBasicParser.DIRECTIVE_UNDEF = 117;\r\nTibboBasicParser.DIRECTIVE_IFDEF = 118;\r\nTibboBasicParser.DIRECTIVE_IFNDEF = 119;\r\nTibboBasicParser.DIRECTIVE_ENDIF = 120;\r\nTibboBasicParser.DIRECTIVE_ERROR = 121;\r\nTibboBasicParser.DIRECTIVE_BANG = 122;\r\nTibboBasicParser.DIRECTIVE_LP = 123;\r\nTibboBasicParser.DIRECTIVE_RP = 124;\r\nTibboBasicParser.DIRECTIVE_EQUAL = 125;\r\nTibboBasicParser.DIRECTIVE_NOTEQUAL = 126;\r\nTibboBasicParser.DIRECTIVE_AND = 127;\r\nTibboBasicParser.DIRECTIVE_OR = 128;\r\nTibboBasicParser.DIRECTIVE_LT = 129;\r\nTibboBasicParser.DIRECTIVE_GT = 130;\r\nTibboBasicParser.DIRECTIVE_LE = 131;\r\nTibboBasicParser.DIRECTIVE_GE = 132;\r\nTibboBasicParser.DIRECTIVE_ID = 133;\r\nTibboBasicParser.DIRECTIVE_DECIMAL_LITERAL = 134;\r\nTibboBasicParser.DIRECTIVE_FLOAT = 135;\r\nTibboBasicParser.DIRECTIVE_NEWLINE = 136;\r\nTibboBasicParser.DIRECTIVE_SINGLE_COMMENT = 137;\r\nTibboBasicParser.DIRECTIVE_BACKSLASH_NEWLINE = 138;\r\nTibboBasicParser.DIRECTIVE_TEXT_NEWLINE = 139;\r\nTibboBasicParser.DIRECTIVE_TEXT_BACKSLASH_NEWLINE = 140;\r\nTibboBasicParser.DIRECTIVE_TEXT_MULTI_COMMENT = 141;\r\nTibboBasicParser.DIRECTIVE_TEXT_SINGLE_COMMENT = 142;\r\nTibboBasicParser.DIRECTIVE_TEXT = 143;\r\nTibboBasicParser.ANY = 144;\r\n\r\nTibboBasicParser.RULE_startRule = 0;\r\nTibboBasicParser.RULE_topLevelDeclaration = 1;\r\nTibboBasicParser.RULE_includeStmt = 2;\r\nTibboBasicParser.RULE_includeppStmt = 3;\r\nTibboBasicParser.RULE_block = 4;\r\nTibboBasicParser.RULE_statement = 5;\r\nTibboBasicParser.RULE_constStmt = 6;\r\nTibboBasicParser.RULE_constSubStmt = 7;\r\nTibboBasicParser.RULE_declareVariableStmt = 8;\r\nTibboBasicParser.RULE_declareSubStmt = 9;\r\nTibboBasicParser.RULE_declareFuncStmt = 10;\r\nTibboBasicParser.RULE_doLoopStmt = 11;\r\nTibboBasicParser.RULE_enumerationStmt = 12;\r\nTibboBasicParser.RULE_enumerationStmt_Constant = 13;\r\nTibboBasicParser.RULE_exitStmt = 14;\r\nTibboBasicParser.RULE_forNextStmt = 15;\r\nTibboBasicParser.RULE_functionStmt = 16;\r\nTibboBasicParser.RULE_jumpStmt = 17;\r\nTibboBasicParser.RULE_goToStmt = 18;\r\nTibboBasicParser.RULE_ifThenElseStmt = 19;\r\nTibboBasicParser.RULE_ifConditionStmt = 20;\r\nTibboBasicParser.RULE_propertyDefineStmt = 21;\r\nTibboBasicParser.RULE_propertyDefineStmt_InStmt = 22;\r\nTibboBasicParser.RULE_propertyGetStmt = 23;\r\nTibboBasicParser.RULE_propertySetStmt = 24;\r\nTibboBasicParser.RULE_eventDeclaration = 25;\r\nTibboBasicParser.RULE_syscallDeclaration = 26;\r\nTibboBasicParser.RULE_syscallDeclarationInner = 27;\r\nTibboBasicParser.RULE_syscallInternalDeclarationInner = 28;\r\nTibboBasicParser.RULE_syscallInternalParamList = 29;\r\nTibboBasicParser.RULE_paramInternal = 30;\r\nTibboBasicParser.RULE_selectCaseStmt = 31;\r\nTibboBasicParser.RULE_sC_Case = 32;\r\nTibboBasicParser.RULE_sC_Default = 33;\r\nTibboBasicParser.RULE_sC_Cond = 34;\r\nTibboBasicParser.RULE_subStmt = 35;\r\nTibboBasicParser.RULE_typeStmt = 36;\r\nTibboBasicParser.RULE_typeStmtElement = 37;\r\nTibboBasicParser.RULE_expression = 38;\r\nTibboBasicParser.RULE_unaryExpression = 39;\r\nTibboBasicParser.RULE_unaryOperator = 40;\r\nTibboBasicParser.RULE_postfixExpression = 41;\r\nTibboBasicParser.RULE_postfix = 42;\r\nTibboBasicParser.RULE_primaryExpression = 43;\r\nTibboBasicParser.RULE_variableStmt = 44;\r\nTibboBasicParser.RULE_variableListStmt = 45;\r\nTibboBasicParser.RULE_variableListItem = 46;\r\nTibboBasicParser.RULE_whileWendStmt = 47;\r\nTibboBasicParser.RULE_objectDeclaration = 48;\r\nTibboBasicParser.RULE_argList = 49;\r\nTibboBasicParser.RULE_arg = 50;\r\nTibboBasicParser.RULE_paramList = 51;\r\nTibboBasicParser.RULE_param = 52;\r\nTibboBasicParser.RULE_asTypeClause = 53;\r\nTibboBasicParser.RULE_baseType = 54;\r\nTibboBasicParser.RULE_complexType = 55;\r\nTibboBasicParser.RULE_fieldLength = 56;\r\nTibboBasicParser.RULE_lineLabel = 57;\r\nTibboBasicParser.RULE_literal = 58;\r\nTibboBasicParser.RULE_arrayLiteral = 59;\r\nTibboBasicParser.RULE_type = 60;\r\nTibboBasicParser.RULE_visibility = 61;\r\n\r\n\r\nfunction StartRuleContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = TibboBasicParser.RULE_startRule;\r\n    return this;\r\n}\r\n\r\nStartRuleContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nStartRuleContext.prototype.constructor = StartRuleContext;\r\n\r\nStartRuleContext.prototype.EOF = function() {\r\n    return this.getToken(TibboBasicParser.EOF, 0);\r\n};\r\n\r\nStartRuleContext.prototype.topLevelDeclaration = function(i) {\r\n    if(i===undefined) {\r\n        i = null;\r\n    }\r\n    if(i===null) {\r\n        return this.getTypedRuleContexts(TopLevelDeclarationContext);\r\n    } else {\r\n        return this.getTypedRuleContext(TopLevelDeclarationContext,i);\r\n    }\r\n};\r\n\r\nStartRuleContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.enterStartRule(this);\r\n\t}\r\n};\r\n\r\nStartRuleContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.exitStartRule(this);\r\n\t}\r\n};\r\n\r\nStartRuleContext.prototype.accept = function(visitor) {\r\n    if ( visitor instanceof TibboBasicParserVisitor ) {\r\n        return visitor.visitStartRule(this);\r\n    } else {\r\n        return visitor.visitChildren(this);\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nTibboBasicParser.StartRuleContext = StartRuleContext;\r\n\r\nTibboBasicParser.prototype.startRule = function() {\r\n\r\n    var localctx = new StartRuleContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 0, TibboBasicParser.RULE_startRule);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 127;\r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        while((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << TibboBasicParser.OBJECT) | (1 << TibboBasicParser.CONST) | (1 << TibboBasicParser.DECLARE) | (1 << TibboBasicParser.DIM) | (1 << TibboBasicParser.ENUM) | (1 << TibboBasicParser.EVENT))) !== 0) || ((((_la - 41)) & ~0x1f) == 0 && ((1 << (_la - 41)) & ((1 << (TibboBasicParser.FUNCTION - 41)) | (1 << (TibboBasicParser.INCLUDE - 41)) | (1 << (TibboBasicParser.INCLUDEPP - 41)) | (1 << (TibboBasicParser.PROPERTY - 41)) | (1 << (TibboBasicParser.PUBLIC - 41)) | (1 << (TibboBasicParser.SUB - 41)) | (1 << (TibboBasicParser.TYPE - 41)))) !== 0) || _la===TibboBasicParser.SYSCALL) {\r\n            this.state = 124;\r\n            this.topLevelDeclaration();\r\n            this.state = 129;\r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n        }\r\n        this.state = 130;\r\n        this.match(TibboBasicParser.EOF);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\n\r\nfunction TopLevelDeclarationContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = TibboBasicParser.RULE_topLevelDeclaration;\r\n    return this;\r\n}\r\n\r\nTopLevelDeclarationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nTopLevelDeclarationContext.prototype.constructor = TopLevelDeclarationContext;\r\n\r\nTopLevelDeclarationContext.prototype.includeStmt = function() {\r\n    return this.getTypedRuleContext(IncludeStmtContext,0);\r\n};\r\n\r\nTopLevelDeclarationContext.prototype.includeppStmt = function() {\r\n    return this.getTypedRuleContext(IncludeppStmtContext,0);\r\n};\r\n\r\nTopLevelDeclarationContext.prototype.enumerationStmt = function() {\r\n    return this.getTypedRuleContext(EnumerationStmtContext,0);\r\n};\r\n\r\nTopLevelDeclarationContext.prototype.constStmt = function() {\r\n    return this.getTypedRuleContext(ConstStmtContext,0);\r\n};\r\n\r\nTopLevelDeclarationContext.prototype.declareSubStmt = function() {\r\n    return this.getTypedRuleContext(DeclareSubStmtContext,0);\r\n};\r\n\r\nTopLevelDeclarationContext.prototype.declareFuncStmt = function() {\r\n    return this.getTypedRuleContext(DeclareFuncStmtContext,0);\r\n};\r\n\r\nTopLevelDeclarationContext.prototype.declareVariableStmt = function() {\r\n    return this.getTypedRuleContext(DeclareVariableStmtContext,0);\r\n};\r\n\r\nTopLevelDeclarationContext.prototype.variableStmt = function() {\r\n    return this.getTypedRuleContext(VariableStmtContext,0);\r\n};\r\n\r\nTopLevelDeclarationContext.prototype.subStmt = function() {\r\n    return this.getTypedRuleContext(SubStmtContext,0);\r\n};\r\n\r\nTopLevelDeclarationContext.prototype.functionStmt = function() {\r\n    return this.getTypedRuleContext(FunctionStmtContext,0);\r\n};\r\n\r\nTopLevelDeclarationContext.prototype.objectDeclaration = function() {\r\n    return this.getTypedRuleContext(ObjectDeclarationContext,0);\r\n};\r\n\r\nTopLevelDeclarationContext.prototype.propertyDefineStmt = function() {\r\n    return this.getTypedRuleContext(PropertyDefineStmtContext,0);\r\n};\r\n\r\nTopLevelDeclarationContext.prototype.eventDeclaration = function() {\r\n    return this.getTypedRuleContext(EventDeclarationContext,0);\r\n};\r\n\r\nTopLevelDeclarationContext.prototype.syscallDeclaration = function() {\r\n    return this.getTypedRuleContext(SyscallDeclarationContext,0);\r\n};\r\n\r\nTopLevelDeclarationContext.prototype.typeStmt = function() {\r\n    return this.getTypedRuleContext(TypeStmtContext,0);\r\n};\r\n\r\nTopLevelDeclarationContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.enterTopLevelDeclaration(this);\r\n\t}\r\n};\r\n\r\nTopLevelDeclarationContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.exitTopLevelDeclaration(this);\r\n\t}\r\n};\r\n\r\nTopLevelDeclarationContext.prototype.accept = function(visitor) {\r\n    if ( visitor instanceof TibboBasicParserVisitor ) {\r\n        return visitor.visitTopLevelDeclaration(this);\r\n    } else {\r\n        return visitor.visitChildren(this);\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nTibboBasicParser.TopLevelDeclarationContext = TopLevelDeclarationContext;\r\n\r\nTibboBasicParser.prototype.topLevelDeclaration = function() {\r\n\r\n    var localctx = new TopLevelDeclarationContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 2, TibboBasicParser.RULE_topLevelDeclaration);\r\n    try {\r\n        this.state = 147;\r\n        this._errHandler.sync(this);\r\n        var la_ = this._interp.adaptivePredict(this._input,1,this._ctx);\r\n        switch(la_) {\r\n        case 1:\r\n            this.enterOuterAlt(localctx, 1);\r\n            this.state = 132;\r\n            this.includeStmt();\r\n            break;\r\n\r\n        case 2:\r\n            this.enterOuterAlt(localctx, 2);\r\n            this.state = 133;\r\n            this.includeppStmt();\r\n            break;\r\n\r\n        case 3:\r\n            this.enterOuterAlt(localctx, 3);\r\n            this.state = 134;\r\n            this.enumerationStmt();\r\n            break;\r\n\r\n        case 4:\r\n            this.enterOuterAlt(localctx, 4);\r\n            this.state = 135;\r\n            this.constStmt();\r\n            break;\r\n\r\n        case 5:\r\n            this.enterOuterAlt(localctx, 5);\r\n            this.state = 136;\r\n            this.declareSubStmt();\r\n            break;\r\n\r\n        case 6:\r\n            this.enterOuterAlt(localctx, 6);\r\n            this.state = 137;\r\n            this.declareFuncStmt();\r\n            break;\r\n\r\n        case 7:\r\n            this.enterOuterAlt(localctx, 7);\r\n            this.state = 138;\r\n            this.declareVariableStmt();\r\n            break;\r\n\r\n        case 8:\r\n            this.enterOuterAlt(localctx, 8);\r\n            this.state = 139;\r\n            this.variableStmt();\r\n            break;\r\n\r\n        case 9:\r\n            this.enterOuterAlt(localctx, 9);\r\n            this.state = 140;\r\n            this.subStmt();\r\n            break;\r\n\r\n        case 10:\r\n            this.enterOuterAlt(localctx, 10);\r\n            this.state = 141;\r\n            this.functionStmt();\r\n            break;\r\n\r\n        case 11:\r\n            this.enterOuterAlt(localctx, 11);\r\n            this.state = 142;\r\n            this.objectDeclaration();\r\n            break;\r\n\r\n        case 12:\r\n            this.enterOuterAlt(localctx, 12);\r\n            this.state = 143;\r\n            this.propertyDefineStmt();\r\n            break;\r\n\r\n        case 13:\r\n            this.enterOuterAlt(localctx, 13);\r\n            this.state = 144;\r\n            this.eventDeclaration();\r\n            break;\r\n\r\n        case 14:\r\n            this.enterOuterAlt(localctx, 14);\r\n            this.state = 145;\r\n            this.syscallDeclaration();\r\n            break;\r\n\r\n        case 15:\r\n            this.enterOuterAlt(localctx, 15);\r\n            this.state = 146;\r\n            this.typeStmt();\r\n            break;\r\n\r\n        }\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\n\r\nfunction IncludeStmtContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = TibboBasicParser.RULE_includeStmt;\r\n    return this;\r\n}\r\n\r\nIncludeStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nIncludeStmtContext.prototype.constructor = IncludeStmtContext;\r\n\r\nIncludeStmtContext.prototype.INCLUDE = function() {\r\n    return this.getToken(TibboBasicParser.INCLUDE, 0);\r\n};\r\n\r\nIncludeStmtContext.prototype.STRINGLITERAL = function() {\r\n    return this.getToken(TibboBasicParser.STRINGLITERAL, 0);\r\n};\r\n\r\nIncludeStmtContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.enterIncludeStmt(this);\r\n\t}\r\n};\r\n\r\nIncludeStmtContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.exitIncludeStmt(this);\r\n\t}\r\n};\r\n\r\nIncludeStmtContext.prototype.accept = function(visitor) {\r\n    if ( visitor instanceof TibboBasicParserVisitor ) {\r\n        return visitor.visitIncludeStmt(this);\r\n    } else {\r\n        return visitor.visitChildren(this);\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nTibboBasicParser.IncludeStmtContext = IncludeStmtContext;\r\n\r\nTibboBasicParser.prototype.includeStmt = function() {\r\n\r\n    var localctx = new IncludeStmtContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 4, TibboBasicParser.RULE_includeStmt);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 149;\r\n        this.match(TibboBasicParser.INCLUDE);\r\n        this.state = 150;\r\n        this.match(TibboBasicParser.STRINGLITERAL);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\n\r\nfunction IncludeppStmtContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = TibboBasicParser.RULE_includeppStmt;\r\n    return this;\r\n}\r\n\r\nIncludeppStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nIncludeppStmtContext.prototype.constructor = IncludeppStmtContext;\r\n\r\nIncludeppStmtContext.prototype.INCLUDEPP = function() {\r\n    return this.getToken(TibboBasicParser.INCLUDEPP, 0);\r\n};\r\n\r\nIncludeppStmtContext.prototype.STRINGLITERAL = function() {\r\n    return this.getToken(TibboBasicParser.STRINGLITERAL, 0);\r\n};\r\n\r\nIncludeppStmtContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.enterIncludeppStmt(this);\r\n\t}\r\n};\r\n\r\nIncludeppStmtContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.exitIncludeppStmt(this);\r\n\t}\r\n};\r\n\r\nIncludeppStmtContext.prototype.accept = function(visitor) {\r\n    if ( visitor instanceof TibboBasicParserVisitor ) {\r\n        return visitor.visitIncludeppStmt(this);\r\n    } else {\r\n        return visitor.visitChildren(this);\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nTibboBasicParser.IncludeppStmtContext = IncludeppStmtContext;\r\n\r\nTibboBasicParser.prototype.includeppStmt = function() {\r\n\r\n    var localctx = new IncludeppStmtContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 6, TibboBasicParser.RULE_includeppStmt);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 152;\r\n        this.match(TibboBasicParser.INCLUDEPP);\r\n        this.state = 153;\r\n        this.match(TibboBasicParser.STRINGLITERAL);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\n\r\nfunction BlockContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = TibboBasicParser.RULE_block;\r\n    return this;\r\n}\r\n\r\nBlockContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nBlockContext.prototype.constructor = BlockContext;\r\n\r\nBlockContext.prototype.statement = function(i) {\r\n    if(i===undefined) {\r\n        i = null;\r\n    }\r\n    if(i===null) {\r\n        return this.getTypedRuleContexts(StatementContext);\r\n    } else {\r\n        return this.getTypedRuleContext(StatementContext,i);\r\n    }\r\n};\r\n\r\nBlockContext.prototype.lineLabel = function(i) {\r\n    if(i===undefined) {\r\n        i = null;\r\n    }\r\n    if(i===null) {\r\n        return this.getTypedRuleContexts(LineLabelContext);\r\n    } else {\r\n        return this.getTypedRuleContext(LineLabelContext,i);\r\n    }\r\n};\r\n\r\nBlockContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.enterBlock(this);\r\n\t}\r\n};\r\n\r\nBlockContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.exitBlock(this);\r\n\t}\r\n};\r\n\r\nBlockContext.prototype.accept = function(visitor) {\r\n    if ( visitor instanceof TibboBasicParserVisitor ) {\r\n        return visitor.visitBlock(this);\r\n    } else {\r\n        return visitor.visitChildren(this);\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nTibboBasicParser.BlockContext = BlockContext;\r\n\r\nTibboBasicParser.prototype.block = function() {\r\n\r\n    var localctx = new BlockContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 8, TibboBasicParser.RULE_block);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 161;\r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        while((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << TibboBasicParser.CONST) | (1 << TibboBasicParser.DIM) | (1 << TibboBasicParser.DO))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (TibboBasicParser.EXIT_DO - 32)) | (1 << (TibboBasicParser.EXIT_FOR - 32)) | (1 << (TibboBasicParser.EXIT_FUNCTION - 32)) | (1 << (TibboBasicParser.EXIT_PROPERTY - 32)) | (1 << (TibboBasicParser.EXIT_SUB - 32)) | (1 << (TibboBasicParser.EXIT_WHILE - 32)) | (1 << (TibboBasicParser.FALSE - 32)) | (1 << (TibboBasicParser.FOR - 32)) | (1 << (TibboBasicParser.GOTO - 32)) | (1 << (TibboBasicParser.IF - 32)) | (1 << (TibboBasicParser.NOT - 32)) | (1 << (TibboBasicParser.PUBLIC - 32)) | (1 << (TibboBasicParser.SELECT - 32)))) !== 0) || ((((_la - 69)) & ~0x1f) == 0 && ((1 << (_la - 69)) & ((1 << (TibboBasicParser.TRUE - 69)) | (1 << (TibboBasicParser.WHILE - 69)) | (1 << (TibboBasicParser.STRINGLITERAL - 69)) | (1 << (TibboBasicParser.TemplateStringLiteral - 69)) | (1 << (TibboBasicParser.HEXLITERAL - 69)) | (1 << (TibboBasicParser.BINLITERAL - 69)) | (1 << (TibboBasicParser.INTEGERLITERAL - 69)) | (1 << (TibboBasicParser.LPAREN - 69)) | (1 << (TibboBasicParser.MINUS - 69)) | (1 << (TibboBasicParser.PLUS - 69)))) !== 0) || _la===TibboBasicParser.IDENTIFIER) {\r\n            this.state = 156;\r\n            this._errHandler.sync(this);\r\n            var la_ = this._interp.adaptivePredict(this._input,2,this._ctx);\r\n            if(la_===1) {\r\n                this.state = 155;\r\n                this.lineLabel();\r\n\r\n            }\r\n            this.state = 158;\r\n            this.statement();\r\n            this.state = 163;\r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n        }\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\n\r\nfunction StatementContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = TibboBasicParser.RULE_statement;\r\n    return this;\r\n}\r\n\r\nStatementContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nStatementContext.prototype.constructor = StatementContext;\r\n\r\nStatementContext.prototype.lineLabel = function() {\r\n    return this.getTypedRuleContext(LineLabelContext,0);\r\n};\r\n\r\nStatementContext.prototype.constStmt = function() {\r\n    return this.getTypedRuleContext(ConstStmtContext,0);\r\n};\r\n\r\nStatementContext.prototype.doLoopStmt = function() {\r\n    return this.getTypedRuleContext(DoLoopStmtContext,0);\r\n};\r\n\r\nStatementContext.prototype.forNextStmt = function() {\r\n    return this.getTypedRuleContext(ForNextStmtContext,0);\r\n};\r\n\r\nStatementContext.prototype.jumpStmt = function() {\r\n    return this.getTypedRuleContext(JumpStmtContext,0);\r\n};\r\n\r\nStatementContext.prototype.ifThenElseStmt = function() {\r\n    return this.getTypedRuleContext(IfThenElseStmtContext,0);\r\n};\r\n\r\nStatementContext.prototype.selectCaseStmt = function() {\r\n    return this.getTypedRuleContext(SelectCaseStmtContext,0);\r\n};\r\n\r\nStatementContext.prototype.variableStmt = function() {\r\n    return this.getTypedRuleContext(VariableStmtContext,0);\r\n};\r\n\r\nStatementContext.prototype.whileWendStmt = function() {\r\n    return this.getTypedRuleContext(WhileWendStmtContext,0);\r\n};\r\n\r\nStatementContext.prototype.expression = function() {\r\n    return this.getTypedRuleContext(ExpressionContext,0);\r\n};\r\n\r\nStatementContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.enterStatement(this);\r\n\t}\r\n};\r\n\r\nStatementContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.exitStatement(this);\r\n\t}\r\n};\r\n\r\nStatementContext.prototype.accept = function(visitor) {\r\n    if ( visitor instanceof TibboBasicParserVisitor ) {\r\n        return visitor.visitStatement(this);\r\n    } else {\r\n        return visitor.visitChildren(this);\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nTibboBasicParser.StatementContext = StatementContext;\r\n\r\nTibboBasicParser.prototype.statement = function() {\r\n\r\n    var localctx = new StatementContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 10, TibboBasicParser.RULE_statement);\r\n    try {\r\n        this.state = 174;\r\n        this._errHandler.sync(this);\r\n        var la_ = this._interp.adaptivePredict(this._input,4,this._ctx);\r\n        switch(la_) {\r\n        case 1:\r\n            this.enterOuterAlt(localctx, 1);\r\n            this.state = 164;\r\n            this.lineLabel();\r\n            break;\r\n\r\n        case 2:\r\n            this.enterOuterAlt(localctx, 2);\r\n            this.state = 165;\r\n            this.constStmt();\r\n            break;\r\n\r\n        case 3:\r\n            this.enterOuterAlt(localctx, 3);\r\n            this.state = 166;\r\n            this.doLoopStmt();\r\n            break;\r\n\r\n        case 4:\r\n            this.enterOuterAlt(localctx, 4);\r\n            this.state = 167;\r\n            this.forNextStmt();\r\n            break;\r\n\r\n        case 5:\r\n            this.enterOuterAlt(localctx, 5);\r\n            this.state = 168;\r\n            this.jumpStmt();\r\n            break;\r\n\r\n        case 6:\r\n            this.enterOuterAlt(localctx, 6);\r\n            this.state = 169;\r\n            this.ifThenElseStmt();\r\n            break;\r\n\r\n        case 7:\r\n            this.enterOuterAlt(localctx, 7);\r\n            this.state = 170;\r\n            this.selectCaseStmt();\r\n            break;\r\n\r\n        case 8:\r\n            this.enterOuterAlt(localctx, 8);\r\n            this.state = 171;\r\n            this.variableStmt();\r\n            break;\r\n\r\n        case 9:\r\n            this.enterOuterAlt(localctx, 9);\r\n            this.state = 172;\r\n            this.whileWendStmt();\r\n            break;\r\n\r\n        case 10:\r\n            this.enterOuterAlt(localctx, 10);\r\n            this.state = 173;\r\n            this.expression(0);\r\n            break;\r\n\r\n        }\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\n\r\nfunction ConstStmtContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = TibboBasicParser.RULE_constStmt;\r\n    return this;\r\n}\r\n\r\nConstStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nConstStmtContext.prototype.constructor = ConstStmtContext;\r\n\r\nConstStmtContext.prototype.CONST = function() {\r\n    return this.getToken(TibboBasicParser.CONST, 0);\r\n};\r\n\r\nConstStmtContext.prototype.constSubStmt = function(i) {\r\n    if(i===undefined) {\r\n        i = null;\r\n    }\r\n    if(i===null) {\r\n        return this.getTypedRuleContexts(ConstSubStmtContext);\r\n    } else {\r\n        return this.getTypedRuleContext(ConstSubStmtContext,i);\r\n    }\r\n};\r\n\r\nConstStmtContext.prototype.COMMA = function(i) {\r\n\tif(i===undefined) {\r\n\t\ti = null;\r\n\t}\r\n    if(i===null) {\r\n        return this.getTokens(TibboBasicParser.COMMA);\r\n    } else {\r\n        return this.getToken(TibboBasicParser.COMMA, i);\r\n    }\r\n};\r\n\r\n\r\nConstStmtContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.enterConstStmt(this);\r\n\t}\r\n};\r\n\r\nConstStmtContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.exitConstStmt(this);\r\n\t}\r\n};\r\n\r\nConstStmtContext.prototype.accept = function(visitor) {\r\n    if ( visitor instanceof TibboBasicParserVisitor ) {\r\n        return visitor.visitConstStmt(this);\r\n    } else {\r\n        return visitor.visitChildren(this);\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nTibboBasicParser.ConstStmtContext = ConstStmtContext;\r\n\r\nTibboBasicParser.prototype.constStmt = function() {\r\n\r\n    var localctx = new ConstStmtContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 12, TibboBasicParser.RULE_constStmt);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 176;\r\n        this.match(TibboBasicParser.CONST);\r\n        this.state = 177;\r\n        this.constSubStmt();\r\n        this.state = 182;\r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        while(_la===TibboBasicParser.COMMA) {\r\n            this.state = 178;\r\n            this.match(TibboBasicParser.COMMA);\r\n            this.state = 179;\r\n            this.constSubStmt();\r\n            this.state = 184;\r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n        }\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\n\r\nfunction ConstSubStmtContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = TibboBasicParser.RULE_constSubStmt;\r\n    this.name = null; // Token\r\n    this.value = null; // ExpressionContext\r\n    return this;\r\n}\r\n\r\nConstSubStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nConstSubStmtContext.prototype.constructor = ConstSubStmtContext;\r\n\r\nConstSubStmtContext.prototype.EQ = function() {\r\n    return this.getToken(TibboBasicParser.EQ, 0);\r\n};\r\n\r\nConstSubStmtContext.prototype.IDENTIFIER = function() {\r\n    return this.getToken(TibboBasicParser.IDENTIFIER, 0);\r\n};\r\n\r\nConstSubStmtContext.prototype.expression = function() {\r\n    return this.getTypedRuleContext(ExpressionContext,0);\r\n};\r\n\r\nConstSubStmtContext.prototype.asTypeClause = function() {\r\n    return this.getTypedRuleContext(AsTypeClauseContext,0);\r\n};\r\n\r\nConstSubStmtContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.enterConstSubStmt(this);\r\n\t}\r\n};\r\n\r\nConstSubStmtContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.exitConstSubStmt(this);\r\n\t}\r\n};\r\n\r\nConstSubStmtContext.prototype.accept = function(visitor) {\r\n    if ( visitor instanceof TibboBasicParserVisitor ) {\r\n        return visitor.visitConstSubStmt(this);\r\n    } else {\r\n        return visitor.visitChildren(this);\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nTibboBasicParser.ConstSubStmtContext = ConstSubStmtContext;\r\n\r\nTibboBasicParser.prototype.constSubStmt = function() {\r\n\r\n    var localctx = new ConstSubStmtContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 14, TibboBasicParser.RULE_constSubStmt);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 185;\r\n        localctx.name = this.match(TibboBasicParser.IDENTIFIER);\r\n        this.state = 187;\r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        if(_la===TibboBasicParser.AS) {\r\n            this.state = 186;\r\n            this.asTypeClause();\r\n        }\r\n\r\n        this.state = 189;\r\n        this.match(TibboBasicParser.EQ);\r\n        this.state = 190;\r\n        localctx.value = this.expression(0);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\n\r\nfunction DeclareVariableStmtContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = TibboBasicParser.RULE_declareVariableStmt;\r\n    return this;\r\n}\r\n\r\nDeclareVariableStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nDeclareVariableStmtContext.prototype.constructor = DeclareVariableStmtContext;\r\n\r\nDeclareVariableStmtContext.prototype.DECLARE = function() {\r\n    return this.getToken(TibboBasicParser.DECLARE, 0);\r\n};\r\n\r\nDeclareVariableStmtContext.prototype.variableListStmt = function() {\r\n    return this.getTypedRuleContext(VariableListStmtContext,0);\r\n};\r\n\r\nDeclareVariableStmtContext.prototype.visibility = function() {\r\n    return this.getTypedRuleContext(VisibilityContext,0);\r\n};\r\n\r\nDeclareVariableStmtContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.enterDeclareVariableStmt(this);\r\n\t}\r\n};\r\n\r\nDeclareVariableStmtContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.exitDeclareVariableStmt(this);\r\n\t}\r\n};\r\n\r\nDeclareVariableStmtContext.prototype.accept = function(visitor) {\r\n    if ( visitor instanceof TibboBasicParserVisitor ) {\r\n        return visitor.visitDeclareVariableStmt(this);\r\n    } else {\r\n        return visitor.visitChildren(this);\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nTibboBasicParser.DeclareVariableStmtContext = DeclareVariableStmtContext;\r\n\r\nTibboBasicParser.prototype.declareVariableStmt = function() {\r\n\r\n    var localctx = new DeclareVariableStmtContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 16, TibboBasicParser.RULE_declareVariableStmt);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 193;\r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        if(_la===TibboBasicParser.PUBLIC) {\r\n            this.state = 192;\r\n            this.visibility();\r\n        }\r\n\r\n        this.state = 195;\r\n        this.match(TibboBasicParser.DECLARE);\r\n        this.state = 196;\r\n        this.variableListStmt();\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\n\r\nfunction DeclareSubStmtContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = TibboBasicParser.RULE_declareSubStmt;\r\n    this.name = null; // Token\r\n    return this;\r\n}\r\n\r\nDeclareSubStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nDeclareSubStmtContext.prototype.constructor = DeclareSubStmtContext;\r\n\r\nDeclareSubStmtContext.prototype.DECLARE = function() {\r\n    return this.getToken(TibboBasicParser.DECLARE, 0);\r\n};\r\n\r\nDeclareSubStmtContext.prototype.SUB = function() {\r\n    return this.getToken(TibboBasicParser.SUB, 0);\r\n};\r\n\r\nDeclareSubStmtContext.prototype.IDENTIFIER = function(i) {\r\n\tif(i===undefined) {\r\n\t\ti = null;\r\n\t}\r\n    if(i===null) {\r\n        return this.getTokens(TibboBasicParser.IDENTIFIER);\r\n    } else {\r\n        return this.getToken(TibboBasicParser.IDENTIFIER, i);\r\n    }\r\n};\r\n\r\n\r\nDeclareSubStmtContext.prototype.DOT = function() {\r\n    return this.getToken(TibboBasicParser.DOT, 0);\r\n};\r\n\r\nDeclareSubStmtContext.prototype.paramList = function() {\r\n    return this.getTypedRuleContext(ParamListContext,0);\r\n};\r\n\r\nDeclareSubStmtContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.enterDeclareSubStmt(this);\r\n\t}\r\n};\r\n\r\nDeclareSubStmtContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.exitDeclareSubStmt(this);\r\n\t}\r\n};\r\n\r\nDeclareSubStmtContext.prototype.accept = function(visitor) {\r\n    if ( visitor instanceof TibboBasicParserVisitor ) {\r\n        return visitor.visitDeclareSubStmt(this);\r\n    } else {\r\n        return visitor.visitChildren(this);\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nTibboBasicParser.DeclareSubStmtContext = DeclareSubStmtContext;\r\n\r\nTibboBasicParser.prototype.declareSubStmt = function() {\r\n\r\n    var localctx = new DeclareSubStmtContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 18, TibboBasicParser.RULE_declareSubStmt);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 198;\r\n        this.match(TibboBasicParser.DECLARE);\r\n        this.state = 199;\r\n        this.match(TibboBasicParser.SUB);\r\n        this.state = 202;\r\n        this._errHandler.sync(this);\r\n        var la_ = this._interp.adaptivePredict(this._input,8,this._ctx);\r\n        if(la_===1) {\r\n            this.state = 200;\r\n            this.match(TibboBasicParser.IDENTIFIER);\r\n            this.state = 201;\r\n            this.match(TibboBasicParser.DOT);\r\n\r\n        }\r\n        this.state = 204;\r\n        localctx.name = this.match(TibboBasicParser.IDENTIFIER);\r\n        this.state = 206;\r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        if(_la===TibboBasicParser.LPAREN) {\r\n            this.state = 205;\r\n            this.paramList();\r\n        }\r\n\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\n\r\nfunction DeclareFuncStmtContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = TibboBasicParser.RULE_declareFuncStmt;\r\n    this.name = null; // Token\r\n    this.returnType = null; // AsTypeClauseContext\r\n    return this;\r\n}\r\n\r\nDeclareFuncStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nDeclareFuncStmtContext.prototype.constructor = DeclareFuncStmtContext;\r\n\r\nDeclareFuncStmtContext.prototype.DECLARE = function() {\r\n    return this.getToken(TibboBasicParser.DECLARE, 0);\r\n};\r\n\r\nDeclareFuncStmtContext.prototype.FUNCTION = function() {\r\n    return this.getToken(TibboBasicParser.FUNCTION, 0);\r\n};\r\n\r\nDeclareFuncStmtContext.prototype.IDENTIFIER = function(i) {\r\n\tif(i===undefined) {\r\n\t\ti = null;\r\n\t}\r\n    if(i===null) {\r\n        return this.getTokens(TibboBasicParser.IDENTIFIER);\r\n    } else {\r\n        return this.getToken(TibboBasicParser.IDENTIFIER, i);\r\n    }\r\n};\r\n\r\n\r\nDeclareFuncStmtContext.prototype.asTypeClause = function() {\r\n    return this.getTypedRuleContext(AsTypeClauseContext,0);\r\n};\r\n\r\nDeclareFuncStmtContext.prototype.DOT = function() {\r\n    return this.getToken(TibboBasicParser.DOT, 0);\r\n};\r\n\r\nDeclareFuncStmtContext.prototype.paramList = function() {\r\n    return this.getTypedRuleContext(ParamListContext,0);\r\n};\r\n\r\nDeclareFuncStmtContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.enterDeclareFuncStmt(this);\r\n\t}\r\n};\r\n\r\nDeclareFuncStmtContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.exitDeclareFuncStmt(this);\r\n\t}\r\n};\r\n\r\nDeclareFuncStmtContext.prototype.accept = function(visitor) {\r\n    if ( visitor instanceof TibboBasicParserVisitor ) {\r\n        return visitor.visitDeclareFuncStmt(this);\r\n    } else {\r\n        return visitor.visitChildren(this);\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nTibboBasicParser.DeclareFuncStmtContext = DeclareFuncStmtContext;\r\n\r\nTibboBasicParser.prototype.declareFuncStmt = function() {\r\n\r\n    var localctx = new DeclareFuncStmtContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 20, TibboBasicParser.RULE_declareFuncStmt);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 208;\r\n        this.match(TibboBasicParser.DECLARE);\r\n        this.state = 209;\r\n        this.match(TibboBasicParser.FUNCTION);\r\n        this.state = 212;\r\n        this._errHandler.sync(this);\r\n        var la_ = this._interp.adaptivePredict(this._input,10,this._ctx);\r\n        if(la_===1) {\r\n            this.state = 210;\r\n            this.match(TibboBasicParser.IDENTIFIER);\r\n            this.state = 211;\r\n            this.match(TibboBasicParser.DOT);\r\n\r\n        }\r\n        this.state = 214;\r\n        localctx.name = this.match(TibboBasicParser.IDENTIFIER);\r\n        this.state = 216;\r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        if(_la===TibboBasicParser.LPAREN) {\r\n            this.state = 215;\r\n            this.paramList();\r\n        }\r\n\r\n        this.state = 218;\r\n        localctx.returnType = this.asTypeClause();\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\n\r\nfunction DoLoopStmtContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = TibboBasicParser.RULE_doLoopStmt;\r\n    this.condition = null; // ExpressionContext\r\n    return this;\r\n}\r\n\r\nDoLoopStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nDoLoopStmtContext.prototype.constructor = DoLoopStmtContext;\r\n\r\nDoLoopStmtContext.prototype.DO = function() {\r\n    return this.getToken(TibboBasicParser.DO, 0);\r\n};\r\n\r\nDoLoopStmtContext.prototype.block = function() {\r\n    return this.getTypedRuleContext(BlockContext,0);\r\n};\r\n\r\nDoLoopStmtContext.prototype.LOOP = function() {\r\n    return this.getToken(TibboBasicParser.LOOP, 0);\r\n};\r\n\r\nDoLoopStmtContext.prototype.WHILE = function() {\r\n    return this.getToken(TibboBasicParser.WHILE, 0);\r\n};\r\n\r\nDoLoopStmtContext.prototype.UNTIL = function() {\r\n    return this.getToken(TibboBasicParser.UNTIL, 0);\r\n};\r\n\r\nDoLoopStmtContext.prototype.expression = function() {\r\n    return this.getTypedRuleContext(ExpressionContext,0);\r\n};\r\n\r\nDoLoopStmtContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.enterDoLoopStmt(this);\r\n\t}\r\n};\r\n\r\nDoLoopStmtContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.exitDoLoopStmt(this);\r\n\t}\r\n};\r\n\r\nDoLoopStmtContext.prototype.accept = function(visitor) {\r\n    if ( visitor instanceof TibboBasicParserVisitor ) {\r\n        return visitor.visitDoLoopStmt(this);\r\n    } else {\r\n        return visitor.visitChildren(this);\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nTibboBasicParser.DoLoopStmtContext = DoLoopStmtContext;\r\n\r\nTibboBasicParser.prototype.doLoopStmt = function() {\r\n\r\n    var localctx = new DoLoopStmtContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 22, TibboBasicParser.RULE_doLoopStmt);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.state = 236;\r\n        this._errHandler.sync(this);\r\n        var la_ = this._interp.adaptivePredict(this._input,12,this._ctx);\r\n        switch(la_) {\r\n        case 1:\r\n            this.enterOuterAlt(localctx, 1);\r\n            this.state = 220;\r\n            this.match(TibboBasicParser.DO);\r\n            this.state = 221;\r\n            this.block();\r\n            this.state = 222;\r\n            this.match(TibboBasicParser.LOOP);\r\n            break;\r\n\r\n        case 2:\r\n            this.enterOuterAlt(localctx, 2);\r\n            this.state = 224;\r\n            this.match(TibboBasicParser.DO);\r\n            this.state = 225;\r\n            _la = this._input.LA(1);\r\n            if(!(_la===TibboBasicParser.UNTIL || _la===TibboBasicParser.WHILE)) {\r\n            this._errHandler.recoverInline(this);\r\n            }\r\n            else {\r\n            \tthis._errHandler.reportMatch(this);\r\n                this.consume();\r\n            }\r\n            this.state = 226;\r\n            localctx.condition = this.expression(0);\r\n            this.state = 227;\r\n            this.block();\r\n            this.state = 228;\r\n            this.match(TibboBasicParser.LOOP);\r\n            break;\r\n\r\n        case 3:\r\n            this.enterOuterAlt(localctx, 3);\r\n            this.state = 230;\r\n            this.match(TibboBasicParser.DO);\r\n            this.state = 231;\r\n            this.block();\r\n            this.state = 232;\r\n            this.match(TibboBasicParser.LOOP);\r\n            this.state = 233;\r\n            _la = this._input.LA(1);\r\n            if(!(_la===TibboBasicParser.UNTIL || _la===TibboBasicParser.WHILE)) {\r\n            this._errHandler.recoverInline(this);\r\n            }\r\n            else {\r\n            \tthis._errHandler.reportMatch(this);\r\n                this.consume();\r\n            }\r\n            this.state = 234;\r\n            localctx.condition = this.expression(0);\r\n            break;\r\n\r\n        }\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\n\r\nfunction EnumerationStmtContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = TibboBasicParser.RULE_enumerationStmt;\r\n    return this;\r\n}\r\n\r\nEnumerationStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nEnumerationStmtContext.prototype.constructor = EnumerationStmtContext;\r\n\r\nEnumerationStmtContext.prototype.ENUM = function() {\r\n    return this.getToken(TibboBasicParser.ENUM, 0);\r\n};\r\n\r\nEnumerationStmtContext.prototype.IDENTIFIER = function() {\r\n    return this.getToken(TibboBasicParser.IDENTIFIER, 0);\r\n};\r\n\r\nEnumerationStmtContext.prototype.END_ENUM = function() {\r\n    return this.getToken(TibboBasicParser.END_ENUM, 0);\r\n};\r\n\r\nEnumerationStmtContext.prototype.enumerationStmt_Constant = function(i) {\r\n    if(i===undefined) {\r\n        i = null;\r\n    }\r\n    if(i===null) {\r\n        return this.getTypedRuleContexts(EnumerationStmt_ConstantContext);\r\n    } else {\r\n        return this.getTypedRuleContext(EnumerationStmt_ConstantContext,i);\r\n    }\r\n};\r\n\r\nEnumerationStmtContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.enterEnumerationStmt(this);\r\n\t}\r\n};\r\n\r\nEnumerationStmtContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.exitEnumerationStmt(this);\r\n\t}\r\n};\r\n\r\nEnumerationStmtContext.prototype.accept = function(visitor) {\r\n    if ( visitor instanceof TibboBasicParserVisitor ) {\r\n        return visitor.visitEnumerationStmt(this);\r\n    } else {\r\n        return visitor.visitChildren(this);\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nTibboBasicParser.EnumerationStmtContext = EnumerationStmtContext;\r\n\r\nTibboBasicParser.prototype.enumerationStmt = function() {\r\n\r\n    var localctx = new EnumerationStmtContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 24, TibboBasicParser.RULE_enumerationStmt);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 238;\r\n        this.match(TibboBasicParser.ENUM);\r\n        this.state = 239;\r\n        this.match(TibboBasicParser.IDENTIFIER);\r\n        this.state = 243;\r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        while(_la===TibboBasicParser.IDENTIFIER) {\r\n            this.state = 240;\r\n            this.enumerationStmt_Constant();\r\n            this.state = 245;\r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n        }\r\n        this.state = 246;\r\n        this.match(TibboBasicParser.END_ENUM);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\n\r\nfunction EnumerationStmt_ConstantContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = TibboBasicParser.RULE_enumerationStmt_Constant;\r\n    return this;\r\n}\r\n\r\nEnumerationStmt_ConstantContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nEnumerationStmt_ConstantContext.prototype.constructor = EnumerationStmt_ConstantContext;\r\n\r\nEnumerationStmt_ConstantContext.prototype.IDENTIFIER = function() {\r\n    return this.getToken(TibboBasicParser.IDENTIFIER, 0);\r\n};\r\n\r\nEnumerationStmt_ConstantContext.prototype.EQ = function() {\r\n    return this.getToken(TibboBasicParser.EQ, 0);\r\n};\r\n\r\nEnumerationStmt_ConstantContext.prototype.expression = function() {\r\n    return this.getTypedRuleContext(ExpressionContext,0);\r\n};\r\n\r\nEnumerationStmt_ConstantContext.prototype.COMMA = function() {\r\n    return this.getToken(TibboBasicParser.COMMA, 0);\r\n};\r\n\r\nEnumerationStmt_ConstantContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.enterEnumerationStmt_Constant(this);\r\n\t}\r\n};\r\n\r\nEnumerationStmt_ConstantContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.exitEnumerationStmt_Constant(this);\r\n\t}\r\n};\r\n\r\nEnumerationStmt_ConstantContext.prototype.accept = function(visitor) {\r\n    if ( visitor instanceof TibboBasicParserVisitor ) {\r\n        return visitor.visitEnumerationStmt_Constant(this);\r\n    } else {\r\n        return visitor.visitChildren(this);\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nTibboBasicParser.EnumerationStmt_ConstantContext = EnumerationStmt_ConstantContext;\r\n\r\nTibboBasicParser.prototype.enumerationStmt_Constant = function() {\r\n\r\n    var localctx = new EnumerationStmt_ConstantContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 26, TibboBasicParser.RULE_enumerationStmt_Constant);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 248;\r\n        this.match(TibboBasicParser.IDENTIFIER);\r\n        this.state = 251;\r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        if(_la===TibboBasicParser.EQ) {\r\n            this.state = 249;\r\n            this.match(TibboBasicParser.EQ);\r\n            this.state = 250;\r\n            this.expression(0);\r\n        }\r\n\r\n        this.state = 254;\r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        if(_la===TibboBasicParser.COMMA) {\r\n            this.state = 253;\r\n            this.match(TibboBasicParser.COMMA);\r\n        }\r\n\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\n\r\nfunction ExitStmtContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = TibboBasicParser.RULE_exitStmt;\r\n    return this;\r\n}\r\n\r\nExitStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nExitStmtContext.prototype.constructor = ExitStmtContext;\r\n\r\nExitStmtContext.prototype.EXIT_DO = function() {\r\n    return this.getToken(TibboBasicParser.EXIT_DO, 0);\r\n};\r\n\r\nExitStmtContext.prototype.EXIT_FOR = function() {\r\n    return this.getToken(TibboBasicParser.EXIT_FOR, 0);\r\n};\r\n\r\nExitStmtContext.prototype.EXIT_FUNCTION = function() {\r\n    return this.getToken(TibboBasicParser.EXIT_FUNCTION, 0);\r\n};\r\n\r\nExitStmtContext.prototype.EXIT_PROPERTY = function() {\r\n    return this.getToken(TibboBasicParser.EXIT_PROPERTY, 0);\r\n};\r\n\r\nExitStmtContext.prototype.EXIT_SUB = function() {\r\n    return this.getToken(TibboBasicParser.EXIT_SUB, 0);\r\n};\r\n\r\nExitStmtContext.prototype.EXIT_WHILE = function() {\r\n    return this.getToken(TibboBasicParser.EXIT_WHILE, 0);\r\n};\r\n\r\nExitStmtContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.enterExitStmt(this);\r\n\t}\r\n};\r\n\r\nExitStmtContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.exitExitStmt(this);\r\n\t}\r\n};\r\n\r\nExitStmtContext.prototype.accept = function(visitor) {\r\n    if ( visitor instanceof TibboBasicParserVisitor ) {\r\n        return visitor.visitExitStmt(this);\r\n    } else {\r\n        return visitor.visitChildren(this);\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nTibboBasicParser.ExitStmtContext = ExitStmtContext;\r\n\r\nTibboBasicParser.prototype.exitStmt = function() {\r\n\r\n    var localctx = new ExitStmtContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 28, TibboBasicParser.RULE_exitStmt);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 256;\r\n        _la = this._input.LA(1);\r\n        if(!(((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (TibboBasicParser.EXIT_DO - 32)) | (1 << (TibboBasicParser.EXIT_FOR - 32)) | (1 << (TibboBasicParser.EXIT_FUNCTION - 32)) | (1 << (TibboBasicParser.EXIT_PROPERTY - 32)) | (1 << (TibboBasicParser.EXIT_SUB - 32)) | (1 << (TibboBasicParser.EXIT_WHILE - 32)))) !== 0))) {\r\n        this._errHandler.recoverInline(this);\r\n        }\r\n        else {\r\n        \tthis._errHandler.reportMatch(this);\r\n            this.consume();\r\n        }\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\n\r\nfunction ForNextStmtContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = TibboBasicParser.RULE_forNextStmt;\r\n    this.step = null; // ExpressionContext\r\n    return this;\r\n}\r\n\r\nForNextStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nForNextStmtContext.prototype.constructor = ForNextStmtContext;\r\n\r\nForNextStmtContext.prototype.FOR = function() {\r\n    return this.getToken(TibboBasicParser.FOR, 0);\r\n};\r\n\r\nForNextStmtContext.prototype.expression = function(i) {\r\n    if(i===undefined) {\r\n        i = null;\r\n    }\r\n    if(i===null) {\r\n        return this.getTypedRuleContexts(ExpressionContext);\r\n    } else {\r\n        return this.getTypedRuleContext(ExpressionContext,i);\r\n    }\r\n};\r\n\r\nForNextStmtContext.prototype.TO = function() {\r\n    return this.getToken(TibboBasicParser.TO, 0);\r\n};\r\n\r\nForNextStmtContext.prototype.block = function() {\r\n    return this.getTypedRuleContext(BlockContext,0);\r\n};\r\n\r\nForNextStmtContext.prototype.NEXT = function() {\r\n    return this.getToken(TibboBasicParser.NEXT, 0);\r\n};\r\n\r\nForNextStmtContext.prototype.STEP = function() {\r\n    return this.getToken(TibboBasicParser.STEP, 0);\r\n};\r\n\r\nForNextStmtContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.enterForNextStmt(this);\r\n\t}\r\n};\r\n\r\nForNextStmtContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.exitForNextStmt(this);\r\n\t}\r\n};\r\n\r\nForNextStmtContext.prototype.accept = function(visitor) {\r\n    if ( visitor instanceof TibboBasicParserVisitor ) {\r\n        return visitor.visitForNextStmt(this);\r\n    } else {\r\n        return visitor.visitChildren(this);\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nTibboBasicParser.ForNextStmtContext = ForNextStmtContext;\r\n\r\nTibboBasicParser.prototype.forNextStmt = function() {\r\n\r\n    var localctx = new ForNextStmtContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 30, TibboBasicParser.RULE_forNextStmt);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 258;\r\n        this.match(TibboBasicParser.FOR);\r\n        this.state = 259;\r\n        this.expression(0);\r\n        this.state = 260;\r\n        this.match(TibboBasicParser.TO);\r\n        this.state = 261;\r\n        this.expression(0);\r\n        this.state = 264;\r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        if(_la===TibboBasicParser.STEP) {\r\n            this.state = 262;\r\n            this.match(TibboBasicParser.STEP);\r\n            this.state = 263;\r\n            localctx.step = this.expression(0);\r\n        }\r\n\r\n        this.state = 266;\r\n        this.block();\r\n        this.state = 267;\r\n        this.match(TibboBasicParser.NEXT);\r\n        this.state = 269;\r\n        this._errHandler.sync(this);\r\n        var la_ = this._interp.adaptivePredict(this._input,17,this._ctx);\r\n        if(la_===1) {\r\n            this.state = 268;\r\n            this.expression(0);\r\n\r\n        }\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\n\r\nfunction FunctionStmtContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = TibboBasicParser.RULE_functionStmt;\r\n    this.name = null; // Token\r\n    this.returnType = null; // AsTypeClauseContext\r\n    return this;\r\n}\r\n\r\nFunctionStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nFunctionStmtContext.prototype.constructor = FunctionStmtContext;\r\n\r\nFunctionStmtContext.prototype.FUNCTION = function() {\r\n    return this.getToken(TibboBasicParser.FUNCTION, 0);\r\n};\r\n\r\nFunctionStmtContext.prototype.block = function() {\r\n    return this.getTypedRuleContext(BlockContext,0);\r\n};\r\n\r\nFunctionStmtContext.prototype.END_FUNCTION = function() {\r\n    return this.getToken(TibboBasicParser.END_FUNCTION, 0);\r\n};\r\n\r\nFunctionStmtContext.prototype.IDENTIFIER = function(i) {\r\n\tif(i===undefined) {\r\n\t\ti = null;\r\n\t}\r\n    if(i===null) {\r\n        return this.getTokens(TibboBasicParser.IDENTIFIER);\r\n    } else {\r\n        return this.getToken(TibboBasicParser.IDENTIFIER, i);\r\n    }\r\n};\r\n\r\n\r\nFunctionStmtContext.prototype.asTypeClause = function() {\r\n    return this.getTypedRuleContext(AsTypeClauseContext,0);\r\n};\r\n\r\nFunctionStmtContext.prototype.visibility = function() {\r\n    return this.getTypedRuleContext(VisibilityContext,0);\r\n};\r\n\r\nFunctionStmtContext.prototype.DOT = function() {\r\n    return this.getToken(TibboBasicParser.DOT, 0);\r\n};\r\n\r\nFunctionStmtContext.prototype.paramList = function() {\r\n    return this.getTypedRuleContext(ParamListContext,0);\r\n};\r\n\r\nFunctionStmtContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.enterFunctionStmt(this);\r\n\t}\r\n};\r\n\r\nFunctionStmtContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.exitFunctionStmt(this);\r\n\t}\r\n};\r\n\r\nFunctionStmtContext.prototype.accept = function(visitor) {\r\n    if ( visitor instanceof TibboBasicParserVisitor ) {\r\n        return visitor.visitFunctionStmt(this);\r\n    } else {\r\n        return visitor.visitChildren(this);\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nTibboBasicParser.FunctionStmtContext = FunctionStmtContext;\r\n\r\nTibboBasicParser.prototype.functionStmt = function() {\r\n\r\n    var localctx = new FunctionStmtContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 32, TibboBasicParser.RULE_functionStmt);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 272;\r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        if(_la===TibboBasicParser.PUBLIC) {\r\n            this.state = 271;\r\n            this.visibility();\r\n        }\r\n\r\n        this.state = 274;\r\n        this.match(TibboBasicParser.FUNCTION);\r\n        this.state = 277;\r\n        this._errHandler.sync(this);\r\n        var la_ = this._interp.adaptivePredict(this._input,19,this._ctx);\r\n        if(la_===1) {\r\n            this.state = 275;\r\n            this.match(TibboBasicParser.IDENTIFIER);\r\n            this.state = 276;\r\n            this.match(TibboBasicParser.DOT);\r\n\r\n        }\r\n        this.state = 279;\r\n        localctx.name = this.match(TibboBasicParser.IDENTIFIER);\r\n        this.state = 281;\r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        if(_la===TibboBasicParser.LPAREN) {\r\n            this.state = 280;\r\n            this.paramList();\r\n        }\r\n\r\n        this.state = 283;\r\n        localctx.returnType = this.asTypeClause();\r\n        this.state = 284;\r\n        this.block();\r\n        this.state = 285;\r\n        this.match(TibboBasicParser.END_FUNCTION);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\n\r\nfunction JumpStmtContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = TibboBasicParser.RULE_jumpStmt;\r\n    return this;\r\n}\r\n\r\nJumpStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nJumpStmtContext.prototype.constructor = JumpStmtContext;\r\n\r\nJumpStmtContext.prototype.goToStmt = function() {\r\n    return this.getTypedRuleContext(GoToStmtContext,0);\r\n};\r\n\r\nJumpStmtContext.prototype.exitStmt = function() {\r\n    return this.getTypedRuleContext(ExitStmtContext,0);\r\n};\r\n\r\nJumpStmtContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.enterJumpStmt(this);\r\n\t}\r\n};\r\n\r\nJumpStmtContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.exitJumpStmt(this);\r\n\t}\r\n};\r\n\r\nJumpStmtContext.prototype.accept = function(visitor) {\r\n    if ( visitor instanceof TibboBasicParserVisitor ) {\r\n        return visitor.visitJumpStmt(this);\r\n    } else {\r\n        return visitor.visitChildren(this);\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nTibboBasicParser.JumpStmtContext = JumpStmtContext;\r\n\r\nTibboBasicParser.prototype.jumpStmt = function() {\r\n\r\n    var localctx = new JumpStmtContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 34, TibboBasicParser.RULE_jumpStmt);\r\n    try {\r\n        this.state = 289;\r\n        this._errHandler.sync(this);\r\n        switch(this._input.LA(1)) {\r\n        case TibboBasicParser.GOTO:\r\n            this.enterOuterAlt(localctx, 1);\r\n            this.state = 287;\r\n            this.goToStmt();\r\n            break;\r\n        case TibboBasicParser.EXIT_DO:\r\n        case TibboBasicParser.EXIT_FOR:\r\n        case TibboBasicParser.EXIT_FUNCTION:\r\n        case TibboBasicParser.EXIT_PROPERTY:\r\n        case TibboBasicParser.EXIT_SUB:\r\n        case TibboBasicParser.EXIT_WHILE:\r\n            this.enterOuterAlt(localctx, 2);\r\n            this.state = 288;\r\n            this.exitStmt();\r\n            break;\r\n        default:\r\n            throw new antlr4.error.NoViableAltException(this);\r\n        }\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\n\r\nfunction GoToStmtContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = TibboBasicParser.RULE_goToStmt;\r\n    return this;\r\n}\r\n\r\nGoToStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nGoToStmtContext.prototype.constructor = GoToStmtContext;\r\n\r\nGoToStmtContext.prototype.GOTO = function() {\r\n    return this.getToken(TibboBasicParser.GOTO, 0);\r\n};\r\n\r\nGoToStmtContext.prototype.IDENTIFIER = function() {\r\n    return this.getToken(TibboBasicParser.IDENTIFIER, 0);\r\n};\r\n\r\nGoToStmtContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.enterGoToStmt(this);\r\n\t}\r\n};\r\n\r\nGoToStmtContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.exitGoToStmt(this);\r\n\t}\r\n};\r\n\r\nGoToStmtContext.prototype.accept = function(visitor) {\r\n    if ( visitor instanceof TibboBasicParserVisitor ) {\r\n        return visitor.visitGoToStmt(this);\r\n    } else {\r\n        return visitor.visitChildren(this);\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nTibboBasicParser.GoToStmtContext = GoToStmtContext;\r\n\r\nTibboBasicParser.prototype.goToStmt = function() {\r\n\r\n    var localctx = new GoToStmtContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 36, TibboBasicParser.RULE_goToStmt);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 291;\r\n        this.match(TibboBasicParser.GOTO);\r\n        this.state = 292;\r\n        this.match(TibboBasicParser.IDENTIFIER);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\n\r\nfunction IfThenElseStmtContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = TibboBasicParser.RULE_ifThenElseStmt;\r\n    return this;\r\n}\r\n\r\nIfThenElseStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nIfThenElseStmtContext.prototype.constructor = IfThenElseStmtContext;\r\n\r\n\r\n \r\nIfThenElseStmtContext.prototype.copyFrom = function(ctx) {\r\n    antlr4.ParserRuleContext.prototype.copyFrom.call(this, ctx);\r\n};\r\n\r\n\r\nfunction BlockIfThenElseContext(parser, ctx) {\r\n\tIfThenElseStmtContext.call(this, parser);\r\n    IfThenElseStmtContext.prototype.copyFrom.call(this, ctx);\r\n    return this;\r\n}\r\n\r\nBlockIfThenElseContext.prototype = Object.create(IfThenElseStmtContext.prototype);\r\nBlockIfThenElseContext.prototype.constructor = BlockIfThenElseContext;\r\n\r\nTibboBasicParser.BlockIfThenElseContext = BlockIfThenElseContext;\r\n\r\nBlockIfThenElseContext.prototype.IF = function() {\r\n    return this.getToken(TibboBasicParser.IF, 0);\r\n};\r\n\r\nBlockIfThenElseContext.prototype.expression = function() {\r\n    return this.getTypedRuleContext(ExpressionContext,0);\r\n};\r\n\r\nBlockIfThenElseContext.prototype.THEN = function(i) {\r\n\tif(i===undefined) {\r\n\t\ti = null;\r\n\t}\r\n    if(i===null) {\r\n        return this.getTokens(TibboBasicParser.THEN);\r\n    } else {\r\n        return this.getToken(TibboBasicParser.THEN, i);\r\n    }\r\n};\r\n\r\n\r\nBlockIfThenElseContext.prototype.block = function(i) {\r\n    if(i===undefined) {\r\n        i = null;\r\n    }\r\n    if(i===null) {\r\n        return this.getTypedRuleContexts(BlockContext);\r\n    } else {\r\n        return this.getTypedRuleContext(BlockContext,i);\r\n    }\r\n};\r\n\r\nBlockIfThenElseContext.prototype.END_IF = function() {\r\n    return this.getToken(TibboBasicParser.END_IF, 0);\r\n};\r\n\r\nBlockIfThenElseContext.prototype.NEWLINE = function(i) {\r\n\tif(i===undefined) {\r\n\t\ti = null;\r\n\t}\r\n    if(i===null) {\r\n        return this.getTokens(TibboBasicParser.NEWLINE);\r\n    } else {\r\n        return this.getToken(TibboBasicParser.NEWLINE, i);\r\n    }\r\n};\r\n\r\n\r\nBlockIfThenElseContext.prototype.ELSEIF = function(i) {\r\n\tif(i===undefined) {\r\n\t\ti = null;\r\n\t}\r\n    if(i===null) {\r\n        return this.getTokens(TibboBasicParser.ELSEIF);\r\n    } else {\r\n        return this.getToken(TibboBasicParser.ELSEIF, i);\r\n    }\r\n};\r\n\r\n\r\nBlockIfThenElseContext.prototype.ifConditionStmt = function(i) {\r\n    if(i===undefined) {\r\n        i = null;\r\n    }\r\n    if(i===null) {\r\n        return this.getTypedRuleContexts(IfConditionStmtContext);\r\n    } else {\r\n        return this.getTypedRuleContext(IfConditionStmtContext,i);\r\n    }\r\n};\r\n\r\nBlockIfThenElseContext.prototype.ELSE = function() {\r\n    return this.getToken(TibboBasicParser.ELSE, 0);\r\n};\r\nBlockIfThenElseContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.enterBlockIfThenElse(this);\r\n\t}\r\n};\r\n\r\nBlockIfThenElseContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.exitBlockIfThenElse(this);\r\n\t}\r\n};\r\n\r\nBlockIfThenElseContext.prototype.accept = function(visitor) {\r\n    if ( visitor instanceof TibboBasicParserVisitor ) {\r\n        return visitor.visitBlockIfThenElse(this);\r\n    } else {\r\n        return visitor.visitChildren(this);\r\n    }\r\n};\r\n\r\n\r\nfunction InlineIfThenElseContext(parser, ctx) {\r\n\tIfThenElseStmtContext.call(this, parser);\r\n    IfThenElseStmtContext.prototype.copyFrom.call(this, ctx);\r\n    return this;\r\n}\r\n\r\nInlineIfThenElseContext.prototype = Object.create(IfThenElseStmtContext.prototype);\r\nInlineIfThenElseContext.prototype.constructor = InlineIfThenElseContext;\r\n\r\nTibboBasicParser.InlineIfThenElseContext = InlineIfThenElseContext;\r\n\r\nInlineIfThenElseContext.prototype.IF = function() {\r\n    return this.getToken(TibboBasicParser.IF, 0);\r\n};\r\n\r\nInlineIfThenElseContext.prototype.expression = function() {\r\n    return this.getTypedRuleContext(ExpressionContext,0);\r\n};\r\n\r\nInlineIfThenElseContext.prototype.THEN = function() {\r\n    return this.getToken(TibboBasicParser.THEN, 0);\r\n};\r\n\r\nInlineIfThenElseContext.prototype.NEWLINE = function() {\r\n    return this.getToken(TibboBasicParser.NEWLINE, 0);\r\n};\r\n\r\nInlineIfThenElseContext.prototype.statement = function(i) {\r\n    if(i===undefined) {\r\n        i = null;\r\n    }\r\n    if(i===null) {\r\n        return this.getTypedRuleContexts(StatementContext);\r\n    } else {\r\n        return this.getTypedRuleContext(StatementContext,i);\r\n    }\r\n};\r\n\r\nInlineIfThenElseContext.prototype.jumpStmt = function(i) {\r\n    if(i===undefined) {\r\n        i = null;\r\n    }\r\n    if(i===null) {\r\n        return this.getTypedRuleContexts(JumpStmtContext);\r\n    } else {\r\n        return this.getTypedRuleContext(JumpStmtContext,i);\r\n    }\r\n};\r\n\r\nInlineIfThenElseContext.prototype.ELSE = function() {\r\n    return this.getToken(TibboBasicParser.ELSE, 0);\r\n};\r\nInlineIfThenElseContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.enterInlineIfThenElse(this);\r\n\t}\r\n};\r\n\r\nInlineIfThenElseContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.exitInlineIfThenElse(this);\r\n\t}\r\n};\r\n\r\nInlineIfThenElseContext.prototype.accept = function(visitor) {\r\n    if ( visitor instanceof TibboBasicParserVisitor ) {\r\n        return visitor.visitInlineIfThenElse(this);\r\n    } else {\r\n        return visitor.visitChildren(this);\r\n    }\r\n};\r\n\r\n\r\n\r\nTibboBasicParser.IfThenElseStmtContext = IfThenElseStmtContext;\r\n\r\nTibboBasicParser.prototype.ifThenElseStmt = function() {\r\n\r\n    var localctx = new IfThenElseStmtContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 38, TibboBasicParser.RULE_ifThenElseStmt);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.state = 335;\r\n        this._errHandler.sync(this);\r\n        var la_ = this._interp.adaptivePredict(this._input,28,this._ctx);\r\n        switch(la_) {\r\n        case 1:\r\n            localctx = new InlineIfThenElseContext(this, localctx);\r\n            this.enterOuterAlt(localctx, 1);\r\n            this.state = 294;\r\n            this.match(TibboBasicParser.IF);\r\n            this.state = 295;\r\n            this.expression(0);\r\n            this.state = 296;\r\n            this.match(TibboBasicParser.THEN);\r\n            this.state = 299;\r\n            this._errHandler.sync(this);\r\n            var la_ = this._interp.adaptivePredict(this._input,22,this._ctx);\r\n            switch(la_) {\r\n            case 1:\r\n                this.state = 297;\r\n                this.statement();\r\n                break;\r\n\r\n            case 2:\r\n                this.state = 298;\r\n                this.jumpStmt();\r\n                break;\r\n\r\n            }\r\n            this.state = 306;\r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n            if(_la===TibboBasicParser.ELSE) {\r\n                this.state = 301;\r\n                this.match(TibboBasicParser.ELSE);\r\n                this.state = 304;\r\n                this._errHandler.sync(this);\r\n                var la_ = this._interp.adaptivePredict(this._input,23,this._ctx);\r\n                switch(la_) {\r\n                case 1:\r\n                    this.state = 302;\r\n                    this.statement();\r\n                    break;\r\n\r\n                case 2:\r\n                    this.state = 303;\r\n                    this.jumpStmt();\r\n                    break;\r\n\r\n                }\r\n            }\r\n\r\n            this.state = 308;\r\n            this.match(TibboBasicParser.NEWLINE);\r\n            break;\r\n\r\n        case 2:\r\n            localctx = new BlockIfThenElseContext(this, localctx);\r\n            this.enterOuterAlt(localctx, 2);\r\n            this.state = 310;\r\n            this.match(TibboBasicParser.IF);\r\n            this.state = 311;\r\n            this.expression(0);\r\n            this.state = 312;\r\n            this.match(TibboBasicParser.THEN);\r\n            this.state = 314; \r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n            do {\r\n                this.state = 313;\r\n                this.match(TibboBasicParser.NEWLINE);\r\n                this.state = 316; \r\n                this._errHandler.sync(this);\r\n                _la = this._input.LA(1);\r\n            } while(_la===TibboBasicParser.NEWLINE);\r\n            this.state = 318;\r\n            this.block();\r\n            this.state = 326;\r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n            while(_la===TibboBasicParser.ELSEIF) {\r\n                this.state = 319;\r\n                this.match(TibboBasicParser.ELSEIF);\r\n                this.state = 320;\r\n                this.ifConditionStmt();\r\n                this.state = 321;\r\n                this.match(TibboBasicParser.THEN);\r\n                this.state = 322;\r\n                this.block();\r\n                this.state = 328;\r\n                this._errHandler.sync(this);\r\n                _la = this._input.LA(1);\r\n            }\r\n            this.state = 331;\r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n            if(_la===TibboBasicParser.ELSE) {\r\n                this.state = 329;\r\n                this.match(TibboBasicParser.ELSE);\r\n                this.state = 330;\r\n                this.block();\r\n            }\r\n\r\n            this.state = 333;\r\n            this.match(TibboBasicParser.END_IF);\r\n            break;\r\n\r\n        }\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\n\r\nfunction IfConditionStmtContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = TibboBasicParser.RULE_ifConditionStmt;\r\n    return this;\r\n}\r\n\r\nIfConditionStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nIfConditionStmtContext.prototype.constructor = IfConditionStmtContext;\r\n\r\nIfConditionStmtContext.prototype.expression = function() {\r\n    return this.getTypedRuleContext(ExpressionContext,0);\r\n};\r\n\r\nIfConditionStmtContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.enterIfConditionStmt(this);\r\n\t}\r\n};\r\n\r\nIfConditionStmtContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.exitIfConditionStmt(this);\r\n\t}\r\n};\r\n\r\nIfConditionStmtContext.prototype.accept = function(visitor) {\r\n    if ( visitor instanceof TibboBasicParserVisitor ) {\r\n        return visitor.visitIfConditionStmt(this);\r\n    } else {\r\n        return visitor.visitChildren(this);\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nTibboBasicParser.IfConditionStmtContext = IfConditionStmtContext;\r\n\r\nTibboBasicParser.prototype.ifConditionStmt = function() {\r\n\r\n    var localctx = new IfConditionStmtContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 40, TibboBasicParser.RULE_ifConditionStmt);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 337;\r\n        this.expression(0);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\n\r\nfunction PropertyDefineStmtContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = TibboBasicParser.RULE_propertyDefineStmt;\r\n    this.object = null; // Token\r\n    this.property = null; // Token\r\n    return this;\r\n}\r\n\r\nPropertyDefineStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nPropertyDefineStmtContext.prototype.constructor = PropertyDefineStmtContext;\r\n\r\nPropertyDefineStmtContext.prototype.PROPERTY = function() {\r\n    return this.getToken(TibboBasicParser.PROPERTY, 0);\r\n};\r\n\r\nPropertyDefineStmtContext.prototype.DOT = function() {\r\n    return this.getToken(TibboBasicParser.DOT, 0);\r\n};\r\n\r\nPropertyDefineStmtContext.prototype.END_PROPERTY = function() {\r\n    return this.getToken(TibboBasicParser.END_PROPERTY, 0);\r\n};\r\n\r\nPropertyDefineStmtContext.prototype.IDENTIFIER = function(i) {\r\n\tif(i===undefined) {\r\n\t\ti = null;\r\n\t}\r\n    if(i===null) {\r\n        return this.getTokens(TibboBasicParser.IDENTIFIER);\r\n    } else {\r\n        return this.getToken(TibboBasicParser.IDENTIFIER, i);\r\n    }\r\n};\r\n\r\n\r\nPropertyDefineStmtContext.prototype.BANG = function() {\r\n    return this.getToken(TibboBasicParser.BANG, 0);\r\n};\r\n\r\nPropertyDefineStmtContext.prototype.propertyDefineStmt_InStmt = function(i) {\r\n    if(i===undefined) {\r\n        i = null;\r\n    }\r\n    if(i===null) {\r\n        return this.getTypedRuleContexts(PropertyDefineStmt_InStmtContext);\r\n    } else {\r\n        return this.getTypedRuleContext(PropertyDefineStmt_InStmtContext,i);\r\n    }\r\n};\r\n\r\nPropertyDefineStmtContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.enterPropertyDefineStmt(this);\r\n\t}\r\n};\r\n\r\nPropertyDefineStmtContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.exitPropertyDefineStmt(this);\r\n\t}\r\n};\r\n\r\nPropertyDefineStmtContext.prototype.accept = function(visitor) {\r\n    if ( visitor instanceof TibboBasicParserVisitor ) {\r\n        return visitor.visitPropertyDefineStmt(this);\r\n    } else {\r\n        return visitor.visitChildren(this);\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nTibboBasicParser.PropertyDefineStmtContext = PropertyDefineStmtContext;\r\n\r\nTibboBasicParser.prototype.propertyDefineStmt = function() {\r\n\r\n    var localctx = new PropertyDefineStmtContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 42, TibboBasicParser.RULE_propertyDefineStmt);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 339;\r\n        this.match(TibboBasicParser.PROPERTY);\r\n        this.state = 341;\r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        if(_la===TibboBasicParser.BANG) {\r\n            this.state = 340;\r\n            this.match(TibboBasicParser.BANG);\r\n        }\r\n\r\n        this.state = 343;\r\n        localctx.object = this.match(TibboBasicParser.IDENTIFIER);\r\n        this.state = 344;\r\n        this.match(TibboBasicParser.DOT);\r\n        this.state = 345;\r\n        localctx.property = this.match(TibboBasicParser.IDENTIFIER);\r\n        this.state = 349;\r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        while(_la===TibboBasicParser.GET || _la===TibboBasicParser.SET) {\r\n            this.state = 346;\r\n            this.propertyDefineStmt_InStmt();\r\n            this.state = 351;\r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n        }\r\n        this.state = 352;\r\n        this.match(TibboBasicParser.END_PROPERTY);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\n\r\nfunction PropertyDefineStmt_InStmtContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = TibboBasicParser.RULE_propertyDefineStmt_InStmt;\r\n    return this;\r\n}\r\n\r\nPropertyDefineStmt_InStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nPropertyDefineStmt_InStmtContext.prototype.constructor = PropertyDefineStmt_InStmtContext;\r\n\r\nPropertyDefineStmt_InStmtContext.prototype.propertyGetStmt = function() {\r\n    return this.getTypedRuleContext(PropertyGetStmtContext,0);\r\n};\r\n\r\nPropertyDefineStmt_InStmtContext.prototype.propertySetStmt = function() {\r\n    return this.getTypedRuleContext(PropertySetStmtContext,0);\r\n};\r\n\r\nPropertyDefineStmt_InStmtContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.enterPropertyDefineStmt_InStmt(this);\r\n\t}\r\n};\r\n\r\nPropertyDefineStmt_InStmtContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.exitPropertyDefineStmt_InStmt(this);\r\n\t}\r\n};\r\n\r\nPropertyDefineStmt_InStmtContext.prototype.accept = function(visitor) {\r\n    if ( visitor instanceof TibboBasicParserVisitor ) {\r\n        return visitor.visitPropertyDefineStmt_InStmt(this);\r\n    } else {\r\n        return visitor.visitChildren(this);\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nTibboBasicParser.PropertyDefineStmt_InStmtContext = PropertyDefineStmt_InStmtContext;\r\n\r\nTibboBasicParser.prototype.propertyDefineStmt_InStmt = function() {\r\n\r\n    var localctx = new PropertyDefineStmt_InStmtContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 44, TibboBasicParser.RULE_propertyDefineStmt_InStmt);\r\n    try {\r\n        this.state = 356;\r\n        this._errHandler.sync(this);\r\n        switch(this._input.LA(1)) {\r\n        case TibboBasicParser.GET:\r\n            this.enterOuterAlt(localctx, 1);\r\n            this.state = 354;\r\n            this.propertyGetStmt();\r\n            break;\r\n        case TibboBasicParser.SET:\r\n            this.enterOuterAlt(localctx, 2);\r\n            this.state = 355;\r\n            this.propertySetStmt();\r\n            break;\r\n        default:\r\n            throw new antlr4.error.NoViableAltException(this);\r\n        }\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\n\r\nfunction PropertyGetStmtContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = TibboBasicParser.RULE_propertyGetStmt;\r\n    return this;\r\n}\r\n\r\nPropertyGetStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nPropertyGetStmtContext.prototype.constructor = PropertyGetStmtContext;\r\n\r\nPropertyGetStmtContext.prototype.GET = function() {\r\n    return this.getToken(TibboBasicParser.GET, 0);\r\n};\r\n\r\nPropertyGetStmtContext.prototype.EQ = function() {\r\n    return this.getToken(TibboBasicParser.EQ, 0);\r\n};\r\n\r\nPropertyGetStmtContext.prototype.SYSCALL = function() {\r\n    return this.getToken(TibboBasicParser.SYSCALL, 0);\r\n};\r\n\r\nPropertyGetStmtContext.prototype.LPAREN = function() {\r\n    return this.getToken(TibboBasicParser.LPAREN, 0);\r\n};\r\n\r\nPropertyGetStmtContext.prototype.RPAREN = function() {\r\n    return this.getToken(TibboBasicParser.RPAREN, 0);\r\n};\r\n\r\nPropertyGetStmtContext.prototype.asTypeClause = function() {\r\n    return this.getTypedRuleContext(AsTypeClauseContext,0);\r\n};\r\n\r\nPropertyGetStmtContext.prototype.INTEGERLITERAL = function() {\r\n    return this.getToken(TibboBasicParser.INTEGERLITERAL, 0);\r\n};\r\n\r\nPropertyGetStmtContext.prototype.COMMA = function() {\r\n    return this.getToken(TibboBasicParser.COMMA, 0);\r\n};\r\n\r\nPropertyGetStmtContext.prototype.STRINGLITERAL = function() {\r\n    return this.getToken(TibboBasicParser.STRINGLITERAL, 0);\r\n};\r\n\r\nPropertyGetStmtContext.prototype.IDENTIFIER = function() {\r\n    return this.getToken(TibboBasicParser.IDENTIFIER, 0);\r\n};\r\n\r\nPropertyGetStmtContext.prototype.PLUS = function() {\r\n    return this.getToken(TibboBasicParser.PLUS, 0);\r\n};\r\n\r\nPropertyGetStmtContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.enterPropertyGetStmt(this);\r\n\t}\r\n};\r\n\r\nPropertyGetStmtContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.exitPropertyGetStmt(this);\r\n\t}\r\n};\r\n\r\nPropertyGetStmtContext.prototype.accept = function(visitor) {\r\n    if ( visitor instanceof TibboBasicParserVisitor ) {\r\n        return visitor.visitPropertyGetStmt(this);\r\n    } else {\r\n        return visitor.visitChildren(this);\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nTibboBasicParser.PropertyGetStmtContext = PropertyGetStmtContext;\r\n\r\nTibboBasicParser.prototype.propertyGetStmt = function() {\r\n\r\n    var localctx = new PropertyGetStmtContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 46, TibboBasicParser.RULE_propertyGetStmt);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 358;\r\n        this.match(TibboBasicParser.GET);\r\n        this.state = 359;\r\n        this.match(TibboBasicParser.EQ);\r\n        this.state = 360;\r\n        this.match(TibboBasicParser.SYSCALL);\r\n        this.state = 361;\r\n        this.match(TibboBasicParser.LPAREN);\r\n        this.state = 370;\r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        if(_la===TibboBasicParser.INTEGERLITERAL) {\r\n            this.state = 362;\r\n            this.match(TibboBasicParser.INTEGERLITERAL);\r\n            this.state = 368;\r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n            if(_la===TibboBasicParser.COMMA) {\r\n                this.state = 363;\r\n                this.match(TibboBasicParser.COMMA);\r\n                this.state = 364;\r\n                _la = this._input.LA(1);\r\n                if(!(_la===TibboBasicParser.STRINGLITERAL || _la===TibboBasicParser.IDENTIFIER)) {\r\n                this._errHandler.recoverInline(this);\r\n                }\r\n                else {\r\n                \tthis._errHandler.reportMatch(this);\r\n                    this.consume();\r\n                }\r\n                this.state = 366;\r\n                this._errHandler.sync(this);\r\n                _la = this._input.LA(1);\r\n                if(_la===TibboBasicParser.PLUS) {\r\n                    this.state = 365;\r\n                    this.match(TibboBasicParser.PLUS);\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        this.state = 372;\r\n        this.match(TibboBasicParser.RPAREN);\r\n        this.state = 373;\r\n        this.asTypeClause();\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\n\r\nfunction PropertySetStmtContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = TibboBasicParser.RULE_propertySetStmt;\r\n    return this;\r\n}\r\n\r\nPropertySetStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nPropertySetStmtContext.prototype.constructor = PropertySetStmtContext;\r\n\r\nPropertySetStmtContext.prototype.SET = function() {\r\n    return this.getToken(TibboBasicParser.SET, 0);\r\n};\r\n\r\nPropertySetStmtContext.prototype.EQ = function() {\r\n    return this.getToken(TibboBasicParser.EQ, 0);\r\n};\r\n\r\nPropertySetStmtContext.prototype.SYSCALL = function() {\r\n    return this.getToken(TibboBasicParser.SYSCALL, 0);\r\n};\r\n\r\nPropertySetStmtContext.prototype.LPAREN = function() {\r\n    return this.getToken(TibboBasicParser.LPAREN, 0);\r\n};\r\n\r\nPropertySetStmtContext.prototype.RPAREN = function() {\r\n    return this.getToken(TibboBasicParser.RPAREN, 0);\r\n};\r\n\r\nPropertySetStmtContext.prototype.paramList = function() {\r\n    return this.getTypedRuleContext(ParamListContext,0);\r\n};\r\n\r\nPropertySetStmtContext.prototype.INTEGERLITERAL = function() {\r\n    return this.getToken(TibboBasicParser.INTEGERLITERAL, 0);\r\n};\r\n\r\nPropertySetStmtContext.prototype.COMMA = function() {\r\n    return this.getToken(TibboBasicParser.COMMA, 0);\r\n};\r\n\r\nPropertySetStmtContext.prototype.STRINGLITERAL = function() {\r\n    return this.getToken(TibboBasicParser.STRINGLITERAL, 0);\r\n};\r\n\r\nPropertySetStmtContext.prototype.IDENTIFIER = function() {\r\n    return this.getToken(TibboBasicParser.IDENTIFIER, 0);\r\n};\r\n\r\nPropertySetStmtContext.prototype.PLUS = function() {\r\n    return this.getToken(TibboBasicParser.PLUS, 0);\r\n};\r\n\r\nPropertySetStmtContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.enterPropertySetStmt(this);\r\n\t}\r\n};\r\n\r\nPropertySetStmtContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.exitPropertySetStmt(this);\r\n\t}\r\n};\r\n\r\nPropertySetStmtContext.prototype.accept = function(visitor) {\r\n    if ( visitor instanceof TibboBasicParserVisitor ) {\r\n        return visitor.visitPropertySetStmt(this);\r\n    } else {\r\n        return visitor.visitChildren(this);\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nTibboBasicParser.PropertySetStmtContext = PropertySetStmtContext;\r\n\r\nTibboBasicParser.prototype.propertySetStmt = function() {\r\n\r\n    var localctx = new PropertySetStmtContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 48, TibboBasicParser.RULE_propertySetStmt);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 375;\r\n        this.match(TibboBasicParser.SET);\r\n        this.state = 376;\r\n        this.match(TibboBasicParser.EQ);\r\n        this.state = 377;\r\n        this.match(TibboBasicParser.SYSCALL);\r\n        this.state = 378;\r\n        this.match(TibboBasicParser.LPAREN);\r\n        this.state = 387;\r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        if(_la===TibboBasicParser.INTEGERLITERAL) {\r\n            this.state = 379;\r\n            this.match(TibboBasicParser.INTEGERLITERAL);\r\n            this.state = 385;\r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n            if(_la===TibboBasicParser.COMMA) {\r\n                this.state = 380;\r\n                this.match(TibboBasicParser.COMMA);\r\n                this.state = 381;\r\n                _la = this._input.LA(1);\r\n                if(!(_la===TibboBasicParser.STRINGLITERAL || _la===TibboBasicParser.IDENTIFIER)) {\r\n                this._errHandler.recoverInline(this);\r\n                }\r\n                else {\r\n                \tthis._errHandler.reportMatch(this);\r\n                    this.consume();\r\n                }\r\n                this.state = 383;\r\n                this._errHandler.sync(this);\r\n                _la = this._input.LA(1);\r\n                if(_la===TibboBasicParser.PLUS) {\r\n                    this.state = 382;\r\n                    this.match(TibboBasicParser.PLUS);\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        this.state = 389;\r\n        this.match(TibboBasicParser.RPAREN);\r\n        this.state = 390;\r\n        this.paramList();\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\n\r\nfunction EventDeclarationContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = TibboBasicParser.RULE_eventDeclaration;\r\n    this.number = null; // Token\r\n    this.name = null; // Token\r\n    this.params = null; // ParamListContext\r\n    return this;\r\n}\r\n\r\nEventDeclarationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nEventDeclarationContext.prototype.constructor = EventDeclarationContext;\r\n\r\nEventDeclarationContext.prototype.EVENT = function() {\r\n    return this.getToken(TibboBasicParser.EVENT, 0);\r\n};\r\n\r\nEventDeclarationContext.prototype.LPAREN = function() {\r\n    return this.getToken(TibboBasicParser.LPAREN, 0);\r\n};\r\n\r\nEventDeclarationContext.prototype.RPAREN = function() {\r\n    return this.getToken(TibboBasicParser.RPAREN, 0);\r\n};\r\n\r\nEventDeclarationContext.prototype.INTEGERLITERAL = function() {\r\n    return this.getToken(TibboBasicParser.INTEGERLITERAL, 0);\r\n};\r\n\r\nEventDeclarationContext.prototype.IDENTIFIER = function() {\r\n    return this.getToken(TibboBasicParser.IDENTIFIER, 0);\r\n};\r\n\r\nEventDeclarationContext.prototype.paramList = function() {\r\n    return this.getTypedRuleContext(ParamListContext,0);\r\n};\r\n\r\nEventDeclarationContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.enterEventDeclaration(this);\r\n\t}\r\n};\r\n\r\nEventDeclarationContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.exitEventDeclaration(this);\r\n\t}\r\n};\r\n\r\nEventDeclarationContext.prototype.accept = function(visitor) {\r\n    if ( visitor instanceof TibboBasicParserVisitor ) {\r\n        return visitor.visitEventDeclaration(this);\r\n    } else {\r\n        return visitor.visitChildren(this);\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nTibboBasicParser.EventDeclarationContext = EventDeclarationContext;\r\n\r\nTibboBasicParser.prototype.eventDeclaration = function() {\r\n\r\n    var localctx = new EventDeclarationContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 50, TibboBasicParser.RULE_eventDeclaration);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 392;\r\n        this.match(TibboBasicParser.EVENT);\r\n        this.state = 393;\r\n        this.match(TibboBasicParser.LPAREN);\r\n        this.state = 394;\r\n        localctx.number = this.match(TibboBasicParser.INTEGERLITERAL);\r\n        this.state = 395;\r\n        this.match(TibboBasicParser.RPAREN);\r\n        this.state = 396;\r\n        localctx.name = this.match(TibboBasicParser.IDENTIFIER);\r\n        this.state = 398;\r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        if(_la===TibboBasicParser.LPAREN) {\r\n            this.state = 397;\r\n            localctx.params = this.paramList();\r\n        }\r\n\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\n\r\nfunction SyscallDeclarationContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = TibboBasicParser.RULE_syscallDeclaration;\r\n    return this;\r\n}\r\n\r\nSyscallDeclarationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nSyscallDeclarationContext.prototype.constructor = SyscallDeclarationContext;\r\n\r\nSyscallDeclarationContext.prototype.SYSCALL = function() {\r\n    return this.getToken(TibboBasicParser.SYSCALL, 0);\r\n};\r\n\r\nSyscallDeclarationContext.prototype.LPAREN = function() {\r\n    return this.getToken(TibboBasicParser.LPAREN, 0);\r\n};\r\n\r\nSyscallDeclarationContext.prototype.RPAREN = function() {\r\n    return this.getToken(TibboBasicParser.RPAREN, 0);\r\n};\r\n\r\nSyscallDeclarationContext.prototype.syscallDeclarationInner = function() {\r\n    return this.getTypedRuleContext(SyscallDeclarationInnerContext,0);\r\n};\r\n\r\nSyscallDeclarationContext.prototype.syscallInternalDeclarationInner = function() {\r\n    return this.getTypedRuleContext(SyscallInternalDeclarationInnerContext,0);\r\n};\r\n\r\nSyscallDeclarationContext.prototype.INTEGERLITERAL = function() {\r\n    return this.getToken(TibboBasicParser.INTEGERLITERAL, 0);\r\n};\r\n\r\nSyscallDeclarationContext.prototype.COMMA = function() {\r\n    return this.getToken(TibboBasicParser.COMMA, 0);\r\n};\r\n\r\nSyscallDeclarationContext.prototype.STRINGLITERAL = function() {\r\n    return this.getToken(TibboBasicParser.STRINGLITERAL, 0);\r\n};\r\n\r\nSyscallDeclarationContext.prototype.IDENTIFIER = function() {\r\n    return this.getToken(TibboBasicParser.IDENTIFIER, 0);\r\n};\r\n\r\nSyscallDeclarationContext.prototype.PLUS = function() {\r\n    return this.getToken(TibboBasicParser.PLUS, 0);\r\n};\r\n\r\nSyscallDeclarationContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.enterSyscallDeclaration(this);\r\n\t}\r\n};\r\n\r\nSyscallDeclarationContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.exitSyscallDeclaration(this);\r\n\t}\r\n};\r\n\r\nSyscallDeclarationContext.prototype.accept = function(visitor) {\r\n    if ( visitor instanceof TibboBasicParserVisitor ) {\r\n        return visitor.visitSyscallDeclaration(this);\r\n    } else {\r\n        return visitor.visitChildren(this);\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nTibboBasicParser.SyscallDeclarationContext = SyscallDeclarationContext;\r\n\r\nTibboBasicParser.prototype.syscallDeclaration = function() {\r\n\r\n    var localctx = new SyscallDeclarationContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 52, TibboBasicParser.RULE_syscallDeclaration);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 400;\r\n        this.match(TibboBasicParser.SYSCALL);\r\n        this.state = 401;\r\n        this.match(TibboBasicParser.LPAREN);\r\n        this.state = 410;\r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        if(_la===TibboBasicParser.INTEGERLITERAL) {\r\n            this.state = 402;\r\n            this.match(TibboBasicParser.INTEGERLITERAL);\r\n            this.state = 408;\r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n            if(_la===TibboBasicParser.COMMA) {\r\n                this.state = 403;\r\n                this.match(TibboBasicParser.COMMA);\r\n                this.state = 404;\r\n                _la = this._input.LA(1);\r\n                if(!(_la===TibboBasicParser.STRINGLITERAL || _la===TibboBasicParser.IDENTIFIER)) {\r\n                this._errHandler.recoverInline(this);\r\n                }\r\n                else {\r\n                \tthis._errHandler.reportMatch(this);\r\n                    this.consume();\r\n                }\r\n                this.state = 406;\r\n                this._errHandler.sync(this);\r\n                _la = this._input.LA(1);\r\n                if(_la===TibboBasicParser.PLUS) {\r\n                    this.state = 405;\r\n                    this.match(TibboBasicParser.PLUS);\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        this.state = 412;\r\n        this.match(TibboBasicParser.RPAREN);\r\n        this.state = 415;\r\n        this._errHandler.sync(this);\r\n        switch(this._input.LA(1)) {\r\n        case TibboBasicParser.IDENTIFIER:\r\n            this.state = 413;\r\n            this.syscallDeclarationInner();\r\n            break;\r\n        case TibboBasicParser.BANG:\r\n            this.state = 414;\r\n            this.syscallInternalDeclarationInner();\r\n            break;\r\n        default:\r\n            throw new antlr4.error.NoViableAltException(this);\r\n        }\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\n\r\nfunction SyscallDeclarationInnerContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = TibboBasicParser.RULE_syscallDeclarationInner;\r\n    this.object = null; // Token\r\n    this.property = null; // Token\r\n    return this;\r\n}\r\n\r\nSyscallDeclarationInnerContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nSyscallDeclarationInnerContext.prototype.constructor = SyscallDeclarationInnerContext;\r\n\r\nSyscallDeclarationInnerContext.prototype.IDENTIFIER = function(i) {\r\n\tif(i===undefined) {\r\n\t\ti = null;\r\n\t}\r\n    if(i===null) {\r\n        return this.getTokens(TibboBasicParser.IDENTIFIER);\r\n    } else {\r\n        return this.getToken(TibboBasicParser.IDENTIFIER, i);\r\n    }\r\n};\r\n\r\n\r\nSyscallDeclarationInnerContext.prototype.DOT = function() {\r\n    return this.getToken(TibboBasicParser.DOT, 0);\r\n};\r\n\r\nSyscallDeclarationInnerContext.prototype.paramList = function() {\r\n    return this.getTypedRuleContext(ParamListContext,0);\r\n};\r\n\r\nSyscallDeclarationInnerContext.prototype.asTypeClause = function() {\r\n    return this.getTypedRuleContext(AsTypeClauseContext,0);\r\n};\r\n\r\nSyscallDeclarationInnerContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.enterSyscallDeclarationInner(this);\r\n\t}\r\n};\r\n\r\nSyscallDeclarationInnerContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.exitSyscallDeclarationInner(this);\r\n\t}\r\n};\r\n\r\nSyscallDeclarationInnerContext.prototype.accept = function(visitor) {\r\n    if ( visitor instanceof TibboBasicParserVisitor ) {\r\n        return visitor.visitSyscallDeclarationInner(this);\r\n    } else {\r\n        return visitor.visitChildren(this);\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nTibboBasicParser.SyscallDeclarationInnerContext = SyscallDeclarationInnerContext;\r\n\r\nTibboBasicParser.prototype.syscallDeclarationInner = function() {\r\n\r\n    var localctx = new SyscallDeclarationInnerContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 54, TibboBasicParser.RULE_syscallDeclarationInner);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 419;\r\n        this._errHandler.sync(this);\r\n        var la_ = this._interp.adaptivePredict(this._input,43,this._ctx);\r\n        if(la_===1) {\r\n            this.state = 417;\r\n            localctx.object = this.match(TibboBasicParser.IDENTIFIER);\r\n            this.state = 418;\r\n            this.match(TibboBasicParser.DOT);\r\n\r\n        }\r\n        this.state = 421;\r\n        localctx.property = this.match(TibboBasicParser.IDENTIFIER);\r\n        this.state = 423;\r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        if(_la===TibboBasicParser.LPAREN) {\r\n            this.state = 422;\r\n            this.paramList();\r\n        }\r\n\r\n        this.state = 426;\r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        if(_la===TibboBasicParser.AS) {\r\n            this.state = 425;\r\n            this.asTypeClause();\r\n        }\r\n\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\n\r\nfunction SyscallInternalDeclarationInnerContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = TibboBasicParser.RULE_syscallInternalDeclarationInner;\r\n    this.object = null; // Token\r\n    this.property = null; // Token\r\n    return this;\r\n}\r\n\r\nSyscallInternalDeclarationInnerContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nSyscallInternalDeclarationInnerContext.prototype.constructor = SyscallInternalDeclarationInnerContext;\r\n\r\nSyscallInternalDeclarationInnerContext.prototype.BANG = function() {\r\n    return this.getToken(TibboBasicParser.BANG, 0);\r\n};\r\n\r\nSyscallInternalDeclarationInnerContext.prototype.IDENTIFIER = function(i) {\r\n\tif(i===undefined) {\r\n\t\ti = null;\r\n\t}\r\n    if(i===null) {\r\n        return this.getTokens(TibboBasicParser.IDENTIFIER);\r\n    } else {\r\n        return this.getToken(TibboBasicParser.IDENTIFIER, i);\r\n    }\r\n};\r\n\r\n\r\nSyscallInternalDeclarationInnerContext.prototype.DOT = function() {\r\n    return this.getToken(TibboBasicParser.DOT, 0);\r\n};\r\n\r\nSyscallInternalDeclarationInnerContext.prototype.syscallInternalParamList = function() {\r\n    return this.getTypedRuleContext(SyscallInternalParamListContext,0);\r\n};\r\n\r\nSyscallInternalDeclarationInnerContext.prototype.asTypeClause = function() {\r\n    return this.getTypedRuleContext(AsTypeClauseContext,0);\r\n};\r\n\r\nSyscallInternalDeclarationInnerContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.enterSyscallInternalDeclarationInner(this);\r\n\t}\r\n};\r\n\r\nSyscallInternalDeclarationInnerContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.exitSyscallInternalDeclarationInner(this);\r\n\t}\r\n};\r\n\r\nSyscallInternalDeclarationInnerContext.prototype.accept = function(visitor) {\r\n    if ( visitor instanceof TibboBasicParserVisitor ) {\r\n        return visitor.visitSyscallInternalDeclarationInner(this);\r\n    } else {\r\n        return visitor.visitChildren(this);\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nTibboBasicParser.SyscallInternalDeclarationInnerContext = SyscallInternalDeclarationInnerContext;\r\n\r\nTibboBasicParser.prototype.syscallInternalDeclarationInner = function() {\r\n\r\n    var localctx = new SyscallInternalDeclarationInnerContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 56, TibboBasicParser.RULE_syscallInternalDeclarationInner);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 428;\r\n        this.match(TibboBasicParser.BANG);\r\n        this.state = 431;\r\n        this._errHandler.sync(this);\r\n        var la_ = this._interp.adaptivePredict(this._input,46,this._ctx);\r\n        if(la_===1) {\r\n            this.state = 429;\r\n            localctx.object = this.match(TibboBasicParser.IDENTIFIER);\r\n            this.state = 430;\r\n            this.match(TibboBasicParser.DOT);\r\n\r\n        }\r\n        this.state = 433;\r\n        localctx.property = this.match(TibboBasicParser.IDENTIFIER);\r\n        this.state = 435;\r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        if(_la===TibboBasicParser.LPAREN) {\r\n            this.state = 434;\r\n            this.syscallInternalParamList();\r\n        }\r\n\r\n        this.state = 438;\r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        if(_la===TibboBasicParser.AS) {\r\n            this.state = 437;\r\n            this.asTypeClause();\r\n        }\r\n\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\n\r\nfunction SyscallInternalParamListContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = TibboBasicParser.RULE_syscallInternalParamList;\r\n    return this;\r\n}\r\n\r\nSyscallInternalParamListContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nSyscallInternalParamListContext.prototype.constructor = SyscallInternalParamListContext;\r\n\r\nSyscallInternalParamListContext.prototype.LPAREN = function() {\r\n    return this.getToken(TibboBasicParser.LPAREN, 0);\r\n};\r\n\r\nSyscallInternalParamListContext.prototype.RPAREN = function() {\r\n    return this.getToken(TibboBasicParser.RPAREN, 0);\r\n};\r\n\r\nSyscallInternalParamListContext.prototype.paramInternal = function(i) {\r\n    if(i===undefined) {\r\n        i = null;\r\n    }\r\n    if(i===null) {\r\n        return this.getTypedRuleContexts(ParamInternalContext);\r\n    } else {\r\n        return this.getTypedRuleContext(ParamInternalContext,i);\r\n    }\r\n};\r\n\r\nSyscallInternalParamListContext.prototype.COMMA = function(i) {\r\n\tif(i===undefined) {\r\n\t\ti = null;\r\n\t}\r\n    if(i===null) {\r\n        return this.getTokens(TibboBasicParser.COMMA);\r\n    } else {\r\n        return this.getToken(TibboBasicParser.COMMA, i);\r\n    }\r\n};\r\n\r\n\r\nSyscallInternalParamListContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.enterSyscallInternalParamList(this);\r\n\t}\r\n};\r\n\r\nSyscallInternalParamListContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.exitSyscallInternalParamList(this);\r\n\t}\r\n};\r\n\r\nSyscallInternalParamListContext.prototype.accept = function(visitor) {\r\n    if ( visitor instanceof TibboBasicParserVisitor ) {\r\n        return visitor.visitSyscallInternalParamList(this);\r\n    } else {\r\n        return visitor.visitChildren(this);\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nTibboBasicParser.SyscallInternalParamListContext = SyscallInternalParamListContext;\r\n\r\nTibboBasicParser.prototype.syscallInternalParamList = function() {\r\n\r\n    var localctx = new SyscallInternalParamListContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 58, TibboBasicParser.RULE_syscallInternalParamList);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 440;\r\n        this.match(TibboBasicParser.LPAREN);\r\n        this.state = 449;\r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        if(_la===TibboBasicParser.BYREF || _la===TibboBasicParser.BYVAL || _la===TibboBasicParser.IDENTIFIER) {\r\n            this.state = 441;\r\n            this.paramInternal();\r\n            this.state = 446;\r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n            while(_la===TibboBasicParser.COMMA) {\r\n                this.state = 442;\r\n                this.match(TibboBasicParser.COMMA);\r\n                this.state = 443;\r\n                this.paramInternal();\r\n                this.state = 448;\r\n                this._errHandler.sync(this);\r\n                _la = this._input.LA(1);\r\n            }\r\n        }\r\n\r\n        this.state = 451;\r\n        this.match(TibboBasicParser.RPAREN);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\n\r\nfunction ParamInternalContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = TibboBasicParser.RULE_paramInternal;\r\n    return this;\r\n}\r\n\r\nParamInternalContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nParamInternalContext.prototype.constructor = ParamInternalContext;\r\n\r\nParamInternalContext.prototype.IDENTIFIER = function() {\r\n    return this.getToken(TibboBasicParser.IDENTIFIER, 0);\r\n};\r\n\r\nParamInternalContext.prototype.asTypeClause = function() {\r\n    return this.getTypedRuleContext(AsTypeClauseContext,0);\r\n};\r\n\r\nParamInternalContext.prototype.BYVAL = function() {\r\n    return this.getToken(TibboBasicParser.BYVAL, 0);\r\n};\r\n\r\nParamInternalContext.prototype.BYREF = function() {\r\n    return this.getToken(TibboBasicParser.BYREF, 0);\r\n};\r\n\r\nParamInternalContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.enterParamInternal(this);\r\n\t}\r\n};\r\n\r\nParamInternalContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.exitParamInternal(this);\r\n\t}\r\n};\r\n\r\nParamInternalContext.prototype.accept = function(visitor) {\r\n    if ( visitor instanceof TibboBasicParserVisitor ) {\r\n        return visitor.visitParamInternal(this);\r\n    } else {\r\n        return visitor.visitChildren(this);\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nTibboBasicParser.ParamInternalContext = ParamInternalContext;\r\n\r\nTibboBasicParser.prototype.paramInternal = function() {\r\n\r\n    var localctx = new ParamInternalContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 60, TibboBasicParser.RULE_paramInternal);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 454;\r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        if(_la===TibboBasicParser.BYREF || _la===TibboBasicParser.BYVAL) {\r\n            this.state = 453;\r\n            _la = this._input.LA(1);\r\n            if(!(_la===TibboBasicParser.BYREF || _la===TibboBasicParser.BYVAL)) {\r\n            this._errHandler.recoverInline(this);\r\n            }\r\n            else {\r\n            \tthis._errHandler.reportMatch(this);\r\n                this.consume();\r\n            }\r\n        }\r\n\r\n        this.state = 456;\r\n        this.match(TibboBasicParser.IDENTIFIER);\r\n        this.state = 458;\r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        if(_la===TibboBasicParser.AS) {\r\n            this.state = 457;\r\n            this.asTypeClause();\r\n        }\r\n\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\n\r\nfunction SelectCaseStmtContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = TibboBasicParser.RULE_selectCaseStmt;\r\n    return this;\r\n}\r\n\r\nSelectCaseStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nSelectCaseStmtContext.prototype.constructor = SelectCaseStmtContext;\r\n\r\nSelectCaseStmtContext.prototype.SELECT = function() {\r\n    return this.getToken(TibboBasicParser.SELECT, 0);\r\n};\r\n\r\nSelectCaseStmtContext.prototype.CASE = function() {\r\n    return this.getToken(TibboBasicParser.CASE, 0);\r\n};\r\n\r\nSelectCaseStmtContext.prototype.expression = function() {\r\n    return this.getTypedRuleContext(ExpressionContext,0);\r\n};\r\n\r\nSelectCaseStmtContext.prototype.END_SELECT = function() {\r\n    return this.getToken(TibboBasicParser.END_SELECT, 0);\r\n};\r\n\r\nSelectCaseStmtContext.prototype.COLON = function() {\r\n    return this.getToken(TibboBasicParser.COLON, 0);\r\n};\r\n\r\nSelectCaseStmtContext.prototype.sC_Case = function(i) {\r\n    if(i===undefined) {\r\n        i = null;\r\n    }\r\n    if(i===null) {\r\n        return this.getTypedRuleContexts(SC_CaseContext);\r\n    } else {\r\n        return this.getTypedRuleContext(SC_CaseContext,i);\r\n    }\r\n};\r\n\r\nSelectCaseStmtContext.prototype.sC_Default = function() {\r\n    return this.getTypedRuleContext(SC_DefaultContext,0);\r\n};\r\n\r\nSelectCaseStmtContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.enterSelectCaseStmt(this);\r\n\t}\r\n};\r\n\r\nSelectCaseStmtContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.exitSelectCaseStmt(this);\r\n\t}\r\n};\r\n\r\nSelectCaseStmtContext.prototype.accept = function(visitor) {\r\n    if ( visitor instanceof TibboBasicParserVisitor ) {\r\n        return visitor.visitSelectCaseStmt(this);\r\n    } else {\r\n        return visitor.visitChildren(this);\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nTibboBasicParser.SelectCaseStmtContext = SelectCaseStmtContext;\r\n\r\nTibboBasicParser.prototype.selectCaseStmt = function() {\r\n\r\n    var localctx = new SelectCaseStmtContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 62, TibboBasicParser.RULE_selectCaseStmt);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 460;\r\n        this.match(TibboBasicParser.SELECT);\r\n        this.state = 461;\r\n        this.match(TibboBasicParser.CASE);\r\n        this.state = 462;\r\n        this.expression(0);\r\n        this.state = 464;\r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        if(_la===TibboBasicParser.COLON) {\r\n            this.state = 463;\r\n            this.match(TibboBasicParser.COLON);\r\n        }\r\n\r\n        this.state = 469;\r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        while(_la===TibboBasicParser.CASE) {\r\n            this.state = 466;\r\n            this.sC_Case();\r\n            this.state = 471;\r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n        }\r\n        this.state = 473;\r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        if(_la===TibboBasicParser.CASE_ELSE) {\r\n            this.state = 472;\r\n            this.sC_Default();\r\n        }\r\n\r\n        this.state = 475;\r\n        this.match(TibboBasicParser.END_SELECT);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\n\r\nfunction SC_CaseContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = TibboBasicParser.RULE_sC_Case;\r\n    return this;\r\n}\r\n\r\nSC_CaseContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nSC_CaseContext.prototype.constructor = SC_CaseContext;\r\n\r\nSC_CaseContext.prototype.CASE = function() {\r\n    return this.getToken(TibboBasicParser.CASE, 0);\r\n};\r\n\r\nSC_CaseContext.prototype.sC_Cond = function(i) {\r\n    if(i===undefined) {\r\n        i = null;\r\n    }\r\n    if(i===null) {\r\n        return this.getTypedRuleContexts(SC_CondContext);\r\n    } else {\r\n        return this.getTypedRuleContext(SC_CondContext,i);\r\n    }\r\n};\r\n\r\nSC_CaseContext.prototype.block = function() {\r\n    return this.getTypedRuleContext(BlockContext,0);\r\n};\r\n\r\nSC_CaseContext.prototype.COMMA = function(i) {\r\n\tif(i===undefined) {\r\n\t\ti = null;\r\n\t}\r\n    if(i===null) {\r\n        return this.getTokens(TibboBasicParser.COMMA);\r\n    } else {\r\n        return this.getToken(TibboBasicParser.COMMA, i);\r\n    }\r\n};\r\n\r\n\r\nSC_CaseContext.prototype.COLON = function() {\r\n    return this.getToken(TibboBasicParser.COLON, 0);\r\n};\r\n\r\nSC_CaseContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.enterSC_Case(this);\r\n\t}\r\n};\r\n\r\nSC_CaseContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.exitSC_Case(this);\r\n\t}\r\n};\r\n\r\nSC_CaseContext.prototype.accept = function(visitor) {\r\n    if ( visitor instanceof TibboBasicParserVisitor ) {\r\n        return visitor.visitSC_Case(this);\r\n    } else {\r\n        return visitor.visitChildren(this);\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nTibboBasicParser.SC_CaseContext = SC_CaseContext;\r\n\r\nTibboBasicParser.prototype.sC_Case = function() {\r\n\r\n    var localctx = new SC_CaseContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 64, TibboBasicParser.RULE_sC_Case);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 477;\r\n        this.match(TibboBasicParser.CASE);\r\n        this.state = 478;\r\n        this.sC_Cond();\r\n        this.state = 483;\r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        while(_la===TibboBasicParser.COMMA) {\r\n            this.state = 479;\r\n            this.match(TibboBasicParser.COMMA);\r\n            this.state = 480;\r\n            this.sC_Cond();\r\n            this.state = 485;\r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n        }\r\n        this.state = 487;\r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        if(_la===TibboBasicParser.COLON) {\r\n            this.state = 486;\r\n            this.match(TibboBasicParser.COLON);\r\n        }\r\n\r\n        this.state = 489;\r\n        this.block();\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\n\r\nfunction SC_DefaultContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = TibboBasicParser.RULE_sC_Default;\r\n    return this;\r\n}\r\n\r\nSC_DefaultContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nSC_DefaultContext.prototype.constructor = SC_DefaultContext;\r\n\r\nSC_DefaultContext.prototype.CASE_ELSE = function() {\r\n    return this.getToken(TibboBasicParser.CASE_ELSE, 0);\r\n};\r\n\r\nSC_DefaultContext.prototype.block = function() {\r\n    return this.getTypedRuleContext(BlockContext,0);\r\n};\r\n\r\nSC_DefaultContext.prototype.COLON = function() {\r\n    return this.getToken(TibboBasicParser.COLON, 0);\r\n};\r\n\r\nSC_DefaultContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.enterSC_Default(this);\r\n\t}\r\n};\r\n\r\nSC_DefaultContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.exitSC_Default(this);\r\n\t}\r\n};\r\n\r\nSC_DefaultContext.prototype.accept = function(visitor) {\r\n    if ( visitor instanceof TibboBasicParserVisitor ) {\r\n        return visitor.visitSC_Default(this);\r\n    } else {\r\n        return visitor.visitChildren(this);\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nTibboBasicParser.SC_DefaultContext = SC_DefaultContext;\r\n\r\nTibboBasicParser.prototype.sC_Default = function() {\r\n\r\n    var localctx = new SC_DefaultContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 66, TibboBasicParser.RULE_sC_Default);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 491;\r\n        this.match(TibboBasicParser.CASE_ELSE);\r\n        this.state = 493;\r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        if(_la===TibboBasicParser.COLON) {\r\n            this.state = 492;\r\n            this.match(TibboBasicParser.COLON);\r\n        }\r\n\r\n        this.state = 495;\r\n        this.block();\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\n\r\nfunction SC_CondContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = TibboBasicParser.RULE_sC_Cond;\r\n    return this;\r\n}\r\n\r\nSC_CondContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nSC_CondContext.prototype.constructor = SC_CondContext;\r\n\r\nSC_CondContext.prototype.expression = function() {\r\n    return this.getTypedRuleContext(ExpressionContext,0);\r\n};\r\n\r\nSC_CondContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.enterSC_Cond(this);\r\n\t}\r\n};\r\n\r\nSC_CondContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.exitSC_Cond(this);\r\n\t}\r\n};\r\n\r\nSC_CondContext.prototype.accept = function(visitor) {\r\n    if ( visitor instanceof TibboBasicParserVisitor ) {\r\n        return visitor.visitSC_Cond(this);\r\n    } else {\r\n        return visitor.visitChildren(this);\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nTibboBasicParser.SC_CondContext = SC_CondContext;\r\n\r\nTibboBasicParser.prototype.sC_Cond = function() {\r\n\r\n    var localctx = new SC_CondContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 68, TibboBasicParser.RULE_sC_Cond);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 497;\r\n        this.expression(0);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\n\r\nfunction SubStmtContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = TibboBasicParser.RULE_subStmt;\r\n    this.name = null; // Token\r\n    return this;\r\n}\r\n\r\nSubStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nSubStmtContext.prototype.constructor = SubStmtContext;\r\n\r\nSubStmtContext.prototype.SUB = function() {\r\n    return this.getToken(TibboBasicParser.SUB, 0);\r\n};\r\n\r\nSubStmtContext.prototype.block = function() {\r\n    return this.getTypedRuleContext(BlockContext,0);\r\n};\r\n\r\nSubStmtContext.prototype.END_SUB = function() {\r\n    return this.getToken(TibboBasicParser.END_SUB, 0);\r\n};\r\n\r\nSubStmtContext.prototype.IDENTIFIER = function(i) {\r\n\tif(i===undefined) {\r\n\t\ti = null;\r\n\t}\r\n    if(i===null) {\r\n        return this.getTokens(TibboBasicParser.IDENTIFIER);\r\n    } else {\r\n        return this.getToken(TibboBasicParser.IDENTIFIER, i);\r\n    }\r\n};\r\n\r\n\r\nSubStmtContext.prototype.visibility = function() {\r\n    return this.getTypedRuleContext(VisibilityContext,0);\r\n};\r\n\r\nSubStmtContext.prototype.DOT = function() {\r\n    return this.getToken(TibboBasicParser.DOT, 0);\r\n};\r\n\r\nSubStmtContext.prototype.paramList = function() {\r\n    return this.getTypedRuleContext(ParamListContext,0);\r\n};\r\n\r\nSubStmtContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.enterSubStmt(this);\r\n\t}\r\n};\r\n\r\nSubStmtContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.exitSubStmt(this);\r\n\t}\r\n};\r\n\r\nSubStmtContext.prototype.accept = function(visitor) {\r\n    if ( visitor instanceof TibboBasicParserVisitor ) {\r\n        return visitor.visitSubStmt(this);\r\n    } else {\r\n        return visitor.visitChildren(this);\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nTibboBasicParser.SubStmtContext = SubStmtContext;\r\n\r\nTibboBasicParser.prototype.subStmt = function() {\r\n\r\n    var localctx = new SubStmtContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 70, TibboBasicParser.RULE_subStmt);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 500;\r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        if(_la===TibboBasicParser.PUBLIC) {\r\n            this.state = 499;\r\n            this.visibility();\r\n        }\r\n\r\n        this.state = 502;\r\n        this.match(TibboBasicParser.SUB);\r\n        this.state = 505;\r\n        this._errHandler.sync(this);\r\n        var la_ = this._interp.adaptivePredict(this._input,60,this._ctx);\r\n        if(la_===1) {\r\n            this.state = 503;\r\n            this.match(TibboBasicParser.IDENTIFIER);\r\n            this.state = 504;\r\n            this.match(TibboBasicParser.DOT);\r\n\r\n        }\r\n        this.state = 507;\r\n        localctx.name = this.match(TibboBasicParser.IDENTIFIER);\r\n        this.state = 509;\r\n        this._errHandler.sync(this);\r\n        var la_ = this._interp.adaptivePredict(this._input,61,this._ctx);\r\n        if(la_===1) {\r\n            this.state = 508;\r\n            this.paramList();\r\n\r\n        }\r\n        this.state = 511;\r\n        this.block();\r\n        this.state = 512;\r\n        this.match(TibboBasicParser.END_SUB);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\n\r\nfunction TypeStmtContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = TibboBasicParser.RULE_typeStmt;\r\n    this.name = null; // Token\r\n    return this;\r\n}\r\n\r\nTypeStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nTypeStmtContext.prototype.constructor = TypeStmtContext;\r\n\r\nTypeStmtContext.prototype.TYPE = function() {\r\n    return this.getToken(TibboBasicParser.TYPE, 0);\r\n};\r\n\r\nTypeStmtContext.prototype.END_TYPE = function() {\r\n    return this.getToken(TibboBasicParser.END_TYPE, 0);\r\n};\r\n\r\nTypeStmtContext.prototype.IDENTIFIER = function() {\r\n    return this.getToken(TibboBasicParser.IDENTIFIER, 0);\r\n};\r\n\r\nTypeStmtContext.prototype.visibility = function() {\r\n    return this.getTypedRuleContext(VisibilityContext,0);\r\n};\r\n\r\nTypeStmtContext.prototype.typeStmtElement = function(i) {\r\n    if(i===undefined) {\r\n        i = null;\r\n    }\r\n    if(i===null) {\r\n        return this.getTypedRuleContexts(TypeStmtElementContext);\r\n    } else {\r\n        return this.getTypedRuleContext(TypeStmtElementContext,i);\r\n    }\r\n};\r\n\r\nTypeStmtContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.enterTypeStmt(this);\r\n\t}\r\n};\r\n\r\nTypeStmtContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.exitTypeStmt(this);\r\n\t}\r\n};\r\n\r\nTypeStmtContext.prototype.accept = function(visitor) {\r\n    if ( visitor instanceof TibboBasicParserVisitor ) {\r\n        return visitor.visitTypeStmt(this);\r\n    } else {\r\n        return visitor.visitChildren(this);\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nTibboBasicParser.TypeStmtContext = TypeStmtContext;\r\n\r\nTibboBasicParser.prototype.typeStmt = function() {\r\n\r\n    var localctx = new TypeStmtContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 72, TibboBasicParser.RULE_typeStmt);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 515;\r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        if(_la===TibboBasicParser.PUBLIC) {\r\n            this.state = 514;\r\n            this.visibility();\r\n        }\r\n\r\n        this.state = 517;\r\n        this.match(TibboBasicParser.TYPE);\r\n        this.state = 518;\r\n        localctx.name = this.match(TibboBasicParser.IDENTIFIER);\r\n        this.state = 522;\r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        while(_la===TibboBasicParser.IDENTIFIER) {\r\n            this.state = 519;\r\n            this.typeStmtElement();\r\n            this.state = 524;\r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n        }\r\n        this.state = 525;\r\n        this.match(TibboBasicParser.END_TYPE);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\n\r\nfunction TypeStmtElementContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = TibboBasicParser.RULE_typeStmtElement;\r\n    this.valueType = null; // AsTypeClauseContext\r\n    return this;\r\n}\r\n\r\nTypeStmtElementContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nTypeStmtElementContext.prototype.constructor = TypeStmtElementContext;\r\n\r\nTypeStmtElementContext.prototype.IDENTIFIER = function() {\r\n    return this.getToken(TibboBasicParser.IDENTIFIER, 0);\r\n};\r\n\r\nTypeStmtElementContext.prototype.asTypeClause = function() {\r\n    return this.getTypedRuleContext(AsTypeClauseContext,0);\r\n};\r\n\r\nTypeStmtElementContext.prototype.LPAREN = function() {\r\n    return this.getToken(TibboBasicParser.LPAREN, 0);\r\n};\r\n\r\nTypeStmtElementContext.prototype.literal = function() {\r\n    return this.getTypedRuleContext(LiteralContext,0);\r\n};\r\n\r\nTypeStmtElementContext.prototype.RPAREN = function() {\r\n    return this.getToken(TibboBasicParser.RPAREN, 0);\r\n};\r\n\r\nTypeStmtElementContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.enterTypeStmtElement(this);\r\n\t}\r\n};\r\n\r\nTypeStmtElementContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.exitTypeStmtElement(this);\r\n\t}\r\n};\r\n\r\nTypeStmtElementContext.prototype.accept = function(visitor) {\r\n    if ( visitor instanceof TibboBasicParserVisitor ) {\r\n        return visitor.visitTypeStmtElement(this);\r\n    } else {\r\n        return visitor.visitChildren(this);\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nTibboBasicParser.TypeStmtElementContext = TypeStmtElementContext;\r\n\r\nTibboBasicParser.prototype.typeStmtElement = function() {\r\n\r\n    var localctx = new TypeStmtElementContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 74, TibboBasicParser.RULE_typeStmtElement);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 527;\r\n        this.match(TibboBasicParser.IDENTIFIER);\r\n        this.state = 532;\r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        if(_la===TibboBasicParser.LPAREN) {\r\n            this.state = 528;\r\n            this.match(TibboBasicParser.LPAREN);\r\n            this.state = 529;\r\n            this.literal();\r\n            this.state = 530;\r\n            this.match(TibboBasicParser.RPAREN);\r\n        }\r\n\r\n        this.state = 534;\r\n        localctx.valueType = this.asTypeClause();\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\n\r\nfunction ExpressionContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = TibboBasicParser.RULE_expression;\r\n    this.op = null; // Token\r\n    return this;\r\n}\r\n\r\nExpressionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nExpressionContext.prototype.constructor = ExpressionContext;\r\n\r\nExpressionContext.prototype.unaryExpression = function() {\r\n    return this.getTypedRuleContext(UnaryExpressionContext,0);\r\n};\r\n\r\nExpressionContext.prototype.LPAREN = function() {\r\n    return this.getToken(TibboBasicParser.LPAREN, 0);\r\n};\r\n\r\nExpressionContext.prototype.expression = function(i) {\r\n    if(i===undefined) {\r\n        i = null;\r\n    }\r\n    if(i===null) {\r\n        return this.getTypedRuleContexts(ExpressionContext);\r\n    } else {\r\n        return this.getTypedRuleContext(ExpressionContext,i);\r\n    }\r\n};\r\n\r\nExpressionContext.prototype.RPAREN = function() {\r\n    return this.getToken(TibboBasicParser.RPAREN, 0);\r\n};\r\n\r\nExpressionContext.prototype.MULT = function() {\r\n    return this.getToken(TibboBasicParser.MULT, 0);\r\n};\r\n\r\nExpressionContext.prototype.DIV = function() {\r\n    return this.getToken(TibboBasicParser.DIV, 0);\r\n};\r\n\r\nExpressionContext.prototype.MOD = function() {\r\n    return this.getToken(TibboBasicParser.MOD, 0);\r\n};\r\n\r\nExpressionContext.prototype.PLUS = function() {\r\n    return this.getToken(TibboBasicParser.PLUS, 0);\r\n};\r\n\r\nExpressionContext.prototype.MINUS = function() {\r\n    return this.getToken(TibboBasicParser.MINUS, 0);\r\n};\r\n\r\nExpressionContext.prototype.LEQ = function() {\r\n    return this.getToken(TibboBasicParser.LEQ, 0);\r\n};\r\n\r\nExpressionContext.prototype.GEQ = function() {\r\n    return this.getToken(TibboBasicParser.GEQ, 0);\r\n};\r\n\r\nExpressionContext.prototype.LT = function() {\r\n    return this.getToken(TibboBasicParser.LT, 0);\r\n};\r\n\r\nExpressionContext.prototype.GT = function() {\r\n    return this.getToken(TibboBasicParser.GT, 0);\r\n};\r\n\r\nExpressionContext.prototype.NEQ = function() {\r\n    return this.getToken(TibboBasicParser.NEQ, 0);\r\n};\r\n\r\nExpressionContext.prototype.EQ = function() {\r\n    return this.getToken(TibboBasicParser.EQ, 0);\r\n};\r\n\r\nExpressionContext.prototype.SHL = function() {\r\n    return this.getToken(TibboBasicParser.SHL, 0);\r\n};\r\n\r\nExpressionContext.prototype.SHR = function() {\r\n    return this.getToken(TibboBasicParser.SHR, 0);\r\n};\r\n\r\nExpressionContext.prototype.NOT = function() {\r\n    return this.getToken(TibboBasicParser.NOT, 0);\r\n};\r\n\r\nExpressionContext.prototype.AND = function() {\r\n    return this.getToken(TibboBasicParser.AND, 0);\r\n};\r\n\r\nExpressionContext.prototype.XOR = function() {\r\n    return this.getToken(TibboBasicParser.XOR, 0);\r\n};\r\n\r\nExpressionContext.prototype.OR = function() {\r\n    return this.getToken(TibboBasicParser.OR, 0);\r\n};\r\n\r\nExpressionContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.enterExpression(this);\r\n\t}\r\n};\r\n\r\nExpressionContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.exitExpression(this);\r\n\t}\r\n};\r\n\r\nExpressionContext.prototype.accept = function(visitor) {\r\n    if ( visitor instanceof TibboBasicParserVisitor ) {\r\n        return visitor.visitExpression(this);\r\n    } else {\r\n        return visitor.visitChildren(this);\r\n    }\r\n};\r\n\r\n\r\n\r\nTibboBasicParser.prototype.expression = function(_p) {\r\n\tif(_p===undefined) {\r\n\t    _p = 0;\r\n\t}\r\n    var _parentctx = this._ctx;\r\n    var _parentState = this.state;\r\n    var localctx = new ExpressionContext(this, this._ctx, _parentState);\r\n    var _prevctx = localctx;\r\n    var _startState = 76;\r\n    this.enterRecursionRule(localctx, 76, TibboBasicParser.RULE_expression, _p);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 542;\r\n        this._errHandler.sync(this);\r\n        var la_ = this._interp.adaptivePredict(this._input,65,this._ctx);\r\n        switch(la_) {\r\n        case 1:\r\n            this.state = 537;\r\n            this.unaryExpression();\r\n            break;\r\n\r\n        case 2:\r\n            this.state = 538;\r\n            this.match(TibboBasicParser.LPAREN);\r\n            this.state = 539;\r\n            this.expression(0);\r\n            this.state = 540;\r\n            this.match(TibboBasicParser.RPAREN);\r\n            break;\r\n\r\n        }\r\n        this._ctx.stop = this._input.LT(-1);\r\n        this.state = 561;\r\n        this._errHandler.sync(this);\r\n        var _alt = this._interp.adaptivePredict(this._input,67,this._ctx)\r\n        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {\r\n            if(_alt===1) {\r\n                if(this._parseListeners!==null) {\r\n                    this.triggerExitRuleEvent();\r\n                }\r\n                _prevctx = localctx;\r\n                this.state = 559;\r\n                this._errHandler.sync(this);\r\n                var la_ = this._interp.adaptivePredict(this._input,66,this._ctx);\r\n                switch(la_) {\r\n                case 1:\r\n                    localctx = new ExpressionContext(this, _parentctx, _parentState);\r\n                    this.pushNewRecursionContext(localctx, _startState, TibboBasicParser.RULE_expression);\r\n                    this.state = 544;\r\n                    if (!( this.precpred(this._ctx, 6))) {\r\n                        throw new antlr4.error.FailedPredicateException(this, \"this.precpred(this._ctx, 6)\");\r\n                    }\r\n                    this.state = 545;\r\n                    localctx.op = this._input.LT(1);\r\n                    _la = this._input.LA(1);\r\n                    if(!(_la===TibboBasicParser.MOD || _la===TibboBasicParser.DIV || _la===TibboBasicParser.MULT)) {\r\n                        localctx.op = this._errHandler.recoverInline(this);\r\n                    }\r\n                    else {\r\n                    \tthis._errHandler.reportMatch(this);\r\n                        this.consume();\r\n                    }\r\n                    this.state = 546;\r\n                    this.expression(7);\r\n                    break;\r\n\r\n                case 2:\r\n                    localctx = new ExpressionContext(this, _parentctx, _parentState);\r\n                    this.pushNewRecursionContext(localctx, _startState, TibboBasicParser.RULE_expression);\r\n                    this.state = 547;\r\n                    if (!( this.precpred(this._ctx, 5))) {\r\n                        throw new antlr4.error.FailedPredicateException(this, \"this.precpred(this._ctx, 5)\");\r\n                    }\r\n                    this.state = 548;\r\n                    localctx.op = this._input.LT(1);\r\n                    _la = this._input.LA(1);\r\n                    if(!(_la===TibboBasicParser.MINUS || _la===TibboBasicParser.PLUS)) {\r\n                        localctx.op = this._errHandler.recoverInline(this);\r\n                    }\r\n                    else {\r\n                    \tthis._errHandler.reportMatch(this);\r\n                        this.consume();\r\n                    }\r\n                    this.state = 549;\r\n                    this.expression(6);\r\n                    break;\r\n\r\n                case 3:\r\n                    localctx = new ExpressionContext(this, _parentctx, _parentState);\r\n                    this.pushNewRecursionContext(localctx, _startState, TibboBasicParser.RULE_expression);\r\n                    this.state = 550;\r\n                    if (!( this.precpred(this._ctx, 4))) {\r\n                        throw new antlr4.error.FailedPredicateException(this, \"this.precpred(this._ctx, 4)\");\r\n                    }\r\n                    this.state = 551;\r\n                    localctx.op = this._input.LT(1);\r\n                    _la = this._input.LA(1);\r\n                    if(!(((((_la - 85)) & ~0x1f) == 0 && ((1 << (_la - 85)) & ((1 << (TibboBasicParser.GEQ - 85)) | (1 << (TibboBasicParser.GT - 85)) | (1 << (TibboBasicParser.LEQ - 85)) | (1 << (TibboBasicParser.LT - 85)))) !== 0))) {\r\n                        localctx.op = this._errHandler.recoverInline(this);\r\n                    }\r\n                    else {\r\n                    \tthis._errHandler.reportMatch(this);\r\n                        this.consume();\r\n                    }\r\n                    this.state = 552;\r\n                    this.expression(5);\r\n                    break;\r\n\r\n                case 4:\r\n                    localctx = new ExpressionContext(this, _parentctx, _parentState);\r\n                    this.pushNewRecursionContext(localctx, _startState, TibboBasicParser.RULE_expression);\r\n                    this.state = 553;\r\n                    if (!( this.precpred(this._ctx, 3))) {\r\n                        throw new antlr4.error.FailedPredicateException(this, \"this.precpred(this._ctx, 3)\");\r\n                    }\r\n                    this.state = 554;\r\n                    localctx.op = this._input.LT(1);\r\n                    _la = this._input.LA(1);\r\n                    if(!(_la===TibboBasicParser.EQ || _la===TibboBasicParser.NEQ)) {\r\n                        localctx.op = this._errHandler.recoverInline(this);\r\n                    }\r\n                    else {\r\n                    \tthis._errHandler.reportMatch(this);\r\n                        this.consume();\r\n                    }\r\n                    this.state = 555;\r\n                    this.expression(4);\r\n                    break;\r\n\r\n                case 5:\r\n                    localctx = new ExpressionContext(this, _parentctx, _parentState);\r\n                    this.pushNewRecursionContext(localctx, _startState, TibboBasicParser.RULE_expression);\r\n                    this.state = 556;\r\n                    if (!( this.precpred(this._ctx, 2))) {\r\n                        throw new antlr4.error.FailedPredicateException(this, \"this.precpred(this._ctx, 2)\");\r\n                    }\r\n                    this.state = 557;\r\n                    localctx.op = this._input.LT(1);\r\n                    _la = this._input.LA(1);\r\n                    if(!(_la===TibboBasicParser.AND || ((((_la - 54)) & ~0x1f) == 0 && ((1 << (_la - 54)) & ((1 << (TibboBasicParser.NOT - 54)) | (1 << (TibboBasicParser.OR - 54)) | (1 << (TibboBasicParser.SHL - 54)) | (1 << (TibboBasicParser.SHR - 54)) | (1 << (TibboBasicParser.XOR - 54)))) !== 0))) {\r\n                        localctx.op = this._errHandler.recoverInline(this);\r\n                    }\r\n                    else {\r\n                    \tthis._errHandler.reportMatch(this);\r\n                        this.consume();\r\n                    }\r\n                    this.state = 558;\r\n                    this.expression(3);\r\n                    break;\r\n\r\n                } \r\n            }\r\n            this.state = 563;\r\n            this._errHandler.sync(this);\r\n            _alt = this._interp.adaptivePredict(this._input,67,this._ctx);\r\n        }\r\n\r\n    } catch( error) {\r\n        if(error instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = error;\r\n\t        this._errHandler.reportError(this, error);\r\n\t        this._errHandler.recover(this, error);\r\n\t    } else {\r\n\t    \tthrow error;\r\n\t    }\r\n    } finally {\r\n        this.unrollRecursionContexts(_parentctx)\r\n    }\r\n    return localctx;\r\n};\r\n\r\n\r\nfunction UnaryExpressionContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = TibboBasicParser.RULE_unaryExpression;\r\n    return this;\r\n}\r\n\r\nUnaryExpressionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nUnaryExpressionContext.prototype.constructor = UnaryExpressionContext;\r\n\r\nUnaryExpressionContext.prototype.postfixExpression = function() {\r\n    return this.getTypedRuleContext(PostfixExpressionContext,0);\r\n};\r\n\r\nUnaryExpressionContext.prototype.unaryOperator = function() {\r\n    return this.getTypedRuleContext(UnaryOperatorContext,0);\r\n};\r\n\r\nUnaryExpressionContext.prototype.primaryExpression = function() {\r\n    return this.getTypedRuleContext(PrimaryExpressionContext,0);\r\n};\r\n\r\nUnaryExpressionContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.enterUnaryExpression(this);\r\n\t}\r\n};\r\n\r\nUnaryExpressionContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.exitUnaryExpression(this);\r\n\t}\r\n};\r\n\r\nUnaryExpressionContext.prototype.accept = function(visitor) {\r\n    if ( visitor instanceof TibboBasicParserVisitor ) {\r\n        return visitor.visitUnaryExpression(this);\r\n    } else {\r\n        return visitor.visitChildren(this);\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nTibboBasicParser.UnaryExpressionContext = UnaryExpressionContext;\r\n\r\nTibboBasicParser.prototype.unaryExpression = function() {\r\n\r\n    var localctx = new UnaryExpressionContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 78, TibboBasicParser.RULE_unaryExpression);\r\n    try {\r\n        this.state = 568;\r\n        this._errHandler.sync(this);\r\n        var la_ = this._interp.adaptivePredict(this._input,68,this._ctx);\r\n        switch(la_) {\r\n        case 1:\r\n            this.enterOuterAlt(localctx, 1);\r\n            this.state = 564;\r\n            this.postfixExpression(0);\r\n            break;\r\n\r\n        case 2:\r\n            this.enterOuterAlt(localctx, 2);\r\n            this.state = 565;\r\n            this.unaryOperator();\r\n            this.state = 566;\r\n            this.primaryExpression();\r\n            break;\r\n\r\n        }\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\n\r\nfunction UnaryOperatorContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = TibboBasicParser.RULE_unaryOperator;\r\n    return this;\r\n}\r\n\r\nUnaryOperatorContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nUnaryOperatorContext.prototype.constructor = UnaryOperatorContext;\r\n\r\nUnaryOperatorContext.prototype.MINUS = function() {\r\n    return this.getToken(TibboBasicParser.MINUS, 0);\r\n};\r\n\r\nUnaryOperatorContext.prototype.NOT = function() {\r\n    return this.getToken(TibboBasicParser.NOT, 0);\r\n};\r\n\r\nUnaryOperatorContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.enterUnaryOperator(this);\r\n\t}\r\n};\r\n\r\nUnaryOperatorContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.exitUnaryOperator(this);\r\n\t}\r\n};\r\n\r\nUnaryOperatorContext.prototype.accept = function(visitor) {\r\n    if ( visitor instanceof TibboBasicParserVisitor ) {\r\n        return visitor.visitUnaryOperator(this);\r\n    } else {\r\n        return visitor.visitChildren(this);\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nTibboBasicParser.UnaryOperatorContext = UnaryOperatorContext;\r\n\r\nTibboBasicParser.prototype.unaryOperator = function() {\r\n\r\n    var localctx = new UnaryOperatorContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 80, TibboBasicParser.RULE_unaryOperator);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 570;\r\n        _la = this._input.LA(1);\r\n        if(!(_la===TibboBasicParser.NOT || _la===TibboBasicParser.MINUS)) {\r\n        this._errHandler.recoverInline(this);\r\n        }\r\n        else {\r\n        \tthis._errHandler.reportMatch(this);\r\n            this.consume();\r\n        }\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\n\r\nfunction PostfixExpressionContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = TibboBasicParser.RULE_postfixExpression;\r\n    this.property = null; // Token\r\n    return this;\r\n}\r\n\r\nPostfixExpressionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nPostfixExpressionContext.prototype.constructor = PostfixExpressionContext;\r\n\r\nPostfixExpressionContext.prototype.primaryExpression = function() {\r\n    return this.getTypedRuleContext(PrimaryExpressionContext,0);\r\n};\r\n\r\nPostfixExpressionContext.prototype.postfix = function(i) {\r\n    if(i===undefined) {\r\n        i = null;\r\n    }\r\n    if(i===null) {\r\n        return this.getTypedRuleContexts(PostfixContext);\r\n    } else {\r\n        return this.getTypedRuleContext(PostfixContext,i);\r\n    }\r\n};\r\n\r\nPostfixExpressionContext.prototype.postfixExpression = function() {\r\n    return this.getTypedRuleContext(PostfixExpressionContext,0);\r\n};\r\n\r\nPostfixExpressionContext.prototype.DOT = function() {\r\n    return this.getToken(TibboBasicParser.DOT, 0);\r\n};\r\n\r\nPostfixExpressionContext.prototype.IDENTIFIER = function() {\r\n    return this.getToken(TibboBasicParser.IDENTIFIER, 0);\r\n};\r\n\r\nPostfixExpressionContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.enterPostfixExpression(this);\r\n\t}\r\n};\r\n\r\nPostfixExpressionContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.exitPostfixExpression(this);\r\n\t}\r\n};\r\n\r\nPostfixExpressionContext.prototype.accept = function(visitor) {\r\n    if ( visitor instanceof TibboBasicParserVisitor ) {\r\n        return visitor.visitPostfixExpression(this);\r\n    } else {\r\n        return visitor.visitChildren(this);\r\n    }\r\n};\r\n\r\n\r\n\r\nTibboBasicParser.prototype.postfixExpression = function(_p) {\r\n\tif(_p===undefined) {\r\n\t    _p = 0;\r\n\t}\r\n    var _parentctx = this._ctx;\r\n    var _parentState = this.state;\r\n    var localctx = new PostfixExpressionContext(this, this._ctx, _parentState);\r\n    var _prevctx = localctx;\r\n    var _startState = 82;\r\n    this.enterRecursionRule(localctx, 82, TibboBasicParser.RULE_postfixExpression, _p);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 573;\r\n        this.primaryExpression();\r\n        this.state = 577;\r\n        this._errHandler.sync(this);\r\n        var _alt = this._interp.adaptivePredict(this._input,69,this._ctx)\r\n        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {\r\n            if(_alt===1) {\r\n                this.state = 574;\r\n                this.postfix(); \r\n            }\r\n            this.state = 579;\r\n            this._errHandler.sync(this);\r\n            _alt = this._interp.adaptivePredict(this._input,69,this._ctx);\r\n        }\r\n\r\n        this._ctx.stop = this._input.LT(-1);\r\n        this.state = 591;\r\n        this._errHandler.sync(this);\r\n        var _alt = this._interp.adaptivePredict(this._input,71,this._ctx)\r\n        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {\r\n            if(_alt===1) {\r\n                if(this._parseListeners!==null) {\r\n                    this.triggerExitRuleEvent();\r\n                }\r\n                _prevctx = localctx;\r\n                localctx = new PostfixExpressionContext(this, _parentctx, _parentState);\r\n                this.pushNewRecursionContext(localctx, _startState, TibboBasicParser.RULE_postfixExpression);\r\n                this.state = 580;\r\n                if (!( this.precpred(this._ctx, 1))) {\r\n                    throw new antlr4.error.FailedPredicateException(this, \"this.precpred(this._ctx, 1)\");\r\n                }\r\n                this.state = 581;\r\n                this.match(TibboBasicParser.DOT);\r\n                this.state = 582;\r\n                localctx.property = this.match(TibboBasicParser.IDENTIFIER);\r\n                this.state = 586;\r\n                this._errHandler.sync(this);\r\n                var _alt = this._interp.adaptivePredict(this._input,70,this._ctx)\r\n                while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {\r\n                    if(_alt===1) {\r\n                        this.state = 583;\r\n                        this.postfix(); \r\n                    }\r\n                    this.state = 588;\r\n                    this._errHandler.sync(this);\r\n                    _alt = this._interp.adaptivePredict(this._input,70,this._ctx);\r\n                }\r\n         \r\n            }\r\n            this.state = 593;\r\n            this._errHandler.sync(this);\r\n            _alt = this._interp.adaptivePredict(this._input,71,this._ctx);\r\n        }\r\n\r\n    } catch( error) {\r\n        if(error instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = error;\r\n\t        this._errHandler.reportError(this, error);\r\n\t        this._errHandler.recover(this, error);\r\n\t    } else {\r\n\t    \tthrow error;\r\n\t    }\r\n    } finally {\r\n        this.unrollRecursionContexts(_parentctx)\r\n    }\r\n    return localctx;\r\n};\r\n\r\n\r\nfunction PostfixContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = TibboBasicParser.RULE_postfix;\r\n    return this;\r\n}\r\n\r\nPostfixContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nPostfixContext.prototype.constructor = PostfixContext;\r\n\r\nPostfixContext.prototype.argList = function() {\r\n    return this.getTypedRuleContext(ArgListContext,0);\r\n};\r\n\r\nPostfixContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.enterPostfix(this);\r\n\t}\r\n};\r\n\r\nPostfixContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.exitPostfix(this);\r\n\t}\r\n};\r\n\r\nPostfixContext.prototype.accept = function(visitor) {\r\n    if ( visitor instanceof TibboBasicParserVisitor ) {\r\n        return visitor.visitPostfix(this);\r\n    } else {\r\n        return visitor.visitChildren(this);\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nTibboBasicParser.PostfixContext = PostfixContext;\r\n\r\nTibboBasicParser.prototype.postfix = function() {\r\n\r\n    var localctx = new PostfixContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 84, TibboBasicParser.RULE_postfix);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 594;\r\n        this.argList();\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\n\r\nfunction PrimaryExpressionContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = TibboBasicParser.RULE_primaryExpression;\r\n    return this;\r\n}\r\n\r\nPrimaryExpressionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nPrimaryExpressionContext.prototype.constructor = PrimaryExpressionContext;\r\n\r\nPrimaryExpressionContext.prototype.literal = function() {\r\n    return this.getTypedRuleContext(LiteralContext,0);\r\n};\r\n\r\nPrimaryExpressionContext.prototype.LPAREN = function() {\r\n    return this.getToken(TibboBasicParser.LPAREN, 0);\r\n};\r\n\r\nPrimaryExpressionContext.prototype.expression = function() {\r\n    return this.getTypedRuleContext(ExpressionContext,0);\r\n};\r\n\r\nPrimaryExpressionContext.prototype.RPAREN = function() {\r\n    return this.getToken(TibboBasicParser.RPAREN, 0);\r\n};\r\n\r\nPrimaryExpressionContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.enterPrimaryExpression(this);\r\n\t}\r\n};\r\n\r\nPrimaryExpressionContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.exitPrimaryExpression(this);\r\n\t}\r\n};\r\n\r\nPrimaryExpressionContext.prototype.accept = function(visitor) {\r\n    if ( visitor instanceof TibboBasicParserVisitor ) {\r\n        return visitor.visitPrimaryExpression(this);\r\n    } else {\r\n        return visitor.visitChildren(this);\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nTibboBasicParser.PrimaryExpressionContext = PrimaryExpressionContext;\r\n\r\nTibboBasicParser.prototype.primaryExpression = function() {\r\n\r\n    var localctx = new PrimaryExpressionContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 86, TibboBasicParser.RULE_primaryExpression);\r\n    try {\r\n        this.state = 601;\r\n        this._errHandler.sync(this);\r\n        switch(this._input.LA(1)) {\r\n        case TibboBasicParser.FALSE:\r\n        case TibboBasicParser.TRUE:\r\n        case TibboBasicParser.STRINGLITERAL:\r\n        case TibboBasicParser.TemplateStringLiteral:\r\n        case TibboBasicParser.HEXLITERAL:\r\n        case TibboBasicParser.BINLITERAL:\r\n        case TibboBasicParser.INTEGERLITERAL:\r\n        case TibboBasicParser.MINUS:\r\n        case TibboBasicParser.PLUS:\r\n        case TibboBasicParser.IDENTIFIER:\r\n            this.enterOuterAlt(localctx, 1);\r\n            this.state = 596;\r\n            this.literal();\r\n            break;\r\n        case TibboBasicParser.LPAREN:\r\n            this.enterOuterAlt(localctx, 2);\r\n            this.state = 597;\r\n            this.match(TibboBasicParser.LPAREN);\r\n            this.state = 598;\r\n            this.expression(0);\r\n            this.state = 599;\r\n            this.match(TibboBasicParser.RPAREN);\r\n            break;\r\n        default:\r\n            throw new antlr4.error.NoViableAltException(this);\r\n        }\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\n\r\nfunction VariableStmtContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = TibboBasicParser.RULE_variableStmt;\r\n    return this;\r\n}\r\n\r\nVariableStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nVariableStmtContext.prototype.constructor = VariableStmtContext;\r\n\r\nVariableStmtContext.prototype.DIM = function() {\r\n    return this.getToken(TibboBasicParser.DIM, 0);\r\n};\r\n\r\nVariableStmtContext.prototype.variableListStmt = function() {\r\n    return this.getTypedRuleContext(VariableListStmtContext,0);\r\n};\r\n\r\nVariableStmtContext.prototype.visibility = function() {\r\n    return this.getTypedRuleContext(VisibilityContext,0);\r\n};\r\n\r\nVariableStmtContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.enterVariableStmt(this);\r\n\t}\r\n};\r\n\r\nVariableStmtContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.exitVariableStmt(this);\r\n\t}\r\n};\r\n\r\nVariableStmtContext.prototype.accept = function(visitor) {\r\n    if ( visitor instanceof TibboBasicParserVisitor ) {\r\n        return visitor.visitVariableStmt(this);\r\n    } else {\r\n        return visitor.visitChildren(this);\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nTibboBasicParser.VariableStmtContext = VariableStmtContext;\r\n\r\nTibboBasicParser.prototype.variableStmt = function() {\r\n\r\n    var localctx = new VariableStmtContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 88, TibboBasicParser.RULE_variableStmt);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 604;\r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        if(_la===TibboBasicParser.PUBLIC) {\r\n            this.state = 603;\r\n            this.visibility();\r\n        }\r\n\r\n        this.state = 606;\r\n        this.match(TibboBasicParser.DIM);\r\n        this.state = 607;\r\n        this.variableListStmt();\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\n\r\nfunction VariableListStmtContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = TibboBasicParser.RULE_variableListStmt;\r\n    this.variableType = null; // AsTypeClauseContext\r\n    return this;\r\n}\r\n\r\nVariableListStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nVariableListStmtContext.prototype.constructor = VariableListStmtContext;\r\n\r\nVariableListStmtContext.prototype.variableListItem = function(i) {\r\n    if(i===undefined) {\r\n        i = null;\r\n    }\r\n    if(i===null) {\r\n        return this.getTypedRuleContexts(VariableListItemContext);\r\n    } else {\r\n        return this.getTypedRuleContext(VariableListItemContext,i);\r\n    }\r\n};\r\n\r\nVariableListStmtContext.prototype.asTypeClause = function() {\r\n    return this.getTypedRuleContext(AsTypeClauseContext,0);\r\n};\r\n\r\nVariableListStmtContext.prototype.COMMA = function(i) {\r\n\tif(i===undefined) {\r\n\t\ti = null;\r\n\t}\r\n    if(i===null) {\r\n        return this.getTokens(TibboBasicParser.COMMA);\r\n    } else {\r\n        return this.getToken(TibboBasicParser.COMMA, i);\r\n    }\r\n};\r\n\r\n\r\nVariableListStmtContext.prototype.EQ = function() {\r\n    return this.getToken(TibboBasicParser.EQ, 0);\r\n};\r\n\r\nVariableListStmtContext.prototype.expression = function() {\r\n    return this.getTypedRuleContext(ExpressionContext,0);\r\n};\r\n\r\nVariableListStmtContext.prototype.arrayLiteral = function() {\r\n    return this.getTypedRuleContext(ArrayLiteralContext,0);\r\n};\r\n\r\nVariableListStmtContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.enterVariableListStmt(this);\r\n\t}\r\n};\r\n\r\nVariableListStmtContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.exitVariableListStmt(this);\r\n\t}\r\n};\r\n\r\nVariableListStmtContext.prototype.accept = function(visitor) {\r\n    if ( visitor instanceof TibboBasicParserVisitor ) {\r\n        return visitor.visitVariableListStmt(this);\r\n    } else {\r\n        return visitor.visitChildren(this);\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nTibboBasicParser.VariableListStmtContext = VariableListStmtContext;\r\n\r\nTibboBasicParser.prototype.variableListStmt = function() {\r\n\r\n    var localctx = new VariableListStmtContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 90, TibboBasicParser.RULE_variableListStmt);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 609;\r\n        this.variableListItem();\r\n        this.state = 616;\r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        while(_la===TibboBasicParser.COMMA) {\r\n            this.state = 610;\r\n            this.match(TibboBasicParser.COMMA);\r\n            this.state = 612;\r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n            if(_la===TibboBasicParser.IDENTIFIER) {\r\n                this.state = 611;\r\n                this.variableListItem();\r\n            }\r\n\r\n            this.state = 618;\r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n        }\r\n        this.state = 619;\r\n        localctx.variableType = this.asTypeClause();\r\n        this.state = 625;\r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        if(_la===TibboBasicParser.EQ) {\r\n            this.state = 620;\r\n            this.match(TibboBasicParser.EQ);\r\n            this.state = 623;\r\n            this._errHandler.sync(this);\r\n            switch(this._input.LA(1)) {\r\n            case TibboBasicParser.FALSE:\r\n            case TibboBasicParser.NOT:\r\n            case TibboBasicParser.TRUE:\r\n            case TibboBasicParser.STRINGLITERAL:\r\n            case TibboBasicParser.TemplateStringLiteral:\r\n            case TibboBasicParser.HEXLITERAL:\r\n            case TibboBasicParser.BINLITERAL:\r\n            case TibboBasicParser.INTEGERLITERAL:\r\n            case TibboBasicParser.LPAREN:\r\n            case TibboBasicParser.MINUS:\r\n            case TibboBasicParser.PLUS:\r\n            case TibboBasicParser.IDENTIFIER:\r\n                this.state = 621;\r\n                this.expression(0);\r\n                break;\r\n            case TibboBasicParser.L_CURLY_BRACKET:\r\n                this.state = 622;\r\n                this.arrayLiteral();\r\n                break;\r\n            default:\r\n                throw new antlr4.error.NoViableAltException(this);\r\n            }\r\n        }\r\n\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\n\r\nfunction VariableListItemContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = TibboBasicParser.RULE_variableListItem;\r\n    return this;\r\n}\r\n\r\nVariableListItemContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nVariableListItemContext.prototype.constructor = VariableListItemContext;\r\n\r\nVariableListItemContext.prototype.IDENTIFIER = function() {\r\n    return this.getToken(TibboBasicParser.IDENTIFIER, 0);\r\n};\r\n\r\nVariableListItemContext.prototype.LPAREN = function() {\r\n    return this.getToken(TibboBasicParser.LPAREN, 0);\r\n};\r\n\r\nVariableListItemContext.prototype.literal = function() {\r\n    return this.getTypedRuleContext(LiteralContext,0);\r\n};\r\n\r\nVariableListItemContext.prototype.RPAREN = function() {\r\n    return this.getToken(TibboBasicParser.RPAREN, 0);\r\n};\r\n\r\nVariableListItemContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.enterVariableListItem(this);\r\n\t}\r\n};\r\n\r\nVariableListItemContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.exitVariableListItem(this);\r\n\t}\r\n};\r\n\r\nVariableListItemContext.prototype.accept = function(visitor) {\r\n    if ( visitor instanceof TibboBasicParserVisitor ) {\r\n        return visitor.visitVariableListItem(this);\r\n    } else {\r\n        return visitor.visitChildren(this);\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nTibboBasicParser.VariableListItemContext = VariableListItemContext;\r\n\r\nTibboBasicParser.prototype.variableListItem = function() {\r\n\r\n    var localctx = new VariableListItemContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 92, TibboBasicParser.RULE_variableListItem);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 627;\r\n        this.match(TibboBasicParser.IDENTIFIER);\r\n        this.state = 632;\r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        if(_la===TibboBasicParser.LPAREN) {\r\n            this.state = 628;\r\n            this.match(TibboBasicParser.LPAREN);\r\n            this.state = 629;\r\n            this.literal();\r\n            this.state = 630;\r\n            this.match(TibboBasicParser.RPAREN);\r\n        }\r\n\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\n\r\nfunction WhileWendStmtContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = TibboBasicParser.RULE_whileWendStmt;\r\n    return this;\r\n}\r\n\r\nWhileWendStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nWhileWendStmtContext.prototype.constructor = WhileWendStmtContext;\r\n\r\nWhileWendStmtContext.prototype.WHILE = function() {\r\n    return this.getToken(TibboBasicParser.WHILE, 0);\r\n};\r\n\r\nWhileWendStmtContext.prototype.expression = function() {\r\n    return this.getTypedRuleContext(ExpressionContext,0);\r\n};\r\n\r\nWhileWendStmtContext.prototype.block = function() {\r\n    return this.getTypedRuleContext(BlockContext,0);\r\n};\r\n\r\nWhileWendStmtContext.prototype.WEND = function() {\r\n    return this.getToken(TibboBasicParser.WEND, 0);\r\n};\r\n\r\nWhileWendStmtContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.enterWhileWendStmt(this);\r\n\t}\r\n};\r\n\r\nWhileWendStmtContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.exitWhileWendStmt(this);\r\n\t}\r\n};\r\n\r\nWhileWendStmtContext.prototype.accept = function(visitor) {\r\n    if ( visitor instanceof TibboBasicParserVisitor ) {\r\n        return visitor.visitWhileWendStmt(this);\r\n    } else {\r\n        return visitor.visitChildren(this);\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nTibboBasicParser.WhileWendStmtContext = WhileWendStmtContext;\r\n\r\nTibboBasicParser.prototype.whileWendStmt = function() {\r\n\r\n    var localctx = new WhileWendStmtContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 94, TibboBasicParser.RULE_whileWendStmt);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 634;\r\n        this.match(TibboBasicParser.WHILE);\r\n        this.state = 635;\r\n        this.expression(0);\r\n        this.state = 636;\r\n        this.block();\r\n        this.state = 637;\r\n        this.match(TibboBasicParser.WEND);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\n\r\nfunction ObjectDeclarationContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = TibboBasicParser.RULE_objectDeclaration;\r\n    return this;\r\n}\r\n\r\nObjectDeclarationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nObjectDeclarationContext.prototype.constructor = ObjectDeclarationContext;\r\n\r\nObjectDeclarationContext.prototype.OBJECT = function() {\r\n    return this.getToken(TibboBasicParser.OBJECT, 0);\r\n};\r\n\r\nObjectDeclarationContext.prototype.IDENTIFIER = function() {\r\n    return this.getToken(TibboBasicParser.IDENTIFIER, 0);\r\n};\r\n\r\nObjectDeclarationContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.enterObjectDeclaration(this);\r\n\t}\r\n};\r\n\r\nObjectDeclarationContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.exitObjectDeclaration(this);\r\n\t}\r\n};\r\n\r\nObjectDeclarationContext.prototype.accept = function(visitor) {\r\n    if ( visitor instanceof TibboBasicParserVisitor ) {\r\n        return visitor.visitObjectDeclaration(this);\r\n    } else {\r\n        return visitor.visitChildren(this);\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nTibboBasicParser.ObjectDeclarationContext = ObjectDeclarationContext;\r\n\r\nTibboBasicParser.prototype.objectDeclaration = function() {\r\n\r\n    var localctx = new ObjectDeclarationContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 96, TibboBasicParser.RULE_objectDeclaration);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 639;\r\n        this.match(TibboBasicParser.OBJECT);\r\n        this.state = 640;\r\n        this.match(TibboBasicParser.IDENTIFIER);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\n\r\nfunction ArgListContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = TibboBasicParser.RULE_argList;\r\n    return this;\r\n}\r\n\r\nArgListContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nArgListContext.prototype.constructor = ArgListContext;\r\n\r\nArgListContext.prototype.LPAREN = function() {\r\n    return this.getToken(TibboBasicParser.LPAREN, 0);\r\n};\r\n\r\nArgListContext.prototype.RPAREN = function() {\r\n    return this.getToken(TibboBasicParser.RPAREN, 0);\r\n};\r\n\r\nArgListContext.prototype.arg = function(i) {\r\n    if(i===undefined) {\r\n        i = null;\r\n    }\r\n    if(i===null) {\r\n        return this.getTypedRuleContexts(ArgContext);\r\n    } else {\r\n        return this.getTypedRuleContext(ArgContext,i);\r\n    }\r\n};\r\n\r\nArgListContext.prototype.COMMA = function(i) {\r\n\tif(i===undefined) {\r\n\t\ti = null;\r\n\t}\r\n    if(i===null) {\r\n        return this.getTokens(TibboBasicParser.COMMA);\r\n    } else {\r\n        return this.getToken(TibboBasicParser.COMMA, i);\r\n    }\r\n};\r\n\r\n\r\nArgListContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.enterArgList(this);\r\n\t}\r\n};\r\n\r\nArgListContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.exitArgList(this);\r\n\t}\r\n};\r\n\r\nArgListContext.prototype.accept = function(visitor) {\r\n    if ( visitor instanceof TibboBasicParserVisitor ) {\r\n        return visitor.visitArgList(this);\r\n    } else {\r\n        return visitor.visitChildren(this);\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nTibboBasicParser.ArgListContext = ArgListContext;\r\n\r\nTibboBasicParser.prototype.argList = function() {\r\n\r\n    var localctx = new ArgListContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 98, TibboBasicParser.RULE_argList);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 642;\r\n        this.match(TibboBasicParser.LPAREN);\r\n        this.state = 651;\r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        if(((((_la - 38)) & ~0x1f) == 0 && ((1 << (_la - 38)) & ((1 << (TibboBasicParser.FALSE - 38)) | (1 << (TibboBasicParser.NOT - 38)) | (1 << (TibboBasicParser.TRUE - 38)))) !== 0) || ((((_la - 78)) & ~0x1f) == 0 && ((1 << (_la - 78)) & ((1 << (TibboBasicParser.STRINGLITERAL - 78)) | (1 << (TibboBasicParser.TemplateStringLiteral - 78)) | (1 << (TibboBasicParser.HEXLITERAL - 78)) | (1 << (TibboBasicParser.BINLITERAL - 78)) | (1 << (TibboBasicParser.INTEGERLITERAL - 78)) | (1 << (TibboBasicParser.LPAREN - 78)) | (1 << (TibboBasicParser.MINUS - 78)) | (1 << (TibboBasicParser.PLUS - 78)))) !== 0) || _la===TibboBasicParser.IDENTIFIER) {\r\n            this.state = 643;\r\n            this.arg();\r\n            this.state = 648;\r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n            while(_la===TibboBasicParser.COMMA) {\r\n                this.state = 644;\r\n                this.match(TibboBasicParser.COMMA);\r\n                this.state = 645;\r\n                this.arg();\r\n                this.state = 650;\r\n                this._errHandler.sync(this);\r\n                _la = this._input.LA(1);\r\n            }\r\n        }\r\n\r\n        this.state = 653;\r\n        this.match(TibboBasicParser.RPAREN);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\n\r\nfunction ArgContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = TibboBasicParser.RULE_arg;\r\n    return this;\r\n}\r\n\r\nArgContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nArgContext.prototype.constructor = ArgContext;\r\n\r\nArgContext.prototype.expression = function() {\r\n    return this.getTypedRuleContext(ExpressionContext,0);\r\n};\r\n\r\nArgContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.enterArg(this);\r\n\t}\r\n};\r\n\r\nArgContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.exitArg(this);\r\n\t}\r\n};\r\n\r\nArgContext.prototype.accept = function(visitor) {\r\n    if ( visitor instanceof TibboBasicParserVisitor ) {\r\n        return visitor.visitArg(this);\r\n    } else {\r\n        return visitor.visitChildren(this);\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nTibboBasicParser.ArgContext = ArgContext;\r\n\r\nTibboBasicParser.prototype.arg = function() {\r\n\r\n    var localctx = new ArgContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 100, TibboBasicParser.RULE_arg);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 655;\r\n        this.expression(0);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\n\r\nfunction ParamListContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = TibboBasicParser.RULE_paramList;\r\n    return this;\r\n}\r\n\r\nParamListContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nParamListContext.prototype.constructor = ParamListContext;\r\n\r\nParamListContext.prototype.LPAREN = function() {\r\n    return this.getToken(TibboBasicParser.LPAREN, 0);\r\n};\r\n\r\nParamListContext.prototype.RPAREN = function() {\r\n    return this.getToken(TibboBasicParser.RPAREN, 0);\r\n};\r\n\r\nParamListContext.prototype.param = function(i) {\r\n    if(i===undefined) {\r\n        i = null;\r\n    }\r\n    if(i===null) {\r\n        return this.getTypedRuleContexts(ParamContext);\r\n    } else {\r\n        return this.getTypedRuleContext(ParamContext,i);\r\n    }\r\n};\r\n\r\nParamListContext.prototype.COMMA = function(i) {\r\n\tif(i===undefined) {\r\n\t\ti = null;\r\n\t}\r\n    if(i===null) {\r\n        return this.getTokens(TibboBasicParser.COMMA);\r\n    } else {\r\n        return this.getToken(TibboBasicParser.COMMA, i);\r\n    }\r\n};\r\n\r\n\r\nParamListContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.enterParamList(this);\r\n\t}\r\n};\r\n\r\nParamListContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.exitParamList(this);\r\n\t}\r\n};\r\n\r\nParamListContext.prototype.accept = function(visitor) {\r\n    if ( visitor instanceof TibboBasicParserVisitor ) {\r\n        return visitor.visitParamList(this);\r\n    } else {\r\n        return visitor.visitChildren(this);\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nTibboBasicParser.ParamListContext = ParamListContext;\r\n\r\nTibboBasicParser.prototype.paramList = function() {\r\n\r\n    var localctx = new ParamListContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 102, TibboBasicParser.RULE_paramList);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 657;\r\n        this.match(TibboBasicParser.LPAREN);\r\n        this.state = 666;\r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        if(_la===TibboBasicParser.BYREF || _la===TibboBasicParser.BYVAL || _la===TibboBasicParser.IDENTIFIER) {\r\n            this.state = 658;\r\n            this.param();\r\n            this.state = 663;\r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n            while(_la===TibboBasicParser.COMMA) {\r\n                this.state = 659;\r\n                this.match(TibboBasicParser.COMMA);\r\n                this.state = 660;\r\n                this.param();\r\n                this.state = 665;\r\n                this._errHandler.sync(this);\r\n                _la = this._input.LA(1);\r\n            }\r\n        }\r\n\r\n        this.state = 668;\r\n        this.match(TibboBasicParser.RPAREN);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\n\r\nfunction ParamContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = TibboBasicParser.RULE_param;\r\n    this.name = null; // Token\r\n    this.valueType = null; // AsTypeClauseContext\r\n    return this;\r\n}\r\n\r\nParamContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nParamContext.prototype.constructor = ParamContext;\r\n\r\nParamContext.prototype.IDENTIFIER = function() {\r\n    return this.getToken(TibboBasicParser.IDENTIFIER, 0);\r\n};\r\n\r\nParamContext.prototype.LPAREN = function() {\r\n    return this.getToken(TibboBasicParser.LPAREN, 0);\r\n};\r\n\r\nParamContext.prototype.INTEGERLITERAL = function() {\r\n    return this.getToken(TibboBasicParser.INTEGERLITERAL, 0);\r\n};\r\n\r\nParamContext.prototype.RPAREN = function() {\r\n    return this.getToken(TibboBasicParser.RPAREN, 0);\r\n};\r\n\r\nParamContext.prototype.BYVAL = function() {\r\n    return this.getToken(TibboBasicParser.BYVAL, 0);\r\n};\r\n\r\nParamContext.prototype.BYREF = function() {\r\n    return this.getToken(TibboBasicParser.BYREF, 0);\r\n};\r\n\r\nParamContext.prototype.asTypeClause = function() {\r\n    return this.getTypedRuleContext(AsTypeClauseContext,0);\r\n};\r\n\r\nParamContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.enterParam(this);\r\n\t}\r\n};\r\n\r\nParamContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.exitParam(this);\r\n\t}\r\n};\r\n\r\nParamContext.prototype.accept = function(visitor) {\r\n    if ( visitor instanceof TibboBasicParserVisitor ) {\r\n        return visitor.visitParam(this);\r\n    } else {\r\n        return visitor.visitChildren(this);\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nTibboBasicParser.ParamContext = ParamContext;\r\n\r\nTibboBasicParser.prototype.param = function() {\r\n\r\n    var localctx = new ParamContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 104, TibboBasicParser.RULE_param);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 671;\r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        if(_la===TibboBasicParser.BYREF || _la===TibboBasicParser.BYVAL) {\r\n            this.state = 670;\r\n            _la = this._input.LA(1);\r\n            if(!(_la===TibboBasicParser.BYREF || _la===TibboBasicParser.BYVAL)) {\r\n            this._errHandler.recoverInline(this);\r\n            }\r\n            else {\r\n            \tthis._errHandler.reportMatch(this);\r\n                this.consume();\r\n            }\r\n        }\r\n\r\n        this.state = 673;\r\n        localctx.name = this.match(TibboBasicParser.IDENTIFIER);\r\n        this.state = 677;\r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        if(_la===TibboBasicParser.LPAREN) {\r\n            this.state = 674;\r\n            this.match(TibboBasicParser.LPAREN);\r\n            this.state = 675;\r\n            this.match(TibboBasicParser.INTEGERLITERAL);\r\n            this.state = 676;\r\n            this.match(TibboBasicParser.RPAREN);\r\n        }\r\n\r\n        this.state = 680;\r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        if(_la===TibboBasicParser.AS) {\r\n            this.state = 679;\r\n            localctx.valueType = this.asTypeClause();\r\n        }\r\n\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\n\r\nfunction AsTypeClauseContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = TibboBasicParser.RULE_asTypeClause;\r\n    this.valueType = null; // TypeContext\r\n    return this;\r\n}\r\n\r\nAsTypeClauseContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nAsTypeClauseContext.prototype.constructor = AsTypeClauseContext;\r\n\r\nAsTypeClauseContext.prototype.AS = function() {\r\n    return this.getToken(TibboBasicParser.AS, 0);\r\n};\r\n\r\nAsTypeClauseContext.prototype.type = function() {\r\n    return this.getTypedRuleContext(TypeContext,0);\r\n};\r\n\r\nAsTypeClauseContext.prototype.ENUM = function() {\r\n    return this.getToken(TibboBasicParser.ENUM, 0);\r\n};\r\n\r\nAsTypeClauseContext.prototype.fieldLength = function() {\r\n    return this.getTypedRuleContext(FieldLengthContext,0);\r\n};\r\n\r\nAsTypeClauseContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.enterAsTypeClause(this);\r\n\t}\r\n};\r\n\r\nAsTypeClauseContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.exitAsTypeClause(this);\r\n\t}\r\n};\r\n\r\nAsTypeClauseContext.prototype.accept = function(visitor) {\r\n    if ( visitor instanceof TibboBasicParserVisitor ) {\r\n        return visitor.visitAsTypeClause(this);\r\n    } else {\r\n        return visitor.visitChildren(this);\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nTibboBasicParser.AsTypeClauseContext = AsTypeClauseContext;\r\n\r\nTibboBasicParser.prototype.asTypeClause = function() {\r\n\r\n    var localctx = new AsTypeClauseContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 106, TibboBasicParser.RULE_asTypeClause);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 682;\r\n        this.match(TibboBasicParser.AS);\r\n        this.state = 684;\r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        if(_la===TibboBasicParser.ENUM) {\r\n            this.state = 683;\r\n            this.match(TibboBasicParser.ENUM);\r\n        }\r\n\r\n        this.state = 686;\r\n        localctx.valueType = this.type();\r\n        this.state = 688;\r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        if(_la===TibboBasicParser.MULT) {\r\n            this.state = 687;\r\n            this.fieldLength();\r\n        }\r\n\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\n\r\nfunction BaseTypeContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = TibboBasicParser.RULE_baseType;\r\n    return this;\r\n}\r\n\r\nBaseTypeContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nBaseTypeContext.prototype.constructor = BaseTypeContext;\r\n\r\nBaseTypeContext.prototype.CHAR = function() {\r\n    return this.getToken(TibboBasicParser.CHAR, 0);\r\n};\r\n\r\nBaseTypeContext.prototype.SHORT = function() {\r\n    return this.getToken(TibboBasicParser.SHORT, 0);\r\n};\r\n\r\nBaseTypeContext.prototype.WORD = function() {\r\n    return this.getToken(TibboBasicParser.WORD, 0);\r\n};\r\n\r\nBaseTypeContext.prototype.DWORD = function() {\r\n    return this.getToken(TibboBasicParser.DWORD, 0);\r\n};\r\n\r\nBaseTypeContext.prototype.FLOAT = function() {\r\n    return this.getToken(TibboBasicParser.FLOAT, 0);\r\n};\r\n\r\nBaseTypeContext.prototype.REAL = function() {\r\n    return this.getToken(TibboBasicParser.REAL, 0);\r\n};\r\n\r\nBaseTypeContext.prototype.BOOLEAN = function() {\r\n    return this.getToken(TibboBasicParser.BOOLEAN, 0);\r\n};\r\n\r\nBaseTypeContext.prototype.BYTE = function() {\r\n    return this.getToken(TibboBasicParser.BYTE, 0);\r\n};\r\n\r\nBaseTypeContext.prototype.INTEGER = function() {\r\n    return this.getToken(TibboBasicParser.INTEGER, 0);\r\n};\r\n\r\nBaseTypeContext.prototype.LONG = function() {\r\n    return this.getToken(TibboBasicParser.LONG, 0);\r\n};\r\n\r\nBaseTypeContext.prototype.STRING = function() {\r\n    return this.getToken(TibboBasicParser.STRING, 0);\r\n};\r\n\r\nBaseTypeContext.prototype.MULT = function() {\r\n    return this.getToken(TibboBasicParser.MULT, 0);\r\n};\r\n\r\nBaseTypeContext.prototype.expression = function() {\r\n    return this.getTypedRuleContext(ExpressionContext,0);\r\n};\r\n\r\nBaseTypeContext.prototype.WS = function(i) {\r\n\tif(i===undefined) {\r\n\t\ti = null;\r\n\t}\r\n    if(i===null) {\r\n        return this.getTokens(TibboBasicParser.WS);\r\n    } else {\r\n        return this.getToken(TibboBasicParser.WS, i);\r\n    }\r\n};\r\n\r\n\r\nBaseTypeContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.enterBaseType(this);\r\n\t}\r\n};\r\n\r\nBaseTypeContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.exitBaseType(this);\r\n\t}\r\n};\r\n\r\nBaseTypeContext.prototype.accept = function(visitor) {\r\n    if ( visitor instanceof TibboBasicParserVisitor ) {\r\n        return visitor.visitBaseType(this);\r\n    } else {\r\n        return visitor.visitChildren(this);\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nTibboBasicParser.BaseTypeContext = BaseTypeContext;\r\n\r\nTibboBasicParser.prototype.baseType = function() {\r\n\r\n    var localctx = new BaseTypeContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 108, TibboBasicParser.RULE_baseType);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.state = 711;\r\n        this._errHandler.sync(this);\r\n        switch(this._input.LA(1)) {\r\n        case TibboBasicParser.CHAR:\r\n            this.enterOuterAlt(localctx, 1);\r\n            this.state = 690;\r\n            this.match(TibboBasicParser.CHAR);\r\n            break;\r\n        case TibboBasicParser.SHORT:\r\n            this.enterOuterAlt(localctx, 2);\r\n            this.state = 691;\r\n            this.match(TibboBasicParser.SHORT);\r\n            break;\r\n        case TibboBasicParser.WORD:\r\n            this.enterOuterAlt(localctx, 3);\r\n            this.state = 692;\r\n            this.match(TibboBasicParser.WORD);\r\n            break;\r\n        case TibboBasicParser.DWORD:\r\n            this.enterOuterAlt(localctx, 4);\r\n            this.state = 693;\r\n            this.match(TibboBasicParser.DWORD);\r\n            break;\r\n        case TibboBasicParser.FLOAT:\r\n            this.enterOuterAlt(localctx, 5);\r\n            this.state = 694;\r\n            this.match(TibboBasicParser.FLOAT);\r\n            break;\r\n        case TibboBasicParser.REAL:\r\n            this.enterOuterAlt(localctx, 6);\r\n            this.state = 695;\r\n            this.match(TibboBasicParser.REAL);\r\n            break;\r\n        case TibboBasicParser.BOOLEAN:\r\n            this.enterOuterAlt(localctx, 7);\r\n            this.state = 696;\r\n            this.match(TibboBasicParser.BOOLEAN);\r\n            break;\r\n        case TibboBasicParser.BYTE:\r\n            this.enterOuterAlt(localctx, 8);\r\n            this.state = 697;\r\n            this.match(TibboBasicParser.BYTE);\r\n            break;\r\n        case TibboBasicParser.INTEGER:\r\n            this.enterOuterAlt(localctx, 9);\r\n            this.state = 698;\r\n            this.match(TibboBasicParser.INTEGER);\r\n            break;\r\n        case TibboBasicParser.LONG:\r\n            this.enterOuterAlt(localctx, 10);\r\n            this.state = 699;\r\n            this.match(TibboBasicParser.LONG);\r\n            break;\r\n        case TibboBasicParser.STRING:\r\n            this.enterOuterAlt(localctx, 11);\r\n            this.state = 700;\r\n            this.match(TibboBasicParser.STRING);\r\n            this.state = 709;\r\n            this._errHandler.sync(this);\r\n            var la_ = this._interp.adaptivePredict(this._input,90,this._ctx);\r\n            if(la_===1) {\r\n                this.state = 702;\r\n                this._errHandler.sync(this);\r\n                _la = this._input.LA(1);\r\n                if(_la===TibboBasicParser.WS) {\r\n                    this.state = 701;\r\n                    this.match(TibboBasicParser.WS);\r\n                }\r\n\r\n                this.state = 704;\r\n                this.match(TibboBasicParser.MULT);\r\n                this.state = 706;\r\n                this._errHandler.sync(this);\r\n                _la = this._input.LA(1);\r\n                if(_la===TibboBasicParser.WS) {\r\n                    this.state = 705;\r\n                    this.match(TibboBasicParser.WS);\r\n                }\r\n\r\n                this.state = 708;\r\n                this.expression(0);\r\n\r\n            }\r\n            break;\r\n        default:\r\n            throw new antlr4.error.NoViableAltException(this);\r\n        }\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\n\r\nfunction ComplexTypeContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = TibboBasicParser.RULE_complexType;\r\n    return this;\r\n}\r\n\r\nComplexTypeContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nComplexTypeContext.prototype.constructor = ComplexTypeContext;\r\n\r\nComplexTypeContext.prototype.IDENTIFIER = function(i) {\r\n\tif(i===undefined) {\r\n\t\ti = null;\r\n\t}\r\n    if(i===null) {\r\n        return this.getTokens(TibboBasicParser.IDENTIFIER);\r\n    } else {\r\n        return this.getToken(TibboBasicParser.IDENTIFIER, i);\r\n    }\r\n};\r\n\r\n\r\nComplexTypeContext.prototype.DOT = function(i) {\r\n\tif(i===undefined) {\r\n\t\ti = null;\r\n\t}\r\n    if(i===null) {\r\n        return this.getTokens(TibboBasicParser.DOT);\r\n    } else {\r\n        return this.getToken(TibboBasicParser.DOT, i);\r\n    }\r\n};\r\n\r\n\r\nComplexTypeContext.prototype.BANG = function(i) {\r\n\tif(i===undefined) {\r\n\t\ti = null;\r\n\t}\r\n    if(i===null) {\r\n        return this.getTokens(TibboBasicParser.BANG);\r\n    } else {\r\n        return this.getToken(TibboBasicParser.BANG, i);\r\n    }\r\n};\r\n\r\n\r\nComplexTypeContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.enterComplexType(this);\r\n\t}\r\n};\r\n\r\nComplexTypeContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.exitComplexType(this);\r\n\t}\r\n};\r\n\r\nComplexTypeContext.prototype.accept = function(visitor) {\r\n    if ( visitor instanceof TibboBasicParserVisitor ) {\r\n        return visitor.visitComplexType(this);\r\n    } else {\r\n        return visitor.visitChildren(this);\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nTibboBasicParser.ComplexTypeContext = ComplexTypeContext;\r\n\r\nTibboBasicParser.prototype.complexType = function() {\r\n\r\n    var localctx = new ComplexTypeContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 110, TibboBasicParser.RULE_complexType);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 713;\r\n        this.match(TibboBasicParser.IDENTIFIER);\r\n        this.state = 718;\r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        while(_la===TibboBasicParser.DOT || _la===TibboBasicParser.BANG) {\r\n            this.state = 714;\r\n            _la = this._input.LA(1);\r\n            if(!(_la===TibboBasicParser.DOT || _la===TibboBasicParser.BANG)) {\r\n            this._errHandler.recoverInline(this);\r\n            }\r\n            else {\r\n            \tthis._errHandler.reportMatch(this);\r\n                this.consume();\r\n            }\r\n            this.state = 715;\r\n            this.match(TibboBasicParser.IDENTIFIER);\r\n            this.state = 720;\r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n        }\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\n\r\nfunction FieldLengthContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = TibboBasicParser.RULE_fieldLength;\r\n    return this;\r\n}\r\n\r\nFieldLengthContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nFieldLengthContext.prototype.constructor = FieldLengthContext;\r\n\r\nFieldLengthContext.prototype.MULT = function() {\r\n    return this.getToken(TibboBasicParser.MULT, 0);\r\n};\r\n\r\nFieldLengthContext.prototype.INTEGERLITERAL = function() {\r\n    return this.getToken(TibboBasicParser.INTEGERLITERAL, 0);\r\n};\r\n\r\nFieldLengthContext.prototype.IDENTIFIER = function() {\r\n    return this.getToken(TibboBasicParser.IDENTIFIER, 0);\r\n};\r\n\r\nFieldLengthContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.enterFieldLength(this);\r\n\t}\r\n};\r\n\r\nFieldLengthContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.exitFieldLength(this);\r\n\t}\r\n};\r\n\r\nFieldLengthContext.prototype.accept = function(visitor) {\r\n    if ( visitor instanceof TibboBasicParserVisitor ) {\r\n        return visitor.visitFieldLength(this);\r\n    } else {\r\n        return visitor.visitChildren(this);\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nTibboBasicParser.FieldLengthContext = FieldLengthContext;\r\n\r\nTibboBasicParser.prototype.fieldLength = function() {\r\n\r\n    var localctx = new FieldLengthContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 112, TibboBasicParser.RULE_fieldLength);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 721;\r\n        this.match(TibboBasicParser.MULT);\r\n        this.state = 722;\r\n        _la = this._input.LA(1);\r\n        if(!(_la===TibboBasicParser.INTEGERLITERAL || _la===TibboBasicParser.IDENTIFIER)) {\r\n        this._errHandler.recoverInline(this);\r\n        }\r\n        else {\r\n        \tthis._errHandler.reportMatch(this);\r\n            this.consume();\r\n        }\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\n\r\nfunction LineLabelContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = TibboBasicParser.RULE_lineLabel;\r\n    return this;\r\n}\r\n\r\nLineLabelContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nLineLabelContext.prototype.constructor = LineLabelContext;\r\n\r\nLineLabelContext.prototype.IDENTIFIER = function() {\r\n    return this.getToken(TibboBasicParser.IDENTIFIER, 0);\r\n};\r\n\r\nLineLabelContext.prototype.COLON = function() {\r\n    return this.getToken(TibboBasicParser.COLON, 0);\r\n};\r\n\r\nLineLabelContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.enterLineLabel(this);\r\n\t}\r\n};\r\n\r\nLineLabelContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.exitLineLabel(this);\r\n\t}\r\n};\r\n\r\nLineLabelContext.prototype.accept = function(visitor) {\r\n    if ( visitor instanceof TibboBasicParserVisitor ) {\r\n        return visitor.visitLineLabel(this);\r\n    } else {\r\n        return visitor.visitChildren(this);\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nTibboBasicParser.LineLabelContext = LineLabelContext;\r\n\r\nTibboBasicParser.prototype.lineLabel = function() {\r\n\r\n    var localctx = new LineLabelContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 114, TibboBasicParser.RULE_lineLabel);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 724;\r\n        this.match(TibboBasicParser.IDENTIFIER);\r\n        this.state = 725;\r\n        this.match(TibboBasicParser.COLON);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\n\r\nfunction LiteralContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = TibboBasicParser.RULE_literal;\r\n    return this;\r\n}\r\n\r\nLiteralContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nLiteralContext.prototype.constructor = LiteralContext;\r\n\r\nLiteralContext.prototype.HEXLITERAL = function() {\r\n    return this.getToken(TibboBasicParser.HEXLITERAL, 0);\r\n};\r\n\r\nLiteralContext.prototype.BINLITERAL = function() {\r\n    return this.getToken(TibboBasicParser.BINLITERAL, 0);\r\n};\r\n\r\nLiteralContext.prototype.INTEGERLITERAL = function(i) {\r\n\tif(i===undefined) {\r\n\t\ti = null;\r\n\t}\r\n    if(i===null) {\r\n        return this.getTokens(TibboBasicParser.INTEGERLITERAL);\r\n    } else {\r\n        return this.getToken(TibboBasicParser.INTEGERLITERAL, i);\r\n    }\r\n};\r\n\r\n\r\nLiteralContext.prototype.DOT = function() {\r\n    return this.getToken(TibboBasicParser.DOT, 0);\r\n};\r\n\r\nLiteralContext.prototype.PLUS = function() {\r\n    return this.getToken(TibboBasicParser.PLUS, 0);\r\n};\r\n\r\nLiteralContext.prototype.MINUS = function() {\r\n    return this.getToken(TibboBasicParser.MINUS, 0);\r\n};\r\n\r\nLiteralContext.prototype.STRINGLITERAL = function() {\r\n    return this.getToken(TibboBasicParser.STRINGLITERAL, 0);\r\n};\r\n\r\nLiteralContext.prototype.TemplateStringLiteral = function() {\r\n    return this.getToken(TibboBasicParser.TemplateStringLiteral, 0);\r\n};\r\n\r\nLiteralContext.prototype.TRUE = function() {\r\n    return this.getToken(TibboBasicParser.TRUE, 0);\r\n};\r\n\r\nLiteralContext.prototype.FALSE = function() {\r\n    return this.getToken(TibboBasicParser.FALSE, 0);\r\n};\r\n\r\nLiteralContext.prototype.IDENTIFIER = function() {\r\n    return this.getToken(TibboBasicParser.IDENTIFIER, 0);\r\n};\r\n\r\nLiteralContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.enterLiteral(this);\r\n\t}\r\n};\r\n\r\nLiteralContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.exitLiteral(this);\r\n\t}\r\n};\r\n\r\nLiteralContext.prototype.accept = function(visitor) {\r\n    if ( visitor instanceof TibboBasicParserVisitor ) {\r\n        return visitor.visitLiteral(this);\r\n    } else {\r\n        return visitor.visitChildren(this);\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nTibboBasicParser.LiteralContext = LiteralContext;\r\n\r\nTibboBasicParser.prototype.literal = function() {\r\n\r\n    var localctx = new LiteralContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 116, TibboBasicParser.RULE_literal);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.state = 746;\r\n        this._errHandler.sync(this);\r\n        switch(this._input.LA(1)) {\r\n        case TibboBasicParser.HEXLITERAL:\r\n            this.enterOuterAlt(localctx, 1);\r\n            this.state = 727;\r\n            this.match(TibboBasicParser.HEXLITERAL);\r\n            break;\r\n        case TibboBasicParser.BINLITERAL:\r\n            this.enterOuterAlt(localctx, 2);\r\n            this.state = 728;\r\n            this.match(TibboBasicParser.BINLITERAL);\r\n            break;\r\n        case TibboBasicParser.INTEGERLITERAL:\r\n        case TibboBasicParser.MINUS:\r\n        case TibboBasicParser.PLUS:\r\n            this.enterOuterAlt(localctx, 3);\r\n            this.state = 730;\r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n            if(_la===TibboBasicParser.MINUS || _la===TibboBasicParser.PLUS) {\r\n                this.state = 729;\r\n                _la = this._input.LA(1);\r\n                if(!(_la===TibboBasicParser.MINUS || _la===TibboBasicParser.PLUS)) {\r\n                this._errHandler.recoverInline(this);\r\n                }\r\n                else {\r\n                \tthis._errHandler.reportMatch(this);\r\n                    this.consume();\r\n                }\r\n            }\r\n\r\n            this.state = 738;\r\n            this._errHandler.sync(this);\r\n            var la_ = this._interp.adaptivePredict(this._input,95,this._ctx);\r\n            if(la_===1) {\r\n                this.state = 733; \r\n                this._errHandler.sync(this);\r\n                _la = this._input.LA(1);\r\n                do {\r\n                    this.state = 732;\r\n                    this.match(TibboBasicParser.INTEGERLITERAL);\r\n                    this.state = 735; \r\n                    this._errHandler.sync(this);\r\n                    _la = this._input.LA(1);\r\n                } while(_la===TibboBasicParser.INTEGERLITERAL);\r\n                this.state = 737;\r\n                this.match(TibboBasicParser.DOT);\r\n\r\n            }\r\n            this.state = 740;\r\n            this.match(TibboBasicParser.INTEGERLITERAL);\r\n            break;\r\n        case TibboBasicParser.STRINGLITERAL:\r\n            this.enterOuterAlt(localctx, 4);\r\n            this.state = 741;\r\n            this.match(TibboBasicParser.STRINGLITERAL);\r\n            break;\r\n        case TibboBasicParser.TemplateStringLiteral:\r\n            this.enterOuterAlt(localctx, 5);\r\n            this.state = 742;\r\n            this.match(TibboBasicParser.TemplateStringLiteral);\r\n            break;\r\n        case TibboBasicParser.TRUE:\r\n            this.enterOuterAlt(localctx, 6);\r\n            this.state = 743;\r\n            this.match(TibboBasicParser.TRUE);\r\n            break;\r\n        case TibboBasicParser.FALSE:\r\n            this.enterOuterAlt(localctx, 7);\r\n            this.state = 744;\r\n            this.match(TibboBasicParser.FALSE);\r\n            break;\r\n        case TibboBasicParser.IDENTIFIER:\r\n            this.enterOuterAlt(localctx, 8);\r\n            this.state = 745;\r\n            this.match(TibboBasicParser.IDENTIFIER);\r\n            break;\r\n        default:\r\n            throw new antlr4.error.NoViableAltException(this);\r\n        }\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\n\r\nfunction ArrayLiteralContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = TibboBasicParser.RULE_arrayLiteral;\r\n    return this;\r\n}\r\n\r\nArrayLiteralContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nArrayLiteralContext.prototype.constructor = ArrayLiteralContext;\r\n\r\nArrayLiteralContext.prototype.L_CURLY_BRACKET = function() {\r\n    return this.getToken(TibboBasicParser.L_CURLY_BRACKET, 0);\r\n};\r\n\r\nArrayLiteralContext.prototype.R_CURLY_BRACKET = function() {\r\n    return this.getToken(TibboBasicParser.R_CURLY_BRACKET, 0);\r\n};\r\n\r\nArrayLiteralContext.prototype.literal = function(i) {\r\n    if(i===undefined) {\r\n        i = null;\r\n    }\r\n    if(i===null) {\r\n        return this.getTypedRuleContexts(LiteralContext);\r\n    } else {\r\n        return this.getTypedRuleContext(LiteralContext,i);\r\n    }\r\n};\r\n\r\nArrayLiteralContext.prototype.arrayLiteral = function(i) {\r\n    if(i===undefined) {\r\n        i = null;\r\n    }\r\n    if(i===null) {\r\n        return this.getTypedRuleContexts(ArrayLiteralContext);\r\n    } else {\r\n        return this.getTypedRuleContext(ArrayLiteralContext,i);\r\n    }\r\n};\r\n\r\nArrayLiteralContext.prototype.COMMA = function(i) {\r\n\tif(i===undefined) {\r\n\t\ti = null;\r\n\t}\r\n    if(i===null) {\r\n        return this.getTokens(TibboBasicParser.COMMA);\r\n    } else {\r\n        return this.getToken(TibboBasicParser.COMMA, i);\r\n    }\r\n};\r\n\r\n\r\nArrayLiteralContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.enterArrayLiteral(this);\r\n\t}\r\n};\r\n\r\nArrayLiteralContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.exitArrayLiteral(this);\r\n\t}\r\n};\r\n\r\nArrayLiteralContext.prototype.accept = function(visitor) {\r\n    if ( visitor instanceof TibboBasicParserVisitor ) {\r\n        return visitor.visitArrayLiteral(this);\r\n    } else {\r\n        return visitor.visitChildren(this);\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nTibboBasicParser.ArrayLiteralContext = ArrayLiteralContext;\r\n\r\nTibboBasicParser.prototype.arrayLiteral = function() {\r\n\r\n    var localctx = new ArrayLiteralContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 118, TibboBasicParser.RULE_arrayLiteral);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 748;\r\n        this.match(TibboBasicParser.L_CURLY_BRACKET);\r\n        this.state = 751;\r\n        this._errHandler.sync(this);\r\n        switch(this._input.LA(1)) {\r\n        case TibboBasicParser.FALSE:\r\n        case TibboBasicParser.TRUE:\r\n        case TibboBasicParser.STRINGLITERAL:\r\n        case TibboBasicParser.TemplateStringLiteral:\r\n        case TibboBasicParser.HEXLITERAL:\r\n        case TibboBasicParser.BINLITERAL:\r\n        case TibboBasicParser.INTEGERLITERAL:\r\n        case TibboBasicParser.MINUS:\r\n        case TibboBasicParser.PLUS:\r\n        case TibboBasicParser.IDENTIFIER:\r\n            this.state = 749;\r\n            this.literal();\r\n            break;\r\n        case TibboBasicParser.L_CURLY_BRACKET:\r\n            this.state = 750;\r\n            this.arrayLiteral();\r\n            break;\r\n        default:\r\n            throw new antlr4.error.NoViableAltException(this);\r\n        }\r\n        this.state = 760;\r\n        this._errHandler.sync(this);\r\n        var _alt = this._interp.adaptivePredict(this._input,99,this._ctx)\r\n        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {\r\n            if(_alt===1) {\r\n                this.state = 753;\r\n                this.match(TibboBasicParser.COMMA);\r\n                this.state = 756;\r\n                this._errHandler.sync(this);\r\n                switch(this._input.LA(1)) {\r\n                case TibboBasicParser.FALSE:\r\n                case TibboBasicParser.TRUE:\r\n                case TibboBasicParser.STRINGLITERAL:\r\n                case TibboBasicParser.TemplateStringLiteral:\r\n                case TibboBasicParser.HEXLITERAL:\r\n                case TibboBasicParser.BINLITERAL:\r\n                case TibboBasicParser.INTEGERLITERAL:\r\n                case TibboBasicParser.MINUS:\r\n                case TibboBasicParser.PLUS:\r\n                case TibboBasicParser.IDENTIFIER:\r\n                    this.state = 754;\r\n                    this.literal();\r\n                    break;\r\n                case TibboBasicParser.L_CURLY_BRACKET:\r\n                    this.state = 755;\r\n                    this.arrayLiteral();\r\n                    break;\r\n                default:\r\n                    throw new antlr4.error.NoViableAltException(this);\r\n                } \r\n            }\r\n            this.state = 762;\r\n            this._errHandler.sync(this);\r\n            _alt = this._interp.adaptivePredict(this._input,99,this._ctx);\r\n        }\r\n\r\n        this.state = 764;\r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        if(_la===TibboBasicParser.COMMA) {\r\n            this.state = 763;\r\n            this.match(TibboBasicParser.COMMA);\r\n        }\r\n\r\n        this.state = 766;\r\n        this.match(TibboBasicParser.R_CURLY_BRACKET);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\n\r\nfunction TypeContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = TibboBasicParser.RULE_type;\r\n    return this;\r\n}\r\n\r\nTypeContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nTypeContext.prototype.constructor = TypeContext;\r\n\r\nTypeContext.prototype.baseType = function() {\r\n    return this.getTypedRuleContext(BaseTypeContext,0);\r\n};\r\n\r\nTypeContext.prototype.complexType = function() {\r\n    return this.getTypedRuleContext(ComplexTypeContext,0);\r\n};\r\n\r\nTypeContext.prototype.LPAREN = function() {\r\n    return this.getToken(TibboBasicParser.LPAREN, 0);\r\n};\r\n\r\nTypeContext.prototype.RPAREN = function() {\r\n    return this.getToken(TibboBasicParser.RPAREN, 0);\r\n};\r\n\r\nTypeContext.prototype.IDENTIFIER = function() {\r\n    return this.getToken(TibboBasicParser.IDENTIFIER, 0);\r\n};\r\n\r\nTypeContext.prototype.INTEGERLITERAL = function() {\r\n    return this.getToken(TibboBasicParser.INTEGERLITERAL, 0);\r\n};\r\n\r\nTypeContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.enterType(this);\r\n\t}\r\n};\r\n\r\nTypeContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.exitType(this);\r\n\t}\r\n};\r\n\r\nTypeContext.prototype.accept = function(visitor) {\r\n    if ( visitor instanceof TibboBasicParserVisitor ) {\r\n        return visitor.visitType(this);\r\n    } else {\r\n        return visitor.visitChildren(this);\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nTibboBasicParser.TypeContext = TypeContext;\r\n\r\nTibboBasicParser.prototype.type = function() {\r\n\r\n    var localctx = new TypeContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 120, TibboBasicParser.RULE_type);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 770;\r\n        this._errHandler.sync(this);\r\n        switch(this._input.LA(1)) {\r\n        case TibboBasicParser.BOOLEAN:\r\n        case TibboBasicParser.REAL:\r\n        case TibboBasicParser.BYTE:\r\n        case TibboBasicParser.CHAR:\r\n        case TibboBasicParser.DWORD:\r\n        case TibboBasicParser.FLOAT:\r\n        case TibboBasicParser.INTEGER:\r\n        case TibboBasicParser.LONG:\r\n        case TibboBasicParser.SHORT:\r\n        case TibboBasicParser.STRING:\r\n        case TibboBasicParser.WORD:\r\n            this.state = 768;\r\n            this.baseType();\r\n            break;\r\n        case TibboBasicParser.IDENTIFIER:\r\n            this.state = 769;\r\n            this.complexType();\r\n            break;\r\n        default:\r\n            throw new antlr4.error.NoViableAltException(this);\r\n        }\r\n        this.state = 775;\r\n        this._errHandler.sync(this);\r\n        var la_ = this._interp.adaptivePredict(this._input,102,this._ctx);\r\n        if(la_===1) {\r\n            this.state = 772;\r\n            this.match(TibboBasicParser.LPAREN);\r\n            this.state = 773;\r\n            _la = this._input.LA(1);\r\n            if(!(_la===TibboBasicParser.INTEGERLITERAL || _la===TibboBasicParser.IDENTIFIER)) {\r\n            this._errHandler.recoverInline(this);\r\n            }\r\n            else {\r\n            \tthis._errHandler.reportMatch(this);\r\n                this.consume();\r\n            }\r\n            this.state = 774;\r\n            this.match(TibboBasicParser.RPAREN);\r\n\r\n        }\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\n\r\nfunction VisibilityContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = TibboBasicParser.RULE_visibility;\r\n    return this;\r\n}\r\n\r\nVisibilityContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nVisibilityContext.prototype.constructor = VisibilityContext;\r\n\r\nVisibilityContext.prototype.PUBLIC = function() {\r\n    return this.getToken(TibboBasicParser.PUBLIC, 0);\r\n};\r\n\r\nVisibilityContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.enterVisibility(this);\r\n\t}\r\n};\r\n\r\nVisibilityContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof TibboBasicParserListener ) {\r\n        listener.exitVisibility(this);\r\n\t}\r\n};\r\n\r\nVisibilityContext.prototype.accept = function(visitor) {\r\n    if ( visitor instanceof TibboBasicParserVisitor ) {\r\n        return visitor.visitVisibility(this);\r\n    } else {\r\n        return visitor.visitChildren(this);\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nTibboBasicParser.VisibilityContext = VisibilityContext;\r\n\r\nTibboBasicParser.prototype.visibility = function() {\r\n\r\n    var localctx = new VisibilityContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 122, TibboBasicParser.RULE_visibility);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 777;\r\n        this.match(TibboBasicParser.PUBLIC);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\n\r\nTibboBasicParser.prototype.sempred = function(localctx, ruleIndex, predIndex) {\r\n\tswitch(ruleIndex) {\r\n\tcase 38:\r\n\t\t\treturn this.expression_sempred(localctx, predIndex);\r\n\tcase 41:\r\n\t\t\treturn this.postfixExpression_sempred(localctx, predIndex);\r\n    default:\r\n        throw \"No predicate with index:\" + ruleIndex;\r\n   }\r\n};\r\n\r\nTibboBasicParser.prototype.expression_sempred = function(localctx, predIndex) {\r\n\tswitch(predIndex) {\r\n\t\tcase 0:\r\n\t\t\treturn this.precpred(this._ctx, 6);\r\n\t\tcase 1:\r\n\t\t\treturn this.precpred(this._ctx, 5);\r\n\t\tcase 2:\r\n\t\t\treturn this.precpred(this._ctx, 4);\r\n\t\tcase 3:\r\n\t\t\treturn this.precpred(this._ctx, 3);\r\n\t\tcase 4:\r\n\t\t\treturn this.precpred(this._ctx, 2);\r\n\t\tdefault:\r\n\t\t\tthrow \"No predicate with index:\" + predIndex;\r\n\t}\r\n};\r\n\r\nTibboBasicParser.prototype.postfixExpression_sempred = function(localctx, predIndex) {\r\n\tswitch(predIndex) {\r\n\t\tcase 5:\r\n\t\t\treturn this.precpred(this._ctx, 1);\r\n\t\tdefault:\r\n\t\t\tthrow \"No predicate with index:\" + predIndex;\r\n\t}\r\n};\r\n\r\n\r\nexports.TibboBasicParser = TibboBasicParser;\r\n","// Generated from /Users/jimmyhu/Projects/tibbo-basic/server/language/TibboBasic/TibboBasicParser.g4 by ANTLR 4.8\r\n// jshint ignore: start\r\nvar antlr4 = require('antlr4/index');\r\n\r\n// This class defines a complete listener for a parse tree produced by TibboBasicParser.\r\nfunction TibboBasicParserListener() {\r\n\tantlr4.tree.ParseTreeListener.call(this);\r\n\treturn this;\r\n}\r\n\r\nTibboBasicParserListener.prototype = Object.create(antlr4.tree.ParseTreeListener.prototype);\r\nTibboBasicParserListener.prototype.constructor = TibboBasicParserListener;\r\n\r\n// Enter a parse tree produced by TibboBasicParser#startRule.\r\nTibboBasicParserListener.prototype.enterStartRule = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by TibboBasicParser#startRule.\r\nTibboBasicParserListener.prototype.exitStartRule = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by TibboBasicParser#topLevelDeclaration.\r\nTibboBasicParserListener.prototype.enterTopLevelDeclaration = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by TibboBasicParser#topLevelDeclaration.\r\nTibboBasicParserListener.prototype.exitTopLevelDeclaration = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by TibboBasicParser#includeStmt.\r\nTibboBasicParserListener.prototype.enterIncludeStmt = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by TibboBasicParser#includeStmt.\r\nTibboBasicParserListener.prototype.exitIncludeStmt = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by TibboBasicParser#includeppStmt.\r\nTibboBasicParserListener.prototype.enterIncludeppStmt = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by TibboBasicParser#includeppStmt.\r\nTibboBasicParserListener.prototype.exitIncludeppStmt = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by TibboBasicParser#block.\r\nTibboBasicParserListener.prototype.enterBlock = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by TibboBasicParser#block.\r\nTibboBasicParserListener.prototype.exitBlock = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by TibboBasicParser#statement.\r\nTibboBasicParserListener.prototype.enterStatement = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by TibboBasicParser#statement.\r\nTibboBasicParserListener.prototype.exitStatement = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by TibboBasicParser#constStmt.\r\nTibboBasicParserListener.prototype.enterConstStmt = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by TibboBasicParser#constStmt.\r\nTibboBasicParserListener.prototype.exitConstStmt = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by TibboBasicParser#constSubStmt.\r\nTibboBasicParserListener.prototype.enterConstSubStmt = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by TibboBasicParser#constSubStmt.\r\nTibboBasicParserListener.prototype.exitConstSubStmt = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by TibboBasicParser#declareVariableStmt.\r\nTibboBasicParserListener.prototype.enterDeclareVariableStmt = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by TibboBasicParser#declareVariableStmt.\r\nTibboBasicParserListener.prototype.exitDeclareVariableStmt = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by TibboBasicParser#declareSubStmt.\r\nTibboBasicParserListener.prototype.enterDeclareSubStmt = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by TibboBasicParser#declareSubStmt.\r\nTibboBasicParserListener.prototype.exitDeclareSubStmt = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by TibboBasicParser#declareFuncStmt.\r\nTibboBasicParserListener.prototype.enterDeclareFuncStmt = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by TibboBasicParser#declareFuncStmt.\r\nTibboBasicParserListener.prototype.exitDeclareFuncStmt = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by TibboBasicParser#doLoopStmt.\r\nTibboBasicParserListener.prototype.enterDoLoopStmt = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by TibboBasicParser#doLoopStmt.\r\nTibboBasicParserListener.prototype.exitDoLoopStmt = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by TibboBasicParser#enumerationStmt.\r\nTibboBasicParserListener.prototype.enterEnumerationStmt = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by TibboBasicParser#enumerationStmt.\r\nTibboBasicParserListener.prototype.exitEnumerationStmt = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by TibboBasicParser#enumerationStmt_Constant.\r\nTibboBasicParserListener.prototype.enterEnumerationStmt_Constant = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by TibboBasicParser#enumerationStmt_Constant.\r\nTibboBasicParserListener.prototype.exitEnumerationStmt_Constant = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by TibboBasicParser#exitStmt.\r\nTibboBasicParserListener.prototype.enterExitStmt = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by TibboBasicParser#exitStmt.\r\nTibboBasicParserListener.prototype.exitExitStmt = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by TibboBasicParser#forNextStmt.\r\nTibboBasicParserListener.prototype.enterForNextStmt = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by TibboBasicParser#forNextStmt.\r\nTibboBasicParserListener.prototype.exitForNextStmt = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by TibboBasicParser#functionStmt.\r\nTibboBasicParserListener.prototype.enterFunctionStmt = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by TibboBasicParser#functionStmt.\r\nTibboBasicParserListener.prototype.exitFunctionStmt = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by TibboBasicParser#jumpStmt.\r\nTibboBasicParserListener.prototype.enterJumpStmt = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by TibboBasicParser#jumpStmt.\r\nTibboBasicParserListener.prototype.exitJumpStmt = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by TibboBasicParser#goToStmt.\r\nTibboBasicParserListener.prototype.enterGoToStmt = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by TibboBasicParser#goToStmt.\r\nTibboBasicParserListener.prototype.exitGoToStmt = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by TibboBasicParser#inlineIfThenElse.\r\nTibboBasicParserListener.prototype.enterInlineIfThenElse = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by TibboBasicParser#inlineIfThenElse.\r\nTibboBasicParserListener.prototype.exitInlineIfThenElse = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by TibboBasicParser#blockIfThenElse.\r\nTibboBasicParserListener.prototype.enterBlockIfThenElse = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by TibboBasicParser#blockIfThenElse.\r\nTibboBasicParserListener.prototype.exitBlockIfThenElse = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by TibboBasicParser#ifConditionStmt.\r\nTibboBasicParserListener.prototype.enterIfConditionStmt = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by TibboBasicParser#ifConditionStmt.\r\nTibboBasicParserListener.prototype.exitIfConditionStmt = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by TibboBasicParser#propertyDefineStmt.\r\nTibboBasicParserListener.prototype.enterPropertyDefineStmt = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by TibboBasicParser#propertyDefineStmt.\r\nTibboBasicParserListener.prototype.exitPropertyDefineStmt = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by TibboBasicParser#propertyDefineStmt_InStmt.\r\nTibboBasicParserListener.prototype.enterPropertyDefineStmt_InStmt = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by TibboBasicParser#propertyDefineStmt_InStmt.\r\nTibboBasicParserListener.prototype.exitPropertyDefineStmt_InStmt = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by TibboBasicParser#propertyGetStmt.\r\nTibboBasicParserListener.prototype.enterPropertyGetStmt = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by TibboBasicParser#propertyGetStmt.\r\nTibboBasicParserListener.prototype.exitPropertyGetStmt = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by TibboBasicParser#propertySetStmt.\r\nTibboBasicParserListener.prototype.enterPropertySetStmt = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by TibboBasicParser#propertySetStmt.\r\nTibboBasicParserListener.prototype.exitPropertySetStmt = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by TibboBasicParser#eventDeclaration.\r\nTibboBasicParserListener.prototype.enterEventDeclaration = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by TibboBasicParser#eventDeclaration.\r\nTibboBasicParserListener.prototype.exitEventDeclaration = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by TibboBasicParser#syscallDeclaration.\r\nTibboBasicParserListener.prototype.enterSyscallDeclaration = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by TibboBasicParser#syscallDeclaration.\r\nTibboBasicParserListener.prototype.exitSyscallDeclaration = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by TibboBasicParser#syscallDeclarationInner.\r\nTibboBasicParserListener.prototype.enterSyscallDeclarationInner = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by TibboBasicParser#syscallDeclarationInner.\r\nTibboBasicParserListener.prototype.exitSyscallDeclarationInner = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by TibboBasicParser#syscallInternalDeclarationInner.\r\nTibboBasicParserListener.prototype.enterSyscallInternalDeclarationInner = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by TibboBasicParser#syscallInternalDeclarationInner.\r\nTibboBasicParserListener.prototype.exitSyscallInternalDeclarationInner = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by TibboBasicParser#syscallInternalParamList.\r\nTibboBasicParserListener.prototype.enterSyscallInternalParamList = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by TibboBasicParser#syscallInternalParamList.\r\nTibboBasicParserListener.prototype.exitSyscallInternalParamList = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by TibboBasicParser#paramInternal.\r\nTibboBasicParserListener.prototype.enterParamInternal = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by TibboBasicParser#paramInternal.\r\nTibboBasicParserListener.prototype.exitParamInternal = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by TibboBasicParser#selectCaseStmt.\r\nTibboBasicParserListener.prototype.enterSelectCaseStmt = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by TibboBasicParser#selectCaseStmt.\r\nTibboBasicParserListener.prototype.exitSelectCaseStmt = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by TibboBasicParser#sC_Case.\r\nTibboBasicParserListener.prototype.enterSC_Case = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by TibboBasicParser#sC_Case.\r\nTibboBasicParserListener.prototype.exitSC_Case = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by TibboBasicParser#sC_Default.\r\nTibboBasicParserListener.prototype.enterSC_Default = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by TibboBasicParser#sC_Default.\r\nTibboBasicParserListener.prototype.exitSC_Default = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by TibboBasicParser#sC_Cond.\r\nTibboBasicParserListener.prototype.enterSC_Cond = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by TibboBasicParser#sC_Cond.\r\nTibboBasicParserListener.prototype.exitSC_Cond = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by TibboBasicParser#subStmt.\r\nTibboBasicParserListener.prototype.enterSubStmt = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by TibboBasicParser#subStmt.\r\nTibboBasicParserListener.prototype.exitSubStmt = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by TibboBasicParser#typeStmt.\r\nTibboBasicParserListener.prototype.enterTypeStmt = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by TibboBasicParser#typeStmt.\r\nTibboBasicParserListener.prototype.exitTypeStmt = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by TibboBasicParser#typeStmtElement.\r\nTibboBasicParserListener.prototype.enterTypeStmtElement = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by TibboBasicParser#typeStmtElement.\r\nTibboBasicParserListener.prototype.exitTypeStmtElement = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by TibboBasicParser#expression.\r\nTibboBasicParserListener.prototype.enterExpression = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by TibboBasicParser#expression.\r\nTibboBasicParserListener.prototype.exitExpression = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by TibboBasicParser#unaryExpression.\r\nTibboBasicParserListener.prototype.enterUnaryExpression = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by TibboBasicParser#unaryExpression.\r\nTibboBasicParserListener.prototype.exitUnaryExpression = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by TibboBasicParser#unaryOperator.\r\nTibboBasicParserListener.prototype.enterUnaryOperator = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by TibboBasicParser#unaryOperator.\r\nTibboBasicParserListener.prototype.exitUnaryOperator = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by TibboBasicParser#postfixExpression.\r\nTibboBasicParserListener.prototype.enterPostfixExpression = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by TibboBasicParser#postfixExpression.\r\nTibboBasicParserListener.prototype.exitPostfixExpression = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by TibboBasicParser#postfix.\r\nTibboBasicParserListener.prototype.enterPostfix = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by TibboBasicParser#postfix.\r\nTibboBasicParserListener.prototype.exitPostfix = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by TibboBasicParser#primaryExpression.\r\nTibboBasicParserListener.prototype.enterPrimaryExpression = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by TibboBasicParser#primaryExpression.\r\nTibboBasicParserListener.prototype.exitPrimaryExpression = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by TibboBasicParser#variableStmt.\r\nTibboBasicParserListener.prototype.enterVariableStmt = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by TibboBasicParser#variableStmt.\r\nTibboBasicParserListener.prototype.exitVariableStmt = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by TibboBasicParser#variableListStmt.\r\nTibboBasicParserListener.prototype.enterVariableListStmt = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by TibboBasicParser#variableListStmt.\r\nTibboBasicParserListener.prototype.exitVariableListStmt = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by TibboBasicParser#variableListItem.\r\nTibboBasicParserListener.prototype.enterVariableListItem = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by TibboBasicParser#variableListItem.\r\nTibboBasicParserListener.prototype.exitVariableListItem = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by TibboBasicParser#whileWendStmt.\r\nTibboBasicParserListener.prototype.enterWhileWendStmt = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by TibboBasicParser#whileWendStmt.\r\nTibboBasicParserListener.prototype.exitWhileWendStmt = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by TibboBasicParser#objectDeclaration.\r\nTibboBasicParserListener.prototype.enterObjectDeclaration = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by TibboBasicParser#objectDeclaration.\r\nTibboBasicParserListener.prototype.exitObjectDeclaration = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by TibboBasicParser#argList.\r\nTibboBasicParserListener.prototype.enterArgList = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by TibboBasicParser#argList.\r\nTibboBasicParserListener.prototype.exitArgList = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by TibboBasicParser#arg.\r\nTibboBasicParserListener.prototype.enterArg = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by TibboBasicParser#arg.\r\nTibboBasicParserListener.prototype.exitArg = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by TibboBasicParser#paramList.\r\nTibboBasicParserListener.prototype.enterParamList = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by TibboBasicParser#paramList.\r\nTibboBasicParserListener.prototype.exitParamList = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by TibboBasicParser#param.\r\nTibboBasicParserListener.prototype.enterParam = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by TibboBasicParser#param.\r\nTibboBasicParserListener.prototype.exitParam = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by TibboBasicParser#asTypeClause.\r\nTibboBasicParserListener.prototype.enterAsTypeClause = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by TibboBasicParser#asTypeClause.\r\nTibboBasicParserListener.prototype.exitAsTypeClause = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by TibboBasicParser#baseType.\r\nTibboBasicParserListener.prototype.enterBaseType = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by TibboBasicParser#baseType.\r\nTibboBasicParserListener.prototype.exitBaseType = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by TibboBasicParser#complexType.\r\nTibboBasicParserListener.prototype.enterComplexType = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by TibboBasicParser#complexType.\r\nTibboBasicParserListener.prototype.exitComplexType = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by TibboBasicParser#fieldLength.\r\nTibboBasicParserListener.prototype.enterFieldLength = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by TibboBasicParser#fieldLength.\r\nTibboBasicParserListener.prototype.exitFieldLength = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by TibboBasicParser#lineLabel.\r\nTibboBasicParserListener.prototype.enterLineLabel = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by TibboBasicParser#lineLabel.\r\nTibboBasicParserListener.prototype.exitLineLabel = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by TibboBasicParser#literal.\r\nTibboBasicParserListener.prototype.enterLiteral = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by TibboBasicParser#literal.\r\nTibboBasicParserListener.prototype.exitLiteral = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by TibboBasicParser#arrayLiteral.\r\nTibboBasicParserListener.prototype.enterArrayLiteral = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by TibboBasicParser#arrayLiteral.\r\nTibboBasicParserListener.prototype.exitArrayLiteral = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by TibboBasicParser#type.\r\nTibboBasicParserListener.prototype.enterType = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by TibboBasicParser#type.\r\nTibboBasicParserListener.prototype.exitType = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by TibboBasicParser#visibility.\r\nTibboBasicParserListener.prototype.enterVisibility = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by TibboBasicParser#visibility.\r\nTibboBasicParserListener.prototype.exitVisibility = function(ctx) {\r\n};\r\n\r\n\r\n\r\nexports.TibboBasicParserListener = TibboBasicParserListener;","import {\r\n    TextDocuments,\r\n    ProposedFeatures,\r\n    InitializeParams,\r\n    DidChangeConfigurationNotification,\r\n    CompletionItem,\r\n    Diagnostic,\r\n    Hover,\r\n    Definition,\r\n    Declaration,\r\n    MarkupKind,\r\n    MarkupContent,\r\n    // DiagnosticTag,\r\n    // DocumentSymbol,\r\n    // SymbolInformation,\r\n    SymbolKind,\r\n    DiagnosticSeverity,\r\n    CompletionItemKind,\r\n    CompletionParams,\r\n    // DiagnosticTag,\r\n    TextDocumentSyncKind,\r\n    SignatureHelp,\r\n    SignatureHelpParams,\r\n    SignatureInformation,\r\n    WorkspaceEdit,\r\n    RenameParams,\r\n    PrepareRenameParams,\r\n    DocumentSymbol,\r\n    ReferenceParams,\r\n    Location\r\n} from 'vscode-languageserver';\r\nimport {\r\n    createConnection,\r\n} from 'vscode-languageserver/node';\r\nimport TibboBasicDocumentFormatter from './TibboBasicDocumentFormatter';\r\nimport fs = require('fs');\r\nimport path = require('path');\r\nimport ini = require('ini');\r\nimport TibboBasicPreprocessor from './TibboBasicPreprocessor';\r\nimport TibboBasicProjectParser from './TibboBasicProjectParser';\r\nimport { CommonToken } from 'antlr4';\r\nimport { TBVariable, TBParameter, TBObject, TBObjectFunction, TBObjectProperty, TBSymbolType, TBRange } from './types';\r\n// import TurndownService = require('turndown');\r\nimport { TerminalNode } from 'antlr4/tree/Tree';\r\nimport { TextDocument, Position } from 'vscode-languageserver-textdocument';\r\nimport * as rpc from 'vscode-jsonrpc';\r\nconst TibboBasicParser = require('../language/TibboBasic/lib/TibboBasicParser').TibboBasicParser;\r\n// const turndownService = new TurndownService();\r\nconst supportedFileTypes = ['.tbs', '.tbh', '.tph'];\r\nconst html2markdown = require('./html2markdown');\r\n// const TIBBOBASIC = 'tibbo-basic';\r\n// Create a connection for the server. The connection uses Node's IPC as a transport.\r\n// Also include all preview / proposed LSP features.\r\n\r\nconst connection = createConnection(ProposedFeatures.all);\r\nconst tbFormatter = new TibboBasicDocumentFormatter();\r\nconst VALIDATE_INTERVAL = 1500;\r\n\r\n// Create a simple text document manager. The text document manager\r\n// supports full document sync only\r\nconst documents = new TextDocuments(TextDocument);\r\n\r\nlet hasConfigurationCapability = false;\r\nlet hasWorkspaceFolderCapability = false;\r\nlet workspaceRoot = '';\r\n// let platformType: string = '';\r\n\r\nlet platformPreprocessor: TibboBasicPreprocessor;\r\nlet platformProjectParser: TibboBasicProjectParser;\r\nlet preprocessor: TibboBasicPreprocessor;\r\nlet projectParser: TibboBasicProjectParser;\r\nconst fileEdits: { [name: string]: string } = {};\r\n\r\nlet PLATFORMS_PATH = 'Platforms';\r\nlet tprPath = '';\r\nlet parsing = false;\r\nlet needsUpdate = false;\r\nlet platformsChanged = true;\r\n\r\nexport interface ProjectExplorerItem {\r\n    name: string,\r\n    children?: ProjectExplorerItem[],\r\n    docs?: string,\r\n    enabled?: boolean,\r\n    location?: number\r\n}\r\n\r\nconst PROJECT_EXPLORER_EVENTS = 'Events';\r\nconst PROJECT_EXPLORER_PROJECT = 'Project';\r\nconst PROJECT_EXPLORER_LIBRARIES = 'Libraries';\r\nconst PROJECT_EXPLORER_PLATFORM = 'Platform';\r\n\r\nlet rootItems: ProjectExplorerItem[] = [];\r\n\r\nconnection.onInitialize(async (params: InitializeParams) => {\r\n    const capabilities = params.capabilities;\r\n    if (params.rootPath) {\r\n        workspaceRoot = params.rootPath;\r\n    }\r\n    PLATFORMS_PATH = path.join(workspaceRoot, PLATFORMS_PATH);\r\n\r\n    // Does the client support the `workspace/configuration` request?\r\n    // If not, we will fall back using global settings\r\n    hasConfigurationCapability = !!(\r\n        capabilities.workspace && !!capabilities.workspace.configuration\r\n    );\r\n    hasWorkspaceFolderCapability = !!(\r\n        capabilities.workspace && !!capabilities.workspace.workspaceFolders\r\n    );\r\n    if (!fs.existsSync(PLATFORMS_PATH)) {\r\n        if (params.initializationOptions != undefined) {\r\n            if (params.initializationOptions.platformsPath != undefined && params.initializationOptions.platformsPath != '') {\r\n                PLATFORMS_PATH = params.initializationOptions.platformsPath;\r\n            }\r\n        }\r\n    }\r\n\r\n    if (workspaceRoot) {\r\n        fs.readdirSync(workspaceRoot).forEach(file => {\r\n            const ext = path.extname(file);\r\n            if (ext == '.tpr') {\r\n                if (workspaceRoot) {\r\n                    tprPath = path.join(workspaceRoot, file);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    if (tprPath == '') {\r\n        return {\r\n            capabilities: {\r\n            }\r\n        };\r\n    }\r\n\r\n    await new Promise<void>((resolve, reject) => {\r\n        preprocessor = new TibboBasicPreprocessor(workspaceRoot, PLATFORMS_PATH);\r\n        projectParser = new TibboBasicProjectParser();\r\n        resolve();\r\n    });\r\n    setInterval(async () => {\r\n        await new Promise<void>((resolve, reject) => {\r\n            validateTextDocument();\r\n            resolve();\r\n        });\r\n    }, VALIDATE_INTERVAL);\r\n    validateTextDocument();\r\n\r\n    return {\r\n        capabilities: {\r\n            textDocumentSync: TextDocumentSyncKind.Full,\r\n            // Tell the client that the server supports code completion\r\n            completionProvider: {\r\n                resolveProvider: true,\r\n                triggerCharacters: [\r\n                    '.',\r\n                    '=',\r\n                    '(',\r\n                    ','\r\n                ]\r\n            },\r\n            documentFormattingProvider: true,\r\n\r\n            hoverProvider: true,\r\n            definitionProvider: true,\r\n            documentSymbolProvider: true,\r\n            renameProvider: {\r\n                prepareProvider: true\r\n            },\r\n            declarationProvider: true,\r\n            referencesProvider: true,\r\n            signatureHelpProvider: {\r\n                triggerCharacters: ['('],\r\n                retriggerCharacters: [',']\r\n            }\r\n        }\r\n    };\r\n});\r\n\r\nconnection.onInitialized(async (params) => {\r\n    if (hasConfigurationCapability) {\r\n        // Register for all configuration changes.\r\n        connection.client.register(DidChangeConfigurationNotification.type, undefined);\r\n    }\r\n    if (hasWorkspaceFolderCapability) {\r\n        connection.workspace.onDidChangeWorkspaceFolders(_event => {\r\n            // connection.console.log('Workspace folder change event received.');\r\n        });\r\n    }\r\n\r\n});\r\n\r\n// The example settings\r\n// interface ExampleSettings {\r\n// \tmaxNumberOfProblems: number;\r\n// }\r\n\r\n// The global settings, used when the `workspace/configuration` request is not supported by the client.\r\n// Please note that this is not the case when using this server with the client provided in this example\r\n// but could happen with other clients.\r\n// const defaultSettings: ExampleSettings = { maxNumberOfProblems: 1000 };\r\n// let globalSettings: ExampleSettings = defaultSettings;\r\n\r\n// Cache the settings of all open documents\r\n// let documentSettings: Map<string, Thenable<ExampleSettings>> = new Map();\r\n\r\nconnection.onDidChangeConfiguration(change => {\r\n    if (hasConfigurationCapability) {\r\n        // Reset all cached document settings\r\n        // documentSettings.clear();\r\n    } else {\r\n        // globalSettings = <ExampleSettings>(\r\n        // \t(change.settings.languageServerExample || defaultSettings)\r\n        // );\r\n    }\r\n\r\n    // Revalidate all open text documents\r\n    // documents.all().forEach(validateTextDocument);\r\n});\r\n\r\n// function getDocumentSettings(resource: string): Thenable<ExampleSettings> {\r\n// \tif (!hasConfigurationCapability) {\r\n// \t\treturn Promise.resolve(globalSettings);\r\n// \t}\r\n// \tlet result = documentSettings.get(resource);\r\n// \tif (!result) {\r\n// \t\tresult = connection.workspace.getConfiguration({\r\n// \t\t\tscopeUri: resource,\r\n// \t\t\tsection: 'tibbo-basic'\r\n// \t\t});\r\n// \t\tdocumentSettings.set(resource, result);\r\n// \t}\r\n// \treturn result;\r\n// }\r\n\r\n// Only keep settings for open documents\r\ndocuments.onDidClose(e => {\r\n    // documentSettings.delete(e.document.uri);\r\n});\r\n\r\n// The content of a text document has changed. This event is emitted\r\n// when the text document first opened or when its content has changed.\r\ndocuments.onDidChangeContent(change => {\r\n    try {\r\n        const text = change.document.getText();\r\n        const textDocument: TextDocument = change.document;\r\n        const currentFilePath = getFileName(textDocument.uri);\r\n        const ext = path.extname(currentFilePath);\r\n        if (preprocessor.originalFiles[currentFilePath] != text) {\r\n            fileEdits[currentFilePath] = text;\r\n        }\r\n        if (!platformsChanged && preprocessor && preprocessor.originalFiles) {\r\n\r\n            if (ext == '.tpr') {\r\n                platformsChanged = true;\r\n                needsUpdate = true;\r\n            }\r\n        }\r\n\r\n        if (platformsChanged) {\r\n            needsUpdate = true;\r\n        }\r\n\r\n\r\n\r\n    }\r\n    catch (ex) {\r\n        connection.console.log(ex);\r\n    }\r\n});\r\n\r\nfunction validateTextDocument() {\r\n\r\n    // In this simple example we get the settings for every validate run.\r\n    // let settings = await getDocumentSettings(textDocument.uri);\r\n\r\n    // The validator creates diagnostics for all uppercase words length 2 and more\r\n    // let problems = 0;\r\n    let updated = false;\r\n    for (const key in fileEdits) {\r\n        updated = true;\r\n        const currentFilePath = key;\r\n\r\n        const text = fileEdits[key];\r\n        const dirName = path.dirname(currentFilePath);\r\n        const tmpPreprocessor1 = new TibboBasicPreprocessor(workspaceRoot, PLATFORMS_PATH);\r\n        const tmpPreprocessor2 = new TibboBasicPreprocessor(workspaceRoot, PLATFORMS_PATH);\r\n        tmpPreprocessor1.originalFiles[currentFilePath] = preprocessor.originalFiles[currentFilePath];\r\n        tmpPreprocessor2.originalFiles[currentFilePath] = text;\r\n        tmpPreprocessor1.parseFile(dirName, path.basename(currentFilePath), true);\r\n        tmpPreprocessor2.parseFile(dirName, path.basename(currentFilePath), true);\r\n\r\n        if (JSON.stringify(tmpPreprocessor1.defines) != JSON.stringify(tmpPreprocessor2.defines)) {\r\n            needsUpdate = true;\r\n            preprocessor.originalFiles[currentFilePath] = text;\r\n        }\r\n        delete fileEdits[key];\r\n        if (!needsUpdate) {\r\n            preprocessor.originalFiles[currentFilePath] = text;\r\n            preprocessor.parseFile(dirName, path.basename(currentFilePath), true);\r\n            projectParser.parseFile(currentFilePath, text);\r\n        }\r\n    }\r\n    \r\n    if (updated) {\r\n        notifyDiagnostics();\r\n        getProjectStructure();\r\n        projectParser.constructComments();\r\n    }\r\n    if (parsing || !needsUpdate) {\r\n        return;\r\n    }\r\n    parsing = true;\r\n\r\n    const timeStart = new Date().getTime();\r\n    try {\r\n        if (platformsChanged) {\r\n            platformPreprocessor = new TibboBasicPreprocessor(workspaceRoot, PLATFORMS_PATH);\r\n            platformProjectParser = new TibboBasicProjectParser();\r\n            platformPreprocessor.parsePlatforms();\r\n            for (const filePath in platformPreprocessor.files) {\r\n                const fileContents = platformPreprocessor.files[filePath];\r\n                platformProjectParser.parseFile(filePath, fileContents);\r\n            }\r\n            platformsChanged = false;\r\n        }\r\n\r\n        copyProperties();\r\n\r\n        //parse tpr file\r\n        const tpr = ini.parse(fs.readFileSync(tprPath, 'utf-8'));\r\n        const max = 999;\r\n        const dirName = path.dirname(tprPath);\r\n        for (let i = 1; i < max; i++) {\r\n            const entryName = 'file' + i.toString();\r\n            if (tpr[entryName] != undefined) {\r\n                const originalFilePath = tpr[entryName]['path'].split('\\\\').join(path.sep);\r\n                let filePath = originalFilePath;\r\n\r\n                const ext = path.extname(filePath);\r\n                if (!supportedFileTypes.includes(ext)) {\r\n                    continue;\r\n                }\r\n                let directory = dirName;\r\n                if (tpr[entryName]['location'] == 'commonlib') {\r\n                    directory = PLATFORMS_PATH;\r\n                }\r\n                filePath = preprocessor.parseFile(directory, originalFilePath, needsUpdate);\r\n\r\n                const fileContents = preprocessor.files[filePath];\r\n                projectParser.parseFile(filePath, fileContents);\r\n\r\n\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n        projectParser.constructComments();\r\n\r\n\r\n    }\r\n    catch (ex) {\r\n        connection.console.log(ex.stack);\r\n    }\r\n    finally {\r\n        parsing = false;\r\n        needsUpdate = false;\r\n        const timeEnd = new Date().getTime();\r\n        const secondsElapsed = (timeEnd - timeStart) / 1000;\r\n        notifyDiagnostics();\r\n        connection.console.log(`parsed in ${secondsElapsed} s`);\r\n    }\r\n}\r\n\r\nconnection.onDidChangeWatchedFiles(_change => {\r\n    // Monitored files have change in VSCode\r\n    // connection.console.log('We received an file change event');\r\n});\r\n\r\nconnection.onDocumentFormatting(formatParams => {\r\n    const document = documents.get(formatParams.textDocument.uri);\r\n    if (!document) {\r\n        return;\r\n    }\r\n    return tbFormatter.formatDocument(document, formatParams);\r\n});\r\n\r\nconnection.onCompletion(\r\n    (params: CompletionParams): CompletionItem[] => {\r\n        // const timeStart = new Date().getTime();\r\n        const suggestions: Array<CompletionItem> = [];\r\n        const document = documents.get(params.textDocument.uri);\r\n        const position = params.position;\r\n        const textDocument = params.textDocument;\r\n        let variableType = '';\r\n\r\n        if (!document) {\r\n            return suggestions;\r\n        }\r\n        let offset = document.offsetAt(position);\r\n        const filePath = getFileName(textDocument.uri);\r\n        const scope = projectParser.getScope(filePath, offset);\r\n        const variables = projectParser.getScopeVariables(scope);\r\n        parseFile(textDocument.uri);\r\n\r\n        let triggerCharacter: string | undefined = '';\r\n        let token: TerminalNode | undefined = undefined;\r\n        const MAX_ITERATIONS = 10;\r\n        let index = MAX_ITERATIONS;\r\n        while (token == undefined || index >= 0) {\r\n            token = projectParser.getTokenAtPosition(filePath, offset);\r\n            offset--;\r\n            if (token != undefined) {\r\n                triggerCharacter = token.getText();\r\n                if (triggerCharacter != ')') {\r\n                    break;\r\n                }\r\n            }\r\n            index--;\r\n        }\r\n\r\n        switch (triggerCharacter) {\r\n            case '=':\r\n                {\r\n                    let token: TerminalNode | undefined = undefined;\r\n                    const MAX_ITERATIONS = 5;\r\n                    let index = MAX_ITERATIONS;\r\n                    while (token == undefined || index >= 0) {\r\n                        token = projectParser.getTokenAtPosition(filePath, offset);\r\n                        if (token != undefined) {\r\n                            const obj = getObjectAtToken(token);\r\n                            if (obj != undefined) {\r\n                                const objProp = getObjectProperty(obj, token.symbol.text);\r\n                                if (objProp != undefined) {\r\n                                    const dataType = objProp.dataType;\r\n                                    if (projectParser.enums[dataType.toLowerCase()] != undefined) {\r\n                                        const members = projectParser.enums[dataType.toLowerCase()].members;\r\n                                        for (let i = 0; i < members.length; i++) {\r\n                                            suggestions.push({\r\n                                                label: members[i].name.toUpperCase(),\r\n                                                kind: CompletionItemKind.EnumMember,\r\n                                                data: getCommentString(members[i].comments)\r\n                                            });\r\n                                        }\r\n                                        break;\r\n                                    }\r\n                                }\r\n                            }\r\n                            const varD: TBVariable | undefined = getVariable(token.symbol.text, filePath, offset);\r\n                            if (varD != undefined) {\r\n                                variableType = varD.dataType;\r\n                            }\r\n                        }\r\n                        offset--;\r\n                        index--;\r\n                    }\r\n                }\r\n                break;\r\n            case '.':\r\n                {\r\n                    const token: TerminalNode | undefined = projectParser.getTokenAtPosition(filePath, offset - 1);\r\n                    if (token != undefined) {\r\n                        const obj = projectParser.objects[token.getText()];\r\n                        if (obj != undefined) {\r\n                            obj.functions.forEach(func => {\r\n                                suggestions.push({\r\n                                    label: func.name,\r\n                                    kind: CompletionItemKind.Function,\r\n                                    data: getCommentString(func.comments)\r\n                                });\r\n                            });\r\n                            obj.properties.forEach(prop => {\r\n                                suggestions.push({\r\n                                    label: prop.name,\r\n                                    kind: CompletionItemKind.Property,\r\n                                    data: getCommentString(prop.comments)\r\n                                });\r\n                            });\r\n                        }\r\n                        const varD: TBVariable | undefined = getVariable(token.symbol.text, filePath, offset - 1);\r\n                        if (varD != undefined) {\r\n                            const dataType = varD.dataType;\r\n                            if (projectParser.types[dataType] != undefined) {\r\n                                const dType = projectParser.types[dataType];\r\n                                for (let i = 0; i < dType.members.length; i++) {\r\n                                    suggestions.push({\r\n                                        label: dType.members[i].name,\r\n                                        kind: CompletionItemKind.Property,\r\n                                        data: getCommentString(dType.members[i].comments)\r\n                                    });\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n            case '(':\r\n            case ')':\r\n            case ',':\r\n                {\r\n                    let commaCount = 0;\r\n                    const currentLine = params.position.line;\r\n                    offset = document.offsetAt(params.position);\r\n                    let cursor = document.positionAt(offset);\r\n                    while (cursor.line == currentLine) {\r\n                        const tmpToken = projectParser.getTokenAtPosition(filePath, offset);\r\n                        cursor = document.positionAt(offset);\r\n                        if (tmpToken == undefined) {\r\n                            break;\r\n                        }\r\n                        if (tmpToken?.symbol.text == ',') {\r\n                            commaCount++;\r\n                            offset--;\r\n                        }\r\n                        else if (tmpToken?.symbol.text == '(') {\r\n                            offset--;\r\n                            cursor = document.positionAt(offset);\r\n                            token = projectParser.getTokenAtPosition(filePath, offset);\r\n                            if (cursor.line != params.position.line || token == undefined) {\r\n                                break;\r\n                            }\r\n                            const text = token.symbol.text;\r\n                            if (token.parentCtx.ruleIndex == TibboBasicParser.RULE_postfixExpression) {\r\n                                const obj = getObjectAtToken(token);\r\n                                if (obj != undefined) {\r\n                                    const objFunc = getObjectFunction(obj, token.symbol.text);\r\n                                    if (objFunc != undefined && objFunc.parameters[commaCount] != undefined) {\r\n                                        variableType = objFunc.parameters[commaCount].dataType;\r\n                                    }\r\n                                }\r\n                            }\r\n                            else if (projectParser.syscalls[text] != undefined) {\r\n                                const syscall = projectParser.syscalls[text];\r\n                                if (syscall.parameters[commaCount] != undefined) {\r\n                                    variableType = syscall.parameters[commaCount].dataType;\r\n                                }\r\n                            }\r\n                            else if (projectParser.functions[text] != undefined) {\r\n                                const func = projectParser.functions[text];\r\n                                if (func.parameters[commaCount] != undefined) {\r\n                                    variableType = func.parameters[commaCount].dataType;\r\n                                }\r\n                            }\r\n                            break;\r\n\r\n                        }\r\n                        else {\r\n                            offset = tmpToken?.symbol.start - 1;\r\n                        }\r\n\r\n                    }\r\n                }\r\n                break;\r\n            default:\r\n\r\n                break;\r\n        }\r\n        if (variableType != '') {\r\n            for (let i = 0; i < variables.length; i++) {\r\n                if (variables[i].dataType == variableType) {\r\n                    suggestions.push({\r\n                        label: variables[i].name,\r\n                        kind: CompletionItemKind.Variable\r\n                    });\r\n                }\r\n            }\r\n            if (projectParser.enums[variableType.toLowerCase()] != undefined) {\r\n                const members = projectParser.enums[variableType.toLowerCase()].members;\r\n                for (let i = 0; i < members.length; i++) {\r\n                    suggestions.push({\r\n                        label: members[i].name.toUpperCase(),\r\n                        kind: CompletionItemKind.Enum,\r\n                        data: getCommentString(members[i].comments)\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n        // const timeEnd = new Date().getTime();\r\n        // const secondsElapsed = (timeEnd - timeStart) / 1000;\r\n        // connection.console.log(`completion in ${secondsElapsed} s`);\r\n        return suggestions;\r\n    }\r\n);\r\n\r\n// This handler resolves additional information for the item selected in\r\n// the completion list.\r\nconnection.onCompletionResolve(\r\n    (item: CompletionItem): CompletionItem => {\r\n        if (item.data) {\r\n            item.documentation = {\r\n                kind: MarkupKind.Markdown,\r\n                value: html2markdown(item.data)\r\n            }\r\n        }\r\n        return item;\r\n    }\r\n);\r\n\r\nconnection.onHover(({ textDocument, position }): Hover | undefined => {\r\n    const document = documents.get(textDocument.uri);\r\n    const result: MarkupContent = {\r\n        kind: MarkupKind.Markdown,\r\n        value: ''\r\n    };\r\n\r\n    if (!document) {\r\n        return;\r\n    }\r\n    const offset = document.offsetAt(position);\r\n    const filePath = getFileName(textDocument.uri);\r\n    const token = projectParser.getTokenAtPosition(filePath, offset);\r\n\r\n    if (token != undefined) {\r\n        const text = token.symbol.text;\r\n        // let context: ParserRuleContext | undefined;\r\n        switch (token.symbol.type) {\r\n            case TibboBasicParser.IDENTIFIER:\r\n                //get scope\r\n                if (token.parentCtx.ruleIndex == TibboBasicParser.RULE_postfixExpression) {\r\n                    const obj = getObjectAtToken(token);\r\n                    if (obj != undefined) {\r\n                        const func = getObjectFunction(obj, token.symbol.text);\r\n                        const prop = getObjectProperty(obj, token.symbol.text);\r\n                        if (func != undefined) {\r\n                            result.value += '```tibbo-basic\\n';\r\n                            result.value += `${obj.name}.${func.name}\\n`;\r\n                            result.value += '```\\n'; ''\r\n                            result.value += getComments(func.comments);\r\n                        }\r\n                        else if (prop != undefined) {\r\n                            result.value += '```tibbo-basic\\n';\r\n                            result.value += `${obj.name}.${prop.name}\\n`;\r\n                            result.value += '```\\n';\r\n                            result.value += getComments(prop.comments);\r\n                        }\r\n                    }\r\n                }\r\n                if (result.value == '') {\r\n                    //TODO get correct variable at scope\r\n                    const varD: TBVariable | undefined = getVariable(text, filePath, offset);\r\n                    if (varD != undefined) {\r\n                        let lengthField = '';\r\n                        if (varD.length != undefined && varD.length != '') {\r\n                            lengthField += '(' + varD.length + ')';\r\n                        }\r\n                        result.value = '```tibbo-basic\\n';\r\n                        result.value += `dim ${varD.name}${lengthField} as ${varD.dataType}`;\r\n                        result.value += '\\n```\\n';\r\n                        result.value += getComments(varD.comments);\r\n                    }\r\n                }\r\n                if (result.value != '') {\r\n                    //is object or complex type variable\r\n                }\r\n                else if (preprocessor.defines[text] != undefined) {\r\n                    const define = preprocessor.defines[text];\r\n                    result.value = '```tibbo-basic\\n';\r\n                    result.value += `#define ${define.name} ${define.value}\\n`;\r\n                    result.value += '```'\r\n                }\r\n                else if (projectParser.events[text.toLowerCase()] != undefined) {\r\n                    const markdown = getComments(projectParser.events[text.toLowerCase()].comments);\r\n                    result.value += markdown;\r\n                }\r\n                else if (projectParser.objects[text.toLowerCase()] != undefined) {\r\n                    const obj = projectParser.objects[text.toLowerCase()];\r\n                    result.value = '```tibbo-basic\\n';\r\n                    result.value += `object ${obj.name}`;\r\n                    result.value += '\\n```\\n'\r\n                    result.value += getComments(obj.comments);\r\n                }\r\n                else if (projectParser.functions[text] != undefined) {\r\n                    const func = projectParser.functions[text];\r\n                    if (func.location != undefined) {\r\n                        result.value = '```tibbo-basic\\n';\r\n                        result.value += `sub ${func.name}(${func.parameters.map(param => {\r\n                            return `${param.byref ? 'byref' : ''} ${param.name} as ${param.dataType}`\r\n                        }).join(',')})`;\r\n                        if (func.dataType != undefined) {\r\n                            result.value += ` as ${func.dataType}`;\r\n                        }\r\n                        result.value += '\\n```\\n'\r\n                        result.value += getComments(func.comments);\r\n                    }\r\n                }\r\n                else if (projectParser.consts[text] != undefined) {\r\n                    result.value = '```tibbo-basic\\n';\r\n                    result.value += `const ${text} = ${projectParser.consts[text].value}`;\r\n                    result.value += '\\n```';\r\n                }\r\n                else if (projectParser.enums[text.toLowerCase()] != undefined) {\r\n                    result.value = '```tibbo-basic\\n';\r\n                    result.value += 'enum ' + text + '\\n';\r\n                    for (let i = 0; i < projectParser.enums[text].members.length; i++) {\r\n                        result.value += `    ${projectParser.enums[text].members[i].name.toUpperCase()}(${projectParser.enums[text].members[i].value})\\n`;\r\n                    }\r\n                    result.value += 'end enum';\r\n                    result.value += '\\n```';\r\n                }\r\n                else if (projectParser.syscalls[text] != undefined) {\r\n                    const syscall = projectParser.syscalls[text];\r\n                    result.value = '```tibbo-basic\\n';\r\n                    result.value += `syscall ${syscall.name}(${syscall.parameters.map(param => {\r\n                        return `${param.byref ? 'byref' : ''} ${param.name} as ${param.dataType}`\r\n                    }).join(',')})`\r\n                    if (syscall.dataType != '') {\r\n                        result.value += ` as ${syscall.dataType}`;\r\n                    }\r\n                    result.value += '\\n```\\n'\r\n                    result.value += getComments(syscall.comments);\r\n                }\r\n                else if (projectParser.types[text.toLowerCase()] != undefined) {\r\n                    const type = projectParser.types[text.toLowerCase()];\r\n                    result.value = '```tibbo-basic\\n';\r\n                    result.value += 'type ' + text + '\\n';\r\n                    for (let i = 0; i < type.members.length; i++) {\r\n                        const member = type.members[i];\r\n                        result.value += `    ${member.name} as ${member.dataType}`;\r\n                        if (member.length) {\r\n                            result.value += `(${member.length})`;\r\n                        }\r\n                        result.value += '\\n';\r\n                    }\r\n                    result.value += 'end type';\r\n                    result.value += '\\n```\\n';\r\n                    result.value += getComments(type.comments);\r\n                }\r\n                if (result.value == '') {\r\n                    //enums\r\n                    for (const key in projectParser.enums) {\r\n                        const enumItem = projectParser.enums[key];\r\n                        for (let i = 0; i < enumItem.members.length; i++) {\r\n                            if (text.toLowerCase() == enumItem.members[i].name.toLowerCase()) {\r\n                                result.value = '```tibbo-basic\\n';\r\n                                result.value += 'enum ' + enumItem.name.toUpperCase() + '\\n';\r\n                                result.value += '```\\n';\r\n\r\n                                result.value += getComments(enumItem.members[i].comments);\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                \r\n                break;\r\n        }\r\n    }\r\n\r\n    if (result.value != '') {\r\n        return {\r\n            contents: result\r\n        };\r\n    }\r\n    return undefined;\r\n});\r\n\r\nconnection.onDeclaration(({ textDocument, position }): Declaration | undefined => {\r\n    const document = documents.get(textDocument.uri);\r\n    if (!document) {\r\n        return;\r\n    }\r\n    const offset = document.offsetAt(position);\r\n    const filePath = getFileName(textDocument.uri);\r\n    const token = projectParser.getTokenAtPosition(filePath, offset);\r\n    if (token != undefined) {\r\n        const text = token.symbol.text;\r\n        let location: TBRange | undefined = undefined;\r\n        switch (token.symbol.type) {\r\n            case TibboBasicParser.IDENTIFIER:\r\n                if (projectParser.functions[text] != undefined) {\r\n                    location = projectParser.functions[text].declaration;\r\n                }\r\n        }\r\n        if (location != undefined) {\r\n            const uri = getFileUrl(location.startToken.source[1].name);\r\n\r\n            return {\r\n                uri: uri,\r\n                range: {\r\n                    start: {\r\n                        line: location.startToken.line - 1,\r\n                        character: location.startToken.column\r\n                    },\r\n                    end: {\r\n                        line: location.stopToken.line - 1,\r\n                        character: location.stopToken.column\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\n\r\nconnection.onDefinition(({ textDocument, position }): Definition | undefined => {\r\n    const document = documents.get(textDocument.uri);\r\n    if (!document) {\r\n        return;\r\n    }\r\n    const offset = document.offsetAt(position);\r\n    const filePath = getFileName(textDocument.uri);\r\n    const token = projectParser.getTokenAtPosition(filePath, offset);\r\n\r\n    if (token != undefined) {\r\n        const text = token.symbol.text;\r\n        let location: TBRange | undefined = undefined;\r\n        const varD = getVariable(text, filePath, offset);\r\n        switch (token.symbol.type) {\r\n            case TibboBasicParser.IDENTIFIER:\r\n                if (projectParser.functions[text] != undefined) {\r\n                    location = projectParser.functions[text].location;\r\n                    for (let i = 0; i < projectParser.scopes.length; i++) {\r\n                        if (location && location.startToken.start == projectParser.scopes[i].start.start) {\r\n                            return {\r\n                                uri: getFileUrl(location.startToken.source[1].name),\r\n                                range: {\r\n                                    start: { line: projectParser.scopes[i].start.line - 1, character: projectParser.scopes[i].start.column },\r\n                                    end: { line: projectParser.scopes[i].end.line, character: projectParser.scopes[i].end.column },\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if (projectParser.consts[text] != undefined) {\r\n                    location = projectParser.consts[text].location;\r\n                }\r\n                if (projectParser.syscalls[text] != undefined) {\r\n                    return;\r\n                }\r\n                if (token.parentCtx.ruleIndex == TibboBasicParser.RULE_postfixExpression) {\r\n                    return;\r\n                }\r\n\r\n                if (varD != undefined && varD.location != undefined) {\r\n                    return {\r\n                        uri: getFileUrl(varD.location.startToken.source[1].name),\r\n                        range: {\r\n                            start: { line: varD.location.startToken.line - 1, character: varD.location.startToken.column },\r\n                            end: { line: varD.location.stopToken.line - 1, character: varD.location.stopToken.column },\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n            case TibboBasicParser.STRINGLITERAL:\r\n                if (token.parentCtx.ruleIndex == TibboBasicParser.RULE_includeStmt) {\r\n                    const dirName = path.dirname(tprPath);\r\n                    let filePath = token.getText().replace(/\"/g, '').split('\\\\').join(path.sep);\r\n                    filePath = preprocessor.getFilePath(dirName, filePath);\r\n                    return {\r\n                        uri: getFileUrl(filePath),\r\n                        range: {\r\n                            start: { line: 0, character: 0 },\r\n                            end: { line: 0, character: 0 },\r\n                        }\r\n                    };\r\n                }\r\n                break;\r\n        }\r\n        if (location != undefined) {\r\n            const uri = getFileUrl(location.startToken.source[1].name);\r\n\r\n            return {\r\n                uri: uri,\r\n                range: {\r\n                    start: {\r\n                        line: location.startToken.line - 1,\r\n                        character: location.startToken.column\r\n                    },\r\n                    end: {\r\n                        line: location.stopToken.line - 1,\r\n                        character: location.stopToken.column\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\nconnection.onDocumentSymbol(({ textDocument }): DocumentSymbol[] | undefined => {\r\n    const document = documents.get(textDocument.uri);\r\n    if (!document) {\r\n        return;\r\n    }\r\n    const symbols: Array<DocumentSymbol> = [];\r\n\r\n    const items = [\r\n        {\r\n            structure: projectParser.functions,\r\n            kind: SymbolKind.Function//Function\r\n        },\r\n        {\r\n            structure: projectParser.functions,\r\n            kind: SymbolKind.Method//Method\r\n        },\r\n        {\r\n            structure: projectParser.enums,\r\n            kind: SymbolKind.Enum, //Enum\r\n        },\r\n        {\r\n            structure: projectParser.consts,\r\n            kind: SymbolKind.Constant, //Constant\r\n        }\r\n    ]\r\n\r\n    const filePath = getFileName(textDocument.uri);\r\n    for (let i = 0; i < items.length; i++) {\r\n        for (const key in items[i].structure) {\r\n            const location = items[i].structure[key].location;\r\n            if (location != undefined && location.startToken.source[1].name == filePath) {\r\n                const children: DocumentSymbol[] = [];\r\n                const scope = projectParser.getScope(filePath, location.startToken.start);\r\n                if (scope && (items[i].kind == SymbolKind.Function || items[i].kind == SymbolKind.Method)) {\r\n                    const variables = projectParser.getScopeVariables(scope);\r\n                    for (let j = 0; j < variables.length; j++) {\r\n                        const variable = variables[j];\r\n                        children.push({\r\n                            name: variable.name,\r\n                            kind: SymbolKind.Variable,\r\n                            range: {\r\n                                start: document.positionAt(variable.location.startToken.start),\r\n                                end: document.positionAt(variable.location.stopToken.stop)\r\n                            },\r\n                            selectionRange: {\r\n                                start: document.positionAt(variable.location.startToken.start),\r\n                                end: document.positionAt(variable.location.stopToken.stop)\r\n                            }\r\n                        });\r\n                    }\r\n\r\n                }\r\n                symbols.push({\r\n                    name: items[i].structure[key].name,\r\n                    kind: items[i].kind,\r\n                    range: {\r\n                        start: document.positionAt(location.startToken.start),\r\n                        end: document.positionAt(location.stopToken.stop)\r\n                    },\r\n                    selectionRange: {\r\n                        start: document.positionAt(location.startToken.start),\r\n                        end: document.positionAt(location.stopToken.stop)\r\n                    },\r\n                    children: children\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    symbols.sort((a, b) => {\r\n        return a.range.start.line - b.range.start.line\r\n    });\r\n    return symbols;\r\n});\r\n\r\nconnection.onSignatureHelp((params: SignatureHelpParams): SignatureHelp | null | undefined => {\r\n    const help: SignatureHelp = {\r\n        signatures: [],\r\n        activeSignature: 0,\r\n        activeParameter: 0\r\n    };\r\n\r\n    const document = documents.get(params.textDocument.uri);\r\n    if (!document) {\r\n        return null;\r\n    }\r\n    const currentLine = params.position.line;\r\n    let offset = document.offsetAt(params.position);\r\n    parseFile(params.textDocument.uri);\r\n    const filePath = getFileName(params.textDocument.uri);\r\n    let token = projectParser.getTokenAtPosition(filePath, offset);\r\n    let commaCount = 0;\r\n    let cursor = document.positionAt(offset);\r\n    let found = false;\r\n    while (cursor.line == currentLine && !found) {\r\n        token = projectParser.getTokenAtPosition(filePath, offset);\r\n        cursor = document.positionAt(offset);\r\n        if (token?.symbol.text == ',') {\r\n            commaCount++;\r\n        }\r\n        if (token != undefined) {\r\n            offset = token.symbol.start - 1;\r\n            const text = token.symbol.text;\r\n            // let context: ParserRuleContext | undefined;\r\n            switch (token.symbol.type) {\r\n                case TibboBasicParser.IDENTIFIER:\r\n                    {\r\n                        //get scope\r\n                        const info: SignatureInformation = {\r\n                            label: '',\r\n                            parameters: []\r\n                        }\r\n                        if (info.parameters == undefined) {\r\n                            break;\r\n                        }\r\n                        let methodParams: Array<TBParameter> = [];\r\n                        let returnValue: string | undefined = '';\r\n                        let strIndex = 0;\r\n                        if (token.parentCtx.ruleIndex == TibboBasicParser.RULE_postfixExpression) {\r\n                            const obj = getObjectAtToken(token);\r\n                            if (obj != undefined) {\r\n                                const objFunc = getObjectFunction(obj, token.symbol.text);\r\n                                if (objFunc != undefined) {\r\n                                    found = true;\r\n                                    info.label = `syscall ${obj.name}.${objFunc.name}`;\r\n                                    methodParams = objFunc.parameters;\r\n                                    returnValue = objFunc.dataType;\r\n                                    info.documentation = {\r\n                                        kind: MarkupKind.Markdown,\r\n                                        value: getComments(objFunc.comments)\r\n                                    };\r\n                                }\r\n                            }\r\n                        }\r\n                        else if (projectParser.syscalls[text] != undefined) {\r\n                            found = true;\r\n                            const syscall = projectParser.syscalls[text];\r\n                            info.label = 'syscall ' + syscall.name;\r\n                            methodParams = syscall.parameters;\r\n                            info.documentation = {\r\n                                kind: MarkupKind.Markdown,\r\n                                value: getComments(syscall.comments)\r\n                            };\r\n                        }\r\n                        else if (projectParser.functions[text] != undefined) {\r\n                            found = true;\r\n                            const func = projectParser.functions[text];\r\n                            info.label = 'sub ' + func.name;\r\n                            methodParams = func.parameters;\r\n                            if (func.dataType != undefined) {\r\n                                returnValue = func.dataType;\r\n                            }\r\n                            info.documentation = {\r\n                                kind: MarkupKind.Markdown,\r\n                                value: getComments(func.comments)\r\n                            };\r\n                        }\r\n                        if (found) {\r\n                            info.label += '(';\r\n                            strIndex = info.label.length;\r\n                            if (methodParams.length > 0) {\r\n                                for (let i = 0; i < methodParams.length; i++) {\r\n                                    const param = methodParams[i];\r\n                                    const str = `${param.byref ? 'byref ' : ''}${param.name} as ${param.dataType}`;\r\n                                    info.label += str;\r\n                                    info.parameters.push({\r\n                                        label: [strIndex, strIndex + str.length],\r\n                                        documentation: ''\r\n                                    });\r\n                                    strIndex += str.length;\r\n                                    if (i < methodParams.length - 1) {\r\n                                        info.label += ',';\r\n                                        strIndex++;\r\n                                    }\r\n                                }\r\n                            }\r\n                            info.label += ')';\r\n                            if (returnValue != '') {\r\n                                info.label += ' as ' + returnValue;\r\n                            }\r\n                            help.signatures.push(info);\r\n                        }\r\n\r\n\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n        else {\r\n            offset--;\r\n        }\r\n    }\r\n\r\n    if (help.signatures.length > 0) {\r\n        help.activeParameter = commaCount;\r\n        return help;\r\n    }\r\n});\r\n\r\nconnection.onRenameRequest((params: RenameParams): WorkspaceEdit | null | undefined => {\r\n    const result: WorkspaceEdit = {\r\n        changes: {}\r\n    };\r\n\r\n    const document = documents.get(params.textDocument.uri);\r\n    let token: TerminalNode | undefined = undefined;\r\n    let tokenSymbolType: TBSymbolType | undefined = undefined;\r\n    if (document != undefined) {\r\n        const offset = document.offsetAt(params.position);\r\n        const filePath = getFileName(params.textDocument.uri);\r\n        token = projectParser.getTokenAtPosition(filePath, offset);\r\n        if (token == undefined) {\r\n            return result;\r\n        }\r\n        else {\r\n            tokenSymbolType = getTokenSymbol(token);\r\n        }\r\n    }\r\n\r\n    for (const fileName in preprocessor.originalFiles) {\r\n        const contents = preprocessor.originalFiles[fileName];\r\n        let index = 0;\r\n        while (index >= 0) {\r\n            if (token?.symbol.text) {\r\n                let tmpIndex = index;\r\n                tmpIndex = contents.indexOf(token?.symbol.text, index);\r\n                if (tmpIndex == index || tmpIndex < 0) {\r\n                    break;\r\n                }\r\n                const tmpToken = projectParser.getTokenAtPosition(fileName, tmpIndex);\r\n                if (tmpToken != undefined) {\r\n                    const tmpType = getTokenSymbol(tmpToken);\r\n                    let fileUri = getFileUrl(fileName);\r\n                    if (tmpType == tokenSymbolType && token.symbol.text == tmpToken.symbol.text && result.changes) {\r\n                        if (result.changes[fileUri] == undefined) {\r\n                            result.changes[fileUri] = [];\r\n                        }\r\n                        result.changes[fileUri].push({\r\n                            range: {\r\n                                start: getPosition(contents, tmpToken.symbol.start),\r\n                                end: getPosition(contents, tmpToken.symbol.stop + 1)\r\n                            },\r\n                            newText: params.newName\r\n                        })\r\n                    }\r\n                }\r\n\r\n                index = tmpIndex + 1;\r\n            }\r\n            else {\r\n                index = -1;\r\n            }\r\n\r\n        }\r\n    }\r\n    return result;\r\n});\r\n\r\nconnection.onReferences((params: ReferenceParams) => {\r\n    const result: Location[] = [];\r\n    const document = documents.get(params.textDocument.uri);\r\n    let refs: TBRange[] = [];\r\n    if (document) {\r\n        const offset = document.offsetAt(params.position);\r\n        const filePath = getFileName(params.textDocument.uri);\r\n        let token;\r\n        let currentPosition = offset - 1;\r\n        while (token == undefined) {\r\n            token = projectParser.getTokenAtPosition(filePath, offset);\r\n            currentPosition++;\r\n            if (currentPosition > offset + 1) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (token != undefined) {\r\n            let text = token.getText();\r\n            const varD: TBVariable | undefined = getVariable(text, token.symbol.source[1].name, token.symbol.start);\r\n            if (varD != undefined) {\r\n                refs = varD.references;\r\n            }\r\n            else if (projectParser.functions[text] != undefined) {\r\n                refs = projectParser.functions[text].references;\r\n            }\r\n        }\r\n    }\r\n    for (let i = 0; i < refs.length; i++) {\r\n        const ref = refs[i];\r\n        result.push({\r\n            uri: getFileUrl(ref.startToken.source[1].name),\r\n            range: {\r\n                start: { line: ref.startToken.line - 1, character: ref.startToken.column },\r\n                // end: doc.positionAt(parserError.symbol.stop)\r\n                end: { line: ref.stopToken.line - 1, character: ref.stopToken.column + (ref.stopToken.stop - ref.stopToken.start) + 1 }\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    return result;\r\n});\r\n\r\nconnection.onPrepareRename((params: PrepareRenameParams) => {\r\n    const document = documents.get(params.textDocument.uri);\r\n    if (document != undefined) {\r\n        const offset = document.offsetAt(params.position);\r\n        const filePath = getFileName(params.textDocument.uri);\r\n        const token = projectParser.getTokenAtPosition(filePath, offset - 1);\r\n        if (token != undefined) {\r\n            switch (token.symbol.type) {\r\n                case TibboBasicParser.IDENTIFIER:\r\n                    {\r\n                        //get scope\r\n                        const text = token.symbol.text.toLowerCase();\r\n                        if (token.parentCtx.ruleIndex == TibboBasicParser.RULE_postfixExpression) {\r\n                            const obj = getObjectAtToken(token);\r\n                            if (obj != undefined) {\r\n                                return null;\r\n                            }\r\n                        }\r\n                        if (preprocessor.defines[text] != undefined) {\r\n                            return null;\r\n                        }\r\n                        if (projectParser.events[text] != undefined) {\r\n                            return null;\r\n                        }\r\n                        if (projectParser.objects[text] != undefined) {\r\n                            return null;\r\n                        }\r\n                        if (projectParser.functions[text] != undefined) {\r\n                            const func = projectParser.functions[text];\r\n                            if (func.location && func.location.startToken.source[1].name.indexOf(PLATFORMS_PATH) == 0) {\r\n                                return null;\r\n                            }\r\n                        }\r\n                        if (projectParser.consts[text] != undefined) {\r\n                            const cc = projectParser.consts[text];\r\n                            if (cc.location.startToken.source[1].name.indexOf(PLATFORMS_PATH) == 0) {\r\n                                return null;\r\n                            }\r\n                        }\r\n                        if (projectParser.syscalls[text] != undefined) {\r\n                            return null;\r\n                        }\r\n                        if (projectParser.types[text] != undefined) {\r\n                            const tt = projectParser.types[text];\r\n                            if (tt.location.startToken.source[1].name.indexOf(PLATFORMS_PATH) == 0) {\r\n                                return null;\r\n                            }\r\n                        }\r\n                        if (projectParser.enums[text] != undefined) {\r\n                            const enu = projectParser.enums[text];\r\n                            if (enu.location.startToken.source[1].name.indexOf(PLATFORMS_PATH) == 0) {\r\n                                return null;\r\n                            }\r\n                        }\r\n                        for (const key in projectParser.enums) {\r\n                            const enu = projectParser.enums[key];\r\n                            for (let i = 0; i < enu.members.length; i++) {\r\n                                if (enu.members[i].name == text) {\r\n                                    if (enu.location.startToken.source[1].name.indexOf(PLATFORMS_PATH) == 0) {\r\n                                        return null;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                default:\r\n                    return null;\r\n            }\r\n            return {\r\n                start: document.positionAt(token.symbol.start),\r\n                end: document.positionAt(token.symbol.stop + 1)\r\n            }\r\n        }\r\n    }\r\n\r\n    return null;\r\n});\r\n\r\n\r\nfunction getFileName(uri: string) {\r\n    let result = uri.replace('file://', '');\r\n    if (uri.indexOf('%3A') >= 0) {\r\n        result = uri.replace('file:///', '');\r\n        result = result.replace('%3A', ':');\r\n        // result = result.charAt(0).toUpperCase() + result.slice(1);\r\n    }\r\n    result = decodeURIComponent(result);\r\n    result = result.split('/').join(path.sep);\r\n    return result;\r\n}\r\n\r\nfunction getFileUrl(filePath: string) {\r\n    let result = filePath.split(path.sep).join('/');\r\n    if (result.charAt(0) != '/') {\r\n        result = 'file:///' + result.replace(':', '%3A');\r\n    }\r\n    else {\r\n        result = 'file://' + result;\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction getVariable(variableName: string, filePath: string, offset: number): TBVariable | undefined {\r\n    const scope = projectParser.getScope(filePath, offset);\r\n    let varD: TBVariable | undefined;\r\n    for (let i = 0; i < projectParser.variables.length; i++) {\r\n        if (projectParser.variables[i].name == variableName) {\r\n            const tmp = projectParser.variables[i];\r\n            if (scope != undefined && scope.start.start <= tmp.location.startToken.start && scope.end.start >= tmp.location.startToken.start) {\r\n                //in same scope\r\n                varD = tmp;\r\n                break;\r\n            }\r\n            else {\r\n                const declaredScope = projectParser.getScope(tmp.location.startToken.source[1].name, tmp.location.startToken.start);\r\n                if (declaredScope == undefined) {\r\n                    varD = tmp;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return varD;\r\n}\r\n\r\nfunction getCommentString(comments: Array<CommonToken>) {\r\n    const result = comments.map(comment => {\r\n        return comment.text.substring(1);\r\n    }).join('\\n');\r\n    return result;\r\n}\r\n\r\nfunction getComments(comments: Array<CommonToken>) {\r\n    let result = comments.map(comment => {\r\n        return comment.text.substring(1);\r\n    }).join('\\n');\r\n    result = html2markdown(result);\r\n    // result = turndownService.turndown(result);\r\n    // result = mkconverter.makeMarkdown(result, dom.window.document);\r\n    return result;\r\n}\r\n\r\nfunction parseFile(fileUri: string) {\r\n    const doc = documents.get(fileUri);\r\n    if (doc == undefined) {\r\n        return;\r\n    }\r\n    const text = doc.getText();\r\n    const currentFilePath = getFileName(fileUri);\r\n    preprocessor.originalFiles[currentFilePath] = text;\r\n    preprocessor.files[currentFilePath] = '';\r\n\r\n    const filePath = getFileName(fileUri);\r\n    const dirName = path.dirname(filePath);\r\n\r\n    preprocessor.parseFile(dirName, path.basename(filePath));\r\n    const fileContents = preprocessor.files[filePath];\r\n    projectParser.parseFile(filePath, fileContents);\r\n}\r\n\r\nfunction notifyDiagnostics() {\r\n    for (const filePath in preprocessor.files) {\r\n\r\n\r\n        const fileURI = getFileUrl(filePath);\r\n        const diagnostics: Diagnostic[] = [];\r\n        if (projectParser.errors[filePath] != undefined) {\r\n            for (let i = 0; i < projectParser.errors[filePath].length; i++) {\r\n\r\n                const parserError = projectParser.errors[filePath][i];\r\n                const diagnostic: Diagnostic = {\r\n                    severity: DiagnosticSeverity.Error,\r\n                    range: {\r\n                        start: { line: parserError.symbol.line - 1, character: parserError.symbol.column },\r\n                        // end: doc.positionAt(parserError.symbol.stop)\r\n                        end: { line: parserError.symbol.line - 1, character: parserError.symbol.column + (parserError.symbol.stop - parserError.symbol.start) + 1 }\r\n                    },\r\n                    message: parserError.message,\r\n                    source: 'ex'\r\n                };\r\n                diagnostic.relatedInformation = [\r\n                    {\r\n                        location: {\r\n                            uri: getFileUrl(filePath),\r\n                            range: Object.assign({}, diagnostic.range)\r\n                        },\r\n                        message: parserError.message\r\n                    }\r\n                ];\r\n                diagnostics.push(diagnostic);\r\n            }\r\n            // connection.sendDiagnostics({ uri: fileURI, diagnostics });\r\n        }\r\n\r\n        for (let i = 0; i < projectParser.variables.length; i++) {\r\n            const variable = projectParser.variables[i];\r\n            if (variable.references.length == 0) {\r\n                const loc = variable.location;\r\n                if (loc.startToken.source[1].name != filePath) {\r\n                    continue;\r\n                }\r\n                // const diagnostic: Diagnostic = {\r\n                //     severity: DiagnosticSeverity.Warning,\r\n                //     range: {\r\n                //         start: { line: loc.startToken.line - 1, character: loc.startToken.column },\r\n                //         // end: doc.positionAt(parserError.symbol.stop)\r\n                //         end: { line: loc.stopToken.line - 1, character: loc.stopToken.column + loc.stopToken.text.length }\r\n                //     },\r\n                //     message: `${variable.name} is not used anywhere`,\r\n                //     source: 'ex'\r\n                // };\r\n                // diagnostic.relatedInformation = [\r\n                //     {\r\n                //         location: {\r\n                //             uri: getFileUrl(filePath),\r\n                //             range: Object.assign({}, diagnostic.range)\r\n                //         },\r\n                //         message: `Unused variable`,\r\n                //     }\r\n                // ];\r\n                // diagnostics.push(diagnostic);\r\n            }\r\n        }\r\n\r\n        for (const funcName in projectParser.functions) {\r\n            if (projectParser.functions[funcName].references.length == 0 && projectParser.functions[funcName].declaration != undefined) {\r\n                if (projectParser.events[funcName] != undefined) {\r\n                    continue;\r\n                }\r\n                const loc = projectParser.functions[funcName].location;\r\n                if (loc) {\r\n                    if (loc.startToken.source[1].name != filePath) {\r\n                        continue;\r\n                    }\r\n                    const diagnostic: Diagnostic = {\r\n                        severity: DiagnosticSeverity.Warning,\r\n                        range: {\r\n                            start: { line: loc.startToken.line - 1, character: loc.startToken.column },\r\n                            // end: doc.positionAt(parserError.symbol.stop)\r\n                            end: { line: loc.stopToken.line - 1, character: loc.stopToken.column + loc.stopToken.text.length }\r\n                        },\r\n                        message: `${funcName} is not called anywhere`,\r\n                        source: 'ex'\r\n                    };\r\n                    diagnostic.relatedInformation = [\r\n                        {\r\n                            location: {\r\n                                uri: getFileUrl(filePath),\r\n                                range: Object.assign({}, diagnostic.range)\r\n                            },\r\n                            message: `${funcName} is not called anywhere`,\r\n                        }\r\n                    ];\r\n                    // diagnostics.push(diagnostic);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n\r\n        // diagnostics = [];\r\n        // let index = 0;\r\n        // const oLines = preprocessor.originalFiles[filePath].split('\\n');\r\n        // const nLines = preprocessor.files[filePath].split('\\n');\r\n        // const contents = preprocessor.originalFiles[filePath];\r\n        // for (let i = 0; i < oLines.length; i++) {\r\n        //     if (oLines[i] != nLines[i]) {\r\n        //         const range = {\r\n        //             start: getPosition(contents, index),\r\n        //             end: getPosition(contents, index + oLines[i].length)\r\n        //         };\r\n        //         diagnostics.push({\r\n        //             range: range,\r\n        //             severity: 4,\r\n        //             message: 'not included',\r\n        //             tags: [\r\n        //                 DiagnosticTag.Unnecessary\r\n        //             ]\r\n        //         });\r\n        //     }\r\n        //     index += oLines[i].length + 1;\r\n        // }\r\n\r\n        connection.sendDiagnostics({ uri: fileURI, diagnostics });\r\n    }\r\n}\r\n\r\nfunction copyProperties() {\r\n    preprocessor.defines = JSON.parse(JSON.stringify(platformPreprocessor.defines));\r\n    preprocessor.codes = JSON.parse(JSON.stringify(platformPreprocessor.codes));\r\n    preprocessor.files = JSON.parse(JSON.stringify(platformPreprocessor.files));\r\n    // preprocessor.originalFiles = JSON.parse(JSON.stringify(platformPreprocessor.originalFiles));\r\n\r\n    projectParser.objects = platformProjectParser.objects;\r\n    projectParser.syscalls = platformProjectParser.syscalls;\r\n    projectParser.events = platformProjectParser.events;\r\n    projectParser.errors = platformProjectParser.errors;\r\n\r\n    const props = ['tokens', 'trees', 'events', 'enums', 'functions',\r\n        'subs', 'consts', 'types'];\r\n    props.forEach((prop) => {\r\n        projectParser[prop] = {};\r\n        const obj = platformProjectParser[prop];\r\n        for (const key in obj) {\r\n            projectParser[prop][key] = obj[key];\r\n        }\r\n    })\r\n\r\n    projectParser.variables = [];\r\n    projectParser.scopes = [];\r\n    projectParser.variables = projectParser.variables.concat(platformProjectParser.variables);\r\n    projectParser.scopes = projectParser.scopes.concat(platformProjectParser.scopes);\r\n}\r\n\r\nfunction getObjectAtToken(token: any): TBObject | undefined {\r\n    while (token.parentCtx != undefined) {\r\n        token = token.parentCtx;\r\n        if (token.ruleIndex == TibboBasicParser.RULE_unaryExpression) {\r\n            const name = token.start.text;\r\n            if (projectParser.objects[name] != undefined) {\r\n                return projectParser.objects[name];\r\n            }\r\n        }\r\n    }\r\n\r\n    return undefined;\r\n}\r\n\r\nfunction getObjectFunction(obj: TBObject, functionName: string): TBObjectFunction | undefined {\r\n    for (let i = 0; i < obj.functions.length; i++) {\r\n        if (obj.functions[i].name == functionName) {\r\n            return obj.functions[i];\r\n        }\r\n    }\r\n    return undefined;\r\n}\r\n\r\nfunction getObjectProperty(obj: TBObject, propName: string): TBObjectProperty | undefined {\r\n    for (let i = 0; i < obj.properties.length; i++) {\r\n        if (obj.properties[i].name == propName) {\r\n            return obj.properties[i];\r\n        }\r\n    }\r\n    return undefined;\r\n}\r\n\r\nfunction getTokenSymbol(token: TerminalNode): TBSymbolType | undefined {\r\n    let symbolType: TBSymbolType | undefined = undefined;\r\n    const text = token.symbol.text;\r\n    switch (token.symbol.type) {\r\n        case TibboBasicParser.IDENTIFIER:\r\n            //get scope\r\n            if (token.parentCtx.ruleIndex == TibboBasicParser.RULE_postfixExpression) {\r\n                const obj = getObjectAtToken(token);\r\n                if (obj != undefined) {\r\n                    const func = getObjectFunction(obj, token.symbol.text);\r\n                    const prop = getObjectProperty(obj, token.symbol.text);\r\n                    if (func != undefined) {\r\n                        symbolType = TBSymbolType.OBJECT_PROPERTY;\r\n                    }\r\n                    else if (prop != undefined) {\r\n                        symbolType = TBSymbolType.OBJECT_PROPERTY;\r\n                    }\r\n                }\r\n            }\r\n            else if (preprocessor.defines[text] != undefined) {\r\n                symbolType = TBSymbolType.DEFINE;\r\n            }\r\n            else if (projectParser.events[text.toLowerCase()] != undefined) {\r\n                //\r\n            }\r\n            else if (projectParser.objects[text.toLowerCase()] != undefined) {\r\n                symbolType = TBSymbolType.OBJECT;\r\n            }\r\n            else if (projectParser.functions[text] != undefined) {\r\n                if (projectParser.functions[text].dataType != undefined) {\r\n                    symbolType = TBSymbolType.FUNCTION;\r\n                }\r\n                else {\r\n                    symbolType = TBSymbolType.SUB;\r\n                }\r\n\r\n            }\r\n            else if (projectParser.consts[text] != undefined) {\r\n                symbolType = TBSymbolType.CONST;\r\n            }\r\n            else if (projectParser.enums[text.toLowerCase()] != undefined) {\r\n                symbolType = TBSymbolType.ENUM;\r\n            }\r\n            else if (projectParser.syscalls[text] != undefined) {\r\n                symbolType = TBSymbolType.SYSCALL;\r\n            }\r\n            else if (projectParser.types[text.toLowerCase()] != undefined) {\r\n                symbolType = TBSymbolType.TYPE;\r\n            }\r\n            if (symbolType == undefined) {\r\n                //enums\r\n                for (const key in projectParser.enums) {\r\n                    const enumItem = projectParser.enums[key];\r\n                    for (let i = 0; i < enumItem.members.length; i++) {\r\n                        if (text.toLowerCase() == enumItem.members[i].name.toLowerCase()) {\r\n                            symbolType = TBSymbolType.ENUM_MEMBER;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (symbolType == undefined) {\r\n                //TODO get correct variable at scope\r\n                const varD: TBVariable | undefined = getVariable(text, token.symbol.source[1].name, token.symbol.start);\r\n                if (varD != undefined) {\r\n                    symbolType = TBSymbolType.DIM;\r\n                }\r\n            }\r\n            break;\r\n    }\r\n\r\n    return symbolType;\r\n}\r\n\r\nfunction getProjectStructure() {\r\n    //TODO only send structure if changed\r\n    const notification = new rpc.NotificationType<string>('projectExplorer');\r\n    const objects: Array<ProjectExplorerItem> = [];\r\n    const events: Array<ProjectExplorerItem> = [];\r\n    Object.keys(projectParser.objects).forEach((key) => {\r\n        const object = projectParser.objects[key];\r\n        const children: Array<ProjectExplorerItem> = [];\r\n        const item = {\r\n            name: key,\r\n            docs: getCommentString(object.comments),\r\n            children: children,\r\n        };\r\n        for (let i = 0; i < object.properties.length; i++) {\r\n            children.push({\r\n                name: object.properties[i].name,\r\n                docs: getCommentString(object.properties[i].comments)\r\n            });\r\n        }\r\n        objects.push(item);\r\n    });\r\n    Object.keys(projectParser.events).forEach((key) => {\r\n        const event = projectParser.events[key];\r\n        const item = {\r\n            name: key,\r\n            docs: getCommentString(event.comments)\r\n        };\r\n        events.push(item);\r\n    });\r\n    const tmpRootItems: ProjectExplorerItem[] = [\r\n        {\r\n            name: PROJECT_EXPLORER_EVENTS,\r\n            children: events,\r\n            docs: 'Platform Events. Double click on event to create or edit an event handler in the source code.'\r\n        },\r\n        {\r\n            name: PROJECT_EXPLORER_PROJECT,\r\n            children: [],\r\n            docs: ''\r\n        },\r\n        {\r\n            name: PROJECT_EXPLORER_LIBRARIES,\r\n            children: [],\r\n            docs: ''\r\n        },\r\n        {\r\n            name: PROJECT_EXPLORER_PLATFORM,\r\n            children: [\r\n                {\r\n                    name: 'Objects',\r\n                    children: objects,\r\n                    docs: 'Platform objects. Hover over an item name to get help.'\r\n                }\r\n            ],\r\n            docs: ''\r\n        }\r\n    ];\r\n    if (objects.length > 0) {\r\n        if (JSON.stringify(rootItems) != JSON.stringify(tmpRootItems)) {\r\n            rootItems = tmpRootItems;\r\n        }\r\n        sortProjectChildren(rootItems);\r\n        connection.sendNotification(notification, JSON.stringify(rootItems));\r\n    }\r\n}\r\n\r\nfunction sortProjectChildren(children: ProjectExplorerItem[]) {\r\n    children.sort((a, b) => {\r\n        if (a.name < b.name)\r\n            return -1;\r\n        if (a.name > b.name)\r\n            return 1;\r\n        return 0;\r\n    });\r\n    for (let i = 0; i < children.length; i++) {\r\n        const items = children[i].children;\r\n        if (items != undefined) {\r\n            sortProjectChildren(items);\r\n        }\r\n    }\r\n}\r\n\r\nfunction getPosition(text: string, offset: number): Position {\r\n    const lines = text.split('\\n');\r\n    let index = 0;\r\n    let lineNumber = 0;\r\n    let column = 0;\r\n    for (let i = 0; i < lines.length; i++) {\r\n        const len = lines[i].length + 1;//include newline\r\n        if (index + len < offset) {\r\n            index += len;\r\n        }\r\n        else {\r\n            lineNumber = i;\r\n            column = offset - index;\r\n            break;\r\n        }\r\n    }\r\n    return {\r\n        line: lineNumber,\r\n        character: column\r\n    }\r\n}\r\n\r\nconnection.onDidOpenTextDocument((params) => {\r\n    // A text document got opened in VSCode.\r\n    // params.uri uniquely identifies the document. For documents store on disk this is a file URI.\r\n    // params.text the initial full content of the document.\r\n    connection.console.log(`${params.textDocument.uri} opened.`);\r\n});\r\nconnection.onDidChangeTextDocument((params) => {\r\n    // The content of a text document did change in VSCode.\r\n    // params.uri uniquely identifies the document.\r\n    // params.contentChanges describe the content changes to the document.\r\n    connection.console.log(`${params.textDocument.uri} changed: ${JSON.stringify(params.contentChanges)}`);\r\n});\r\nconnection.onDidCloseTextDocument((params) => {\r\n    // A text document got closed in VSCode.\r\n    // params.uri uniquely identifies the document.\r\n    connection.console.log(`${params.textDocument.uri} closed.`);\r\n});\r\n\r\n\r\n// Make the text document manager listen on the connection\r\n// for open, change and close text document events\r\ndocuments.listen(connection);\r\n\r\n// Listen on the connection\r\nconnection.listen();\r\n\r\n\r\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ral_1 = require(\"../common/ral\");\nconst util_1 = require(\"util\");\nconst disposable_1 = require(\"../common/disposable\");\nconst messageBuffer_1 = require(\"../common/messageBuffer\");\nclass MessageBuffer extends messageBuffer_1.AbstractMessageBuffer {\n    constructor(encoding = 'utf-8') {\n        super(encoding);\n    }\n    emptyBuffer() {\n        return MessageBuffer.emptyBuffer;\n    }\n    fromString(value, encoding) {\n        return Buffer.from(value, encoding);\n    }\n    toString(value, encoding) {\n        if (value instanceof Buffer) {\n            return value.toString(encoding);\n        }\n        else {\n            return new util_1.TextDecoder(encoding).decode(value);\n        }\n    }\n    asNative(buffer, length) {\n        if (length === undefined) {\n            return buffer instanceof Buffer ? buffer : Buffer.from(buffer);\n        }\n        else {\n            return buffer instanceof Buffer ? buffer.slice(0, length) : Buffer.from(buffer, 0, length);\n        }\n    }\n    allocNative(length) {\n        return Buffer.allocUnsafe(length);\n    }\n}\nMessageBuffer.emptyBuffer = Buffer.allocUnsafe(0);\nclass ReadableStreamWrapper {\n    constructor(stream) {\n        this.stream = stream;\n    }\n    onClose(listener) {\n        this.stream.on('close', listener);\n        return disposable_1.Disposable.create(() => this.stream.off('close', listener));\n    }\n    onError(listener) {\n        this.stream.on('error', listener);\n        return disposable_1.Disposable.create(() => this.stream.off('error', listener));\n    }\n    onEnd(listener) {\n        this.stream.on('end', listener);\n        return disposable_1.Disposable.create(() => this.stream.off('end', listener));\n    }\n    onData(listener) {\n        this.stream.on('data', listener);\n        return disposable_1.Disposable.create(() => this.stream.off('data', listener));\n    }\n}\nclass WritableStreamWrapper {\n    constructor(stream) {\n        this.stream = stream;\n    }\n    onClose(listener) {\n        this.stream.on('close', listener);\n        return disposable_1.Disposable.create(() => this.stream.off('close', listener));\n    }\n    onError(listener) {\n        this.stream.on('error', listener);\n        return disposable_1.Disposable.create(() => this.stream.off('error', listener));\n    }\n    onEnd(listener) {\n        this.stream.on('end', listener);\n        return disposable_1.Disposable.create(() => this.stream.off('end', listener));\n    }\n    write(data, encoding) {\n        return new Promise((resolve, reject) => {\n            const callback = (error) => {\n                if (error === undefined || error === null) {\n                    resolve();\n                }\n                else {\n                    reject(error);\n                }\n            };\n            if (typeof data === 'string') {\n                this.stream.write(data, encoding, callback);\n            }\n            else {\n                this.stream.write(data, callback);\n            }\n        });\n    }\n    end() {\n        this.stream.end();\n    }\n}\nconst _ril = Object.freeze({\n    messageBuffer: Object.freeze({\n        create: (encoding) => new MessageBuffer(encoding)\n    }),\n    applicationJson: Object.freeze({\n        encoder: Object.freeze({\n            name: 'application/json',\n            encode: (msg, options) => {\n                try {\n                    return Promise.resolve(Buffer.from(JSON.stringify(msg, undefined, 0), options.charset));\n                }\n                catch (err) {\n                    return Promise.reject(err);\n                }\n            }\n        }),\n        decoder: Object.freeze({\n            name: 'application/json',\n            decode: (buffer, options) => {\n                try {\n                    if (buffer instanceof Buffer) {\n                        return Promise.resolve(JSON.parse(buffer.toString(options.charset)));\n                    }\n                    else {\n                        return Promise.resolve(JSON.parse(new util_1.TextDecoder(options.charset).decode(buffer)));\n                    }\n                }\n                catch (err) {\n                    return Promise.reject(err);\n                }\n            }\n        })\n    }),\n    stream: Object.freeze({\n        asReadableStream: (stream) => new ReadableStreamWrapper(stream),\n        asWritableStream: (stream) => new WritableStreamWrapper(stream)\n    }),\n    console: console,\n    timer: Object.freeze({\n        setTimeout(callback, ms, ...args) {\n            return setTimeout(callback, ms, ...args);\n        },\n        clearTimeout(handle) {\n            clearTimeout(handle);\n        },\n        setImmediate(callback, ...args) {\n            return setImmediate(callback, ...args);\n        },\n        clearImmediate(handle) {\n            clearImmediate(handle);\n        }\n    })\n});\nfunction RIL() {\n    return _ril;\n}\n(function (RIL) {\n    function install() {\n        ral_1.default.install(_ril);\n    }\n    RIL.install = install;\n})(RIL || (RIL = {}));\nexports.default = RIL;\n//# sourceMappingURL=ril.js.map","module.exports = require(\"util\");","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AbstractMessageBuffer = void 0;\nconst CR = 13;\nconst LF = 10;\nconst CRLF = '\\r\\n';\nclass AbstractMessageBuffer {\n    constructor(encoding = 'utf-8') {\n        this._encoding = encoding;\n        this._chunks = [];\n        this._totalLength = 0;\n    }\n    get encoding() {\n        return this._encoding;\n    }\n    append(chunk) {\n        const toAppend = typeof chunk === 'string' ? this.fromString(chunk, this._encoding) : chunk;\n        this._chunks.push(toAppend);\n        this._totalLength += toAppend.byteLength;\n    }\n    tryReadHeaders() {\n        if (this._chunks.length === 0) {\n            return undefined;\n        }\n        let state = 0;\n        let chunkIndex = 0;\n        let offset = 0;\n        let chunkBytesRead = 0;\n        row: while (chunkIndex < this._chunks.length) {\n            const chunk = this._chunks[chunkIndex];\n            offset = 0;\n            column: while (offset < chunk.length) {\n                const value = chunk[offset];\n                switch (value) {\n                    case CR:\n                        switch (state) {\n                            case 0:\n                                state = 1;\n                                break;\n                            case 2:\n                                state = 3;\n                                break;\n                            default:\n                                state = 0;\n                        }\n                        break;\n                    case LF:\n                        switch (state) {\n                            case 1:\n                                state = 2;\n                                break;\n                            case 3:\n                                state = 4;\n                                offset++;\n                                break row;\n                            default:\n                                state = 0;\n                        }\n                        break;\n                    default:\n                        state = 0;\n                }\n                offset++;\n            }\n            chunkBytesRead += chunk.byteLength;\n            chunkIndex++;\n        }\n        if (state !== 4) {\n            return undefined;\n        }\n        // The buffer contains the two CRLF at the end. So we will\n        // have two empty lines after the split at the end as well.\n        const buffer = this._read(chunkBytesRead + offset);\n        const result = new Map();\n        const headers = this.toString(buffer, 'ascii').split(CRLF);\n        if (headers.length < 2) {\n            return result;\n        }\n        for (let i = 0; i < headers.length - 2; i++) {\n            const header = headers[i];\n            const index = header.indexOf(':');\n            if (index === -1) {\n                throw new Error('Message header must separate key and value using :');\n            }\n            const key = header.substr(0, index);\n            const value = header.substr(index + 1).trim();\n            result.set(key, value);\n        }\n        return result;\n    }\n    tryReadBody(length) {\n        if (this._totalLength < length) {\n            return undefined;\n        }\n        return this._read(length);\n    }\n    get numberOfBytes() {\n        return this._totalLength;\n    }\n    _read(byteCount) {\n        if (byteCount === 0) {\n            return this.emptyBuffer();\n        }\n        if (byteCount > this._totalLength) {\n            throw new Error(`Cannot read so many bytes!`);\n        }\n        if (this._chunks[0].byteLength === byteCount) {\n            // super fast path, precisely first chunk must be returned\n            const chunk = this._chunks[0];\n            this._chunks.shift();\n            this._totalLength -= byteCount;\n            return this.asNative(chunk);\n        }\n        if (this._chunks[0].byteLength > byteCount) {\n            // fast path, the reading is entirely within the first chunk\n            const chunk = this._chunks[0];\n            const result = this.asNative(chunk, byteCount);\n            this._chunks[0] = chunk.slice(byteCount);\n            this._totalLength -= byteCount;\n            return result;\n        }\n        const result = this.allocNative(byteCount);\n        let resultOffset = 0;\n        let chunkIndex = 0;\n        while (byteCount > 0) {\n            const chunk = this._chunks[chunkIndex];\n            if (chunk.byteLength > byteCount) {\n                // this chunk will survive\n                const chunkPart = chunk.slice(0, byteCount);\n                result.set(chunkPart, resultOffset);\n                resultOffset += byteCount;\n                this._chunks[chunkIndex] = chunk.slice(byteCount);\n                this._totalLength -= byteCount;\n                byteCount -= byteCount;\n            }\n            else {\n                // this chunk will be entirely read\n                result.set(chunk, resultOffset);\n                resultOffset += chunk.byteLength;\n                this._chunks.shift();\n                this._totalLength -= chunk.byteLength;\n                byteCount -= chunk.byteLength;\n            }\n        }\n        return result;\n    }\n}\nexports.AbstractMessageBuffer = AbstractMessageBuffer;\n//# sourceMappingURL=messageBuffer.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ReadableStreamMessageReader = exports.AbstractMessageReader = exports.MessageReader = void 0;\nconst ral_1 = require(\"./ral\");\nconst Is = require(\"./is\");\nconst events_1 = require(\"./events\");\nvar MessageReader;\n(function (MessageReader) {\n    function is(value) {\n        let candidate = value;\n        return candidate && Is.func(candidate.listen) && Is.func(candidate.dispose) &&\n            Is.func(candidate.onError) && Is.func(candidate.onClose) && Is.func(candidate.onPartialMessage);\n    }\n    MessageReader.is = is;\n})(MessageReader = exports.MessageReader || (exports.MessageReader = {}));\nclass AbstractMessageReader {\n    constructor() {\n        this.errorEmitter = new events_1.Emitter();\n        this.closeEmitter = new events_1.Emitter();\n        this.partialMessageEmitter = new events_1.Emitter();\n    }\n    dispose() {\n        this.errorEmitter.dispose();\n        this.closeEmitter.dispose();\n    }\n    get onError() {\n        return this.errorEmitter.event;\n    }\n    fireError(error) {\n        this.errorEmitter.fire(this.asError(error));\n    }\n    get onClose() {\n        return this.closeEmitter.event;\n    }\n    fireClose() {\n        this.closeEmitter.fire(undefined);\n    }\n    get onPartialMessage() {\n        return this.partialMessageEmitter.event;\n    }\n    firePartialMessage(info) {\n        this.partialMessageEmitter.fire(info);\n    }\n    asError(error) {\n        if (error instanceof Error) {\n            return error;\n        }\n        else {\n            return new Error(`Reader received error. Reason: ${Is.string(error.message) ? error.message : 'unknown'}`);\n        }\n    }\n}\nexports.AbstractMessageReader = AbstractMessageReader;\nvar ResolvedMessageReaderOptions;\n(function (ResolvedMessageReaderOptions) {\n    function fromOptions(options) {\n        var _a;\n        let charset;\n        let result;\n        let contentDecoder;\n        const contentDecoders = new Map();\n        let contentTypeDecoder;\n        const contentTypeDecoders = new Map();\n        if (options === undefined || typeof options === 'string') {\n            charset = options !== null && options !== void 0 ? options : 'utf-8';\n        }\n        else {\n            charset = (_a = options.charset) !== null && _a !== void 0 ? _a : 'utf-8';\n            if (options.contentDecoder !== undefined) {\n                contentDecoder = options.contentDecoder;\n                contentDecoders.set(contentDecoder.name, contentDecoder);\n            }\n            if (options.contentDecoders !== undefined) {\n                for (const decoder of options.contentDecoders) {\n                    contentDecoders.set(decoder.name, decoder);\n                }\n            }\n            if (options.contentTypeDecoder !== undefined) {\n                contentTypeDecoder = options.contentTypeDecoder;\n                contentTypeDecoders.set(contentTypeDecoder.name, contentTypeDecoder);\n            }\n            if (options.contentTypeDecoders !== undefined) {\n                for (const decoder of options.contentTypeDecoders) {\n                    contentTypeDecoders.set(decoder.name, decoder);\n                }\n            }\n        }\n        if (contentTypeDecoder === undefined) {\n            contentTypeDecoder = ral_1.default().applicationJson.decoder;\n            contentTypeDecoders.set(contentTypeDecoder.name, contentTypeDecoder);\n        }\n        return { charset, contentDecoder, contentDecoders, contentTypeDecoder, contentTypeDecoders };\n    }\n    ResolvedMessageReaderOptions.fromOptions = fromOptions;\n})(ResolvedMessageReaderOptions || (ResolvedMessageReaderOptions = {}));\nclass ReadableStreamMessageReader extends AbstractMessageReader {\n    constructor(readable, options) {\n        super();\n        this.readable = readable;\n        this.options = ResolvedMessageReaderOptions.fromOptions(options);\n        this.buffer = ral_1.default().messageBuffer.create(this.options.charset);\n        this._partialMessageTimeout = 10000;\n        this.nextMessageLength = -1;\n        this.messageToken = 0;\n    }\n    set partialMessageTimeout(timeout) {\n        this._partialMessageTimeout = timeout;\n    }\n    get partialMessageTimeout() {\n        return this._partialMessageTimeout;\n    }\n    listen(callback) {\n        this.nextMessageLength = -1;\n        this.messageToken = 0;\n        this.partialMessageTimer = undefined;\n        this.callback = callback;\n        const result = this.readable.onData((data) => {\n            this.onData(data);\n        });\n        this.readable.onError((error) => this.fireError(error));\n        this.readable.onClose(() => this.fireClose());\n        return result;\n    }\n    onData(data) {\n        this.buffer.append(data);\n        while (true) {\n            if (this.nextMessageLength === -1) {\n                const headers = this.buffer.tryReadHeaders();\n                if (!headers) {\n                    return;\n                }\n                const contentLength = headers.get('Content-Length');\n                if (!contentLength) {\n                    throw new Error('Header must provide a Content-Length property.');\n                }\n                const length = parseInt(contentLength);\n                if (isNaN(length)) {\n                    throw new Error('Content-Length value must be a number.');\n                }\n                this.nextMessageLength = length;\n            }\n            const body = this.buffer.tryReadBody(this.nextMessageLength);\n            if (body === undefined) {\n                /** We haven't received the full message yet. */\n                this.setPartialMessageTimer();\n                return;\n            }\n            this.clearPartialMessageTimer();\n            this.nextMessageLength = -1;\n            let p;\n            if (this.options.contentDecoder !== undefined) {\n                p = this.options.contentDecoder.decode(body);\n            }\n            else {\n                p = Promise.resolve(body);\n            }\n            p.then((value) => {\n                this.options.contentTypeDecoder.decode(value, this.options).then((msg) => {\n                    this.callback(msg);\n                }, (error) => {\n                    this.fireError(error);\n                });\n            }, (error) => {\n                this.fireError(error);\n            });\n        }\n    }\n    clearPartialMessageTimer() {\n        if (this.partialMessageTimer) {\n            ral_1.default().timer.clearTimeout(this.partialMessageTimer);\n            this.partialMessageTimer = undefined;\n        }\n    }\n    setPartialMessageTimer() {\n        this.clearPartialMessageTimer();\n        if (this._partialMessageTimeout <= 0) {\n            return;\n        }\n        this.partialMessageTimer = ral_1.default().timer.setTimeout((token, timeout) => {\n            this.partialMessageTimer = undefined;\n            if (token === this.messageToken) {\n                this.firePartialMessage({ messageToken: token, waitingTime: timeout });\n                this.setPartialMessageTimer();\n            }\n        }, this._partialMessageTimeout, this.messageToken, this._partialMessageTimeout);\n    }\n}\nexports.ReadableStreamMessageReader = ReadableStreamMessageReader;\n//# sourceMappingURL=messageReader.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WriteableStreamMessageWriter = exports.AbstractMessageWriter = exports.MessageWriter = void 0;\nconst ral_1 = require(\"./ral\");\nconst Is = require(\"./is\");\nconst semaphore_1 = require(\"./semaphore\");\nconst events_1 = require(\"./events\");\nconst ContentLength = 'Content-Length: ';\nconst CRLF = '\\r\\n';\nvar MessageWriter;\n(function (MessageWriter) {\n    function is(value) {\n        let candidate = value;\n        return candidate && Is.func(candidate.dispose) && Is.func(candidate.onClose) &&\n            Is.func(candidate.onError) && Is.func(candidate.write);\n    }\n    MessageWriter.is = is;\n})(MessageWriter = exports.MessageWriter || (exports.MessageWriter = {}));\nclass AbstractMessageWriter {\n    constructor() {\n        this.errorEmitter = new events_1.Emitter();\n        this.closeEmitter = new events_1.Emitter();\n    }\n    dispose() {\n        this.errorEmitter.dispose();\n        this.closeEmitter.dispose();\n    }\n    get onError() {\n        return this.errorEmitter.event;\n    }\n    fireError(error, message, count) {\n        this.errorEmitter.fire([this.asError(error), message, count]);\n    }\n    get onClose() {\n        return this.closeEmitter.event;\n    }\n    fireClose() {\n        this.closeEmitter.fire(undefined);\n    }\n    asError(error) {\n        if (error instanceof Error) {\n            return error;\n        }\n        else {\n            return new Error(`Writer received error. Reason: ${Is.string(error.message) ? error.message : 'unknown'}`);\n        }\n    }\n}\nexports.AbstractMessageWriter = AbstractMessageWriter;\nvar ResolvedMessageWriterOptions;\n(function (ResolvedMessageWriterOptions) {\n    function fromOptions(options) {\n        var _a, _b;\n        if (options === undefined || typeof options === 'string') {\n            return { charset: options !== null && options !== void 0 ? options : 'utf-8', contentTypeEncoder: ral_1.default().applicationJson.encoder };\n        }\n        else {\n            return { charset: (_a = options.charset) !== null && _a !== void 0 ? _a : 'utf-8', contentEncoder: options.contentEncoder, contentTypeEncoder: (_b = options.contentTypeEncoder) !== null && _b !== void 0 ? _b : ral_1.default().applicationJson.encoder };\n        }\n    }\n    ResolvedMessageWriterOptions.fromOptions = fromOptions;\n})(ResolvedMessageWriterOptions || (ResolvedMessageWriterOptions = {}));\nclass WriteableStreamMessageWriter extends AbstractMessageWriter {\n    constructor(writable, options) {\n        super();\n        this.writable = writable;\n        this.options = ResolvedMessageWriterOptions.fromOptions(options);\n        this.errorCount = 0;\n        this.writeSemaphore = new semaphore_1.Semaphore(1);\n        this.writable.onError((error) => this.fireError(error));\n        this.writable.onClose(() => this.fireClose());\n    }\n    async write(msg) {\n        return this.writeSemaphore.lock(async () => {\n            const payload = this.options.contentTypeEncoder.encode(msg, this.options).then((buffer) => {\n                if (this.options.contentEncoder !== undefined) {\n                    return this.options.contentEncoder.encode(buffer);\n                }\n                else {\n                    return buffer;\n                }\n            });\n            return payload.then((buffer) => {\n                const headers = [];\n                headers.push(ContentLength, buffer.byteLength.toString(), CRLF);\n                headers.push(CRLF);\n                return this.doWrite(msg, headers, buffer);\n            }, (error) => {\n                this.fireError(error);\n                throw error;\n            });\n        });\n    }\n    async doWrite(msg, headers, data) {\n        try {\n            await this.writable.write(headers.join(''), 'ascii');\n            return this.writable.write(data);\n        }\n        catch (error) {\n            this.handleError(error, msg);\n            return Promise.reject(error);\n        }\n    }\n    handleError(error, msg) {\n        this.errorCount++;\n        this.fireError(error, msg, this.errorCount);\n    }\n    end() {\n        this.writable.end();\n    }\n}\nexports.WriteableStreamMessageWriter = WriteableStreamMessageWriter;\n//# sourceMappingURL=messageWriter.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Semaphore = void 0;\nconst ral_1 = require(\"./ral\");\nclass Semaphore {\n    constructor(capacity = 1) {\n        if (capacity <= 0) {\n            throw new Error('Capacity must be greater than 0');\n        }\n        this._capacity = capacity;\n        this._active = 0;\n        this._waiting = [];\n    }\n    lock(thunk) {\n        return new Promise((resolve, reject) => {\n            this._waiting.push({ thunk, resolve, reject });\n            this.runNext();\n        });\n    }\n    get active() {\n        return this._active;\n    }\n    runNext() {\n        if (this._waiting.length === 0 || this._active === this._capacity) {\n            return;\n        }\n        ral_1.default().timer.setImmediate(() => this.doRunNext());\n    }\n    doRunNext() {\n        if (this._waiting.length === 0 || this._active === this._capacity) {\n            return;\n        }\n        const next = this._waiting.shift();\n        this._active++;\n        if (this._active > this._capacity) {\n            throw new Error(`To many thunks active`);\n        }\n        try {\n            const result = next.thunk();\n            if (result instanceof Promise) {\n                result.then((value) => {\n                    this._active--;\n                    next.resolve(value);\n                    this.runNext();\n                }, (err) => {\n                    this._active--;\n                    next.reject(err);\n                    this.runNext();\n                });\n            }\n            else {\n                this._active--;\n                next.resolve(result);\n                this.runNext();\n            }\n        }\n        catch (err) {\n            this._active--;\n            next.reject(err);\n            this.runNext();\n        }\n    }\n}\nexports.Semaphore = Semaphore;\n//# sourceMappingURL=semaphore.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createMessageConnection = exports.ConnectionOptions = exports.CancellationStrategy = exports.CancellationSenderStrategy = exports.CancellationReceiverStrategy = exports.ConnectionStrategy = exports.ConnectionError = exports.ConnectionErrors = exports.LogTraceNotification = exports.SetTraceNotification = exports.TraceFormat = exports.Trace = exports.NullLogger = exports.ProgressType = void 0;\nconst ral_1 = require(\"./ral\");\nconst Is = require(\"./is\");\nconst messages_1 = require(\"./messages\");\nconst linkedMap_1 = require(\"./linkedMap\");\nconst events_1 = require(\"./events\");\nconst cancellation_1 = require(\"./cancellation\");\nvar CancelNotification;\n(function (CancelNotification) {\n    CancelNotification.type = new messages_1.NotificationType('$/cancelRequest');\n})(CancelNotification || (CancelNotification = {}));\nvar ProgressNotification;\n(function (ProgressNotification) {\n    ProgressNotification.type = new messages_1.NotificationType('$/progress');\n})(ProgressNotification || (ProgressNotification = {}));\nclass ProgressType {\n    constructor() {\n    }\n}\nexports.ProgressType = ProgressType;\nvar StarRequestHandler;\n(function (StarRequestHandler) {\n    function is(value) {\n        return Is.func(value);\n    }\n    StarRequestHandler.is = is;\n})(StarRequestHandler || (StarRequestHandler = {}));\nexports.NullLogger = Object.freeze({\n    error: () => { },\n    warn: () => { },\n    info: () => { },\n    log: () => { }\n});\nvar Trace;\n(function (Trace) {\n    Trace[Trace[\"Off\"] = 0] = \"Off\";\n    Trace[Trace[\"Messages\"] = 1] = \"Messages\";\n    Trace[Trace[\"Verbose\"] = 2] = \"Verbose\";\n})(Trace = exports.Trace || (exports.Trace = {}));\n(function (Trace) {\n    function fromString(value) {\n        if (!Is.string(value)) {\n            return Trace.Off;\n        }\n        value = value.toLowerCase();\n        switch (value) {\n            case 'off':\n                return Trace.Off;\n            case 'messages':\n                return Trace.Messages;\n            case 'verbose':\n                return Trace.Verbose;\n            default:\n                return Trace.Off;\n        }\n    }\n    Trace.fromString = fromString;\n    function toString(value) {\n        switch (value) {\n            case Trace.Off:\n                return 'off';\n            case Trace.Messages:\n                return 'messages';\n            case Trace.Verbose:\n                return 'verbose';\n            default:\n                return 'off';\n        }\n    }\n    Trace.toString = toString;\n})(Trace = exports.Trace || (exports.Trace = {}));\nvar TraceFormat;\n(function (TraceFormat) {\n    TraceFormat[\"Text\"] = \"text\";\n    TraceFormat[\"JSON\"] = \"json\";\n})(TraceFormat = exports.TraceFormat || (exports.TraceFormat = {}));\n(function (TraceFormat) {\n    function fromString(value) {\n        value = value.toLowerCase();\n        if (value === 'json') {\n            return TraceFormat.JSON;\n        }\n        else {\n            return TraceFormat.Text;\n        }\n    }\n    TraceFormat.fromString = fromString;\n})(TraceFormat = exports.TraceFormat || (exports.TraceFormat = {}));\nvar SetTraceNotification;\n(function (SetTraceNotification) {\n    SetTraceNotification.type = new messages_1.NotificationType('$/setTrace');\n})(SetTraceNotification = exports.SetTraceNotification || (exports.SetTraceNotification = {}));\nvar LogTraceNotification;\n(function (LogTraceNotification) {\n    LogTraceNotification.type = new messages_1.NotificationType('$/logTrace');\n})(LogTraceNotification = exports.LogTraceNotification || (exports.LogTraceNotification = {}));\nvar ConnectionErrors;\n(function (ConnectionErrors) {\n    /**\n     * The connection is closed.\n     */\n    ConnectionErrors[ConnectionErrors[\"Closed\"] = 1] = \"Closed\";\n    /**\n     * The connection got disposed.\n     */\n    ConnectionErrors[ConnectionErrors[\"Disposed\"] = 2] = \"Disposed\";\n    /**\n     * The connection is already in listening mode.\n     */\n    ConnectionErrors[ConnectionErrors[\"AlreadyListening\"] = 3] = \"AlreadyListening\";\n})(ConnectionErrors = exports.ConnectionErrors || (exports.ConnectionErrors = {}));\nclass ConnectionError extends Error {\n    constructor(code, message) {\n        super(message);\n        this.code = code;\n        Object.setPrototypeOf(this, ConnectionError.prototype);\n    }\n}\nexports.ConnectionError = ConnectionError;\nvar ConnectionStrategy;\n(function (ConnectionStrategy) {\n    function is(value) {\n        const candidate = value;\n        return candidate && Is.func(candidate.cancelUndispatched);\n    }\n    ConnectionStrategy.is = is;\n})(ConnectionStrategy = exports.ConnectionStrategy || (exports.ConnectionStrategy = {}));\nvar CancellationReceiverStrategy;\n(function (CancellationReceiverStrategy) {\n    CancellationReceiverStrategy.Message = Object.freeze({\n        createCancellationTokenSource(_) {\n            return new cancellation_1.CancellationTokenSource();\n        }\n    });\n    function is(value) {\n        const candidate = value;\n        return candidate && Is.func(candidate.createCancellationTokenSource);\n    }\n    CancellationReceiverStrategy.is = is;\n})(CancellationReceiverStrategy = exports.CancellationReceiverStrategy || (exports.CancellationReceiverStrategy = {}));\nvar CancellationSenderStrategy;\n(function (CancellationSenderStrategy) {\n    CancellationSenderStrategy.Message = Object.freeze({\n        sendCancellation(conn, id) {\n            conn.sendNotification(CancelNotification.type, { id });\n        },\n        cleanup(_) { }\n    });\n    function is(value) {\n        const candidate = value;\n        return candidate && Is.func(candidate.sendCancellation) && Is.func(candidate.cleanup);\n    }\n    CancellationSenderStrategy.is = is;\n})(CancellationSenderStrategy = exports.CancellationSenderStrategy || (exports.CancellationSenderStrategy = {}));\nvar CancellationStrategy;\n(function (CancellationStrategy) {\n    CancellationStrategy.Message = Object.freeze({\n        receiver: CancellationReceiverStrategy.Message,\n        sender: CancellationSenderStrategy.Message\n    });\n    function is(value) {\n        const candidate = value;\n        return candidate && CancellationReceiverStrategy.is(candidate.receiver) && CancellationSenderStrategy.is(candidate.sender);\n    }\n    CancellationStrategy.is = is;\n})(CancellationStrategy = exports.CancellationStrategy || (exports.CancellationStrategy = {}));\nvar ConnectionOptions;\n(function (ConnectionOptions) {\n    function is(value) {\n        const candidate = value;\n        return candidate && (CancellationStrategy.is(candidate.cancellationStrategy) || ConnectionStrategy.is(candidate.connectionStrategy));\n    }\n    ConnectionOptions.is = is;\n})(ConnectionOptions = exports.ConnectionOptions || (exports.ConnectionOptions = {}));\nvar ConnectionState;\n(function (ConnectionState) {\n    ConnectionState[ConnectionState[\"New\"] = 1] = \"New\";\n    ConnectionState[ConnectionState[\"Listening\"] = 2] = \"Listening\";\n    ConnectionState[ConnectionState[\"Closed\"] = 3] = \"Closed\";\n    ConnectionState[ConnectionState[\"Disposed\"] = 4] = \"Disposed\";\n})(ConnectionState || (ConnectionState = {}));\nfunction createMessageConnection(messageReader, messageWriter, _logger, options) {\n    const logger = _logger !== undefined ? _logger : exports.NullLogger;\n    let sequenceNumber = 0;\n    let notificationSquenceNumber = 0;\n    let unknownResponseSquenceNumber = 0;\n    const version = '2.0';\n    let starRequestHandler = undefined;\n    const requestHandlers = Object.create(null);\n    let starNotificationHandler = undefined;\n    const notificationHandlers = Object.create(null);\n    const progressHandlers = new Map();\n    let timer;\n    let messageQueue = new linkedMap_1.LinkedMap();\n    let responsePromises = Object.create(null);\n    let requestTokens = Object.create(null);\n    let trace = Trace.Off;\n    let traceFormat = TraceFormat.Text;\n    let tracer;\n    let state = ConnectionState.New;\n    const errorEmitter = new events_1.Emitter();\n    const closeEmitter = new events_1.Emitter();\n    const unhandledNotificationEmitter = new events_1.Emitter();\n    const unhandledProgressEmitter = new events_1.Emitter();\n    const disposeEmitter = new events_1.Emitter();\n    const cancellationStrategy = (options && options.cancellationStrategy) ? options.cancellationStrategy : CancellationStrategy.Message;\n    function createRequestQueueKey(id) {\n        if (id === null) {\n            throw new Error(`Can't send requests with id null since the response can't be correlated.`);\n        }\n        return 'req-' + id.toString();\n    }\n    function createResponseQueueKey(id) {\n        if (id === null) {\n            return 'res-unknown-' + (++unknownResponseSquenceNumber).toString();\n        }\n        else {\n            return 'res-' + id.toString();\n        }\n    }\n    function createNotificationQueueKey() {\n        return 'not-' + (++notificationSquenceNumber).toString();\n    }\n    function addMessageToQueue(queue, message) {\n        if (messages_1.isRequestMessage(message)) {\n            queue.set(createRequestQueueKey(message.id), message);\n        }\n        else if (messages_1.isResponseMessage(message)) {\n            queue.set(createResponseQueueKey(message.id), message);\n        }\n        else {\n            queue.set(createNotificationQueueKey(), message);\n        }\n    }\n    function cancelUndispatched(_message) {\n        return undefined;\n    }\n    function isListening() {\n        return state === ConnectionState.Listening;\n    }\n    function isClosed() {\n        return state === ConnectionState.Closed;\n    }\n    function isDisposed() {\n        return state === ConnectionState.Disposed;\n    }\n    function closeHandler() {\n        if (state === ConnectionState.New || state === ConnectionState.Listening) {\n            state = ConnectionState.Closed;\n            closeEmitter.fire(undefined);\n        }\n        // If the connection is disposed don't sent close events.\n    }\n    function readErrorHandler(error) {\n        errorEmitter.fire([error, undefined, undefined]);\n    }\n    function writeErrorHandler(data) {\n        errorEmitter.fire(data);\n    }\n    messageReader.onClose(closeHandler);\n    messageReader.onError(readErrorHandler);\n    messageWriter.onClose(closeHandler);\n    messageWriter.onError(writeErrorHandler);\n    function triggerMessageQueue() {\n        if (timer || messageQueue.size === 0) {\n            return;\n        }\n        timer = ral_1.default().timer.setImmediate(() => {\n            timer = undefined;\n            processMessageQueue();\n        });\n    }\n    function processMessageQueue() {\n        if (messageQueue.size === 0) {\n            return;\n        }\n        const message = messageQueue.shift();\n        try {\n            if (messages_1.isRequestMessage(message)) {\n                handleRequest(message);\n            }\n            else if (messages_1.isNotificationMessage(message)) {\n                handleNotification(message);\n            }\n            else if (messages_1.isResponseMessage(message)) {\n                handleResponse(message);\n            }\n            else {\n                handleInvalidMessage(message);\n            }\n        }\n        finally {\n            triggerMessageQueue();\n        }\n    }\n    const callback = (message) => {\n        try {\n            // We have received a cancellation message. Check if the message is still in the queue\n            // and cancel it if allowed to do so.\n            if (messages_1.isNotificationMessage(message) && message.method === CancelNotification.type.method) {\n                const key = createRequestQueueKey(message.params.id);\n                const toCancel = messageQueue.get(key);\n                if (messages_1.isRequestMessage(toCancel)) {\n                    const strategy = options === null || options === void 0 ? void 0 : options.connectionStrategy;\n                    const response = (strategy && strategy.cancelUndispatched) ? strategy.cancelUndispatched(toCancel, cancelUndispatched) : cancelUndispatched(toCancel);\n                    if (response && (response.error !== undefined || response.result !== undefined)) {\n                        messageQueue.delete(key);\n                        response.id = toCancel.id;\n                        traceSendingResponse(response, message.method, Date.now());\n                        messageWriter.write(response);\n                        return;\n                    }\n                }\n            }\n            addMessageToQueue(messageQueue, message);\n        }\n        finally {\n            triggerMessageQueue();\n        }\n    };\n    function handleRequest(requestMessage) {\n        if (isDisposed()) {\n            // we return here silently since we fired an event when the\n            // connection got disposed.\n            return;\n        }\n        function reply(resultOrError, method, startTime) {\n            const message = {\n                jsonrpc: version,\n                id: requestMessage.id\n            };\n            if (resultOrError instanceof messages_1.ResponseError) {\n                message.error = resultOrError.toJson();\n            }\n            else {\n                message.result = resultOrError === undefined ? null : resultOrError;\n            }\n            traceSendingResponse(message, method, startTime);\n            messageWriter.write(message);\n        }\n        function replyError(error, method, startTime) {\n            const message = {\n                jsonrpc: version,\n                id: requestMessage.id,\n                error: error.toJson()\n            };\n            traceSendingResponse(message, method, startTime);\n            messageWriter.write(message);\n        }\n        function replySuccess(result, method, startTime) {\n            // The JSON RPC defines that a response must either have a result or an error\n            // So we can't treat undefined as a valid response result.\n            if (result === undefined) {\n                result = null;\n            }\n            const message = {\n                jsonrpc: version,\n                id: requestMessage.id,\n                result: result\n            };\n            traceSendingResponse(message, method, startTime);\n            messageWriter.write(message);\n        }\n        traceReceivedRequest(requestMessage);\n        const element = requestHandlers[requestMessage.method];\n        let type;\n        let requestHandler;\n        if (element) {\n            type = element.type;\n            requestHandler = element.handler;\n        }\n        const startTime = Date.now();\n        if (requestHandler || starRequestHandler) {\n            const tokenKey = String(requestMessage.id);\n            const cancellationSource = cancellationStrategy.receiver.createCancellationTokenSource(tokenKey);\n            requestTokens[tokenKey] = cancellationSource;\n            try {\n                let handlerResult;\n                if (requestHandler) {\n                    if (requestMessage.params === undefined) {\n                        if (type !== undefined && type.numberOfParams !== 0) {\n                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InvalidParams, `Request ${requestMessage.method} defines ${type.numberOfParams} params but recevied none.`), requestMessage.method, startTime);\n                            return;\n                        }\n                        handlerResult = requestHandler(cancellationSource.token);\n                    }\n                    else if (Array.isArray(requestMessage.params)) {\n                        if (type !== undefined && type.parameterStructures === messages_1.ParameterStructures.byName) {\n                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InvalidParams, `Request ${requestMessage.method} defines parameters by name but received parameters by position`), requestMessage.method, startTime);\n                            return;\n                        }\n                        handlerResult = requestHandler(...requestMessage.params, cancellationSource.token);\n                    }\n                    else {\n                        if (type !== undefined && type.parameterStructures === messages_1.ParameterStructures.byPosition) {\n                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InvalidParams, `Request ${requestMessage.method} defines parameters by position but received parameters by name`), requestMessage.method, startTime);\n                            return;\n                        }\n                        handlerResult = requestHandler(requestMessage.params, cancellationSource.token);\n                    }\n                }\n                else if (starRequestHandler) {\n                    handlerResult = starRequestHandler(requestMessage.method, requestMessage.params, cancellationSource.token);\n                }\n                const promise = handlerResult;\n                if (!handlerResult) {\n                    delete requestTokens[tokenKey];\n                    replySuccess(handlerResult, requestMessage.method, startTime);\n                }\n                else if (promise.then) {\n                    promise.then((resultOrError) => {\n                        delete requestTokens[tokenKey];\n                        reply(resultOrError, requestMessage.method, startTime);\n                    }, error => {\n                        delete requestTokens[tokenKey];\n                        if (error instanceof messages_1.ResponseError) {\n                            replyError(error, requestMessage.method, startTime);\n                        }\n                        else if (error && Is.string(error.message)) {\n                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed with message: ${error.message}`), requestMessage.method, startTime);\n                        }\n                        else {\n                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed unexpectedly without providing any details.`), requestMessage.method, startTime);\n                        }\n                    });\n                }\n                else {\n                    delete requestTokens[tokenKey];\n                    reply(handlerResult, requestMessage.method, startTime);\n                }\n            }\n            catch (error) {\n                delete requestTokens[tokenKey];\n                if (error instanceof messages_1.ResponseError) {\n                    reply(error, requestMessage.method, startTime);\n                }\n                else if (error && Is.string(error.message)) {\n                    replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed with message: ${error.message}`), requestMessage.method, startTime);\n                }\n                else {\n                    replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed unexpectedly without providing any details.`), requestMessage.method, startTime);\n                }\n            }\n        }\n        else {\n            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.MethodNotFound, `Unhandled method ${requestMessage.method}`), requestMessage.method, startTime);\n        }\n    }\n    function handleResponse(responseMessage) {\n        if (isDisposed()) {\n            // See handle request.\n            return;\n        }\n        if (responseMessage.id === null) {\n            if (responseMessage.error) {\n                logger.error(`Received response message without id: Error is: \\n${JSON.stringify(responseMessage.error, undefined, 4)}`);\n            }\n            else {\n                logger.error(`Received response message without id. No further error information provided.`);\n            }\n        }\n        else {\n            const key = String(responseMessage.id);\n            const responsePromise = responsePromises[key];\n            traceReceivedResponse(responseMessage, responsePromise);\n            if (responsePromise) {\n                delete responsePromises[key];\n                try {\n                    if (responseMessage.error) {\n                        const error = responseMessage.error;\n                        responsePromise.reject(new messages_1.ResponseError(error.code, error.message, error.data));\n                    }\n                    else if (responseMessage.result !== undefined) {\n                        responsePromise.resolve(responseMessage.result);\n                    }\n                    else {\n                        throw new Error('Should never happen.');\n                    }\n                }\n                catch (error) {\n                    if (error.message) {\n                        logger.error(`Response handler '${responsePromise.method}' failed with message: ${error.message}`);\n                    }\n                    else {\n                        logger.error(`Response handler '${responsePromise.method}' failed unexpectedly.`);\n                    }\n                }\n            }\n        }\n    }\n    function handleNotification(message) {\n        if (isDisposed()) {\n            // See handle request.\n            return;\n        }\n        let type = undefined;\n        let notificationHandler;\n        if (message.method === CancelNotification.type.method) {\n            notificationHandler = (params) => {\n                const id = params.id;\n                const source = requestTokens[String(id)];\n                if (source) {\n                    source.cancel();\n                }\n            };\n        }\n        else {\n            const element = notificationHandlers[message.method];\n            if (element) {\n                notificationHandler = element.handler;\n                type = element.type;\n            }\n        }\n        if (notificationHandler || starNotificationHandler) {\n            try {\n                traceReceivedNotification(message);\n                if (notificationHandler) {\n                    if (message.params === undefined) {\n                        if (type !== undefined) {\n                            if (type.numberOfParams !== 0 && type.parameterStructures !== messages_1.ParameterStructures.byName) {\n                                logger.error(`Notification ${message.method} defines ${type.numberOfParams} params but recevied none.`);\n                            }\n                        }\n                        notificationHandler();\n                    }\n                    else if (Array.isArray(message.params)) {\n                        if (type !== undefined) {\n                            if (type.parameterStructures === messages_1.ParameterStructures.byName) {\n                                logger.error(`Notification ${message.method} defines parameters by name but received parameters by position`);\n                            }\n                            if (type.numberOfParams !== message.params.length) {\n                                logger.error(`Notification ${message.method} defines ${type.numberOfParams} params but received ${message.params.length} argumennts`);\n                            }\n                        }\n                        notificationHandler(...message.params);\n                    }\n                    else {\n                        if (type !== undefined && type.parameterStructures === messages_1.ParameterStructures.byPosition) {\n                            logger.error(`Notification ${message.method} defines parameters by position but received parameters by name`);\n                        }\n                        notificationHandler(message.params);\n                    }\n                }\n                else if (starNotificationHandler) {\n                    starNotificationHandler(message.method, message.params);\n                }\n            }\n            catch (error) {\n                if (error.message) {\n                    logger.error(`Notification handler '${message.method}' failed with message: ${error.message}`);\n                }\n                else {\n                    logger.error(`Notification handler '${message.method}' failed unexpectedly.`);\n                }\n            }\n        }\n        else {\n            unhandledNotificationEmitter.fire(message);\n        }\n    }\n    function handleInvalidMessage(message) {\n        if (!message) {\n            logger.error('Received empty message.');\n            return;\n        }\n        logger.error(`Received message which is neither a response nor a notification message:\\n${JSON.stringify(message, null, 4)}`);\n        // Test whether we find an id to reject the promise\n        const responseMessage = message;\n        if (Is.string(responseMessage.id) || Is.number(responseMessage.id)) {\n            const key = String(responseMessage.id);\n            const responseHandler = responsePromises[key];\n            if (responseHandler) {\n                responseHandler.reject(new Error('The received response has neither a result nor an error property.'));\n            }\n        }\n    }\n    function traceSendingRequest(message) {\n        if (trace === Trace.Off || !tracer) {\n            return;\n        }\n        if (traceFormat === TraceFormat.Text) {\n            let data = undefined;\n            if (trace === Trace.Verbose && message.params) {\n                data = `Params: ${JSON.stringify(message.params, null, 4)}\\n\\n`;\n            }\n            tracer.log(`Sending request '${message.method} - (${message.id})'.`, data);\n        }\n        else {\n            logLSPMessage('send-request', message);\n        }\n    }\n    function traceSendingNotification(message) {\n        if (trace === Trace.Off || !tracer) {\n            return;\n        }\n        if (traceFormat === TraceFormat.Text) {\n            let data = undefined;\n            if (trace === Trace.Verbose) {\n                if (message.params) {\n                    data = `Params: ${JSON.stringify(message.params, null, 4)}\\n\\n`;\n                }\n                else {\n                    data = 'No parameters provided.\\n\\n';\n                }\n            }\n            tracer.log(`Sending notification '${message.method}'.`, data);\n        }\n        else {\n            logLSPMessage('send-notification', message);\n        }\n    }\n    function traceSendingResponse(message, method, startTime) {\n        if (trace === Trace.Off || !tracer) {\n            return;\n        }\n        if (traceFormat === TraceFormat.Text) {\n            let data = undefined;\n            if (trace === Trace.Verbose) {\n                if (message.error && message.error.data) {\n                    data = `Error data: ${JSON.stringify(message.error.data, null, 4)}\\n\\n`;\n                }\n                else {\n                    if (message.result) {\n                        data = `Result: ${JSON.stringify(message.result, null, 4)}\\n\\n`;\n                    }\n                    else if (message.error === undefined) {\n                        data = 'No result returned.\\n\\n';\n                    }\n                }\n            }\n            tracer.log(`Sending response '${method} - (${message.id})'. Processing request took ${Date.now() - startTime}ms`, data);\n        }\n        else {\n            logLSPMessage('send-response', message);\n        }\n    }\n    function traceReceivedRequest(message) {\n        if (trace === Trace.Off || !tracer) {\n            return;\n        }\n        if (traceFormat === TraceFormat.Text) {\n            let data = undefined;\n            if (trace === Trace.Verbose && message.params) {\n                data = `Params: ${JSON.stringify(message.params, null, 4)}\\n\\n`;\n            }\n            tracer.log(`Received request '${message.method} - (${message.id})'.`, data);\n        }\n        else {\n            logLSPMessage('receive-request', message);\n        }\n    }\n    function traceReceivedNotification(message) {\n        if (trace === Trace.Off || !tracer || message.method === LogTraceNotification.type.method) {\n            return;\n        }\n        if (traceFormat === TraceFormat.Text) {\n            let data = undefined;\n            if (trace === Trace.Verbose) {\n                if (message.params) {\n                    data = `Params: ${JSON.stringify(message.params, null, 4)}\\n\\n`;\n                }\n                else {\n                    data = 'No parameters provided.\\n\\n';\n                }\n            }\n            tracer.log(`Received notification '${message.method}'.`, data);\n        }\n        else {\n            logLSPMessage('receive-notification', message);\n        }\n    }\n    function traceReceivedResponse(message, responsePromise) {\n        if (trace === Trace.Off || !tracer) {\n            return;\n        }\n        if (traceFormat === TraceFormat.Text) {\n            let data = undefined;\n            if (trace === Trace.Verbose) {\n                if (message.error && message.error.data) {\n                    data = `Error data: ${JSON.stringify(message.error.data, null, 4)}\\n\\n`;\n                }\n                else {\n                    if (message.result) {\n                        data = `Result: ${JSON.stringify(message.result, null, 4)}\\n\\n`;\n                    }\n                    else if (message.error === undefined) {\n                        data = 'No result returned.\\n\\n';\n                    }\n                }\n            }\n            if (responsePromise) {\n                const error = message.error ? ` Request failed: ${message.error.message} (${message.error.code}).` : '';\n                tracer.log(`Received response '${responsePromise.method} - (${message.id})' in ${Date.now() - responsePromise.timerStart}ms.${error}`, data);\n            }\n            else {\n                tracer.log(`Received response ${message.id} without active response promise.`, data);\n            }\n        }\n        else {\n            logLSPMessage('receive-response', message);\n        }\n    }\n    function logLSPMessage(type, message) {\n        if (!tracer || trace === Trace.Off) {\n            return;\n        }\n        const lspMessage = {\n            isLSPMessage: true,\n            type,\n            message,\n            timestamp: Date.now()\n        };\n        tracer.log(lspMessage);\n    }\n    function throwIfClosedOrDisposed() {\n        if (isClosed()) {\n            throw new ConnectionError(ConnectionErrors.Closed, 'Connection is closed.');\n        }\n        if (isDisposed()) {\n            throw new ConnectionError(ConnectionErrors.Disposed, 'Connection is disposed.');\n        }\n    }\n    function throwIfListening() {\n        if (isListening()) {\n            throw new ConnectionError(ConnectionErrors.AlreadyListening, 'Connection is already listening');\n        }\n    }\n    function throwIfNotListening() {\n        if (!isListening()) {\n            throw new Error('Call listen() first.');\n        }\n    }\n    function undefinedToNull(param) {\n        if (param === undefined) {\n            return null;\n        }\n        else {\n            return param;\n        }\n    }\n    function nullToUndefined(param) {\n        if (param === null) {\n            return undefined;\n        }\n        else {\n            return param;\n        }\n    }\n    function isNamedParam(param) {\n        return param !== undefined && param !== null && !Array.isArray(param) && typeof param === 'object';\n    }\n    function computeSingleParam(parameterStructures, param) {\n        switch (parameterStructures) {\n            case messages_1.ParameterStructures.auto:\n                if (isNamedParam(param)) {\n                    return nullToUndefined(param);\n                }\n                else {\n                    return [undefinedToNull(param)];\n                }\n                break;\n            case messages_1.ParameterStructures.byName:\n                if (!isNamedParam(param)) {\n                    throw new Error(`Recevied parameters by name but param is not an object literal.`);\n                }\n                return nullToUndefined(param);\n            case messages_1.ParameterStructures.byPosition:\n                return [undefinedToNull(param)];\n            default:\n                throw new Error(`Unknown parameter structure ${parameterStructures.toString()}`);\n        }\n    }\n    function computeMessageParams(type, params) {\n        let result;\n        const numberOfParams = type.numberOfParams;\n        switch (numberOfParams) {\n            case 0:\n                result = undefined;\n                break;\n            case 1:\n                result = computeSingleParam(type.parameterStructures, params[0]);\n                break;\n            default:\n                result = [];\n                for (let i = 0; i < params.length && i < numberOfParams; i++) {\n                    result.push(undefinedToNull(params[i]));\n                }\n                if (params.length < numberOfParams) {\n                    for (let i = params.length; i < numberOfParams; i++) {\n                        result.push(null);\n                    }\n                }\n                break;\n        }\n        return result;\n    }\n    const connection = {\n        sendNotification: (type, ...args) => {\n            throwIfClosedOrDisposed();\n            let method;\n            let messageParams;\n            if (Is.string(type)) {\n                method = type;\n                const first = args[0];\n                let paramStart = 0;\n                let parameterStructures = messages_1.ParameterStructures.auto;\n                if (messages_1.ParameterStructures.is(first)) {\n                    paramStart = 1;\n                    parameterStructures = first;\n                }\n                let paramEnd = args.length;\n                const numberOfParams = paramEnd - paramStart;\n                switch (numberOfParams) {\n                    case 0:\n                        messageParams = undefined;\n                        break;\n                    case 1:\n                        messageParams = computeSingleParam(parameterStructures, args[paramStart]);\n                        break;\n                    default:\n                        if (parameterStructures === messages_1.ParameterStructures.byName) {\n                            throw new Error(`Recevied ${numberOfParams} parameters for 'by Name' notification parameter structure.`);\n                        }\n                        messageParams = args.slice(paramStart, paramEnd).map(value => undefinedToNull(value));\n                        break;\n                }\n            }\n            else {\n                const params = args;\n                method = type.method;\n                messageParams = computeMessageParams(type, params);\n            }\n            const notificationMessage = {\n                jsonrpc: version,\n                method: method,\n                params: messageParams\n            };\n            traceSendingNotification(notificationMessage);\n            messageWriter.write(notificationMessage);\n        },\n        onNotification: (type, handler) => {\n            throwIfClosedOrDisposed();\n            let method;\n            if (Is.func(type)) {\n                starNotificationHandler = type;\n            }\n            else if (handler) {\n                if (Is.string(type)) {\n                    method = type;\n                    notificationHandlers[type] = { type: undefined, handler };\n                }\n                else {\n                    method = type.method;\n                    notificationHandlers[type.method] = { type, handler };\n                }\n            }\n            return {\n                dispose: () => {\n                    if (method !== undefined) {\n                        delete notificationHandlers[method];\n                    }\n                    else {\n                        starNotificationHandler = undefined;\n                    }\n                }\n            };\n        },\n        onProgress: (_type, token, handler) => {\n            if (progressHandlers.has(token)) {\n                throw new Error(`Progress handler for token ${token} already registered`);\n            }\n            progressHandlers.set(token, handler);\n            return {\n                dispose: () => {\n                    progressHandlers.delete(token);\n                }\n            };\n        },\n        sendProgress: (_type, token, value) => {\n            connection.sendNotification(ProgressNotification.type, { token, value });\n        },\n        onUnhandledProgress: unhandledProgressEmitter.event,\n        sendRequest: (type, ...args) => {\n            throwIfClosedOrDisposed();\n            throwIfNotListening();\n            let method;\n            let messageParams;\n            let token = undefined;\n            if (Is.string(type)) {\n                method = type;\n                const first = args[0];\n                const last = args[args.length - 1];\n                let paramStart = 0;\n                let parameterStructures = messages_1.ParameterStructures.auto;\n                if (messages_1.ParameterStructures.is(first)) {\n                    paramStart = 1;\n                    parameterStructures = first;\n                }\n                let paramEnd = args.length;\n                if (cancellation_1.CancellationToken.is(last)) {\n                    paramEnd = paramEnd - 1;\n                    token = last;\n                }\n                const numberOfParams = paramEnd - paramStart;\n                switch (numberOfParams) {\n                    case 0:\n                        messageParams = undefined;\n                        break;\n                    case 1:\n                        messageParams = computeSingleParam(parameterStructures, args[paramStart]);\n                        break;\n                    default:\n                        if (parameterStructures === messages_1.ParameterStructures.byName) {\n                            throw new Error(`Recevied ${numberOfParams} parameters for 'by Name' request parameter structure.`);\n                        }\n                        messageParams = args.slice(paramStart, paramEnd).map(value => undefinedToNull(value));\n                        break;\n                }\n            }\n            else {\n                const params = args;\n                method = type.method;\n                messageParams = computeMessageParams(type, params);\n                const numberOfParams = type.numberOfParams;\n                token = cancellation_1.CancellationToken.is(params[numberOfParams]) ? params[numberOfParams] : undefined;\n            }\n            const id = sequenceNumber++;\n            let disposable;\n            if (token) {\n                disposable = token.onCancellationRequested(() => {\n                    cancellationStrategy.sender.sendCancellation(connection, id);\n                });\n            }\n            const result = new Promise((resolve, reject) => {\n                const requestMessage = {\n                    jsonrpc: version,\n                    id: id,\n                    method: method,\n                    params: messageParams\n                };\n                const resolveWithCleanup = (r) => {\n                    resolve(r);\n                    cancellationStrategy.sender.cleanup(id);\n                    disposable === null || disposable === void 0 ? void 0 : disposable.dispose();\n                };\n                const rejectWithCleanup = (r) => {\n                    reject(r);\n                    cancellationStrategy.sender.cleanup(id);\n                    disposable === null || disposable === void 0 ? void 0 : disposable.dispose();\n                };\n                let responsePromise = { method: method, timerStart: Date.now(), resolve: resolveWithCleanup, reject: rejectWithCleanup };\n                traceSendingRequest(requestMessage);\n                try {\n                    messageWriter.write(requestMessage);\n                }\n                catch (e) {\n                    // Writing the message failed. So we need to reject the promise.\n                    responsePromise.reject(new messages_1.ResponseError(messages_1.ErrorCodes.MessageWriteError, e.message ? e.message : 'Unknown reason'));\n                    responsePromise = null;\n                }\n                if (responsePromise) {\n                    responsePromises[String(id)] = responsePromise;\n                }\n            });\n            return result;\n        },\n        onRequest: (type, handler) => {\n            throwIfClosedOrDisposed();\n            let method = null;\n            if (StarRequestHandler.is(type)) {\n                method = undefined;\n                starRequestHandler = type;\n            }\n            else if (Is.string(type)) {\n                method = null;\n                if (handler !== undefined) {\n                    method = type;\n                    requestHandlers[type] = { handler: handler, type: undefined };\n                }\n            }\n            else {\n                if (handler !== undefined) {\n                    method = type.method;\n                    requestHandlers[type.method] = { type, handler };\n                }\n            }\n            return {\n                dispose: () => {\n                    if (method === null) {\n                        return;\n                    }\n                    if (method !== undefined) {\n                        delete requestHandlers[method];\n                    }\n                    else {\n                        starRequestHandler = undefined;\n                    }\n                }\n            };\n        },\n        trace: (_value, _tracer, sendNotificationOrTraceOptions) => {\n            let _sendNotification = false;\n            let _traceFormat = TraceFormat.Text;\n            if (sendNotificationOrTraceOptions !== undefined) {\n                if (Is.boolean(sendNotificationOrTraceOptions)) {\n                    _sendNotification = sendNotificationOrTraceOptions;\n                }\n                else {\n                    _sendNotification = sendNotificationOrTraceOptions.sendNotification || false;\n                    _traceFormat = sendNotificationOrTraceOptions.traceFormat || TraceFormat.Text;\n                }\n            }\n            trace = _value;\n            traceFormat = _traceFormat;\n            if (trace === Trace.Off) {\n                tracer = undefined;\n            }\n            else {\n                tracer = _tracer;\n            }\n            if (_sendNotification && !isClosed() && !isDisposed()) {\n                connection.sendNotification(SetTraceNotification.type, { value: Trace.toString(_value) });\n            }\n        },\n        onError: errorEmitter.event,\n        onClose: closeEmitter.event,\n        onUnhandledNotification: unhandledNotificationEmitter.event,\n        onDispose: disposeEmitter.event,\n        end: () => {\n            messageWriter.end();\n        },\n        dispose: () => {\n            if (isDisposed()) {\n                return;\n            }\n            state = ConnectionState.Disposed;\n            disposeEmitter.fire(undefined);\n            const error = new Error('Connection got disposed.');\n            Object.keys(responsePromises).forEach((key) => {\n                responsePromises[key].reject(error);\n            });\n            responsePromises = Object.create(null);\n            requestTokens = Object.create(null);\n            messageQueue = new linkedMap_1.LinkedMap();\n            // Test for backwards compatibility\n            if (Is.func(messageWriter.dispose)) {\n                messageWriter.dispose();\n            }\n            if (Is.func(messageReader.dispose)) {\n                messageReader.dispose();\n            }\n        },\n        listen: () => {\n            throwIfClosedOrDisposed();\n            throwIfListening();\n            state = ConnectionState.Listening;\n            messageReader.listen(callback);\n        },\n        inspect: () => {\n            // eslint-disable-next-line no-console\n            ral_1.default().console.log('inspect');\n        }\n    };\n    connection.onNotification(LogTraceNotification.type, (params) => {\n        if (trace === Trace.Off || !tracer) {\n            return;\n        }\n        tracer.log(params.message, trace === Trace.Verbose ? params.verbose : undefined);\n    });\n    connection.onNotification(ProgressNotification.type, (params) => {\n        const handler = progressHandlers.get(params.token);\n        if (handler) {\n            handler(params.value);\n        }\n        else {\n            unhandledProgressEmitter.fire(params);\n        }\n    });\n    return connection;\n}\nexports.createMessageConnection = createMessageConnection;\n//# sourceMappingURL=connection.js.map","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LRUCache = exports.LinkedMap = exports.Touch = void 0;\nvar Touch;\n(function (Touch) {\n    Touch.None = 0;\n    Touch.First = 1;\n    Touch.AsOld = Touch.First;\n    Touch.Last = 2;\n    Touch.AsNew = Touch.Last;\n})(Touch = exports.Touch || (exports.Touch = {}));\nclass LinkedMap {\n    constructor() {\n        this[Symbol.toStringTag] = 'LinkedMap';\n        this._map = new Map();\n        this._head = undefined;\n        this._tail = undefined;\n        this._size = 0;\n        this._state = 0;\n    }\n    clear() {\n        this._map.clear();\n        this._head = undefined;\n        this._tail = undefined;\n        this._size = 0;\n        this._state++;\n    }\n    isEmpty() {\n        return !this._head && !this._tail;\n    }\n    get size() {\n        return this._size;\n    }\n    get first() {\n        var _a;\n        return (_a = this._head) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    get last() {\n        var _a;\n        return (_a = this._tail) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    has(key) {\n        return this._map.has(key);\n    }\n    get(key, touch = Touch.None) {\n        const item = this._map.get(key);\n        if (!item) {\n            return undefined;\n        }\n        if (touch !== Touch.None) {\n            this.touch(item, touch);\n        }\n        return item.value;\n    }\n    set(key, value, touch = Touch.None) {\n        let item = this._map.get(key);\n        if (item) {\n            item.value = value;\n            if (touch !== Touch.None) {\n                this.touch(item, touch);\n            }\n        }\n        else {\n            item = { key, value, next: undefined, previous: undefined };\n            switch (touch) {\n                case Touch.None:\n                    this.addItemLast(item);\n                    break;\n                case Touch.First:\n                    this.addItemFirst(item);\n                    break;\n                case Touch.Last:\n                    this.addItemLast(item);\n                    break;\n                default:\n                    this.addItemLast(item);\n                    break;\n            }\n            this._map.set(key, item);\n            this._size++;\n        }\n        return this;\n    }\n    delete(key) {\n        return !!this.remove(key);\n    }\n    remove(key) {\n        const item = this._map.get(key);\n        if (!item) {\n            return undefined;\n        }\n        this._map.delete(key);\n        this.removeItem(item);\n        this._size--;\n        return item.value;\n    }\n    shift() {\n        if (!this._head && !this._tail) {\n            return undefined;\n        }\n        if (!this._head || !this._tail) {\n            throw new Error('Invalid list');\n        }\n        const item = this._head;\n        this._map.delete(item.key);\n        this.removeItem(item);\n        this._size--;\n        return item.value;\n    }\n    forEach(callbackfn, thisArg) {\n        const state = this._state;\n        let current = this._head;\n        while (current) {\n            if (thisArg) {\n                callbackfn.bind(thisArg)(current.value, current.key, this);\n            }\n            else {\n                callbackfn(current.value, current.key, this);\n            }\n            if (this._state !== state) {\n                throw new Error(`LinkedMap got modified during iteration.`);\n            }\n            current = current.next;\n        }\n    }\n    keys() {\n        const map = this;\n        const state = this._state;\n        let current = this._head;\n        const iterator = {\n            [Symbol.iterator]() {\n                return iterator;\n            },\n            next() {\n                if (map._state !== state) {\n                    throw new Error(`LinkedMap got modified during iteration.`);\n                }\n                if (current) {\n                    const result = { value: current.key, done: false };\n                    current = current.next;\n                    return result;\n                }\n                else {\n                    return { value: undefined, done: true };\n                }\n            }\n        };\n        return iterator;\n    }\n    values() {\n        const map = this;\n        const state = this._state;\n        let current = this._head;\n        const iterator = {\n            [Symbol.iterator]() {\n                return iterator;\n            },\n            next() {\n                if (map._state !== state) {\n                    throw new Error(`LinkedMap got modified during iteration.`);\n                }\n                if (current) {\n                    const result = { value: current.value, done: false };\n                    current = current.next;\n                    return result;\n                }\n                else {\n                    return { value: undefined, done: true };\n                }\n            }\n        };\n        return iterator;\n    }\n    entries() {\n        const map = this;\n        const state = this._state;\n        let current = this._head;\n        const iterator = {\n            [Symbol.iterator]() {\n                return iterator;\n            },\n            next() {\n                if (map._state !== state) {\n                    throw new Error(`LinkedMap got modified during iteration.`);\n                }\n                if (current) {\n                    const result = { value: [current.key, current.value], done: false };\n                    current = current.next;\n                    return result;\n                }\n                else {\n                    return { value: undefined, done: true };\n                }\n            }\n        };\n        return iterator;\n    }\n    [Symbol.iterator]() {\n        return this.entries();\n    }\n    trimOld(newSize) {\n        if (newSize >= this.size) {\n            return;\n        }\n        if (newSize === 0) {\n            this.clear();\n            return;\n        }\n        let current = this._head;\n        let currentSize = this.size;\n        while (current && currentSize > newSize) {\n            this._map.delete(current.key);\n            current = current.next;\n            currentSize--;\n        }\n        this._head = current;\n        this._size = currentSize;\n        if (current) {\n            current.previous = undefined;\n        }\n        this._state++;\n    }\n    addItemFirst(item) {\n        // First time Insert\n        if (!this._head && !this._tail) {\n            this._tail = item;\n        }\n        else if (!this._head) {\n            throw new Error('Invalid list');\n        }\n        else {\n            item.next = this._head;\n            this._head.previous = item;\n        }\n        this._head = item;\n        this._state++;\n    }\n    addItemLast(item) {\n        // First time Insert\n        if (!this._head && !this._tail) {\n            this._head = item;\n        }\n        else if (!this._tail) {\n            throw new Error('Invalid list');\n        }\n        else {\n            item.previous = this._tail;\n            this._tail.next = item;\n        }\n        this._tail = item;\n        this._state++;\n    }\n    removeItem(item) {\n        if (item === this._head && item === this._tail) {\n            this._head = undefined;\n            this._tail = undefined;\n        }\n        else if (item === this._head) {\n            // This can only happend if size === 1 which is handle\n            // by the case above.\n            if (!item.next) {\n                throw new Error('Invalid list');\n            }\n            item.next.previous = undefined;\n            this._head = item.next;\n        }\n        else if (item === this._tail) {\n            // This can only happend if size === 1 which is handle\n            // by the case above.\n            if (!item.previous) {\n                throw new Error('Invalid list');\n            }\n            item.previous.next = undefined;\n            this._tail = item.previous;\n        }\n        else {\n            const next = item.next;\n            const previous = item.previous;\n            if (!next || !previous) {\n                throw new Error('Invalid list');\n            }\n            next.previous = previous;\n            previous.next = next;\n        }\n        item.next = undefined;\n        item.previous = undefined;\n        this._state++;\n    }\n    touch(item, touch) {\n        if (!this._head || !this._tail) {\n            throw new Error('Invalid list');\n        }\n        if ((touch !== Touch.First && touch !== Touch.Last)) {\n            return;\n        }\n        if (touch === Touch.First) {\n            if (item === this._head) {\n                return;\n            }\n            const next = item.next;\n            const previous = item.previous;\n            // Unlink the item\n            if (item === this._tail) {\n                // previous must be defined since item was not head but is tail\n                // So there are more than on item in the map\n                previous.next = undefined;\n                this._tail = previous;\n            }\n            else {\n                // Both next and previous are not undefined since item was neither head nor tail.\n                next.previous = previous;\n                previous.next = next;\n            }\n            // Insert the node at head\n            item.previous = undefined;\n            item.next = this._head;\n            this._head.previous = item;\n            this._head = item;\n            this._state++;\n        }\n        else if (touch === Touch.Last) {\n            if (item === this._tail) {\n                return;\n            }\n            const next = item.next;\n            const previous = item.previous;\n            // Unlink the item.\n            if (item === this._head) {\n                // next must be defined since item was not tail but is head\n                // So there are more than on item in the map\n                next.previous = undefined;\n                this._head = next;\n            }\n            else {\n                // Both next and previous are not undefined since item was neither head nor tail.\n                next.previous = previous;\n                previous.next = next;\n            }\n            item.next = undefined;\n            item.previous = this._tail;\n            this._tail.next = item;\n            this._tail = item;\n            this._state++;\n        }\n    }\n    toJSON() {\n        const data = [];\n        this.forEach((value, key) => {\n            data.push([key, value]);\n        });\n        return data;\n    }\n    fromJSON(data) {\n        this.clear();\n        for (const [key, value] of data) {\n            this.set(key, value);\n        }\n    }\n}\nexports.LinkedMap = LinkedMap;\nclass LRUCache extends LinkedMap {\n    constructor(limit, ratio = 1) {\n        super();\n        this._limit = limit;\n        this._ratio = Math.min(Math.max(0, ratio), 1);\n    }\n    get limit() {\n        return this._limit;\n    }\n    set limit(limit) {\n        this._limit = limit;\n        this.checkTrim();\n    }\n    get ratio() {\n        return this._ratio;\n    }\n    set ratio(ratio) {\n        this._ratio = Math.min(Math.max(0, ratio), 1);\n        this.checkTrim();\n    }\n    get(key, touch = Touch.AsNew) {\n        return super.get(key, touch);\n    }\n    peek(key) {\n        return super.get(key, Touch.None);\n    }\n    set(key, value) {\n        super.set(key, value, Touch.Last);\n        this.checkTrim();\n        return this;\n    }\n    checkTrim() {\n        if (this.size > this._limit) {\n            this.trimOld(Math.round(this._limit * this._ratio));\n        }\n    }\n}\nexports.LRUCache = LRUCache;\n//# sourceMappingURL=linkedMap.js.map","module.exports = require(\"os\");","module.exports = require(\"crypto\");","module.exports = require(\"net\");","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LSPErrorCodes = exports.createProtocolConnection = void 0;\n__exportStar(require(\"vscode-jsonrpc\"), exports);\n__exportStar(require(\"vscode-languageserver-types\"), exports);\n__exportStar(require(\"./messages\"), exports);\n__exportStar(require(\"./protocol\"), exports);\nvar connection_1 = require(\"./connection\");\nObject.defineProperty(exports, \"createProtocolConnection\", { enumerable: true, get: function () { return connection_1.createProtocolConnection; } });\nvar LSPErrorCodes;\n(function (LSPErrorCodes) {\n    /**\n    * This is the start range of LSP reserved error codes.\n    * It doesn't denote a real error code.\n    *\n    * @since 3.16.0\n    */\n    LSPErrorCodes.lspReservedErrorRangeStart = -32899;\n    LSPErrorCodes.ContentModified = -32801;\n    LSPErrorCodes.RequestCancelled = -32800;\n    /**\n    * This is the end range of LSP reserved error codes.\n    * It doesn't denote a real error code.\n    *\n    * @since 3.16.0\n    */\n    LSPErrorCodes.lspReservedErrorRangeEnd = -32800;\n})(LSPErrorCodes = exports.LSPErrorCodes || (exports.LSPErrorCodes = {}));\n//# sourceMappingURL=api.js.map","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nexport var integer;\n(function (integer) {\n    integer.MIN_VALUE = -2147483648;\n    integer.MAX_VALUE = 2147483647;\n})(integer || (integer = {}));\nexport var uinteger;\n(function (uinteger) {\n    uinteger.MIN_VALUE = 0;\n    uinteger.MAX_VALUE = 2147483647;\n})(uinteger || (uinteger = {}));\n/**\n * The Position namespace provides helper functions to work with\n * [Position](#Position) literals.\n */\nexport var Position;\n(function (Position) {\n    /**\n     * Creates a new Position literal from the given line and character.\n     * @param line The position's line.\n     * @param character The position's character.\n     */\n    function create(line, character) {\n        if (line === Number.MAX_VALUE) {\n            line = uinteger.MAX_VALUE;\n        }\n        if (character === Number.MAX_VALUE) {\n            character = uinteger.MAX_VALUE;\n        }\n        return { line: line, character: character };\n    }\n    Position.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Position](#Position) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.objectLiteral(candidate) && Is.uinteger(candidate.line) && Is.uinteger(candidate.character);\n    }\n    Position.is = is;\n})(Position || (Position = {}));\n/**\n * The Range namespace provides helper functions to work with\n * [Range](#Range) literals.\n */\nexport var Range;\n(function (Range) {\n    function create(one, two, three, four) {\n        if (Is.uinteger(one) && Is.uinteger(two) && Is.uinteger(three) && Is.uinteger(four)) {\n            return { start: Position.create(one, two), end: Position.create(three, four) };\n        }\n        else if (Position.is(one) && Position.is(two)) {\n            return { start: one, end: two };\n        }\n        else {\n            throw new Error(\"Range#create called with invalid arguments[\" + one + \", \" + two + \", \" + three + \", \" + four + \"]\");\n        }\n    }\n    Range.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Range](#Range) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.objectLiteral(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\n    }\n    Range.is = is;\n})(Range || (Range = {}));\n/**\n * The Location namespace provides helper functions to work with\n * [Location](#Location) literals.\n */\nexport var Location;\n(function (Location) {\n    /**\n     * Creates a Location literal.\n     * @param uri The location's uri.\n     * @param range The location's range.\n     */\n    function create(uri, range) {\n        return { uri: uri, range: range };\n    }\n    Location.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Location](#Location) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\n    }\n    Location.is = is;\n})(Location || (Location = {}));\n/**\n * The LocationLink namespace provides helper functions to work with\n * [LocationLink](#LocationLink) literals.\n */\nexport var LocationLink;\n(function (LocationLink) {\n    /**\n     * Creates a LocationLink literal.\n     * @param targetUri The definition's uri.\n     * @param targetRange The full range of the definition.\n     * @param targetSelectionRange The span of the symbol definition at the target.\n     * @param originSelectionRange The span of the symbol being defined in the originating source file.\n     */\n    function create(targetUri, targetRange, targetSelectionRange, originSelectionRange) {\n        return { targetUri: targetUri, targetRange: targetRange, targetSelectionRange: targetSelectionRange, originSelectionRange: originSelectionRange };\n    }\n    LocationLink.create = create;\n    /**\n     * Checks whether the given literal conforms to the [LocationLink](#LocationLink) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.targetRange) && Is.string(candidate.targetUri)\n            && (Range.is(candidate.targetSelectionRange) || Is.undefined(candidate.targetSelectionRange))\n            && (Range.is(candidate.originSelectionRange) || Is.undefined(candidate.originSelectionRange));\n    }\n    LocationLink.is = is;\n})(LocationLink || (LocationLink = {}));\n/**\n * The Color namespace provides helper functions to work with\n * [Color](#Color) literals.\n */\nexport var Color;\n(function (Color) {\n    /**\n     * Creates a new Color literal.\n     */\n    function create(red, green, blue, alpha) {\n        return {\n            red: red,\n            green: green,\n            blue: blue,\n            alpha: alpha,\n        };\n    }\n    Color.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Color](#Color) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.numberRange(candidate.red, 0, 1)\n            && Is.numberRange(candidate.green, 0, 1)\n            && Is.numberRange(candidate.blue, 0, 1)\n            && Is.numberRange(candidate.alpha, 0, 1);\n    }\n    Color.is = is;\n})(Color || (Color = {}));\n/**\n * The ColorInformation namespace provides helper functions to work with\n * [ColorInformation](#ColorInformation) literals.\n */\nexport var ColorInformation;\n(function (ColorInformation) {\n    /**\n     * Creates a new ColorInformation literal.\n     */\n    function create(range, color) {\n        return {\n            range: range,\n            color: color,\n        };\n    }\n    ColorInformation.create = create;\n    /**\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Range.is(candidate.range) && Color.is(candidate.color);\n    }\n    ColorInformation.is = is;\n})(ColorInformation || (ColorInformation = {}));\n/**\n * The Color namespace provides helper functions to work with\n * [ColorPresentation](#ColorPresentation) literals.\n */\nexport var ColorPresentation;\n(function (ColorPresentation) {\n    /**\n     * Creates a new ColorInformation literal.\n     */\n    function create(label, textEdit, additionalTextEdits) {\n        return {\n            label: label,\n            textEdit: textEdit,\n            additionalTextEdits: additionalTextEdits,\n        };\n    }\n    ColorPresentation.create = create;\n    /**\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.string(candidate.label)\n            && (Is.undefined(candidate.textEdit) || TextEdit.is(candidate))\n            && (Is.undefined(candidate.additionalTextEdits) || Is.typedArray(candidate.additionalTextEdits, TextEdit.is));\n    }\n    ColorPresentation.is = is;\n})(ColorPresentation || (ColorPresentation = {}));\n/**\n * Enum of known range kinds\n */\nexport var FoldingRangeKind;\n(function (FoldingRangeKind) {\n    /**\n     * Folding range for a comment\n     */\n    FoldingRangeKind[\"Comment\"] = \"comment\";\n    /**\n     * Folding range for a imports or includes\n     */\n    FoldingRangeKind[\"Imports\"] = \"imports\";\n    /**\n     * Folding range for a region (e.g. `#region`)\n     */\n    FoldingRangeKind[\"Region\"] = \"region\";\n})(FoldingRangeKind || (FoldingRangeKind = {}));\n/**\n * The folding range namespace provides helper functions to work with\n * [FoldingRange](#FoldingRange) literals.\n */\nexport var FoldingRange;\n(function (FoldingRange) {\n    /**\n     * Creates a new FoldingRange literal.\n     */\n    function create(startLine, endLine, startCharacter, endCharacter, kind) {\n        var result = {\n            startLine: startLine,\n            endLine: endLine\n        };\n        if (Is.defined(startCharacter)) {\n            result.startCharacter = startCharacter;\n        }\n        if (Is.defined(endCharacter)) {\n            result.endCharacter = endCharacter;\n        }\n        if (Is.defined(kind)) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    FoldingRange.create = create;\n    /**\n     * Checks whether the given literal conforms to the [FoldingRange](#FoldingRange) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.uinteger(candidate.startLine) && Is.uinteger(candidate.startLine)\n            && (Is.undefined(candidate.startCharacter) || Is.uinteger(candidate.startCharacter))\n            && (Is.undefined(candidate.endCharacter) || Is.uinteger(candidate.endCharacter))\n            && (Is.undefined(candidate.kind) || Is.string(candidate.kind));\n    }\n    FoldingRange.is = is;\n})(FoldingRange || (FoldingRange = {}));\n/**\n * The DiagnosticRelatedInformation namespace provides helper functions to work with\n * [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) literals.\n */\nexport var DiagnosticRelatedInformation;\n(function (DiagnosticRelatedInformation) {\n    /**\n     * Creates a new DiagnosticRelatedInformation literal.\n     */\n    function create(location, message) {\n        return {\n            location: location,\n            message: message\n        };\n    }\n    DiagnosticRelatedInformation.create = create;\n    /**\n     * Checks whether the given literal conforms to the [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Location.is(candidate.location) && Is.string(candidate.message);\n    }\n    DiagnosticRelatedInformation.is = is;\n})(DiagnosticRelatedInformation || (DiagnosticRelatedInformation = {}));\n/**\n * The diagnostic's severity.\n */\nexport var DiagnosticSeverity;\n(function (DiagnosticSeverity) {\n    /**\n     * Reports an error.\n     */\n    DiagnosticSeverity.Error = 1;\n    /**\n     * Reports a warning.\n     */\n    DiagnosticSeverity.Warning = 2;\n    /**\n     * Reports an information.\n     */\n    DiagnosticSeverity.Information = 3;\n    /**\n     * Reports a hint.\n     */\n    DiagnosticSeverity.Hint = 4;\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\n/**\n * The diagnostic tags.\n *\n * @since 3.15.0\n */\nexport var DiagnosticTag;\n(function (DiagnosticTag) {\n    /**\n     * Unused or unnecessary code.\n     *\n     * Clients are allowed to render diagnostics with this tag faded out instead of having\n     * an error squiggle.\n     */\n    DiagnosticTag.Unnecessary = 1;\n    /**\n     * Deprecated or obsolete code.\n     *\n     * Clients are allowed to rendered diagnostics with this tag strike through.\n     */\n    DiagnosticTag.Deprecated = 2;\n})(DiagnosticTag || (DiagnosticTag = {}));\n/**\n * The CodeDescription namespace provides functions to deal with descriptions for diagnostic codes.\n *\n * @since 3.16.0\n */\nexport var CodeDescription;\n(function (CodeDescription) {\n    function is(value) {\n        var candidate = value;\n        return candidate !== undefined && candidate !== null && Is.string(candidate.href);\n    }\n    CodeDescription.is = is;\n})(CodeDescription || (CodeDescription = {}));\n/**\n * The Diagnostic namespace provides helper functions to work with\n * [Diagnostic](#Diagnostic) literals.\n */\nexport var Diagnostic;\n(function (Diagnostic) {\n    /**\n     * Creates a new Diagnostic literal.\n     */\n    function create(range, message, severity, code, source, relatedInformation) {\n        var result = { range: range, message: message };\n        if (Is.defined(severity)) {\n            result.severity = severity;\n        }\n        if (Is.defined(code)) {\n            result.code = code;\n        }\n        if (Is.defined(source)) {\n            result.source = source;\n        }\n        if (Is.defined(relatedInformation)) {\n            result.relatedInformation = relatedInformation;\n        }\n        return result;\n    }\n    Diagnostic.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Diagnostic](#Diagnostic) interface.\n     */\n    function is(value) {\n        var _a;\n        var candidate = value;\n        return Is.defined(candidate)\n            && Range.is(candidate.range)\n            && Is.string(candidate.message)\n            && (Is.number(candidate.severity) || Is.undefined(candidate.severity))\n            && (Is.integer(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code))\n            && (Is.undefined(candidate.codeDescription) || (Is.string((_a = candidate.codeDescription) === null || _a === void 0 ? void 0 : _a.href)))\n            && (Is.string(candidate.source) || Is.undefined(candidate.source))\n            && (Is.undefined(candidate.relatedInformation) || Is.typedArray(candidate.relatedInformation, DiagnosticRelatedInformation.is));\n    }\n    Diagnostic.is = is;\n})(Diagnostic || (Diagnostic = {}));\n/**\n * The Command namespace provides helper functions to work with\n * [Command](#Command) literals.\n */\nexport var Command;\n(function (Command) {\n    /**\n     * Creates a new Command literal.\n     */\n    function create(title, command) {\n        var args = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            args[_i - 2] = arguments[_i];\n        }\n        var result = { title: title, command: command };\n        if (Is.defined(args) && args.length > 0) {\n            result.arguments = args;\n        }\n        return result;\n    }\n    Command.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Command](#Command) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.command);\n    }\n    Command.is = is;\n})(Command || (Command = {}));\n/**\n * The TextEdit namespace provides helper function to create replace,\n * insert and delete edits more easily.\n */\nexport var TextEdit;\n(function (TextEdit) {\n    /**\n     * Creates a replace text edit.\n     * @param range The range of text to be replaced.\n     * @param newText The new text.\n     */\n    function replace(range, newText) {\n        return { range: range, newText: newText };\n    }\n    TextEdit.replace = replace;\n    /**\n     * Creates a insert text edit.\n     * @param position The position to insert the text at.\n     * @param newText The text to be inserted.\n     */\n    function insert(position, newText) {\n        return { range: { start: position, end: position }, newText: newText };\n    }\n    TextEdit.insert = insert;\n    /**\n     * Creates a delete text edit.\n     * @param range The range of text to be deleted.\n     */\n    function del(range) {\n        return { range: range, newText: '' };\n    }\n    TextEdit.del = del;\n    function is(value) {\n        var candidate = value;\n        return Is.objectLiteral(candidate)\n            && Is.string(candidate.newText)\n            && Range.is(candidate.range);\n    }\n    TextEdit.is = is;\n})(TextEdit || (TextEdit = {}));\nexport var ChangeAnnotation;\n(function (ChangeAnnotation) {\n    function create(label, needsConfirmation, description) {\n        var result = { label: label };\n        if (needsConfirmation !== undefined) {\n            result.needsConfirmation = needsConfirmation;\n        }\n        if (description !== undefined) {\n            result.description = description;\n        }\n        return result;\n    }\n    ChangeAnnotation.create = create;\n    function is(value) {\n        var candidate = value;\n        return candidate !== undefined && Is.objectLiteral(candidate) && Is.string(candidate.label) &&\n            (Is.boolean(candidate.needsConfirmation) || candidate.needsConfirmation === undefined) &&\n            (Is.string(candidate.description) || candidate.description === undefined);\n    }\n    ChangeAnnotation.is = is;\n})(ChangeAnnotation || (ChangeAnnotation = {}));\nexport var ChangeAnnotationIdentifier;\n(function (ChangeAnnotationIdentifier) {\n    function is(value) {\n        var candidate = value;\n        return typeof candidate === 'string';\n    }\n    ChangeAnnotationIdentifier.is = is;\n})(ChangeAnnotationIdentifier || (ChangeAnnotationIdentifier = {}));\nexport var AnnotatedTextEdit;\n(function (AnnotatedTextEdit) {\n    /**\n     * Creates an annotated replace text edit.\n     *\n     * @param range The range of text to be replaced.\n     * @param newText The new text.\n     * @param annotation The annotation.\n     */\n    function replace(range, newText, annotation) {\n        return { range: range, newText: newText, annotationId: annotation };\n    }\n    AnnotatedTextEdit.replace = replace;\n    /**\n     * Creates an annotated insert text edit.\n     *\n     * @param position The position to insert the text at.\n     * @param newText The text to be inserted.\n     * @param annotation The annotation.\n     */\n    function insert(position, newText, annotation) {\n        return { range: { start: position, end: position }, newText: newText, annotationId: annotation };\n    }\n    AnnotatedTextEdit.insert = insert;\n    /**\n     * Creates an annotated delete text edit.\n     *\n     * @param range The range of text to be deleted.\n     * @param annotation The annotation.\n     */\n    function del(range, annotation) {\n        return { range: range, newText: '', annotationId: annotation };\n    }\n    AnnotatedTextEdit.del = del;\n    function is(value) {\n        var candidate = value;\n        return TextEdit.is(candidate) && (ChangeAnnotation.is(candidate.annotationId) || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    AnnotatedTextEdit.is = is;\n})(AnnotatedTextEdit || (AnnotatedTextEdit = {}));\n/**\n * The TextDocumentEdit namespace provides helper function to create\n * an edit that manipulates a text document.\n */\nexport var TextDocumentEdit;\n(function (TextDocumentEdit) {\n    /**\n     * Creates a new `TextDocumentEdit`\n     */\n    function create(textDocument, edits) {\n        return { textDocument: textDocument, edits: edits };\n    }\n    TextDocumentEdit.create = create;\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate)\n            && OptionalVersionedTextDocumentIdentifier.is(candidate.textDocument)\n            && Array.isArray(candidate.edits);\n    }\n    TextDocumentEdit.is = is;\n})(TextDocumentEdit || (TextDocumentEdit = {}));\nexport var CreateFile;\n(function (CreateFile) {\n    function create(uri, options, annotation) {\n        var result = {\n            kind: 'create',\n            uri: uri\n        };\n        if (options !== undefined && (options.overwrite !== undefined || options.ignoreIfExists !== undefined)) {\n            result.options = options;\n        }\n        if (annotation !== undefined) {\n            result.annotationId = annotation;\n        }\n        return result;\n    }\n    CreateFile.create = create;\n    function is(value) {\n        var candidate = value;\n        return candidate && candidate.kind === 'create' && Is.string(candidate.uri) && (candidate.options === undefined ||\n            ((candidate.options.overwrite === undefined || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === undefined || Is.boolean(candidate.options.ignoreIfExists)))) && (candidate.annotationId === undefined || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    CreateFile.is = is;\n})(CreateFile || (CreateFile = {}));\nexport var RenameFile;\n(function (RenameFile) {\n    function create(oldUri, newUri, options, annotation) {\n        var result = {\n            kind: 'rename',\n            oldUri: oldUri,\n            newUri: newUri\n        };\n        if (options !== undefined && (options.overwrite !== undefined || options.ignoreIfExists !== undefined)) {\n            result.options = options;\n        }\n        if (annotation !== undefined) {\n            result.annotationId = annotation;\n        }\n        return result;\n    }\n    RenameFile.create = create;\n    function is(value) {\n        var candidate = value;\n        return candidate && candidate.kind === 'rename' && Is.string(candidate.oldUri) && Is.string(candidate.newUri) && (candidate.options === undefined ||\n            ((candidate.options.overwrite === undefined || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === undefined || Is.boolean(candidate.options.ignoreIfExists)))) && (candidate.annotationId === undefined || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    RenameFile.is = is;\n})(RenameFile || (RenameFile = {}));\nexport var DeleteFile;\n(function (DeleteFile) {\n    function create(uri, options, annotation) {\n        var result = {\n            kind: 'delete',\n            uri: uri\n        };\n        if (options !== undefined && (options.recursive !== undefined || options.ignoreIfNotExists !== undefined)) {\n            result.options = options;\n        }\n        if (annotation !== undefined) {\n            result.annotationId = annotation;\n        }\n        return result;\n    }\n    DeleteFile.create = create;\n    function is(value) {\n        var candidate = value;\n        return candidate && candidate.kind === 'delete' && Is.string(candidate.uri) && (candidate.options === undefined ||\n            ((candidate.options.recursive === undefined || Is.boolean(candidate.options.recursive)) && (candidate.options.ignoreIfNotExists === undefined || Is.boolean(candidate.options.ignoreIfNotExists)))) && (candidate.annotationId === undefined || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    DeleteFile.is = is;\n})(DeleteFile || (DeleteFile = {}));\nexport var WorkspaceEdit;\n(function (WorkspaceEdit) {\n    function is(value) {\n        var candidate = value;\n        return candidate &&\n            (candidate.changes !== undefined || candidate.documentChanges !== undefined) &&\n            (candidate.documentChanges === undefined || candidate.documentChanges.every(function (change) {\n                if (Is.string(change.kind)) {\n                    return CreateFile.is(change) || RenameFile.is(change) || DeleteFile.is(change);\n                }\n                else {\n                    return TextDocumentEdit.is(change);\n                }\n            }));\n    }\n    WorkspaceEdit.is = is;\n})(WorkspaceEdit || (WorkspaceEdit = {}));\nvar TextEditChangeImpl = /** @class */ (function () {\n    function TextEditChangeImpl(edits, changeAnnotations) {\n        this.edits = edits;\n        this.changeAnnotations = changeAnnotations;\n    }\n    TextEditChangeImpl.prototype.insert = function (position, newText, annotation) {\n        var edit;\n        var id;\n        if (annotation === undefined) {\n            edit = TextEdit.insert(position, newText);\n        }\n        else if (ChangeAnnotationIdentifier.is(annotation)) {\n            id = annotation;\n            edit = AnnotatedTextEdit.insert(position, newText, annotation);\n        }\n        else {\n            this.assertChangeAnnotations(this.changeAnnotations);\n            id = this.changeAnnotations.manage(annotation);\n            edit = AnnotatedTextEdit.insert(position, newText, id);\n        }\n        this.edits.push(edit);\n        if (id !== undefined) {\n            return id;\n        }\n    };\n    TextEditChangeImpl.prototype.replace = function (range, newText, annotation) {\n        var edit;\n        var id;\n        if (annotation === undefined) {\n            edit = TextEdit.replace(range, newText);\n        }\n        else if (ChangeAnnotationIdentifier.is(annotation)) {\n            id = annotation;\n            edit = AnnotatedTextEdit.replace(range, newText, annotation);\n        }\n        else {\n            this.assertChangeAnnotations(this.changeAnnotations);\n            id = this.changeAnnotations.manage(annotation);\n            edit = AnnotatedTextEdit.replace(range, newText, id);\n        }\n        this.edits.push(edit);\n        if (id !== undefined) {\n            return id;\n        }\n    };\n    TextEditChangeImpl.prototype.delete = function (range, annotation) {\n        var edit;\n        var id;\n        if (annotation === undefined) {\n            edit = TextEdit.del(range);\n        }\n        else if (ChangeAnnotationIdentifier.is(annotation)) {\n            id = annotation;\n            edit = AnnotatedTextEdit.del(range, annotation);\n        }\n        else {\n            this.assertChangeAnnotations(this.changeAnnotations);\n            id = this.changeAnnotations.manage(annotation);\n            edit = AnnotatedTextEdit.del(range, id);\n        }\n        this.edits.push(edit);\n        if (id !== undefined) {\n            return id;\n        }\n    };\n    TextEditChangeImpl.prototype.add = function (edit) {\n        this.edits.push(edit);\n    };\n    TextEditChangeImpl.prototype.all = function () {\n        return this.edits;\n    };\n    TextEditChangeImpl.prototype.clear = function () {\n        this.edits.splice(0, this.edits.length);\n    };\n    TextEditChangeImpl.prototype.assertChangeAnnotations = function (value) {\n        if (value === undefined) {\n            throw new Error(\"Text edit change is not configured to manage change annotations.\");\n        }\n    };\n    return TextEditChangeImpl;\n}());\n/**\n * A helper class\n */\nvar ChangeAnnotations = /** @class */ (function () {\n    function ChangeAnnotations(annotations) {\n        this._annotations = annotations === undefined ? Object.create(null) : annotations;\n        this._counter = 0;\n        this._size = 0;\n    }\n    ChangeAnnotations.prototype.all = function () {\n        return this._annotations;\n    };\n    Object.defineProperty(ChangeAnnotations.prototype, \"size\", {\n        get: function () {\n            return this._size;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    ChangeAnnotations.prototype.manage = function (idOrAnnotation, annotation) {\n        var id;\n        if (ChangeAnnotationIdentifier.is(idOrAnnotation)) {\n            id = idOrAnnotation;\n        }\n        else {\n            id = this.nextId();\n            annotation = idOrAnnotation;\n        }\n        if (this._annotations[id] !== undefined) {\n            throw new Error(\"Id \" + id + \" is already in use.\");\n        }\n        if (annotation === undefined) {\n            throw new Error(\"No annotation provided for id \" + id);\n        }\n        this._annotations[id] = annotation;\n        this._size++;\n        return id;\n    };\n    ChangeAnnotations.prototype.nextId = function () {\n        this._counter++;\n        return this._counter.toString();\n    };\n    return ChangeAnnotations;\n}());\n/**\n * A workspace change helps constructing changes to a workspace.\n */\nvar WorkspaceChange = /** @class */ (function () {\n    function WorkspaceChange(workspaceEdit) {\n        var _this = this;\n        this._textEditChanges = Object.create(null);\n        if (workspaceEdit !== undefined) {\n            this._workspaceEdit = workspaceEdit;\n            if (workspaceEdit.documentChanges) {\n                this._changeAnnotations = new ChangeAnnotations(workspaceEdit.changeAnnotations);\n                workspaceEdit.changeAnnotations = this._changeAnnotations.all();\n                workspaceEdit.documentChanges.forEach(function (change) {\n                    if (TextDocumentEdit.is(change)) {\n                        var textEditChange = new TextEditChangeImpl(change.edits, _this._changeAnnotations);\n                        _this._textEditChanges[change.textDocument.uri] = textEditChange;\n                    }\n                });\n            }\n            else if (workspaceEdit.changes) {\n                Object.keys(workspaceEdit.changes).forEach(function (key) {\n                    var textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\n                    _this._textEditChanges[key] = textEditChange;\n                });\n            }\n        }\n        else {\n            this._workspaceEdit = {};\n        }\n    }\n    Object.defineProperty(WorkspaceChange.prototype, \"edit\", {\n        /**\n         * Returns the underlying [WorkspaceEdit](#WorkspaceEdit) literal\n         * use to be returned from a workspace edit operation like rename.\n         */\n        get: function () {\n            this.initDocumentChanges();\n            if (this._changeAnnotations !== undefined) {\n                if (this._changeAnnotations.size === 0) {\n                    this._workspaceEdit.changeAnnotations = undefined;\n                }\n                else {\n                    this._workspaceEdit.changeAnnotations = this._changeAnnotations.all();\n                }\n            }\n            return this._workspaceEdit;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    WorkspaceChange.prototype.getTextEditChange = function (key) {\n        if (OptionalVersionedTextDocumentIdentifier.is(key)) {\n            this.initDocumentChanges();\n            if (this._workspaceEdit.documentChanges === undefined) {\n                throw new Error('Workspace edit is not configured for document changes.');\n            }\n            var textDocument = { uri: key.uri, version: key.version };\n            var result = this._textEditChanges[textDocument.uri];\n            if (!result) {\n                var edits = [];\n                var textDocumentEdit = {\n                    textDocument: textDocument,\n                    edits: edits\n                };\n                this._workspaceEdit.documentChanges.push(textDocumentEdit);\n                result = new TextEditChangeImpl(edits, this._changeAnnotations);\n                this._textEditChanges[textDocument.uri] = result;\n            }\n            return result;\n        }\n        else {\n            this.initChanges();\n            if (this._workspaceEdit.changes === undefined) {\n                throw new Error('Workspace edit is not configured for normal text edit changes.');\n            }\n            var result = this._textEditChanges[key];\n            if (!result) {\n                var edits = [];\n                this._workspaceEdit.changes[key] = edits;\n                result = new TextEditChangeImpl(edits);\n                this._textEditChanges[key] = result;\n            }\n            return result;\n        }\n    };\n    WorkspaceChange.prototype.initDocumentChanges = function () {\n        if (this._workspaceEdit.documentChanges === undefined && this._workspaceEdit.changes === undefined) {\n            this._changeAnnotations = new ChangeAnnotations();\n            this._workspaceEdit.documentChanges = [];\n            this._workspaceEdit.changeAnnotations = this._changeAnnotations.all();\n        }\n    };\n    WorkspaceChange.prototype.initChanges = function () {\n        if (this._workspaceEdit.documentChanges === undefined && this._workspaceEdit.changes === undefined) {\n            this._workspaceEdit.changes = Object.create(null);\n        }\n    };\n    WorkspaceChange.prototype.createFile = function (uri, optionsOrAnnotation, options) {\n        this.initDocumentChanges();\n        if (this._workspaceEdit.documentChanges === undefined) {\n            throw new Error('Workspace edit is not configured for document changes.');\n        }\n        var annotation;\n        if (ChangeAnnotation.is(optionsOrAnnotation) || ChangeAnnotationIdentifier.is(optionsOrAnnotation)) {\n            annotation = optionsOrAnnotation;\n        }\n        else {\n            options = optionsOrAnnotation;\n        }\n        var operation;\n        var id;\n        if (annotation === undefined) {\n            operation = CreateFile.create(uri, options);\n        }\n        else {\n            id = ChangeAnnotationIdentifier.is(annotation) ? annotation : this._changeAnnotations.manage(annotation);\n            operation = CreateFile.create(uri, options, id);\n        }\n        this._workspaceEdit.documentChanges.push(operation);\n        if (id !== undefined) {\n            return id;\n        }\n    };\n    WorkspaceChange.prototype.renameFile = function (oldUri, newUri, optionsOrAnnotation, options) {\n        this.initDocumentChanges();\n        if (this._workspaceEdit.documentChanges === undefined) {\n            throw new Error('Workspace edit is not configured for document changes.');\n        }\n        var annotation;\n        if (ChangeAnnotation.is(optionsOrAnnotation) || ChangeAnnotationIdentifier.is(optionsOrAnnotation)) {\n            annotation = optionsOrAnnotation;\n        }\n        else {\n            options = optionsOrAnnotation;\n        }\n        var operation;\n        var id;\n        if (annotation === undefined) {\n            operation = RenameFile.create(oldUri, newUri, options);\n        }\n        else {\n            id = ChangeAnnotationIdentifier.is(annotation) ? annotation : this._changeAnnotations.manage(annotation);\n            operation = RenameFile.create(oldUri, newUri, options, id);\n        }\n        this._workspaceEdit.documentChanges.push(operation);\n        if (id !== undefined) {\n            return id;\n        }\n    };\n    WorkspaceChange.prototype.deleteFile = function (uri, optionsOrAnnotation, options) {\n        this.initDocumentChanges();\n        if (this._workspaceEdit.documentChanges === undefined) {\n            throw new Error('Workspace edit is not configured for document changes.');\n        }\n        var annotation;\n        if (ChangeAnnotation.is(optionsOrAnnotation) || ChangeAnnotationIdentifier.is(optionsOrAnnotation)) {\n            annotation = optionsOrAnnotation;\n        }\n        else {\n            options = optionsOrAnnotation;\n        }\n        var operation;\n        var id;\n        if (annotation === undefined) {\n            operation = DeleteFile.create(uri, options);\n        }\n        else {\n            id = ChangeAnnotationIdentifier.is(annotation) ? annotation : this._changeAnnotations.manage(annotation);\n            operation = DeleteFile.create(uri, options, id);\n        }\n        this._workspaceEdit.documentChanges.push(operation);\n        if (id !== undefined) {\n            return id;\n        }\n    };\n    return WorkspaceChange;\n}());\nexport { WorkspaceChange };\n/**\n * The TextDocumentIdentifier namespace provides helper functions to work with\n * [TextDocumentIdentifier](#TextDocumentIdentifier) literals.\n */\nexport var TextDocumentIdentifier;\n(function (TextDocumentIdentifier) {\n    /**\n     * Creates a new TextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     */\n    function create(uri) {\n        return { uri: uri };\n    }\n    TextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the [TextDocumentIdentifier](#TextDocumentIdentifier) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri);\n    }\n    TextDocumentIdentifier.is = is;\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\n/**\n * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\n * [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) literals.\n */\nexport var VersionedTextDocumentIdentifier;\n(function (VersionedTextDocumentIdentifier) {\n    /**\n     * Creates a new VersionedTextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     * @param uri The document's text.\n     */\n    function create(uri, version) {\n        return { uri: uri, version: version };\n    }\n    VersionedTextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.integer(candidate.version);\n    }\n    VersionedTextDocumentIdentifier.is = is;\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\n/**\n * The OptionalVersionedTextDocumentIdentifier namespace provides helper functions to work with\n * [OptionalVersionedTextDocumentIdentifier](#OptionalVersionedTextDocumentIdentifier) literals.\n */\nexport var OptionalVersionedTextDocumentIdentifier;\n(function (OptionalVersionedTextDocumentIdentifier) {\n    /**\n     * Creates a new OptionalVersionedTextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     * @param uri The document's text.\n     */\n    function create(uri, version) {\n        return { uri: uri, version: version };\n    }\n    OptionalVersionedTextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the [OptionalVersionedTextDocumentIdentifier](#OptionalVersionedTextDocumentIdentifier) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && (candidate.version === null || Is.integer(candidate.version));\n    }\n    OptionalVersionedTextDocumentIdentifier.is = is;\n})(OptionalVersionedTextDocumentIdentifier || (OptionalVersionedTextDocumentIdentifier = {}));\n/**\n * The TextDocumentItem namespace provides helper functions to work with\n * [TextDocumentItem](#TextDocumentItem) literals.\n */\nexport var TextDocumentItem;\n(function (TextDocumentItem) {\n    /**\n     * Creates a new TextDocumentItem literal.\n     * @param uri The document's uri.\n     * @param languageId The document's language identifier.\n     * @param version The document's version number.\n     * @param text The document's text.\n     */\n    function create(uri, languageId, version, text) {\n        return { uri: uri, languageId: languageId, version: version, text: text };\n    }\n    TextDocumentItem.create = create;\n    /**\n     * Checks whether the given literal conforms to the [TextDocumentItem](#TextDocumentItem) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.integer(candidate.version) && Is.string(candidate.text);\n    }\n    TextDocumentItem.is = is;\n})(TextDocumentItem || (TextDocumentItem = {}));\n/**\n * Describes the content type that a client supports in various\n * result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\n *\n * Please note that `MarkupKinds` must not start with a `$`. This kinds\n * are reserved for internal usage.\n */\nexport var MarkupKind;\n(function (MarkupKind) {\n    /**\n     * Plain text is supported as a content format\n     */\n    MarkupKind.PlainText = 'plaintext';\n    /**\n     * Markdown is supported as a content format\n     */\n    MarkupKind.Markdown = 'markdown';\n})(MarkupKind || (MarkupKind = {}));\n(function (MarkupKind) {\n    /**\n     * Checks whether the given value is a value of the [MarkupKind](#MarkupKind) type.\n     */\n    function is(value) {\n        var candidate = value;\n        return candidate === MarkupKind.PlainText || candidate === MarkupKind.Markdown;\n    }\n    MarkupKind.is = is;\n})(MarkupKind || (MarkupKind = {}));\nexport var MarkupContent;\n(function (MarkupContent) {\n    /**\n     * Checks whether the given value conforms to the [MarkupContent](#MarkupContent) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.objectLiteral(value) && MarkupKind.is(candidate.kind) && Is.string(candidate.value);\n    }\n    MarkupContent.is = is;\n})(MarkupContent || (MarkupContent = {}));\n/**\n * The kind of a completion entry.\n */\nexport var CompletionItemKind;\n(function (CompletionItemKind) {\n    CompletionItemKind.Text = 1;\n    CompletionItemKind.Method = 2;\n    CompletionItemKind.Function = 3;\n    CompletionItemKind.Constructor = 4;\n    CompletionItemKind.Field = 5;\n    CompletionItemKind.Variable = 6;\n    CompletionItemKind.Class = 7;\n    CompletionItemKind.Interface = 8;\n    CompletionItemKind.Module = 9;\n    CompletionItemKind.Property = 10;\n    CompletionItemKind.Unit = 11;\n    CompletionItemKind.Value = 12;\n    CompletionItemKind.Enum = 13;\n    CompletionItemKind.Keyword = 14;\n    CompletionItemKind.Snippet = 15;\n    CompletionItemKind.Color = 16;\n    CompletionItemKind.File = 17;\n    CompletionItemKind.Reference = 18;\n    CompletionItemKind.Folder = 19;\n    CompletionItemKind.EnumMember = 20;\n    CompletionItemKind.Constant = 21;\n    CompletionItemKind.Struct = 22;\n    CompletionItemKind.Event = 23;\n    CompletionItemKind.Operator = 24;\n    CompletionItemKind.TypeParameter = 25;\n})(CompletionItemKind || (CompletionItemKind = {}));\n/**\n * Defines whether the insert text in a completion item should be interpreted as\n * plain text or a snippet.\n */\nexport var InsertTextFormat;\n(function (InsertTextFormat) {\n    /**\n     * The primary text to be inserted is treated as a plain string.\n     */\n    InsertTextFormat.PlainText = 1;\n    /**\n     * The primary text to be inserted is treated as a snippet.\n     *\n     * A snippet can define tab stops and placeholders with `$1`, `$2`\n     * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\n     * the end of the snippet. Placeholders with equal identifiers are linked,\n     * that is typing in one will update others too.\n     *\n     * See also: https://microsoft.github.io/language-server-protocol/specifications/specification-current/#snippet_syntax\n     */\n    InsertTextFormat.Snippet = 2;\n})(InsertTextFormat || (InsertTextFormat = {}));\n/**\n * Completion item tags are extra annotations that tweak the rendering of a completion\n * item.\n *\n * @since 3.15.0\n */\nexport var CompletionItemTag;\n(function (CompletionItemTag) {\n    /**\n     * Render a completion as obsolete, usually using a strike-out.\n     */\n    CompletionItemTag.Deprecated = 1;\n})(CompletionItemTag || (CompletionItemTag = {}));\n/**\n * The InsertReplaceEdit namespace provides functions to deal with insert / replace edits.\n *\n * @since 3.16.0\n */\nexport var InsertReplaceEdit;\n(function (InsertReplaceEdit) {\n    /**\n     * Creates a new insert / replace edit\n     */\n    function create(newText, insert, replace) {\n        return { newText: newText, insert: insert, replace: replace };\n    }\n    InsertReplaceEdit.create = create;\n    /**\n     * Checks whether the given literal conforms to the [InsertReplaceEdit](#InsertReplaceEdit) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return candidate && Is.string(candidate.newText) && Range.is(candidate.insert) && Range.is(candidate.replace);\n    }\n    InsertReplaceEdit.is = is;\n})(InsertReplaceEdit || (InsertReplaceEdit = {}));\n/**\n * How whitespace and indentation is handled during completion\n * item insertion.\n *\n * @since 3.16.0\n */\nexport var InsertTextMode;\n(function (InsertTextMode) {\n    /**\n     * The insertion or replace strings is taken as it is. If the\n     * value is multi line the lines below the cursor will be\n     * inserted using the indentation defined in the string value.\n     * The client will not apply any kind of adjustments to the\n     * string.\n     */\n    InsertTextMode.asIs = 1;\n    /**\n     * The editor adjusts leading whitespace of new lines so that\n     * they match the indentation up to the cursor of the line for\n     * which the item is accepted.\n     *\n     * Consider a line like this: <2tabs><cursor><3tabs>foo. Accepting a\n     * multi line completion item is indented using 2 tabs and all\n     * following lines inserted will be indented using 2 tabs as well.\n     */\n    InsertTextMode.adjustIndentation = 2;\n})(InsertTextMode || (InsertTextMode = {}));\n/**\n * The CompletionItem namespace provides functions to deal with\n * completion items.\n */\nexport var CompletionItem;\n(function (CompletionItem) {\n    /**\n     * Create a completion item and seed it with a label.\n     * @param label The completion item's label\n     */\n    function create(label) {\n        return { label: label };\n    }\n    CompletionItem.create = create;\n})(CompletionItem || (CompletionItem = {}));\n/**\n * The CompletionList namespace provides functions to deal with\n * completion lists.\n */\nexport var CompletionList;\n(function (CompletionList) {\n    /**\n     * Creates a new completion list.\n     *\n     * @param items The completion items.\n     * @param isIncomplete The list is not complete.\n     */\n    function create(items, isIncomplete) {\n        return { items: items ? items : [], isIncomplete: !!isIncomplete };\n    }\n    CompletionList.create = create;\n})(CompletionList || (CompletionList = {}));\nexport var MarkedString;\n(function (MarkedString) {\n    /**\n     * Creates a marked string from plain text.\n     *\n     * @param plainText The plain text.\n     */\n    function fromPlainText(plainText) {\n        return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&'); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\n    }\n    MarkedString.fromPlainText = fromPlainText;\n    /**\n     * Checks whether the given value conforms to the [MarkedString](#MarkedString) type.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.string(candidate) || (Is.objectLiteral(candidate) && Is.string(candidate.language) && Is.string(candidate.value));\n    }\n    MarkedString.is = is;\n})(MarkedString || (MarkedString = {}));\nexport var Hover;\n(function (Hover) {\n    /**\n     * Checks whether the given value conforms to the [Hover](#Hover) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return !!candidate && Is.objectLiteral(candidate) && (MarkupContent.is(candidate.contents) ||\n            MarkedString.is(candidate.contents) ||\n            Is.typedArray(candidate.contents, MarkedString.is)) && (value.range === undefined || Range.is(value.range));\n    }\n    Hover.is = is;\n})(Hover || (Hover = {}));\n/**\n * The ParameterInformation namespace provides helper functions to work with\n * [ParameterInformation](#ParameterInformation) literals.\n */\nexport var ParameterInformation;\n(function (ParameterInformation) {\n    /**\n     * Creates a new parameter information literal.\n     *\n     * @param label A label string.\n     * @param documentation A doc string.\n     */\n    function create(label, documentation) {\n        return documentation ? { label: label, documentation: documentation } : { label: label };\n    }\n    ParameterInformation.create = create;\n})(ParameterInformation || (ParameterInformation = {}));\n/**\n * The SignatureInformation namespace provides helper functions to work with\n * [SignatureInformation](#SignatureInformation) literals.\n */\nexport var SignatureInformation;\n(function (SignatureInformation) {\n    function create(label, documentation) {\n        var parameters = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            parameters[_i - 2] = arguments[_i];\n        }\n        var result = { label: label };\n        if (Is.defined(documentation)) {\n            result.documentation = documentation;\n        }\n        if (Is.defined(parameters)) {\n            result.parameters = parameters;\n        }\n        else {\n            result.parameters = [];\n        }\n        return result;\n    }\n    SignatureInformation.create = create;\n})(SignatureInformation || (SignatureInformation = {}));\n/**\n * A document highlight kind.\n */\nexport var DocumentHighlightKind;\n(function (DocumentHighlightKind) {\n    /**\n     * A textual occurrence.\n     */\n    DocumentHighlightKind.Text = 1;\n    /**\n     * Read-access of a symbol, like reading a variable.\n     */\n    DocumentHighlightKind.Read = 2;\n    /**\n     * Write-access of a symbol, like writing to a variable.\n     */\n    DocumentHighlightKind.Write = 3;\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\n/**\n * DocumentHighlight namespace to provide helper functions to work with\n * [DocumentHighlight](#DocumentHighlight) literals.\n */\nexport var DocumentHighlight;\n(function (DocumentHighlight) {\n    /**\n     * Create a DocumentHighlight object.\n     * @param range The range the highlight applies to.\n     */\n    function create(range, kind) {\n        var result = { range: range };\n        if (Is.number(kind)) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    DocumentHighlight.create = create;\n})(DocumentHighlight || (DocumentHighlight = {}));\n/**\n * A symbol kind.\n */\nexport var SymbolKind;\n(function (SymbolKind) {\n    SymbolKind.File = 1;\n    SymbolKind.Module = 2;\n    SymbolKind.Namespace = 3;\n    SymbolKind.Package = 4;\n    SymbolKind.Class = 5;\n    SymbolKind.Method = 6;\n    SymbolKind.Property = 7;\n    SymbolKind.Field = 8;\n    SymbolKind.Constructor = 9;\n    SymbolKind.Enum = 10;\n    SymbolKind.Interface = 11;\n    SymbolKind.Function = 12;\n    SymbolKind.Variable = 13;\n    SymbolKind.Constant = 14;\n    SymbolKind.String = 15;\n    SymbolKind.Number = 16;\n    SymbolKind.Boolean = 17;\n    SymbolKind.Array = 18;\n    SymbolKind.Object = 19;\n    SymbolKind.Key = 20;\n    SymbolKind.Null = 21;\n    SymbolKind.EnumMember = 22;\n    SymbolKind.Struct = 23;\n    SymbolKind.Event = 24;\n    SymbolKind.Operator = 25;\n    SymbolKind.TypeParameter = 26;\n})(SymbolKind || (SymbolKind = {}));\n/**\n * Symbol tags are extra annotations that tweak the rendering of a symbol.\n * @since 3.16\n */\nexport var SymbolTag;\n(function (SymbolTag) {\n    /**\n     * Render a symbol as obsolete, usually using a strike-out.\n     */\n    SymbolTag.Deprecated = 1;\n})(SymbolTag || (SymbolTag = {}));\nexport var SymbolInformation;\n(function (SymbolInformation) {\n    /**\n     * Creates a new symbol information literal.\n     *\n     * @param name The name of the symbol.\n     * @param kind The kind of the symbol.\n     * @param range The range of the location of the symbol.\n     * @param uri The resource of the location of symbol, defaults to the current document.\n     * @param containerName The name of the symbol containing the symbol.\n     */\n    function create(name, kind, range, uri, containerName) {\n        var result = {\n            name: name,\n            kind: kind,\n            location: { uri: uri, range: range }\n        };\n        if (containerName) {\n            result.containerName = containerName;\n        }\n        return result;\n    }\n    SymbolInformation.create = create;\n})(SymbolInformation || (SymbolInformation = {}));\nexport var DocumentSymbol;\n(function (DocumentSymbol) {\n    /**\n     * Creates a new symbol information literal.\n     *\n     * @param name The name of the symbol.\n     * @param detail The detail of the symbol.\n     * @param kind The kind of the symbol.\n     * @param range The range of the symbol.\n     * @param selectionRange The selectionRange of the symbol.\n     * @param children Children of the symbol.\n     */\n    function create(name, detail, kind, range, selectionRange, children) {\n        var result = {\n            name: name,\n            detail: detail,\n            kind: kind,\n            range: range,\n            selectionRange: selectionRange\n        };\n        if (children !== undefined) {\n            result.children = children;\n        }\n        return result;\n    }\n    DocumentSymbol.create = create;\n    /**\n     * Checks whether the given literal conforms to the [DocumentSymbol](#DocumentSymbol) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return candidate &&\n            Is.string(candidate.name) && Is.number(candidate.kind) &&\n            Range.is(candidate.range) && Range.is(candidate.selectionRange) &&\n            (candidate.detail === undefined || Is.string(candidate.detail)) &&\n            (candidate.deprecated === undefined || Is.boolean(candidate.deprecated)) &&\n            (candidate.children === undefined || Array.isArray(candidate.children)) &&\n            (candidate.tags === undefined || Array.isArray(candidate.tags));\n    }\n    DocumentSymbol.is = is;\n})(DocumentSymbol || (DocumentSymbol = {}));\n/**\n * A set of predefined code action kinds\n */\nexport var CodeActionKind;\n(function (CodeActionKind) {\n    /**\n     * Empty kind.\n     */\n    CodeActionKind.Empty = '';\n    /**\n     * Base kind for quickfix actions: 'quickfix'\n     */\n    CodeActionKind.QuickFix = 'quickfix';\n    /**\n     * Base kind for refactoring actions: 'refactor'\n     */\n    CodeActionKind.Refactor = 'refactor';\n    /**\n     * Base kind for refactoring extraction actions: 'refactor.extract'\n     *\n     * Example extract actions:\n     *\n     * - Extract method\n     * - Extract function\n     * - Extract variable\n     * - Extract interface from class\n     * - ...\n     */\n    CodeActionKind.RefactorExtract = 'refactor.extract';\n    /**\n     * Base kind for refactoring inline actions: 'refactor.inline'\n     *\n     * Example inline actions:\n     *\n     * - Inline function\n     * - Inline variable\n     * - Inline constant\n     * - ...\n     */\n    CodeActionKind.RefactorInline = 'refactor.inline';\n    /**\n     * Base kind for refactoring rewrite actions: 'refactor.rewrite'\n     *\n     * Example rewrite actions:\n     *\n     * - Convert JavaScript function to class\n     * - Add or remove parameter\n     * - Encapsulate field\n     * - Make method static\n     * - Move method to base class\n     * - ...\n     */\n    CodeActionKind.RefactorRewrite = 'refactor.rewrite';\n    /**\n     * Base kind for source actions: `source`\n     *\n     * Source code actions apply to the entire file.\n     */\n    CodeActionKind.Source = 'source';\n    /**\n     * Base kind for an organize imports source action: `source.organizeImports`\n     */\n    CodeActionKind.SourceOrganizeImports = 'source.organizeImports';\n    /**\n     * Base kind for auto-fix source actions: `source.fixAll`.\n     *\n     * Fix all actions automatically fix errors that have a clear fix that do not require user input.\n     * They should not suppress errors or perform unsafe fixes such as generating new types or classes.\n     *\n     * @since 3.15.0\n     */\n    CodeActionKind.SourceFixAll = 'source.fixAll';\n})(CodeActionKind || (CodeActionKind = {}));\n/**\n * The CodeActionContext namespace provides helper functions to work with\n * [CodeActionContext](#CodeActionContext) literals.\n */\nexport var CodeActionContext;\n(function (CodeActionContext) {\n    /**\n     * Creates a new CodeActionContext literal.\n     */\n    function create(diagnostics, only) {\n        var result = { diagnostics: diagnostics };\n        if (only !== undefined && only !== null) {\n            result.only = only;\n        }\n        return result;\n    }\n    CodeActionContext.create = create;\n    /**\n     * Checks whether the given literal conforms to the [CodeActionContext](#CodeActionContext) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is) && (candidate.only === undefined || Is.typedArray(candidate.only, Is.string));\n    }\n    CodeActionContext.is = is;\n})(CodeActionContext || (CodeActionContext = {}));\nexport var CodeAction;\n(function (CodeAction) {\n    function create(title, kindOrCommandOrEdit, kind) {\n        var result = { title: title };\n        var checkKind = true;\n        if (typeof kindOrCommandOrEdit === 'string') {\n            checkKind = false;\n            result.kind = kindOrCommandOrEdit;\n        }\n        else if (Command.is(kindOrCommandOrEdit)) {\n            result.command = kindOrCommandOrEdit;\n        }\n        else {\n            result.edit = kindOrCommandOrEdit;\n        }\n        if (checkKind && kind !== undefined) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    CodeAction.create = create;\n    function is(value) {\n        var candidate = value;\n        return candidate && Is.string(candidate.title) &&\n            (candidate.diagnostics === undefined || Is.typedArray(candidate.diagnostics, Diagnostic.is)) &&\n            (candidate.kind === undefined || Is.string(candidate.kind)) &&\n            (candidate.edit !== undefined || candidate.command !== undefined) &&\n            (candidate.command === undefined || Command.is(candidate.command)) &&\n            (candidate.isPreferred === undefined || Is.boolean(candidate.isPreferred)) &&\n            (candidate.edit === undefined || WorkspaceEdit.is(candidate.edit));\n    }\n    CodeAction.is = is;\n})(CodeAction || (CodeAction = {}));\n/**\n * The CodeLens namespace provides helper functions to work with\n * [CodeLens](#CodeLens) literals.\n */\nexport var CodeLens;\n(function (CodeLens) {\n    /**\n     * Creates a new CodeLens literal.\n     */\n    function create(range, data) {\n        var result = { range: range };\n        if (Is.defined(data)) {\n            result.data = data;\n        }\n        return result;\n    }\n    CodeLens.create = create;\n    /**\n     * Checks whether the given literal conforms to the [CodeLens](#CodeLens) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\n    }\n    CodeLens.is = is;\n})(CodeLens || (CodeLens = {}));\n/**\n * The FormattingOptions namespace provides helper functions to work with\n * [FormattingOptions](#FormattingOptions) literals.\n */\nexport var FormattingOptions;\n(function (FormattingOptions) {\n    /**\n     * Creates a new FormattingOptions literal.\n     */\n    function create(tabSize, insertSpaces) {\n        return { tabSize: tabSize, insertSpaces: insertSpaces };\n    }\n    FormattingOptions.create = create;\n    /**\n     * Checks whether the given literal conforms to the [FormattingOptions](#FormattingOptions) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.uinteger(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\n    }\n    FormattingOptions.is = is;\n})(FormattingOptions || (FormattingOptions = {}));\n/**\n * The DocumentLink namespace provides helper functions to work with\n * [DocumentLink](#DocumentLink) literals.\n */\nexport var DocumentLink;\n(function (DocumentLink) {\n    /**\n     * Creates a new DocumentLink literal.\n     */\n    function create(range, target, data) {\n        return { range: range, target: target, data: data };\n    }\n    DocumentLink.create = create;\n    /**\n     * Checks whether the given literal conforms to the [DocumentLink](#DocumentLink) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\n    }\n    DocumentLink.is = is;\n})(DocumentLink || (DocumentLink = {}));\n/**\n * The SelectionRange namespace provides helper function to work with\n * SelectionRange literals.\n */\nexport var SelectionRange;\n(function (SelectionRange) {\n    /**\n     * Creates a new SelectionRange\n     * @param range the range.\n     * @param parent an optional parent.\n     */\n    function create(range, parent) {\n        return { range: range, parent: parent };\n    }\n    SelectionRange.create = create;\n    function is(value) {\n        var candidate = value;\n        return candidate !== undefined && Range.is(candidate.range) && (candidate.parent === undefined || SelectionRange.is(candidate.parent));\n    }\n    SelectionRange.is = is;\n})(SelectionRange || (SelectionRange = {}));\nexport var EOL = ['\\n', '\\r\\n', '\\r'];\n/**\n * @deprecated Use the text document from the new vscode-languageserver-textdocument package.\n */\nexport var TextDocument;\n(function (TextDocument) {\n    /**\n     * Creates a new ITextDocument literal from the given uri and content.\n     * @param uri The document's uri.\n     * @param languageId  The document's language Id.\n     * @param content The document's content.\n     */\n    function create(uri, languageId, version, content) {\n        return new FullTextDocument(uri, languageId, version, content);\n    }\n    TextDocument.create = create;\n    /**\n     * Checks whether the given literal conforms to the [ITextDocument](#ITextDocument) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.uinteger(candidate.lineCount)\n            && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\n    }\n    TextDocument.is = is;\n    function applyEdits(document, edits) {\n        var text = document.getText();\n        var sortedEdits = mergeSort(edits, function (a, b) {\n            var diff = a.range.start.line - b.range.start.line;\n            if (diff === 0) {\n                return a.range.start.character - b.range.start.character;\n            }\n            return diff;\n        });\n        var lastModifiedOffset = text.length;\n        for (var i = sortedEdits.length - 1; i >= 0; i--) {\n            var e = sortedEdits[i];\n            var startOffset = document.offsetAt(e.range.start);\n            var endOffset = document.offsetAt(e.range.end);\n            if (endOffset <= lastModifiedOffset) {\n                text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\n            }\n            else {\n                throw new Error('Overlapping edit');\n            }\n            lastModifiedOffset = startOffset;\n        }\n        return text;\n    }\n    TextDocument.applyEdits = applyEdits;\n    function mergeSort(data, compare) {\n        if (data.length <= 1) {\n            // sorted\n            return data;\n        }\n        var p = (data.length / 2) | 0;\n        var left = data.slice(0, p);\n        var right = data.slice(p);\n        mergeSort(left, compare);\n        mergeSort(right, compare);\n        var leftIdx = 0;\n        var rightIdx = 0;\n        var i = 0;\n        while (leftIdx < left.length && rightIdx < right.length) {\n            var ret = compare(left[leftIdx], right[rightIdx]);\n            if (ret <= 0) {\n                // smaller_equal -> take left to preserve order\n                data[i++] = left[leftIdx++];\n            }\n            else {\n                // greater -> take right\n                data[i++] = right[rightIdx++];\n            }\n        }\n        while (leftIdx < left.length) {\n            data[i++] = left[leftIdx++];\n        }\n        while (rightIdx < right.length) {\n            data[i++] = right[rightIdx++];\n        }\n        return data;\n    }\n})(TextDocument || (TextDocument = {}));\n/**\n * @deprecated Use the text document from the new vscode-languageserver-textdocument package.\n */\nvar FullTextDocument = /** @class */ (function () {\n    function FullTextDocument(uri, languageId, version, content) {\n        this._uri = uri;\n        this._languageId = languageId;\n        this._version = version;\n        this._content = content;\n        this._lineOffsets = undefined;\n    }\n    Object.defineProperty(FullTextDocument.prototype, \"uri\", {\n        get: function () {\n            return this._uri;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(FullTextDocument.prototype, \"languageId\", {\n        get: function () {\n            return this._languageId;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(FullTextDocument.prototype, \"version\", {\n        get: function () {\n            return this._version;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    FullTextDocument.prototype.getText = function (range) {\n        if (range) {\n            var start = this.offsetAt(range.start);\n            var end = this.offsetAt(range.end);\n            return this._content.substring(start, end);\n        }\n        return this._content;\n    };\n    FullTextDocument.prototype.update = function (event, version) {\n        this._content = event.text;\n        this._version = version;\n        this._lineOffsets = undefined;\n    };\n    FullTextDocument.prototype.getLineOffsets = function () {\n        if (this._lineOffsets === undefined) {\n            var lineOffsets = [];\n            var text = this._content;\n            var isLineStart = true;\n            for (var i = 0; i < text.length; i++) {\n                if (isLineStart) {\n                    lineOffsets.push(i);\n                    isLineStart = false;\n                }\n                var ch = text.charAt(i);\n                isLineStart = (ch === '\\r' || ch === '\\n');\n                if (ch === '\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\n') {\n                    i++;\n                }\n            }\n            if (isLineStart && text.length > 0) {\n                lineOffsets.push(text.length);\n            }\n            this._lineOffsets = lineOffsets;\n        }\n        return this._lineOffsets;\n    };\n    FullTextDocument.prototype.positionAt = function (offset) {\n        offset = Math.max(Math.min(offset, this._content.length), 0);\n        var lineOffsets = this.getLineOffsets();\n        var low = 0, high = lineOffsets.length;\n        if (high === 0) {\n            return Position.create(0, offset);\n        }\n        while (low < high) {\n            var mid = Math.floor((low + high) / 2);\n            if (lineOffsets[mid] > offset) {\n                high = mid;\n            }\n            else {\n                low = mid + 1;\n            }\n        }\n        // low is the least x for which the line offset is larger than the current offset\n        // or array.length if no line offset is larger than the current offset\n        var line = low - 1;\n        return Position.create(line, offset - lineOffsets[line]);\n    };\n    FullTextDocument.prototype.offsetAt = function (position) {\n        var lineOffsets = this.getLineOffsets();\n        if (position.line >= lineOffsets.length) {\n            return this._content.length;\n        }\n        else if (position.line < 0) {\n            return 0;\n        }\n        var lineOffset = lineOffsets[position.line];\n        var nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\n    };\n    Object.defineProperty(FullTextDocument.prototype, \"lineCount\", {\n        get: function () {\n            return this.getLineOffsets().length;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return FullTextDocument;\n}());\nvar Is;\n(function (Is) {\n    var toString = Object.prototype.toString;\n    function defined(value) {\n        return typeof value !== 'undefined';\n    }\n    Is.defined = defined;\n    function undefined(value) {\n        return typeof value === 'undefined';\n    }\n    Is.undefined = undefined;\n    function boolean(value) {\n        return value === true || value === false;\n    }\n    Is.boolean = boolean;\n    function string(value) {\n        return toString.call(value) === '[object String]';\n    }\n    Is.string = string;\n    function number(value) {\n        return toString.call(value) === '[object Number]';\n    }\n    Is.number = number;\n    function numberRange(value, min, max) {\n        return toString.call(value) === '[object Number]' && min <= value && value <= max;\n    }\n    Is.numberRange = numberRange;\n    function integer(value) {\n        return toString.call(value) === '[object Number]' && -2147483648 <= value && value <= 2147483647;\n    }\n    Is.integer = integer;\n    function uinteger(value) {\n        return toString.call(value) === '[object Number]' && 0 <= value && value <= 2147483647;\n    }\n    Is.uinteger = uinteger;\n    function func(value) {\n        return toString.call(value) === '[object Function]';\n    }\n    Is.func = func;\n    function objectLiteral(value) {\n        // Strictly speaking class instances pass this check as well. Since the LSP\n        // doesn't use classes we ignore this for now. If we do we need to add something\n        // like this: `Object.getPrototypeOf(Object.getPrototypeOf(x)) === null`\n        return value !== null && typeof value === 'object';\n    }\n    Is.objectLiteral = objectLiteral;\n    function typedArray(value, check) {\n        return Array.isArray(value) && value.every(check);\n    }\n    Is.typedArray = typedArray;\n})(Is || (Is = {}));\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DocumentLinkRequest = exports.CodeLensRefreshRequest = exports.CodeLensResolveRequest = exports.CodeLensRequest = exports.WorkspaceSymbolRequest = exports.CodeActionResolveRequest = exports.CodeActionRequest = exports.DocumentSymbolRequest = exports.DocumentHighlightRequest = exports.ReferencesRequest = exports.DefinitionRequest = exports.SignatureHelpRequest = exports.SignatureHelpTriggerKind = exports.HoverRequest = exports.CompletionResolveRequest = exports.CompletionRequest = exports.CompletionTriggerKind = exports.PublishDiagnosticsNotification = exports.WatchKind = exports.FileChangeType = exports.DidChangeWatchedFilesNotification = exports.WillSaveTextDocumentWaitUntilRequest = exports.WillSaveTextDocumentNotification = exports.TextDocumentSaveReason = exports.DidSaveTextDocumentNotification = exports.DidCloseTextDocumentNotification = exports.DidChangeTextDocumentNotification = exports.TextDocumentContentChangeEvent = exports.DidOpenTextDocumentNotification = exports.TextDocumentSyncKind = exports.TelemetryEventNotification = exports.LogMessageNotification = exports.ShowMessageRequest = exports.ShowMessageNotification = exports.MessageType = exports.DidChangeConfigurationNotification = exports.ExitNotification = exports.ShutdownRequest = exports.InitializedNotification = exports.InitializeError = exports.InitializeRequest = exports.WorkDoneProgressOptions = exports.TextDocumentRegistrationOptions = exports.StaticRegistrationOptions = exports.FailureHandlingKind = exports.ResourceOperationKind = exports.UnregistrationRequest = exports.RegistrationRequest = exports.DocumentSelector = exports.DocumentFilter = void 0;\nexports.MonikerRequest = exports.MonikerKind = exports.UniquenessLevel = exports.WillDeleteFilesRequest = exports.DidDeleteFilesNotification = exports.WillRenameFilesRequest = exports.DidRenameFilesNotification = exports.WillCreateFilesRequest = exports.DidCreateFilesNotification = exports.FileOperationPatternKind = exports.LinkedEditingRangeRequest = exports.ShowDocumentRequest = exports.SemanticTokensRegistrationType = exports.SemanticTokensRefreshRequest = exports.SemanticTokensRangeRequest = exports.SemanticTokensDeltaRequest = exports.SemanticTokensRequest = exports.TokenFormat = exports.SemanticTokens = exports.SemanticTokenModifiers = exports.SemanticTokenTypes = exports.CallHierarchyPrepareRequest = exports.CallHierarchyOutgoingCallsRequest = exports.CallHierarchyIncomingCallsRequest = exports.WorkDoneProgressCancelNotification = exports.WorkDoneProgressCreateRequest = exports.WorkDoneProgress = exports.SelectionRangeRequest = exports.DeclarationRequest = exports.FoldingRangeRequest = exports.ColorPresentationRequest = exports.DocumentColorRequest = exports.ConfigurationRequest = exports.DidChangeWorkspaceFoldersNotification = exports.WorkspaceFoldersRequest = exports.TypeDefinitionRequest = exports.ImplementationRequest = exports.ApplyWorkspaceEditRequest = exports.ExecuteCommandRequest = exports.PrepareRenameRequest = exports.RenameRequest = exports.PrepareSupportDefaultBehavior = exports.DocumentOnTypeFormattingRequest = exports.DocumentRangeFormattingRequest = exports.DocumentFormattingRequest = exports.DocumentLinkResolveRequest = void 0;\nconst Is = require(\"./utils/is\");\nconst messages_1 = require(\"./messages\");\nconst protocol_implementation_1 = require(\"./protocol.implementation\");\nObject.defineProperty(exports, \"ImplementationRequest\", { enumerable: true, get: function () { return protocol_implementation_1.ImplementationRequest; } });\nconst protocol_typeDefinition_1 = require(\"./protocol.typeDefinition\");\nObject.defineProperty(exports, \"TypeDefinitionRequest\", { enumerable: true, get: function () { return protocol_typeDefinition_1.TypeDefinitionRequest; } });\nconst protocol_workspaceFolders_1 = require(\"./protocol.workspaceFolders\");\nObject.defineProperty(exports, \"WorkspaceFoldersRequest\", { enumerable: true, get: function () { return protocol_workspaceFolders_1.WorkspaceFoldersRequest; } });\nObject.defineProperty(exports, \"DidChangeWorkspaceFoldersNotification\", { enumerable: true, get: function () { return protocol_workspaceFolders_1.DidChangeWorkspaceFoldersNotification; } });\nconst protocol_configuration_1 = require(\"./protocol.configuration\");\nObject.defineProperty(exports, \"ConfigurationRequest\", { enumerable: true, get: function () { return protocol_configuration_1.ConfigurationRequest; } });\nconst protocol_colorProvider_1 = require(\"./protocol.colorProvider\");\nObject.defineProperty(exports, \"DocumentColorRequest\", { enumerable: true, get: function () { return protocol_colorProvider_1.DocumentColorRequest; } });\nObject.defineProperty(exports, \"ColorPresentationRequest\", { enumerable: true, get: function () { return protocol_colorProvider_1.ColorPresentationRequest; } });\nconst protocol_foldingRange_1 = require(\"./protocol.foldingRange\");\nObject.defineProperty(exports, \"FoldingRangeRequest\", { enumerable: true, get: function () { return protocol_foldingRange_1.FoldingRangeRequest; } });\nconst protocol_declaration_1 = require(\"./protocol.declaration\");\nObject.defineProperty(exports, \"DeclarationRequest\", { enumerable: true, get: function () { return protocol_declaration_1.DeclarationRequest; } });\nconst protocol_selectionRange_1 = require(\"./protocol.selectionRange\");\nObject.defineProperty(exports, \"SelectionRangeRequest\", { enumerable: true, get: function () { return protocol_selectionRange_1.SelectionRangeRequest; } });\nconst protocol_progress_1 = require(\"./protocol.progress\");\nObject.defineProperty(exports, \"WorkDoneProgress\", { enumerable: true, get: function () { return protocol_progress_1.WorkDoneProgress; } });\nObject.defineProperty(exports, \"WorkDoneProgressCreateRequest\", { enumerable: true, get: function () { return protocol_progress_1.WorkDoneProgressCreateRequest; } });\nObject.defineProperty(exports, \"WorkDoneProgressCancelNotification\", { enumerable: true, get: function () { return protocol_progress_1.WorkDoneProgressCancelNotification; } });\nconst protocol_callHierarchy_1 = require(\"./protocol.callHierarchy\");\nObject.defineProperty(exports, \"CallHierarchyIncomingCallsRequest\", { enumerable: true, get: function () { return protocol_callHierarchy_1.CallHierarchyIncomingCallsRequest; } });\nObject.defineProperty(exports, \"CallHierarchyOutgoingCallsRequest\", { enumerable: true, get: function () { return protocol_callHierarchy_1.CallHierarchyOutgoingCallsRequest; } });\nObject.defineProperty(exports, \"CallHierarchyPrepareRequest\", { enumerable: true, get: function () { return protocol_callHierarchy_1.CallHierarchyPrepareRequest; } });\nconst protocol_semanticTokens_1 = require(\"./protocol.semanticTokens\");\nObject.defineProperty(exports, \"SemanticTokenTypes\", { enumerable: true, get: function () { return protocol_semanticTokens_1.SemanticTokenTypes; } });\nObject.defineProperty(exports, \"SemanticTokenModifiers\", { enumerable: true, get: function () { return protocol_semanticTokens_1.SemanticTokenModifiers; } });\nObject.defineProperty(exports, \"SemanticTokens\", { enumerable: true, get: function () { return protocol_semanticTokens_1.SemanticTokens; } });\nObject.defineProperty(exports, \"TokenFormat\", { enumerable: true, get: function () { return protocol_semanticTokens_1.TokenFormat; } });\nObject.defineProperty(exports, \"SemanticTokensRequest\", { enumerable: true, get: function () { return protocol_semanticTokens_1.SemanticTokensRequest; } });\nObject.defineProperty(exports, \"SemanticTokensDeltaRequest\", { enumerable: true, get: function () { return protocol_semanticTokens_1.SemanticTokensDeltaRequest; } });\nObject.defineProperty(exports, \"SemanticTokensRangeRequest\", { enumerable: true, get: function () { return protocol_semanticTokens_1.SemanticTokensRangeRequest; } });\nObject.defineProperty(exports, \"SemanticTokensRefreshRequest\", { enumerable: true, get: function () { return protocol_semanticTokens_1.SemanticTokensRefreshRequest; } });\nObject.defineProperty(exports, \"SemanticTokensRegistrationType\", { enumerable: true, get: function () { return protocol_semanticTokens_1.SemanticTokensRegistrationType; } });\nconst protocol_showDocument_1 = require(\"./protocol.showDocument\");\nObject.defineProperty(exports, \"ShowDocumentRequest\", { enumerable: true, get: function () { return protocol_showDocument_1.ShowDocumentRequest; } });\nconst protocol_linkedEditingRange_1 = require(\"./protocol.linkedEditingRange\");\nObject.defineProperty(exports, \"LinkedEditingRangeRequest\", { enumerable: true, get: function () { return protocol_linkedEditingRange_1.LinkedEditingRangeRequest; } });\nconst protocol_fileOperations_1 = require(\"./protocol.fileOperations\");\nObject.defineProperty(exports, \"FileOperationPatternKind\", { enumerable: true, get: function () { return protocol_fileOperations_1.FileOperationPatternKind; } });\nObject.defineProperty(exports, \"DidCreateFilesNotification\", { enumerable: true, get: function () { return protocol_fileOperations_1.DidCreateFilesNotification; } });\nObject.defineProperty(exports, \"WillCreateFilesRequest\", { enumerable: true, get: function () { return protocol_fileOperations_1.WillCreateFilesRequest; } });\nObject.defineProperty(exports, \"DidRenameFilesNotification\", { enumerable: true, get: function () { return protocol_fileOperations_1.DidRenameFilesNotification; } });\nObject.defineProperty(exports, \"WillRenameFilesRequest\", { enumerable: true, get: function () { return protocol_fileOperations_1.WillRenameFilesRequest; } });\nObject.defineProperty(exports, \"DidDeleteFilesNotification\", { enumerable: true, get: function () { return protocol_fileOperations_1.DidDeleteFilesNotification; } });\nObject.defineProperty(exports, \"WillDeleteFilesRequest\", { enumerable: true, get: function () { return protocol_fileOperations_1.WillDeleteFilesRequest; } });\nconst protocol_moniker_1 = require(\"./protocol.moniker\");\nObject.defineProperty(exports, \"UniquenessLevel\", { enumerable: true, get: function () { return protocol_moniker_1.UniquenessLevel; } });\nObject.defineProperty(exports, \"MonikerKind\", { enumerable: true, get: function () { return protocol_moniker_1.MonikerKind; } });\nObject.defineProperty(exports, \"MonikerRequest\", { enumerable: true, get: function () { return protocol_moniker_1.MonikerRequest; } });\n// @ts-ignore: to avoid inlining LocationLink as dynamic import\nlet __noDynamicImport;\n/**\n * The DocumentFilter namespace provides helper functions to work with\n * [DocumentFilter](#DocumentFilter) literals.\n */\nvar DocumentFilter;\n(function (DocumentFilter) {\n    function is(value) {\n        const candidate = value;\n        return Is.string(candidate.language) || Is.string(candidate.scheme) || Is.string(candidate.pattern);\n    }\n    DocumentFilter.is = is;\n})(DocumentFilter = exports.DocumentFilter || (exports.DocumentFilter = {}));\n/**\n * The DocumentSelector namespace provides helper functions to work with\n * [DocumentSelector](#DocumentSelector)s.\n */\nvar DocumentSelector;\n(function (DocumentSelector) {\n    function is(value) {\n        if (!Array.isArray(value)) {\n            return false;\n        }\n        for (let elem of value) {\n            if (!Is.string(elem) && !DocumentFilter.is(elem)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    DocumentSelector.is = is;\n})(DocumentSelector = exports.DocumentSelector || (exports.DocumentSelector = {}));\n/**\n * The `client/registerCapability` request is sent from the server to the client to register a new capability\n * handler on the client side.\n */\nvar RegistrationRequest;\n(function (RegistrationRequest) {\n    RegistrationRequest.type = new messages_1.ProtocolRequestType('client/registerCapability');\n})(RegistrationRequest = exports.RegistrationRequest || (exports.RegistrationRequest = {}));\n/**\n * The `client/unregisterCapability` request is sent from the server to the client to unregister a previously registered capability\n * handler on the client side.\n */\nvar UnregistrationRequest;\n(function (UnregistrationRequest) {\n    UnregistrationRequest.type = new messages_1.ProtocolRequestType('client/unregisterCapability');\n})(UnregistrationRequest = exports.UnregistrationRequest || (exports.UnregistrationRequest = {}));\nvar ResourceOperationKind;\n(function (ResourceOperationKind) {\n    /**\n     * Supports creating new files and folders.\n     */\n    ResourceOperationKind.Create = 'create';\n    /**\n     * Supports renaming existing files and folders.\n     */\n    ResourceOperationKind.Rename = 'rename';\n    /**\n     * Supports deleting existing files and folders.\n     */\n    ResourceOperationKind.Delete = 'delete';\n})(ResourceOperationKind = exports.ResourceOperationKind || (exports.ResourceOperationKind = {}));\nvar FailureHandlingKind;\n(function (FailureHandlingKind) {\n    /**\n     * Applying the workspace change is simply aborted if one of the changes provided\n     * fails. All operations executed before the failing operation stay executed.\n     */\n    FailureHandlingKind.Abort = 'abort';\n    /**\n     * All operations are executed transactional. That means they either all\n     * succeed or no changes at all are applied to the workspace.\n     */\n    FailureHandlingKind.Transactional = 'transactional';\n    /**\n     * If the workspace edit contains only textual file changes they are executed transactional.\n     * If resource changes (create, rename or delete file) are part of the change the failure\n     * handling strategy is abort.\n     */\n    FailureHandlingKind.TextOnlyTransactional = 'textOnlyTransactional';\n    /**\n     * The client tries to undo the operations already executed. But there is no\n     * guarantee that this is succeeding.\n     */\n    FailureHandlingKind.Undo = 'undo';\n})(FailureHandlingKind = exports.FailureHandlingKind || (exports.FailureHandlingKind = {}));\n/**\n * The StaticRegistrationOptions namespace provides helper functions to work with\n * [StaticRegistrationOptions](#StaticRegistrationOptions) literals.\n */\nvar StaticRegistrationOptions;\n(function (StaticRegistrationOptions) {\n    function hasId(value) {\n        const candidate = value;\n        return candidate && Is.string(candidate.id) && candidate.id.length > 0;\n    }\n    StaticRegistrationOptions.hasId = hasId;\n})(StaticRegistrationOptions = exports.StaticRegistrationOptions || (exports.StaticRegistrationOptions = {}));\n/**\n * The TextDocumentRegistrationOptions namespace provides helper functions to work with\n * [TextDocumentRegistrationOptions](#TextDocumentRegistrationOptions) literals.\n */\nvar TextDocumentRegistrationOptions;\n(function (TextDocumentRegistrationOptions) {\n    function is(value) {\n        const candidate = value;\n        return candidate && (candidate.documentSelector === null || DocumentSelector.is(candidate.documentSelector));\n    }\n    TextDocumentRegistrationOptions.is = is;\n})(TextDocumentRegistrationOptions = exports.TextDocumentRegistrationOptions || (exports.TextDocumentRegistrationOptions = {}));\n/**\n * The WorkDoneProgressOptions namespace provides helper functions to work with\n * [WorkDoneProgressOptions](#WorkDoneProgressOptions) literals.\n */\nvar WorkDoneProgressOptions;\n(function (WorkDoneProgressOptions) {\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && (candidate.workDoneProgress === undefined || Is.boolean(candidate.workDoneProgress));\n    }\n    WorkDoneProgressOptions.is = is;\n    function hasWorkDoneProgress(value) {\n        const candidate = value;\n        return candidate && Is.boolean(candidate.workDoneProgress);\n    }\n    WorkDoneProgressOptions.hasWorkDoneProgress = hasWorkDoneProgress;\n})(WorkDoneProgressOptions = exports.WorkDoneProgressOptions || (exports.WorkDoneProgressOptions = {}));\n/**\n * The initialize request is sent from the client to the server.\n * It is sent once as the request after starting up the server.\n * The requests parameter is of type [InitializeParams](#InitializeParams)\n * the response if of type [InitializeResult](#InitializeResult) of a Thenable that\n * resolves to such.\n */\nvar InitializeRequest;\n(function (InitializeRequest) {\n    InitializeRequest.type = new messages_1.ProtocolRequestType('initialize');\n})(InitializeRequest = exports.InitializeRequest || (exports.InitializeRequest = {}));\n/**\n * Known error codes for an `InitializeError`;\n */\nvar InitializeError;\n(function (InitializeError) {\n    /**\n     * If the protocol version provided by the client can't be handled by the server.\n     * @deprecated This initialize error got replaced by client capabilities. There is\n     * no version handshake in version 3.0x\n     */\n    InitializeError.unknownProtocolVersion = 1;\n})(InitializeError = exports.InitializeError || (exports.InitializeError = {}));\n/**\n * The initialized notification is sent from the client to the\n * server after the client is fully initialized and the server\n * is allowed to send requests from the server to the client.\n */\nvar InitializedNotification;\n(function (InitializedNotification) {\n    InitializedNotification.type = new messages_1.ProtocolNotificationType('initialized');\n})(InitializedNotification = exports.InitializedNotification || (exports.InitializedNotification = {}));\n//---- Shutdown Method ----\n/**\n * A shutdown request is sent from the client to the server.\n * It is sent once when the client decides to shutdown the\n * server. The only notification that is sent after a shutdown request\n * is the exit event.\n */\nvar ShutdownRequest;\n(function (ShutdownRequest) {\n    ShutdownRequest.type = new messages_1.ProtocolRequestType0('shutdown');\n})(ShutdownRequest = exports.ShutdownRequest || (exports.ShutdownRequest = {}));\n//---- Exit Notification ----\n/**\n * The exit event is sent from the client to the server to\n * ask the server to exit its process.\n */\nvar ExitNotification;\n(function (ExitNotification) {\n    ExitNotification.type = new messages_1.ProtocolNotificationType0('exit');\n})(ExitNotification = exports.ExitNotification || (exports.ExitNotification = {}));\n/**\n * The configuration change notification is sent from the client to the server\n * when the client's configuration has changed. The notification contains\n * the changed configuration as defined by the language client.\n */\nvar DidChangeConfigurationNotification;\n(function (DidChangeConfigurationNotification) {\n    DidChangeConfigurationNotification.type = new messages_1.ProtocolNotificationType('workspace/didChangeConfiguration');\n})(DidChangeConfigurationNotification = exports.DidChangeConfigurationNotification || (exports.DidChangeConfigurationNotification = {}));\n//---- Message show and log notifications ----\n/**\n * The message type\n */\nvar MessageType;\n(function (MessageType) {\n    /**\n     * An error message.\n     */\n    MessageType.Error = 1;\n    /**\n     * A warning message.\n     */\n    MessageType.Warning = 2;\n    /**\n     * An information message.\n     */\n    MessageType.Info = 3;\n    /**\n     * A log message.\n     */\n    MessageType.Log = 4;\n})(MessageType = exports.MessageType || (exports.MessageType = {}));\n/**\n * The show message notification is sent from a server to a client to ask\n * the client to display a particular message in the user interface.\n */\nvar ShowMessageNotification;\n(function (ShowMessageNotification) {\n    ShowMessageNotification.type = new messages_1.ProtocolNotificationType('window/showMessage');\n})(ShowMessageNotification = exports.ShowMessageNotification || (exports.ShowMessageNotification = {}));\n/**\n * The show message request is sent from the server to the client to show a message\n * and a set of options actions to the user.\n */\nvar ShowMessageRequest;\n(function (ShowMessageRequest) {\n    ShowMessageRequest.type = new messages_1.ProtocolRequestType('window/showMessageRequest');\n})(ShowMessageRequest = exports.ShowMessageRequest || (exports.ShowMessageRequest = {}));\n/**\n * The log message notification is sent from the server to the client to ask\n * the client to log a particular message.\n */\nvar LogMessageNotification;\n(function (LogMessageNotification) {\n    LogMessageNotification.type = new messages_1.ProtocolNotificationType('window/logMessage');\n})(LogMessageNotification = exports.LogMessageNotification || (exports.LogMessageNotification = {}));\n//---- Telemetry notification\n/**\n * The telemetry event notification is sent from the server to the client to ask\n * the client to log telemetry data.\n */\nvar TelemetryEventNotification;\n(function (TelemetryEventNotification) {\n    TelemetryEventNotification.type = new messages_1.ProtocolNotificationType('telemetry/event');\n})(TelemetryEventNotification = exports.TelemetryEventNotification || (exports.TelemetryEventNotification = {}));\n/**\n * Defines how the host (editor) should sync\n * document changes to the language server.\n */\nvar TextDocumentSyncKind;\n(function (TextDocumentSyncKind) {\n    /**\n     * Documents should not be synced at all.\n     */\n    TextDocumentSyncKind.None = 0;\n    /**\n     * Documents are synced by always sending the full content\n     * of the document.\n     */\n    TextDocumentSyncKind.Full = 1;\n    /**\n     * Documents are synced by sending the full content on open.\n     * After that only incremental updates to the document are\n     * send.\n     */\n    TextDocumentSyncKind.Incremental = 2;\n})(TextDocumentSyncKind = exports.TextDocumentSyncKind || (exports.TextDocumentSyncKind = {}));\n/**\n * The document open notification is sent from the client to the server to signal\n * newly opened text documents. The document's truth is now managed by the client\n * and the server must not try to read the document's truth using the document's\n * uri. Open in this sense means it is managed by the client. It doesn't necessarily\n * mean that its content is presented in an editor. An open notification must not\n * be sent more than once without a corresponding close notification send before.\n * This means open and close notification must be balanced and the max open count\n * is one.\n */\nvar DidOpenTextDocumentNotification;\n(function (DidOpenTextDocumentNotification) {\n    DidOpenTextDocumentNotification.method = 'textDocument/didOpen';\n    DidOpenTextDocumentNotification.type = new messages_1.ProtocolNotificationType(DidOpenTextDocumentNotification.method);\n})(DidOpenTextDocumentNotification = exports.DidOpenTextDocumentNotification || (exports.DidOpenTextDocumentNotification = {}));\nvar TextDocumentContentChangeEvent;\n(function (TextDocumentContentChangeEvent) {\n    /**\n     * Checks whether the information describes a delta event.\n     */\n    function isIncremental(event) {\n        let candidate = event;\n        return candidate !== undefined && candidate !== null &&\n            typeof candidate.text === 'string' && candidate.range !== undefined &&\n            (candidate.rangeLength === undefined || typeof candidate.rangeLength === 'number');\n    }\n    TextDocumentContentChangeEvent.isIncremental = isIncremental;\n    /**\n     * Checks whether the information describes a full replacement event.\n     */\n    function isFull(event) {\n        let candidate = event;\n        return candidate !== undefined && candidate !== null &&\n            typeof candidate.text === 'string' && candidate.range === undefined && candidate.rangeLength === undefined;\n    }\n    TextDocumentContentChangeEvent.isFull = isFull;\n})(TextDocumentContentChangeEvent = exports.TextDocumentContentChangeEvent || (exports.TextDocumentContentChangeEvent = {}));\n/**\n * The document change notification is sent from the client to the server to signal\n * changes to a text document.\n */\nvar DidChangeTextDocumentNotification;\n(function (DidChangeTextDocumentNotification) {\n    DidChangeTextDocumentNotification.method = 'textDocument/didChange';\n    DidChangeTextDocumentNotification.type = new messages_1.ProtocolNotificationType(DidChangeTextDocumentNotification.method);\n})(DidChangeTextDocumentNotification = exports.DidChangeTextDocumentNotification || (exports.DidChangeTextDocumentNotification = {}));\n/**\n * The document close notification is sent from the client to the server when\n * the document got closed in the client. The document's truth now exists where\n * the document's uri points to (e.g. if the document's uri is a file uri the\n * truth now exists on disk). As with the open notification the close notification\n * is about managing the document's content. Receiving a close notification\n * doesn't mean that the document was open in an editor before. A close\n * notification requires a previous open notification to be sent.\n */\nvar DidCloseTextDocumentNotification;\n(function (DidCloseTextDocumentNotification) {\n    DidCloseTextDocumentNotification.method = 'textDocument/didClose';\n    DidCloseTextDocumentNotification.type = new messages_1.ProtocolNotificationType(DidCloseTextDocumentNotification.method);\n})(DidCloseTextDocumentNotification = exports.DidCloseTextDocumentNotification || (exports.DidCloseTextDocumentNotification = {}));\n/**\n * The document save notification is sent from the client to the server when\n * the document got saved in the client.\n */\nvar DidSaveTextDocumentNotification;\n(function (DidSaveTextDocumentNotification) {\n    DidSaveTextDocumentNotification.method = 'textDocument/didSave';\n    DidSaveTextDocumentNotification.type = new messages_1.ProtocolNotificationType(DidSaveTextDocumentNotification.method);\n})(DidSaveTextDocumentNotification = exports.DidSaveTextDocumentNotification || (exports.DidSaveTextDocumentNotification = {}));\n/**\n * Represents reasons why a text document is saved.\n */\nvar TextDocumentSaveReason;\n(function (TextDocumentSaveReason) {\n    /**\n     * Manually triggered, e.g. by the user pressing save, by starting debugging,\n     * or by an API call.\n     */\n    TextDocumentSaveReason.Manual = 1;\n    /**\n     * Automatic after a delay.\n     */\n    TextDocumentSaveReason.AfterDelay = 2;\n    /**\n     * When the editor lost focus.\n     */\n    TextDocumentSaveReason.FocusOut = 3;\n})(TextDocumentSaveReason = exports.TextDocumentSaveReason || (exports.TextDocumentSaveReason = {}));\n/**\n * A document will save notification is sent from the client to the server before\n * the document is actually saved.\n */\nvar WillSaveTextDocumentNotification;\n(function (WillSaveTextDocumentNotification) {\n    WillSaveTextDocumentNotification.method = 'textDocument/willSave';\n    WillSaveTextDocumentNotification.type = new messages_1.ProtocolNotificationType(WillSaveTextDocumentNotification.method);\n})(WillSaveTextDocumentNotification = exports.WillSaveTextDocumentNotification || (exports.WillSaveTextDocumentNotification = {}));\n/**\n * A document will save request is sent from the client to the server before\n * the document is actually saved. The request can return an array of TextEdits\n * which will be applied to the text document before it is saved. Please note that\n * clients might drop results if computing the text edits took too long or if a\n * server constantly fails on this request. This is done to keep the save fast and\n * reliable.\n */\nvar WillSaveTextDocumentWaitUntilRequest;\n(function (WillSaveTextDocumentWaitUntilRequest) {\n    WillSaveTextDocumentWaitUntilRequest.method = 'textDocument/willSaveWaitUntil';\n    WillSaveTextDocumentWaitUntilRequest.type = new messages_1.ProtocolRequestType(WillSaveTextDocumentWaitUntilRequest.method);\n})(WillSaveTextDocumentWaitUntilRequest = exports.WillSaveTextDocumentWaitUntilRequest || (exports.WillSaveTextDocumentWaitUntilRequest = {}));\n/**\n * The watched files notification is sent from the client to the server when\n * the client detects changes to file watched by the language client.\n */\nvar DidChangeWatchedFilesNotification;\n(function (DidChangeWatchedFilesNotification) {\n    DidChangeWatchedFilesNotification.type = new messages_1.ProtocolNotificationType('workspace/didChangeWatchedFiles');\n})(DidChangeWatchedFilesNotification = exports.DidChangeWatchedFilesNotification || (exports.DidChangeWatchedFilesNotification = {}));\n/**\n * The file event type\n */\nvar FileChangeType;\n(function (FileChangeType) {\n    /**\n     * The file got created.\n     */\n    FileChangeType.Created = 1;\n    /**\n     * The file got changed.\n     */\n    FileChangeType.Changed = 2;\n    /**\n     * The file got deleted.\n     */\n    FileChangeType.Deleted = 3;\n})(FileChangeType = exports.FileChangeType || (exports.FileChangeType = {}));\nvar WatchKind;\n(function (WatchKind) {\n    /**\n     * Interested in create events.\n     */\n    WatchKind.Create = 1;\n    /**\n     * Interested in change events\n     */\n    WatchKind.Change = 2;\n    /**\n     * Interested in delete events\n     */\n    WatchKind.Delete = 4;\n})(WatchKind = exports.WatchKind || (exports.WatchKind = {}));\n/**\n * Diagnostics notification are sent from the server to the client to signal\n * results of validation runs.\n */\nvar PublishDiagnosticsNotification;\n(function (PublishDiagnosticsNotification) {\n    PublishDiagnosticsNotification.type = new messages_1.ProtocolNotificationType('textDocument/publishDiagnostics');\n})(PublishDiagnosticsNotification = exports.PublishDiagnosticsNotification || (exports.PublishDiagnosticsNotification = {}));\n/**\n * How a completion was triggered\n */\nvar CompletionTriggerKind;\n(function (CompletionTriggerKind) {\n    /**\n     * Completion was triggered by typing an identifier (24x7 code\n     * complete), manual invocation (e.g Ctrl+Space) or via API.\n     */\n    CompletionTriggerKind.Invoked = 1;\n    /**\n     * Completion was triggered by a trigger character specified by\n     * the `triggerCharacters` properties of the `CompletionRegistrationOptions`.\n     */\n    CompletionTriggerKind.TriggerCharacter = 2;\n    /**\n     * Completion was re-triggered as current completion list is incomplete\n     */\n    CompletionTriggerKind.TriggerForIncompleteCompletions = 3;\n})(CompletionTriggerKind = exports.CompletionTriggerKind || (exports.CompletionTriggerKind = {}));\n/**\n * Request to request completion at a given text document position. The request's\n * parameter is of type [TextDocumentPosition](#TextDocumentPosition) the response\n * is of type [CompletionItem[]](#CompletionItem) or [CompletionList](#CompletionList)\n * or a Thenable that resolves to such.\n *\n * The request can delay the computation of the [`detail`](#CompletionItem.detail)\n * and [`documentation`](#CompletionItem.documentation) properties to the `completionItem/resolve`\n * request. However, properties that are needed for the initial sorting and filtering, like `sortText`,\n * `filterText`, `insertText`, and `textEdit`, must not be changed during resolve.\n */\nvar CompletionRequest;\n(function (CompletionRequest) {\n    CompletionRequest.method = 'textDocument/completion';\n    CompletionRequest.type = new messages_1.ProtocolRequestType(CompletionRequest.method);\n})(CompletionRequest = exports.CompletionRequest || (exports.CompletionRequest = {}));\n/**\n * Request to resolve additional information for a given completion item.The request's\n * parameter is of type [CompletionItem](#CompletionItem) the response\n * is of type [CompletionItem](#CompletionItem) or a Thenable that resolves to such.\n */\nvar CompletionResolveRequest;\n(function (CompletionResolveRequest) {\n    CompletionResolveRequest.method = 'completionItem/resolve';\n    CompletionResolveRequest.type = new messages_1.ProtocolRequestType(CompletionResolveRequest.method);\n})(CompletionResolveRequest = exports.CompletionResolveRequest || (exports.CompletionResolveRequest = {}));\n/**\n * Request to request hover information at a given text document position. The request's\n * parameter is of type [TextDocumentPosition](#TextDocumentPosition) the response is of\n * type [Hover](#Hover) or a Thenable that resolves to such.\n */\nvar HoverRequest;\n(function (HoverRequest) {\n    HoverRequest.method = 'textDocument/hover';\n    HoverRequest.type = new messages_1.ProtocolRequestType(HoverRequest.method);\n})(HoverRequest = exports.HoverRequest || (exports.HoverRequest = {}));\n/**\n * How a signature help was triggered.\n *\n * @since 3.15.0\n */\nvar SignatureHelpTriggerKind;\n(function (SignatureHelpTriggerKind) {\n    /**\n     * Signature help was invoked manually by the user or by a command.\n     */\n    SignatureHelpTriggerKind.Invoked = 1;\n    /**\n     * Signature help was triggered by a trigger character.\n     */\n    SignatureHelpTriggerKind.TriggerCharacter = 2;\n    /**\n     * Signature help was triggered by the cursor moving or by the document content changing.\n     */\n    SignatureHelpTriggerKind.ContentChange = 3;\n})(SignatureHelpTriggerKind = exports.SignatureHelpTriggerKind || (exports.SignatureHelpTriggerKind = {}));\nvar SignatureHelpRequest;\n(function (SignatureHelpRequest) {\n    SignatureHelpRequest.method = 'textDocument/signatureHelp';\n    SignatureHelpRequest.type = new messages_1.ProtocolRequestType(SignatureHelpRequest.method);\n})(SignatureHelpRequest = exports.SignatureHelpRequest || (exports.SignatureHelpRequest = {}));\n/**\n * A request to resolve the definition location of a symbol at a given text\n * document position. The request's parameter is of type [TextDocumentPosition]\n * (#TextDocumentPosition) the response is of either type [Definition](#Definition)\n * or a typed array of [DefinitionLink](#DefinitionLink) or a Thenable that resolves\n * to such.\n */\nvar DefinitionRequest;\n(function (DefinitionRequest) {\n    DefinitionRequest.method = 'textDocument/definition';\n    DefinitionRequest.type = new messages_1.ProtocolRequestType(DefinitionRequest.method);\n})(DefinitionRequest = exports.DefinitionRequest || (exports.DefinitionRequest = {}));\n/**\n * A request to resolve project-wide references for the symbol denoted\n * by the given text document position. The request's parameter is of\n * type [ReferenceParams](#ReferenceParams) the response is of type\n * [Location[]](#Location) or a Thenable that resolves to such.\n */\nvar ReferencesRequest;\n(function (ReferencesRequest) {\n    ReferencesRequest.method = 'textDocument/references';\n    ReferencesRequest.type = new messages_1.ProtocolRequestType(ReferencesRequest.method);\n})(ReferencesRequest = exports.ReferencesRequest || (exports.ReferencesRequest = {}));\n/**\n * Request to resolve a [DocumentHighlight](#DocumentHighlight) for a given\n * text document position. The request's parameter is of type [TextDocumentPosition]\n * (#TextDocumentPosition) the request response is of type [DocumentHighlight[]]\n * (#DocumentHighlight) or a Thenable that resolves to such.\n */\nvar DocumentHighlightRequest;\n(function (DocumentHighlightRequest) {\n    DocumentHighlightRequest.method = 'textDocument/documentHighlight';\n    DocumentHighlightRequest.type = new messages_1.ProtocolRequestType(DocumentHighlightRequest.method);\n})(DocumentHighlightRequest = exports.DocumentHighlightRequest || (exports.DocumentHighlightRequest = {}));\n/**\n * A request to list all symbols found in a given text document. The request's\n * parameter is of type [TextDocumentIdentifier](#TextDocumentIdentifier) the\n * response is of type [SymbolInformation[]](#SymbolInformation) or a Thenable\n * that resolves to such.\n */\nvar DocumentSymbolRequest;\n(function (DocumentSymbolRequest) {\n    DocumentSymbolRequest.method = 'textDocument/documentSymbol';\n    DocumentSymbolRequest.type = new messages_1.ProtocolRequestType(DocumentSymbolRequest.method);\n})(DocumentSymbolRequest = exports.DocumentSymbolRequest || (exports.DocumentSymbolRequest = {}));\n/**\n * A request to provide commands for the given text document and range.\n */\nvar CodeActionRequest;\n(function (CodeActionRequest) {\n    CodeActionRequest.method = 'textDocument/codeAction';\n    CodeActionRequest.type = new messages_1.ProtocolRequestType(CodeActionRequest.method);\n})(CodeActionRequest = exports.CodeActionRequest || (exports.CodeActionRequest = {}));\n/**\n * Request to resolve additional information for a given code action.The request's\n * parameter is of type [CodeAction](#CodeAction) the response\n * is of type [CodeAction](#CodeAction) or a Thenable that resolves to such.\n */\nvar CodeActionResolveRequest;\n(function (CodeActionResolveRequest) {\n    CodeActionResolveRequest.method = 'codeAction/resolve';\n    CodeActionResolveRequest.type = new messages_1.ProtocolRequestType(CodeActionResolveRequest.method);\n})(CodeActionResolveRequest = exports.CodeActionResolveRequest || (exports.CodeActionResolveRequest = {}));\n/**\n * A request to list project-wide symbols matching the query string given\n * by the [WorkspaceSymbolParams](#WorkspaceSymbolParams). The response is\n * of type [SymbolInformation[]](#SymbolInformation) or a Thenable that\n * resolves to such.\n */\nvar WorkspaceSymbolRequest;\n(function (WorkspaceSymbolRequest) {\n    WorkspaceSymbolRequest.method = 'workspace/symbol';\n    WorkspaceSymbolRequest.type = new messages_1.ProtocolRequestType(WorkspaceSymbolRequest.method);\n})(WorkspaceSymbolRequest = exports.WorkspaceSymbolRequest || (exports.WorkspaceSymbolRequest = {}));\n/**\n * A request to provide code lens for the given text document.\n */\nvar CodeLensRequest;\n(function (CodeLensRequest) {\n    CodeLensRequest.method = 'textDocument/codeLens';\n    CodeLensRequest.type = new messages_1.ProtocolRequestType(CodeLensRequest.method);\n})(CodeLensRequest = exports.CodeLensRequest || (exports.CodeLensRequest = {}));\n/**\n * A request to resolve a command for a given code lens.\n */\nvar CodeLensResolveRequest;\n(function (CodeLensResolveRequest) {\n    CodeLensResolveRequest.method = 'codeLens/resolve';\n    CodeLensResolveRequest.type = new messages_1.ProtocolRequestType(CodeLensResolveRequest.method);\n})(CodeLensResolveRequest = exports.CodeLensResolveRequest || (exports.CodeLensResolveRequest = {}));\n/**\n * A request to refresh all code actions\n *\n * @since 3.16.0\n */\nvar CodeLensRefreshRequest;\n(function (CodeLensRefreshRequest) {\n    CodeLensRefreshRequest.method = `workspace/codeLens/refresh`;\n    CodeLensRefreshRequest.type = new messages_1.ProtocolRequestType0(CodeLensRefreshRequest.method);\n})(CodeLensRefreshRequest = exports.CodeLensRefreshRequest || (exports.CodeLensRefreshRequest = {}));\n/**\n * A request to provide document links\n */\nvar DocumentLinkRequest;\n(function (DocumentLinkRequest) {\n    DocumentLinkRequest.method = 'textDocument/documentLink';\n    DocumentLinkRequest.type = new messages_1.ProtocolRequestType(DocumentLinkRequest.method);\n})(DocumentLinkRequest = exports.DocumentLinkRequest || (exports.DocumentLinkRequest = {}));\n/**\n * Request to resolve additional information for a given document link. The request's\n * parameter is of type [DocumentLink](#DocumentLink) the response\n * is of type [DocumentLink](#DocumentLink) or a Thenable that resolves to such.\n */\nvar DocumentLinkResolveRequest;\n(function (DocumentLinkResolveRequest) {\n    DocumentLinkResolveRequest.method = 'documentLink/resolve';\n    DocumentLinkResolveRequest.type = new messages_1.ProtocolRequestType(DocumentLinkResolveRequest.method);\n})(DocumentLinkResolveRequest = exports.DocumentLinkResolveRequest || (exports.DocumentLinkResolveRequest = {}));\n/**\n * A request to to format a whole document.\n */\nvar DocumentFormattingRequest;\n(function (DocumentFormattingRequest) {\n    DocumentFormattingRequest.method = 'textDocument/formatting';\n    DocumentFormattingRequest.type = new messages_1.ProtocolRequestType(DocumentFormattingRequest.method);\n})(DocumentFormattingRequest = exports.DocumentFormattingRequest || (exports.DocumentFormattingRequest = {}));\n/**\n * A request to to format a range in a document.\n */\nvar DocumentRangeFormattingRequest;\n(function (DocumentRangeFormattingRequest) {\n    DocumentRangeFormattingRequest.method = 'textDocument/rangeFormatting';\n    DocumentRangeFormattingRequest.type = new messages_1.ProtocolRequestType(DocumentRangeFormattingRequest.method);\n})(DocumentRangeFormattingRequest = exports.DocumentRangeFormattingRequest || (exports.DocumentRangeFormattingRequest = {}));\n/**\n * A request to format a document on type.\n */\nvar DocumentOnTypeFormattingRequest;\n(function (DocumentOnTypeFormattingRequest) {\n    DocumentOnTypeFormattingRequest.method = 'textDocument/onTypeFormatting';\n    DocumentOnTypeFormattingRequest.type = new messages_1.ProtocolRequestType(DocumentOnTypeFormattingRequest.method);\n})(DocumentOnTypeFormattingRequest = exports.DocumentOnTypeFormattingRequest || (exports.DocumentOnTypeFormattingRequest = {}));\n//---- Rename ----------------------------------------------\nvar PrepareSupportDefaultBehavior;\n(function (PrepareSupportDefaultBehavior) {\n    /**\n     * The client's default behavior is to select the identifier\n     * according the to language's syntax rule.\n     */\n    PrepareSupportDefaultBehavior.Identifier = 1;\n})(PrepareSupportDefaultBehavior = exports.PrepareSupportDefaultBehavior || (exports.PrepareSupportDefaultBehavior = {}));\n/**\n * A request to rename a symbol.\n */\nvar RenameRequest;\n(function (RenameRequest) {\n    RenameRequest.method = 'textDocument/rename';\n    RenameRequest.type = new messages_1.ProtocolRequestType(RenameRequest.method);\n})(RenameRequest = exports.RenameRequest || (exports.RenameRequest = {}));\n/**\n * A request to test and perform the setup necessary for a rename.\n *\n * @since 3.16 - support for default behavior\n */\nvar PrepareRenameRequest;\n(function (PrepareRenameRequest) {\n    PrepareRenameRequest.method = 'textDocument/prepareRename';\n    PrepareRenameRequest.type = new messages_1.ProtocolRequestType(PrepareRenameRequest.method);\n})(PrepareRenameRequest = exports.PrepareRenameRequest || (exports.PrepareRenameRequest = {}));\n/**\n * A request send from the client to the server to execute a command. The request might return\n * a workspace edit which the client will apply to the workspace.\n */\nvar ExecuteCommandRequest;\n(function (ExecuteCommandRequest) {\n    ExecuteCommandRequest.type = new messages_1.ProtocolRequestType('workspace/executeCommand');\n})(ExecuteCommandRequest = exports.ExecuteCommandRequest || (exports.ExecuteCommandRequest = {}));\n/**\n * A request sent from the server to the client to modified certain resources.\n */\nvar ApplyWorkspaceEditRequest;\n(function (ApplyWorkspaceEditRequest) {\n    ApplyWorkspaceEditRequest.type = new messages_1.ProtocolRequestType('workspace/applyEdit');\n})(ApplyWorkspaceEditRequest = exports.ApplyWorkspaceEditRequest || (exports.ApplyWorkspaceEditRequest = {}));\n//# sourceMappingURL=protocol.js.map","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.objectLiteral = exports.typedArray = exports.stringArray = exports.array = exports.func = exports.error = exports.number = exports.string = exports.boolean = void 0;\nfunction boolean(value) {\n    return value === true || value === false;\n}\nexports.boolean = boolean;\nfunction string(value) {\n    return typeof value === 'string' || value instanceof String;\n}\nexports.string = string;\nfunction number(value) {\n    return typeof value === 'number' || value instanceof Number;\n}\nexports.number = number;\nfunction error(value) {\n    return value instanceof Error;\n}\nexports.error = error;\nfunction func(value) {\n    return typeof value === 'function';\n}\nexports.func = func;\nfunction array(value) {\n    return Array.isArray(value);\n}\nexports.array = array;\nfunction stringArray(value) {\n    return array(value) && value.every(elem => string(elem));\n}\nexports.stringArray = stringArray;\nfunction typedArray(value, check) {\n    return Array.isArray(value) && value.every(check);\n}\nexports.typedArray = typedArray;\nfunction objectLiteral(value) {\n    // Strictly speaking class instances pass this check as well. Since the LSP\n    // doesn't use classes we ignore this for now. If we do we need to add something\n    // like this: `Object.getPrototypeOf(Object.getPrototypeOf(x)) === null`\n    return value !== null && typeof value === 'object';\n}\nexports.objectLiteral = objectLiteral;\n//# sourceMappingURL=is.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ImplementationRequest = void 0;\nconst messages_1 = require(\"./messages\");\n// @ts-ignore: to avoid inlining LocatioLink as dynamic import\nlet __noDynamicImport;\n/**\n * A request to resolve the implementation locations of a symbol at a given text\n * document position. The request's parameter is of type [TextDocumentPositioParams]\n * (#TextDocumentPositionParams) the response is of type [Definition](#Definition) or a\n * Thenable that resolves to such.\n */\nvar ImplementationRequest;\n(function (ImplementationRequest) {\n    ImplementationRequest.method = 'textDocument/implementation';\n    ImplementationRequest.type = new messages_1.ProtocolRequestType(ImplementationRequest.method);\n})(ImplementationRequest = exports.ImplementationRequest || (exports.ImplementationRequest = {}));\n//# sourceMappingURL=protocol.implementation.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TypeDefinitionRequest = void 0;\nconst messages_1 = require(\"./messages\");\n// @ts-ignore: to avoid inlining LocatioLink as dynamic import\nlet __noDynamicImport;\n/**\n * A request to resolve the type definition locations of a symbol at a given text\n * document position. The request's parameter is of type [TextDocumentPositioParams]\n * (#TextDocumentPositionParams) the response is of type [Definition](#Definition) or a\n * Thenable that resolves to such.\n */\nvar TypeDefinitionRequest;\n(function (TypeDefinitionRequest) {\n    TypeDefinitionRequest.method = 'textDocument/typeDefinition';\n    TypeDefinitionRequest.type = new messages_1.ProtocolRequestType(TypeDefinitionRequest.method);\n})(TypeDefinitionRequest = exports.TypeDefinitionRequest || (exports.TypeDefinitionRequest = {}));\n//# sourceMappingURL=protocol.typeDefinition.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DidChangeWorkspaceFoldersNotification = exports.WorkspaceFoldersRequest = void 0;\nconst messages_1 = require(\"./messages\");\n/**\n * The `workspace/workspaceFolders` is sent from the server to the client to fetch the open workspace folders.\n */\nvar WorkspaceFoldersRequest;\n(function (WorkspaceFoldersRequest) {\n    WorkspaceFoldersRequest.type = new messages_1.ProtocolRequestType0('workspace/workspaceFolders');\n})(WorkspaceFoldersRequest = exports.WorkspaceFoldersRequest || (exports.WorkspaceFoldersRequest = {}));\n/**\n * The `workspace/didChangeWorkspaceFolders` notification is sent from the client to the server when the workspace\n * folder configuration changes.\n */\nvar DidChangeWorkspaceFoldersNotification;\n(function (DidChangeWorkspaceFoldersNotification) {\n    DidChangeWorkspaceFoldersNotification.type = new messages_1.ProtocolNotificationType('workspace/didChangeWorkspaceFolders');\n})(DidChangeWorkspaceFoldersNotification = exports.DidChangeWorkspaceFoldersNotification || (exports.DidChangeWorkspaceFoldersNotification = {}));\n//# sourceMappingURL=protocol.workspaceFolders.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConfigurationRequest = void 0;\nconst messages_1 = require(\"./messages\");\n/**\n * The 'workspace/configuration' request is sent from the server to the client to fetch a certain\n * configuration setting.\n *\n * This pull model replaces the old push model were the client signaled configuration change via an\n * event. If the server still needs to react to configuration changes (since the server caches the\n * result of `workspace/configuration` requests) the server should register for an empty configuration\n * change event and empty the cache if such an event is received.\n */\nvar ConfigurationRequest;\n(function (ConfigurationRequest) {\n    ConfigurationRequest.type = new messages_1.ProtocolRequestType('workspace/configuration');\n})(ConfigurationRequest = exports.ConfigurationRequest || (exports.ConfigurationRequest = {}));\n//# sourceMappingURL=protocol.configuration.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ColorPresentationRequest = exports.DocumentColorRequest = void 0;\nconst messages_1 = require(\"./messages\");\n/**\n * A request to list all color symbols found in a given text document. The request's\n * parameter is of type [DocumentColorParams](#DocumentColorParams) the\n * response is of type [ColorInformation[]](#ColorInformation) or a Thenable\n * that resolves to such.\n */\nvar DocumentColorRequest;\n(function (DocumentColorRequest) {\n    DocumentColorRequest.method = 'textDocument/documentColor';\n    DocumentColorRequest.type = new messages_1.ProtocolRequestType(DocumentColorRequest.method);\n})(DocumentColorRequest = exports.DocumentColorRequest || (exports.DocumentColorRequest = {}));\n/**\n * A request to list all presentation for a color. The request's\n * parameter is of type [ColorPresentationParams](#ColorPresentationParams) the\n * response is of type [ColorInformation[]](#ColorInformation) or a Thenable\n * that resolves to such.\n */\nvar ColorPresentationRequest;\n(function (ColorPresentationRequest) {\n    ColorPresentationRequest.type = new messages_1.ProtocolRequestType('textDocument/colorPresentation');\n})(ColorPresentationRequest = exports.ColorPresentationRequest || (exports.ColorPresentationRequest = {}));\n//# sourceMappingURL=protocol.colorProvider.js.map","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FoldingRangeRequest = exports.FoldingRangeKind = void 0;\nconst messages_1 = require(\"./messages\");\n/**\n * Enum of known range kinds\n */\nvar FoldingRangeKind;\n(function (FoldingRangeKind) {\n    /**\n     * Folding range for a comment\n     */\n    FoldingRangeKind[\"Comment\"] = \"comment\";\n    /**\n     * Folding range for a imports or includes\n     */\n    FoldingRangeKind[\"Imports\"] = \"imports\";\n    /**\n     * Folding range for a region (e.g. `#region`)\n     */\n    FoldingRangeKind[\"Region\"] = \"region\";\n})(FoldingRangeKind = exports.FoldingRangeKind || (exports.FoldingRangeKind = {}));\n/**\n * A request to provide folding ranges in a document. The request's\n * parameter is of type [FoldingRangeParams](#FoldingRangeParams), the\n * response is of type [FoldingRangeList](#FoldingRangeList) or a Thenable\n * that resolves to such.\n */\nvar FoldingRangeRequest;\n(function (FoldingRangeRequest) {\n    FoldingRangeRequest.method = 'textDocument/foldingRange';\n    FoldingRangeRequest.type = new messages_1.ProtocolRequestType(FoldingRangeRequest.method);\n})(FoldingRangeRequest = exports.FoldingRangeRequest || (exports.FoldingRangeRequest = {}));\n//# sourceMappingURL=protocol.foldingRange.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeclarationRequest = void 0;\nconst messages_1 = require(\"./messages\");\n// @ts-ignore: to avoid inlining LocatioLink as dynamic import\nlet __noDynamicImport;\n/**\n * A request to resolve the type definition locations of a symbol at a given text\n * document position. The request's parameter is of type [TextDocumentPositioParams]\n * (#TextDocumentPositionParams) the response is of type [Declaration](#Declaration)\n * or a typed array of [DeclarationLink](#DeclarationLink) or a Thenable that resolves\n * to such.\n */\nvar DeclarationRequest;\n(function (DeclarationRequest) {\n    DeclarationRequest.method = 'textDocument/declaration';\n    DeclarationRequest.type = new messages_1.ProtocolRequestType(DeclarationRequest.method);\n})(DeclarationRequest = exports.DeclarationRequest || (exports.DeclarationRequest = {}));\n//# sourceMappingURL=protocol.declaration.js.map","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SelectionRangeRequest = void 0;\nconst messages_1 = require(\"./messages\");\n/**\n * A request to provide selection ranges in a document. The request's\n * parameter is of type [SelectionRangeParams](#SelectionRangeParams), the\n * response is of type [SelectionRange[]](#SelectionRange[]) or a Thenable\n * that resolves to such.\n */\nvar SelectionRangeRequest;\n(function (SelectionRangeRequest) {\n    SelectionRangeRequest.method = 'textDocument/selectionRange';\n    SelectionRangeRequest.type = new messages_1.ProtocolRequestType(SelectionRangeRequest.method);\n})(SelectionRangeRequest = exports.SelectionRangeRequest || (exports.SelectionRangeRequest = {}));\n//# sourceMappingURL=protocol.selectionRange.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WorkDoneProgressCancelNotification = exports.WorkDoneProgressCreateRequest = exports.WorkDoneProgress = void 0;\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\nconst messages_1 = require(\"./messages\");\nvar WorkDoneProgress;\n(function (WorkDoneProgress) {\n    WorkDoneProgress.type = new vscode_jsonrpc_1.ProgressType();\n    function is(value) {\n        return value === WorkDoneProgress.type;\n    }\n    WorkDoneProgress.is = is;\n})(WorkDoneProgress = exports.WorkDoneProgress || (exports.WorkDoneProgress = {}));\n/**\n * The `window/workDoneProgress/create` request is sent from the server to the client to initiate progress\n * reporting from the server.\n */\nvar WorkDoneProgressCreateRequest;\n(function (WorkDoneProgressCreateRequest) {\n    WorkDoneProgressCreateRequest.type = new messages_1.ProtocolRequestType('window/workDoneProgress/create');\n})(WorkDoneProgressCreateRequest = exports.WorkDoneProgressCreateRequest || (exports.WorkDoneProgressCreateRequest = {}));\n/**\n * The `window/workDoneProgress/cancel` notification is sent from  the client to the server to cancel a progress\n * initiated on the server side.\n */\nvar WorkDoneProgressCancelNotification;\n(function (WorkDoneProgressCancelNotification) {\n    WorkDoneProgressCancelNotification.type = new messages_1.ProtocolNotificationType('window/workDoneProgress/cancel');\n})(WorkDoneProgressCancelNotification = exports.WorkDoneProgressCancelNotification || (exports.WorkDoneProgressCancelNotification = {}));\n//# sourceMappingURL=protocol.progress.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) TypeFox and others. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CallHierarchyOutgoingCallsRequest = exports.CallHierarchyIncomingCallsRequest = exports.CallHierarchyPrepareRequest = void 0;\nconst messages_1 = require(\"./messages\");\n/**\n * A request to result a `CallHierarchyItem` in a document at a given position.\n * Can be used as an input to a incoming or outgoing call hierarchy.\n *\n * @since 3.16.0\n */\nvar CallHierarchyPrepareRequest;\n(function (CallHierarchyPrepareRequest) {\n    CallHierarchyPrepareRequest.method = 'textDocument/prepareCallHierarchy';\n    CallHierarchyPrepareRequest.type = new messages_1.ProtocolRequestType(CallHierarchyPrepareRequest.method);\n})(CallHierarchyPrepareRequest = exports.CallHierarchyPrepareRequest || (exports.CallHierarchyPrepareRequest = {}));\n/**\n * A request to resolve the incoming calls for a given `CallHierarchyItem`.\n *\n * @since 3.16.0\n */\nvar CallHierarchyIncomingCallsRequest;\n(function (CallHierarchyIncomingCallsRequest) {\n    CallHierarchyIncomingCallsRequest.method = 'callHierarchy/incomingCalls';\n    CallHierarchyIncomingCallsRequest.type = new messages_1.ProtocolRequestType(CallHierarchyIncomingCallsRequest.method);\n})(CallHierarchyIncomingCallsRequest = exports.CallHierarchyIncomingCallsRequest || (exports.CallHierarchyIncomingCallsRequest = {}));\n/**\n * A request to resolve the outgoing calls for a given `CallHierarchyItem`.\n *\n * @since 3.16.0\n */\nvar CallHierarchyOutgoingCallsRequest;\n(function (CallHierarchyOutgoingCallsRequest) {\n    CallHierarchyOutgoingCallsRequest.method = 'callHierarchy/outgoingCalls';\n    CallHierarchyOutgoingCallsRequest.type = new messages_1.ProtocolRequestType(CallHierarchyOutgoingCallsRequest.method);\n})(CallHierarchyOutgoingCallsRequest = exports.CallHierarchyOutgoingCallsRequest || (exports.CallHierarchyOutgoingCallsRequest = {}));\n//# sourceMappingURL=protocol.callHierarchy.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SemanticTokensRefreshRequest = exports.SemanticTokensRangeRequest = exports.SemanticTokensDeltaRequest = exports.SemanticTokensRequest = exports.SemanticTokensRegistrationType = exports.TokenFormat = exports.SemanticTokens = exports.SemanticTokenModifiers = exports.SemanticTokenTypes = void 0;\nconst messages_1 = require(\"./messages\");\n/**\n * A set of predefined token types. This set is not fixed\n * an clients can specify additional token types via the\n * corresponding client capabilities.\n *\n * @since 3.16.0\n */\nvar SemanticTokenTypes;\n(function (SemanticTokenTypes) {\n    SemanticTokenTypes[\"namespace\"] = \"namespace\";\n    /**\n     * Represents a generic type. Acts as a fallback for types which can't be mapped to\n     * a specific type like class or enum.\n     */\n    SemanticTokenTypes[\"type\"] = \"type\";\n    SemanticTokenTypes[\"class\"] = \"class\";\n    SemanticTokenTypes[\"enum\"] = \"enum\";\n    SemanticTokenTypes[\"interface\"] = \"interface\";\n    SemanticTokenTypes[\"struct\"] = \"struct\";\n    SemanticTokenTypes[\"typeParameter\"] = \"typeParameter\";\n    SemanticTokenTypes[\"parameter\"] = \"parameter\";\n    SemanticTokenTypes[\"variable\"] = \"variable\";\n    SemanticTokenTypes[\"property\"] = \"property\";\n    SemanticTokenTypes[\"enumMember\"] = \"enumMember\";\n    SemanticTokenTypes[\"event\"] = \"event\";\n    SemanticTokenTypes[\"function\"] = \"function\";\n    SemanticTokenTypes[\"method\"] = \"method\";\n    SemanticTokenTypes[\"macro\"] = \"macro\";\n    SemanticTokenTypes[\"keyword\"] = \"keyword\";\n    SemanticTokenTypes[\"modifier\"] = \"modifier\";\n    SemanticTokenTypes[\"comment\"] = \"comment\";\n    SemanticTokenTypes[\"string\"] = \"string\";\n    SemanticTokenTypes[\"number\"] = \"number\";\n    SemanticTokenTypes[\"regexp\"] = \"regexp\";\n    SemanticTokenTypes[\"operator\"] = \"operator\";\n})(SemanticTokenTypes = exports.SemanticTokenTypes || (exports.SemanticTokenTypes = {}));\n/**\n * A set of predefined token modifiers. This set is not fixed\n * an clients can specify additional token types via the\n * corresponding client capabilities.\n *\n * @since 3.16.0\n */\nvar SemanticTokenModifiers;\n(function (SemanticTokenModifiers) {\n    SemanticTokenModifiers[\"declaration\"] = \"declaration\";\n    SemanticTokenModifiers[\"definition\"] = \"definition\";\n    SemanticTokenModifiers[\"readonly\"] = \"readonly\";\n    SemanticTokenModifiers[\"static\"] = \"static\";\n    SemanticTokenModifiers[\"deprecated\"] = \"deprecated\";\n    SemanticTokenModifiers[\"abstract\"] = \"abstract\";\n    SemanticTokenModifiers[\"async\"] = \"async\";\n    SemanticTokenModifiers[\"modification\"] = \"modification\";\n    SemanticTokenModifiers[\"documentation\"] = \"documentation\";\n    SemanticTokenModifiers[\"defaultLibrary\"] = \"defaultLibrary\";\n})(SemanticTokenModifiers = exports.SemanticTokenModifiers || (exports.SemanticTokenModifiers = {}));\n/**\n * @since 3.16.0\n */\nvar SemanticTokens;\n(function (SemanticTokens) {\n    function is(value) {\n        const candidate = value;\n        return candidate !== undefined && (candidate.resultId === undefined || typeof candidate.resultId === 'string') &&\n            Array.isArray(candidate.data) && (candidate.data.length === 0 || typeof candidate.data[0] === 'number');\n    }\n    SemanticTokens.is = is;\n})(SemanticTokens = exports.SemanticTokens || (exports.SemanticTokens = {}));\n//------- 'textDocument/semanticTokens' -----\nvar TokenFormat;\n(function (TokenFormat) {\n    TokenFormat.Relative = 'relative';\n})(TokenFormat = exports.TokenFormat || (exports.TokenFormat = {}));\nvar SemanticTokensRegistrationType;\n(function (SemanticTokensRegistrationType) {\n    SemanticTokensRegistrationType.method = 'textDocument/semanticTokens';\n    SemanticTokensRegistrationType.type = new messages_1.RegistrationType(SemanticTokensRegistrationType.method);\n})(SemanticTokensRegistrationType = exports.SemanticTokensRegistrationType || (exports.SemanticTokensRegistrationType = {}));\n/**\n * @since 3.16.0\n */\nvar SemanticTokensRequest;\n(function (SemanticTokensRequest) {\n    SemanticTokensRequest.method = 'textDocument/semanticTokens/full';\n    SemanticTokensRequest.type = new messages_1.ProtocolRequestType(SemanticTokensRequest.method);\n})(SemanticTokensRequest = exports.SemanticTokensRequest || (exports.SemanticTokensRequest = {}));\n/**\n * @since 3.16.0\n */\nvar SemanticTokensDeltaRequest;\n(function (SemanticTokensDeltaRequest) {\n    SemanticTokensDeltaRequest.method = 'textDocument/semanticTokens/full/delta';\n    SemanticTokensDeltaRequest.type = new messages_1.ProtocolRequestType(SemanticTokensDeltaRequest.method);\n})(SemanticTokensDeltaRequest = exports.SemanticTokensDeltaRequest || (exports.SemanticTokensDeltaRequest = {}));\n/**\n * @since 3.16.0\n */\nvar SemanticTokensRangeRequest;\n(function (SemanticTokensRangeRequest) {\n    SemanticTokensRangeRequest.method = 'textDocument/semanticTokens/range';\n    SemanticTokensRangeRequest.type = new messages_1.ProtocolRequestType(SemanticTokensRangeRequest.method);\n})(SemanticTokensRangeRequest = exports.SemanticTokensRangeRequest || (exports.SemanticTokensRangeRequest = {}));\n/**\n * @since 3.16.0\n */\nvar SemanticTokensRefreshRequest;\n(function (SemanticTokensRefreshRequest) {\n    SemanticTokensRefreshRequest.method = `workspace/semanticTokens/refresh`;\n    SemanticTokensRefreshRequest.type = new messages_1.ProtocolRequestType0(SemanticTokensRefreshRequest.method);\n})(SemanticTokensRefreshRequest = exports.SemanticTokensRefreshRequest || (exports.SemanticTokensRefreshRequest = {}));\n//# sourceMappingURL=protocol.semanticTokens.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ShowDocumentRequest = void 0;\nconst messages_1 = require(\"./messages\");\n/**\n * A request to show a document. This request might open an\n * external program depending on the value of the URI to open.\n * For example a request to open `https://code.visualstudio.com/`\n * will very likely open the URI in a WEB browser.\n *\n * @since 3.16.0\n*/\nvar ShowDocumentRequest;\n(function (ShowDocumentRequest) {\n    ShowDocumentRequest.method = 'window/showDocument';\n    ShowDocumentRequest.type = new messages_1.ProtocolRequestType(ShowDocumentRequest.method);\n})(ShowDocumentRequest = exports.ShowDocumentRequest || (exports.ShowDocumentRequest = {}));\n//# sourceMappingURL=protocol.showDocument.js.map","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LinkedEditingRangeRequest = void 0;\nconst messages_1 = require(\"./messages\");\n/**\n * A request to provide ranges that can be edited together.\n *\n * @since 3.16.0\n */\nvar LinkedEditingRangeRequest;\n(function (LinkedEditingRangeRequest) {\n    LinkedEditingRangeRequest.method = 'textDocument/linkedEditingRange';\n    LinkedEditingRangeRequest.type = new messages_1.ProtocolRequestType(LinkedEditingRangeRequest.method);\n})(LinkedEditingRangeRequest = exports.LinkedEditingRangeRequest || (exports.LinkedEditingRangeRequest = {}));\n//# sourceMappingURL=protocol.linkedEditingRange.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WillDeleteFilesRequest = exports.DidDeleteFilesNotification = exports.DidRenameFilesNotification = exports.WillRenameFilesRequest = exports.DidCreateFilesNotification = exports.WillCreateFilesRequest = exports.FileOperationPatternKind = void 0;\nconst messages_1 = require(\"./messages\");\n/**\n * A pattern kind describing if a glob pattern matches a file a folder or\n * both.\n *\n * @since 3.16.0\n */\nvar FileOperationPatternKind;\n(function (FileOperationPatternKind) {\n    /**\n     * The pattern matches a file only.\n     */\n    FileOperationPatternKind.file = 'file';\n    /**\n     * The pattern matches a folder only.\n     */\n    FileOperationPatternKind.folder = 'folder';\n})(FileOperationPatternKind = exports.FileOperationPatternKind || (exports.FileOperationPatternKind = {}));\n/**\n * The will create files request is sent from the client to the server before files are actually\n * created as long as the creation is triggered from within the client.\n *\n * @since 3.16.0\n */\nvar WillCreateFilesRequest;\n(function (WillCreateFilesRequest) {\n    WillCreateFilesRequest.method = 'workspace/willCreateFiles';\n    WillCreateFilesRequest.type = new messages_1.ProtocolRequestType(WillCreateFilesRequest.method);\n})(WillCreateFilesRequest = exports.WillCreateFilesRequest || (exports.WillCreateFilesRequest = {}));\n/**\n * The did create files notification is sent from the client to the server when\n * files were created from within the client.\n *\n * @since 3.16.0\n */\nvar DidCreateFilesNotification;\n(function (DidCreateFilesNotification) {\n    DidCreateFilesNotification.method = 'workspace/didCreateFiles';\n    DidCreateFilesNotification.type = new messages_1.ProtocolNotificationType(DidCreateFilesNotification.method);\n})(DidCreateFilesNotification = exports.DidCreateFilesNotification || (exports.DidCreateFilesNotification = {}));\n/**\n * The will rename files request is sent from the client to the server before files are actually\n * renamed as long as the rename is triggered from within the client.\n *\n * @since 3.16.0\n */\nvar WillRenameFilesRequest;\n(function (WillRenameFilesRequest) {\n    WillRenameFilesRequest.method = 'workspace/willRenameFiles';\n    WillRenameFilesRequest.type = new messages_1.ProtocolRequestType(WillRenameFilesRequest.method);\n})(WillRenameFilesRequest = exports.WillRenameFilesRequest || (exports.WillRenameFilesRequest = {}));\n/**\n * The did rename files notification is sent from the client to the server when\n * files were renamed from within the client.\n *\n * @since 3.16.0\n */\nvar DidRenameFilesNotification;\n(function (DidRenameFilesNotification) {\n    DidRenameFilesNotification.method = 'workspace/didRenameFiles';\n    DidRenameFilesNotification.type = new messages_1.ProtocolNotificationType(DidRenameFilesNotification.method);\n})(DidRenameFilesNotification = exports.DidRenameFilesNotification || (exports.DidRenameFilesNotification = {}));\n/**\n * The will delete files request is sent from the client to the server before files are actually\n * deleted as long as the deletion is triggered from within the client.\n *\n * @since 3.16.0\n */\nvar DidDeleteFilesNotification;\n(function (DidDeleteFilesNotification) {\n    DidDeleteFilesNotification.method = 'workspace/didDeleteFiles';\n    DidDeleteFilesNotification.type = new messages_1.ProtocolNotificationType(DidDeleteFilesNotification.method);\n})(DidDeleteFilesNotification = exports.DidDeleteFilesNotification || (exports.DidDeleteFilesNotification = {}));\n/**\n * The did delete files notification is sent from the client to the server when\n * files were deleted from within the client.\n *\n * @since 3.16.0\n */\nvar WillDeleteFilesRequest;\n(function (WillDeleteFilesRequest) {\n    WillDeleteFilesRequest.method = 'workspace/willDeleteFiles';\n    WillDeleteFilesRequest.type = new messages_1.ProtocolRequestType(WillDeleteFilesRequest.method);\n})(WillDeleteFilesRequest = exports.WillDeleteFilesRequest || (exports.WillDeleteFilesRequest = {}));\n//# sourceMappingURL=protocol.fileOperations.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MonikerRequest = exports.MonikerKind = exports.UniquenessLevel = void 0;\nconst messages_1 = require(\"./messages\");\n/**\n * Moniker uniqueness level to define scope of the moniker.\n *\n * @since 3.16.0\n */\nvar UniquenessLevel;\n(function (UniquenessLevel) {\n    /**\n     * The moniker is only unique inside a document\n     */\n    UniquenessLevel[\"document\"] = \"document\";\n    /**\n     * The moniker is unique inside a project for which a dump got created\n     */\n    UniquenessLevel[\"project\"] = \"project\";\n    /**\n     * The moniker is unique inside the group to which a project belongs\n     */\n    UniquenessLevel[\"group\"] = \"group\";\n    /**\n     * The moniker is unique inside the moniker scheme.\n     */\n    UniquenessLevel[\"scheme\"] = \"scheme\";\n    /**\n     * The moniker is globally unique\n     */\n    UniquenessLevel[\"global\"] = \"global\";\n})(UniquenessLevel = exports.UniquenessLevel || (exports.UniquenessLevel = {}));\n/**\n * The moniker kind.\n *\n * @since 3.16.0\n */\nvar MonikerKind;\n(function (MonikerKind) {\n    /**\n     * The moniker represent a symbol that is imported into a project\n     */\n    MonikerKind[\"import\"] = \"import\";\n    /**\n     * The moniker represents a symbol that is exported from a project\n     */\n    MonikerKind[\"export\"] = \"export\";\n    /**\n     * The moniker represents a symbol that is local to a project (e.g. a local\n     * variable of a function, a class not visible outside the project, ...)\n     */\n    MonikerKind[\"local\"] = \"local\";\n})(MonikerKind = exports.MonikerKind || (exports.MonikerKind = {}));\n/**\n * A request to get the moniker of a symbol at a given text document position.\n * The request parameter is of type [TextDocumentPositionParams](#TextDocumentPositionParams).\n * The response is of type [Moniker[]](#Moniker[]) or `null`.\n */\nvar MonikerRequest;\n(function (MonikerRequest) {\n    MonikerRequest.method = 'textDocument/moniker';\n    MonikerRequest.type = new messages_1.ProtocolRequestType(MonikerRequest.method);\n})(MonikerRequest = exports.MonikerRequest || (exports.MonikerRequest = {}));\n//# sourceMappingURL=protocol.moniker.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createProtocolConnection = void 0;\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\nfunction createProtocolConnection(input, output, logger, options) {\n    if (vscode_jsonrpc_1.ConnectionStrategy.is(options)) {\n        options = { connectionStrategy: options };\n    }\n    return vscode_jsonrpc_1.createMessageConnection(input, output, logger, options);\n}\nexports.createProtocolConnection = createProtocolConnection;\n//# sourceMappingURL=connection.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.attachPartialResult = exports.ProgressFeature = exports.attachWorkDone = void 0;\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst uuid_1 = require(\"./utils/uuid\");\nclass WorkDoneProgressReporterImpl {\n    constructor(_connection, _token) {\n        this._connection = _connection;\n        this._token = _token;\n        WorkDoneProgressReporterImpl.Instances.set(this._token, this);\n    }\n    begin(title, percentage, message, cancellable) {\n        let param = {\n            kind: 'begin',\n            title,\n            percentage,\n            message,\n            cancellable\n        };\n        this._connection.sendProgress(vscode_languageserver_protocol_1.WorkDoneProgress.type, this._token, param);\n    }\n    report(arg0, arg1) {\n        let param = {\n            kind: 'report'\n        };\n        if (typeof arg0 === 'number') {\n            param.percentage = arg0;\n            if (arg1 !== undefined) {\n                param.message = arg1;\n            }\n        }\n        else {\n            param.message = arg0;\n        }\n        this._connection.sendProgress(vscode_languageserver_protocol_1.WorkDoneProgress.type, this._token, param);\n    }\n    done() {\n        WorkDoneProgressReporterImpl.Instances.delete(this._token);\n        this._connection.sendProgress(vscode_languageserver_protocol_1.WorkDoneProgress.type, this._token, { kind: 'end' });\n    }\n}\nWorkDoneProgressReporterImpl.Instances = new Map();\nclass WorkDoneProgressServerReporterImpl extends WorkDoneProgressReporterImpl {\n    constructor(connection, token) {\n        super(connection, token);\n        this._source = new vscode_languageserver_protocol_1.CancellationTokenSource();\n    }\n    get token() {\n        return this._source.token;\n    }\n    done() {\n        this._source.dispose();\n        super.done();\n    }\n    cancel() {\n        this._source.cancel();\n    }\n}\nclass NullProgressReporter {\n    constructor() {\n    }\n    begin() {\n    }\n    report() {\n    }\n    done() {\n    }\n}\nclass NullProgressServerReporter extends NullProgressReporter {\n    constructor() {\n        super();\n        this._source = new vscode_languageserver_protocol_1.CancellationTokenSource();\n    }\n    get token() {\n        return this._source.token;\n    }\n    done() {\n        this._source.dispose();\n    }\n    cancel() {\n        this._source.cancel();\n    }\n}\nfunction attachWorkDone(connection, params) {\n    if (params === undefined || params.workDoneToken === undefined) {\n        return new NullProgressReporter();\n    }\n    const token = params.workDoneToken;\n    delete params.workDoneToken;\n    return new WorkDoneProgressReporterImpl(connection, token);\n}\nexports.attachWorkDone = attachWorkDone;\nconst ProgressFeature = (Base) => {\n    return class extends Base {\n        constructor() {\n            super();\n            this._progressSupported = false;\n        }\n        initialize(capabilities) {\n            var _a;\n            if (((_a = capabilities === null || capabilities === void 0 ? void 0 : capabilities.window) === null || _a === void 0 ? void 0 : _a.workDoneProgress) === true) {\n                this._progressSupported = true;\n                this.connection.onNotification(vscode_languageserver_protocol_1.WorkDoneProgressCancelNotification.type, (params) => {\n                    let progress = WorkDoneProgressReporterImpl.Instances.get(params.token);\n                    if (progress instanceof WorkDoneProgressServerReporterImpl || progress instanceof NullProgressServerReporter) {\n                        progress.cancel();\n                    }\n                });\n            }\n        }\n        attachWorkDoneProgress(token) {\n            if (token === undefined) {\n                return new NullProgressReporter();\n            }\n            else {\n                return new WorkDoneProgressReporterImpl(this.connection, token);\n            }\n        }\n        createWorkDoneProgress() {\n            if (this._progressSupported) {\n                const token = uuid_1.generateUuid();\n                return this.connection.sendRequest(vscode_languageserver_protocol_1.WorkDoneProgressCreateRequest.type, { token }).then(() => {\n                    const result = new WorkDoneProgressServerReporterImpl(this.connection, token);\n                    return result;\n                });\n            }\n            else {\n                return Promise.resolve(new NullProgressServerReporter());\n            }\n        }\n    };\n};\nexports.ProgressFeature = ProgressFeature;\nvar ResultProgress;\n(function (ResultProgress) {\n    ResultProgress.type = new vscode_languageserver_protocol_1.ProgressType();\n})(ResultProgress || (ResultProgress = {}));\nclass ResultProgressReporterImpl {\n    constructor(_connection, _token) {\n        this._connection = _connection;\n        this._token = _token;\n    }\n    report(data) {\n        this._connection.sendProgress(ResultProgress.type, this._token, data);\n    }\n}\nfunction attachPartialResult(connection, params) {\n    if (params === undefined || params.partialResultToken === undefined) {\n        return undefined;\n    }\n    const token = params.partialResultToken;\n    delete params.partialResultToken;\n    return new ResultProgressReporterImpl(connection, token);\n}\nexports.attachPartialResult = attachPartialResult;\n//# sourceMappingURL=progress.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConfigurationFeature = void 0;\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst Is = require(\"./utils/is\");\nconst ConfigurationFeature = (Base) => {\n    return class extends Base {\n        getConfiguration(arg) {\n            if (!arg) {\n                return this._getConfiguration({});\n            }\n            else if (Is.string(arg)) {\n                return this._getConfiguration({ section: arg });\n            }\n            else {\n                return this._getConfiguration(arg);\n            }\n        }\n        _getConfiguration(arg) {\n            let params = {\n                items: Array.isArray(arg) ? arg : [arg]\n            };\n            return this.connection.sendRequest(vscode_languageserver_protocol_1.ConfigurationRequest.type, params).then((result) => {\n                return Array.isArray(arg) ? result : result[0];\n            });\n        }\n    };\n};\nexports.ConfigurationFeature = ConfigurationFeature;\n//# sourceMappingURL=configuration.js.map","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WorkspaceFoldersFeature = void 0;\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst WorkspaceFoldersFeature = (Base) => {\n    return class extends Base {\n        initialize(capabilities) {\n            let workspaceCapabilities = capabilities.workspace;\n            if (workspaceCapabilities && workspaceCapabilities.workspaceFolders) {\n                this._onDidChangeWorkspaceFolders = new vscode_languageserver_protocol_1.Emitter();\n                this.connection.onNotification(vscode_languageserver_protocol_1.DidChangeWorkspaceFoldersNotification.type, (params) => {\n                    this._onDidChangeWorkspaceFolders.fire(params.event);\n                });\n            }\n        }\n        getWorkspaceFolders() {\n            return this.connection.sendRequest(vscode_languageserver_protocol_1.WorkspaceFoldersRequest.type);\n        }\n        get onDidChangeWorkspaceFolders() {\n            if (!this._onDidChangeWorkspaceFolders) {\n                throw new Error('Client doesn\\'t support sending workspace folder change events.');\n            }\n            if (!this._unregistration) {\n                this._unregistration = this.connection.client.register(vscode_languageserver_protocol_1.DidChangeWorkspaceFoldersNotification.type);\n            }\n            return this._onDidChangeWorkspaceFolders.event;\n        }\n    };\n};\nexports.WorkspaceFoldersFeature = WorkspaceFoldersFeature;\n//# sourceMappingURL=workspaceFolders.js.map","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CallHierarchyFeature = void 0;\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst CallHierarchyFeature = (Base) => {\n    return class extends Base {\n        get callHierarchy() {\n            return {\n                onPrepare: (handler) => {\n                    this.connection.onRequest(vscode_languageserver_protocol_1.CallHierarchyPrepareRequest.type, (params, cancel) => {\n                        return handler(params, cancel, this.attachWorkDoneProgress(params), undefined);\n                    });\n                },\n                onIncomingCalls: (handler) => {\n                    const type = vscode_languageserver_protocol_1.CallHierarchyIncomingCallsRequest.type;\n                    this.connection.onRequest(type, (params, cancel) => {\n                        return handler(params, cancel, this.attachWorkDoneProgress(params), this.attachPartialResultProgress(type, params));\n                    });\n                },\n                onOutgoingCalls: (handler) => {\n                    const type = vscode_languageserver_protocol_1.CallHierarchyOutgoingCallsRequest.type;\n                    this.connection.onRequest(type, (params, cancel) => {\n                        return handler(params, cancel, this.attachWorkDoneProgress(params), this.attachPartialResultProgress(type, params));\n                    });\n                }\n            };\n        }\n    };\n};\nexports.CallHierarchyFeature = CallHierarchyFeature;\n//# sourceMappingURL=callHierarchy.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ShowDocumentFeature = void 0;\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst ShowDocumentFeature = (Base) => {\n    return class extends Base {\n        showDocument(params) {\n            return this.connection.sendRequest(vscode_languageserver_protocol_1.ShowDocumentRequest.type, params);\n        }\n    };\n};\nexports.ShowDocumentFeature = ShowDocumentFeature;\n//# sourceMappingURL=showDocument.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FileOperationsFeature = void 0;\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst FileOperationsFeature = (Base) => {\n    return class extends Base {\n        onDidCreateFiles(handler) {\n            this.connection.onNotification(vscode_languageserver_protocol_1.DidCreateFilesNotification.type, (params) => {\n                handler(params);\n            });\n        }\n        onDidRenameFiles(handler) {\n            this.connection.onNotification(vscode_languageserver_protocol_1.DidRenameFilesNotification.type, (params) => {\n                handler(params);\n            });\n        }\n        onDidDeleteFiles(handler) {\n            this.connection.onNotification(vscode_languageserver_protocol_1.DidDeleteFilesNotification.type, (params) => {\n                handler(params);\n            });\n        }\n        onWillCreateFiles(handler) {\n            return this.connection.onRequest(vscode_languageserver_protocol_1.WillCreateFilesRequest.type, (params, cancel) => {\n                return handler(params, cancel);\n            });\n        }\n        onWillRenameFiles(handler) {\n            return this.connection.onRequest(vscode_languageserver_protocol_1.WillRenameFilesRequest.type, (params, cancel) => {\n                return handler(params, cancel);\n            });\n        }\n        onWillDeleteFiles(handler) {\n            return this.connection.onRequest(vscode_languageserver_protocol_1.WillDeleteFilesRequest.type, (params, cancel) => {\n                return handler(params, cancel);\n            });\n        }\n    };\n};\nexports.FileOperationsFeature = FileOperationsFeature;\n//# sourceMappingURL=fileOperations.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LinkedEditingRangeFeature = void 0;\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst LinkedEditingRangeFeature = (Base) => {\n    return class extends Base {\n        onLinkedEditingRange(handler) {\n            this.connection.onRequest(vscode_languageserver_protocol_1.LinkedEditingRangeRequest.type, (params, cancel) => {\n                return handler(params, cancel, this.attachWorkDoneProgress(params), undefined);\n            });\n        }\n    };\n};\nexports.LinkedEditingRangeFeature = LinkedEditingRangeFeature;\n//# sourceMappingURL=linkedEditingRange.js.map","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MonikerFeature = void 0;\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst MonikerFeature = (Base) => {\n    return class extends Base {\n        get moniker() {\n            return {\n                on: (handler) => {\n                    const type = vscode_languageserver_protocol_1.MonikerRequest.type;\n                    this.connection.onRequest(type, (params, cancel) => {\n                        return handler(params, cancel, this.attachWorkDoneProgress(params), this.attachPartialResultProgress(type, params));\n                    });\n                },\n            };\n        }\n    };\n};\nexports.MonikerFeature = MonikerFeature;\n//# sourceMappingURL=moniker.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveModulePath = exports.FileSystem = exports.resolveGlobalYarnPath = exports.resolveGlobalNodePath = exports.resolve = exports.uriToFilePath = void 0;\nconst url = require(\"url\");\nconst path = require(\"path\");\nconst fs = require(\"fs\");\nconst child_process_1 = require(\"child_process\");\n/**\n * @deprecated Use the `vscode-uri` npm module which provides a more\n * complete implementation of handling VS Code URIs.\n */\nfunction uriToFilePath(uri) {\n    let parsed = url.parse(uri);\n    if (parsed.protocol !== 'file:' || !parsed.path) {\n        return undefined;\n    }\n    let segments = parsed.path.split('/');\n    for (var i = 0, len = segments.length; i < len; i++) {\n        segments[i] = decodeURIComponent(segments[i]);\n    }\n    if (process.platform === 'win32' && segments.length > 1) {\n        let first = segments[0];\n        let second = segments[1];\n        // Do we have a drive letter and we started with a / which is the\n        // case if the first segement is empty (see split above)\n        if (first.length === 0 && second.length > 1 && second[1] === ':') {\n            // Remove first slash\n            segments.shift();\n        }\n    }\n    return path.normalize(segments.join('/'));\n}\nexports.uriToFilePath = uriToFilePath;\nfunction isWindows() {\n    return process.platform === 'win32';\n}\nfunction resolve(moduleName, nodePath, cwd, tracer) {\n    const nodePathKey = 'NODE_PATH';\n    const app = [\n        'var p = process;',\n        'p.on(\\'message\\',function(m){',\n        'if(m.c===\\'e\\'){',\n        'p.exit(0);',\n        '}',\n        'else if(m.c===\\'rs\\'){',\n        'try{',\n        'var r=require.resolve(m.a);',\n        'p.send({c:\\'r\\',s:true,r:r});',\n        '}',\n        'catch(err){',\n        'p.send({c:\\'r\\',s:false});',\n        '}',\n        '}',\n        '});'\n    ].join('');\n    return new Promise((resolve, reject) => {\n        let env = process.env;\n        let newEnv = Object.create(null);\n        Object.keys(env).forEach(key => newEnv[key] = env[key]);\n        if (nodePath && fs.existsSync(nodePath) /* see issue 545 */) {\n            if (newEnv[nodePathKey]) {\n                newEnv[nodePathKey] = nodePath + path.delimiter + newEnv[nodePathKey];\n            }\n            else {\n                newEnv[nodePathKey] = nodePath;\n            }\n            if (tracer) {\n                tracer(`NODE_PATH value is: ${newEnv[nodePathKey]}`);\n            }\n        }\n        newEnv['ELECTRON_RUN_AS_NODE'] = '1';\n        try {\n            let cp = child_process_1.fork('', [], {\n                cwd: cwd,\n                env: newEnv,\n                execArgv: ['-e', app]\n            });\n            if (cp.pid === void 0) {\n                reject(new Error(`Starting process to resolve node module  ${moduleName} failed`));\n                return;\n            }\n            cp.on('error', (error) => {\n                reject(error);\n            });\n            cp.on('message', (message) => {\n                if (message.c === 'r') {\n                    cp.send({ c: 'e' });\n                    if (message.s) {\n                        resolve(message.r);\n                    }\n                    else {\n                        reject(new Error(`Failed to resolve module: ${moduleName}`));\n                    }\n                }\n            });\n            let message = {\n                c: 'rs',\n                a: moduleName\n            };\n            cp.send(message);\n        }\n        catch (error) {\n            reject(error);\n        }\n    });\n}\nexports.resolve = resolve;\n/**\n * Resolve the global npm package path.\n * @deprecated Since this depends on the used package manager and their version the best is that servers\n * implement this themselves since they know best what kind of package managers to support.\n * @param tracer the tracer to use\n */\nfunction resolveGlobalNodePath(tracer) {\n    let npmCommand = 'npm';\n    const env = Object.create(null);\n    Object.keys(process.env).forEach(key => env[key] = process.env[key]);\n    env['NO_UPDATE_NOTIFIER'] = 'true';\n    const options = {\n        encoding: 'utf8',\n        env\n    };\n    if (isWindows()) {\n        npmCommand = 'npm.cmd';\n        options.shell = true;\n    }\n    let handler = () => { };\n    try {\n        process.on('SIGPIPE', handler);\n        let stdout = child_process_1.spawnSync(npmCommand, ['config', 'get', 'prefix'], options).stdout;\n        if (!stdout) {\n            if (tracer) {\n                tracer(`'npm config get prefix' didn't return a value.`);\n            }\n            return undefined;\n        }\n        let prefix = stdout.trim();\n        if (tracer) {\n            tracer(`'npm config get prefix' value is: ${prefix}`);\n        }\n        if (prefix.length > 0) {\n            if (isWindows()) {\n                return path.join(prefix, 'node_modules');\n            }\n            else {\n                return path.join(prefix, 'lib', 'node_modules');\n            }\n        }\n        return undefined;\n    }\n    catch (err) {\n        return undefined;\n    }\n    finally {\n        process.removeListener('SIGPIPE', handler);\n    }\n}\nexports.resolveGlobalNodePath = resolveGlobalNodePath;\n/*\n * Resolve the global yarn pakage path.\n * @deprecated Since this depends on the used package manager and their version the best is that servers\n * implement this themselves since they know best what kind of package managers to support.\n * @param tracer the tracer to use\n */\nfunction resolveGlobalYarnPath(tracer) {\n    let yarnCommand = 'yarn';\n    let options = {\n        encoding: 'utf8'\n    };\n    if (isWindows()) {\n        yarnCommand = 'yarn.cmd';\n        options.shell = true;\n    }\n    let handler = () => { };\n    try {\n        process.on('SIGPIPE', handler);\n        let results = child_process_1.spawnSync(yarnCommand, ['global', 'dir', '--json'], options);\n        let stdout = results.stdout;\n        if (!stdout) {\n            if (tracer) {\n                tracer(`'yarn global dir' didn't return a value.`);\n                if (results.stderr) {\n                    tracer(results.stderr);\n                }\n            }\n            return undefined;\n        }\n        let lines = stdout.trim().split(/\\r?\\n/);\n        for (let line of lines) {\n            try {\n                let yarn = JSON.parse(line);\n                if (yarn.type === 'log') {\n                    return path.join(yarn.data, 'node_modules');\n                }\n            }\n            catch (e) {\n                // Do nothing. Ignore the line\n            }\n        }\n        return undefined;\n    }\n    catch (err) {\n        return undefined;\n    }\n    finally {\n        process.removeListener('SIGPIPE', handler);\n    }\n}\nexports.resolveGlobalYarnPath = resolveGlobalYarnPath;\nvar FileSystem;\n(function (FileSystem) {\n    let _isCaseSensitive = undefined;\n    function isCaseSensitive() {\n        if (_isCaseSensitive !== void 0) {\n            return _isCaseSensitive;\n        }\n        if (process.platform === 'win32') {\n            _isCaseSensitive = false;\n        }\n        else {\n            // convert current file name to upper case / lower case and check if file exists\n            // (guards against cases when name is already all uppercase or lowercase)\n            _isCaseSensitive = !fs.existsSync(__filename.toUpperCase()) || !fs.existsSync(__filename.toLowerCase());\n        }\n        return _isCaseSensitive;\n    }\n    FileSystem.isCaseSensitive = isCaseSensitive;\n    function isParent(parent, child) {\n        if (isCaseSensitive()) {\n            return path.normalize(child).indexOf(path.normalize(parent)) === 0;\n        }\n        else {\n            return path.normalize(child).toLowerCase().indexOf(path.normalize(parent).toLowerCase()) === 0;\n        }\n    }\n    FileSystem.isParent = isParent;\n})(FileSystem = exports.FileSystem || (exports.FileSystem = {}));\nfunction resolveModulePath(workspaceRoot, moduleName, nodePath, tracer) {\n    if (nodePath) {\n        if (!path.isAbsolute(nodePath)) {\n            nodePath = path.join(workspaceRoot, nodePath);\n        }\n        return resolve(moduleName, nodePath, nodePath, tracer).then((value) => {\n            if (FileSystem.isParent(nodePath, value)) {\n                return value;\n            }\n            else {\n                return Promise.reject(new Error(`Failed to load ${moduleName} from node path location.`));\n            }\n        }).then(undefined, (_error) => {\n            return resolve(moduleName, resolveGlobalNodePath(tracer), workspaceRoot, tracer);\n        });\n    }\n    else {\n        return resolve(moduleName, resolveGlobalNodePath(tracer), workspaceRoot, tracer);\n    }\n}\nexports.resolveModulePath = resolveModulePath;\n//# sourceMappingURL=files.js.map","module.exports = require(\"url\");","module.exports = require(\"child_process\");","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProposedFeatures = exports.SemanticTokensBuilder = void 0;\nconst semanticTokens_1 = require(\"./semanticTokens\");\nObject.defineProperty(exports, \"SemanticTokensBuilder\", { enumerable: true, get: function () { return semanticTokens_1.SemanticTokensBuilder; } });\n__exportStar(require(\"vscode-languageserver-protocol/\"), exports);\n__exportStar(require(\"./server\"), exports);\nvar ProposedFeatures;\n(function (ProposedFeatures) {\n    ProposedFeatures.all = {\n        __brand: 'features'\n    };\n})(ProposedFeatures = exports.ProposedFeatures || (exports.ProposedFeatures = {}));\n//# sourceMappingURL=api.js.map","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ----------------------------------------------------------------------------------------- */\n'use strict';\n\nmodule.exports = require('./lib/node/main');","import {\r\n\tTextDocument,\r\n\tDocumentFormattingParams,\r\n\tTextEdit,\r\n} from 'vscode-languageserver';\r\n\r\n\r\nconst blockStart = [\r\n\t'if',\r\n\t'enum',\r\n\t'sub',\r\n\t'function',\r\n\t'type',\r\n\t'for',\r\n\t'select',\r\n\t'while',\r\n\t'#if',\r\n\t'#ifndef',\r\n\t'#ifdef'\r\n];\r\n\r\nconst blockEnd = [\r\n\t'end if',\r\n\t'end enum',\r\n\t'end sub',\r\n\t'end function',\r\n\t'end type',\r\n\t'next',\r\n\t'end select',\r\n\t'wend',\r\n\t'#endif',\r\n\t'#endif',\r\n\t'#endif'\r\n];\r\n\r\n\r\n\r\nexport default class TibboBasicDocumentFormatter {\r\n\tpublic formatDocument(document: TextDocument, formatParams: DocumentFormattingParams):\r\n\t\tThenable<TextEdit[]> {\r\n\t\t\tconst edits: TextEdit[] = [];\r\n\t\t\tconst lines = document.getText().split('\\n');\r\n\t\t\tconst tabSize = formatParams.options.tabSize;\r\n\t\t\tlet currentIndent = 0;\r\n\t\t\tlet pos = 0;\r\n\t\t\tconst blockStarts: Array<number> = [];\r\n\t\t\tfor (let i = 0; i < lines.length; i++) {\r\n\t\t\t\tconst line = lines[i];\r\n\t\t\t\tconst trimmed = line.trim().toLowerCase();\r\n\t\t\t\tif (trimmed == '' || trimmed[0] == \"'\") {\r\n\t\t\t\t\tpos += line.length + 1;\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tlet whiteSpaceLength = 0;\r\n\t\t\t\tfor (let j = 0; j < blockEnd.length; j++) {\r\n\t\t\t\t\tif (trimmed.indexOf(blockEnd[j]) == 0) {\r\n\t\t\t\t\t\tif (blockStarts[blockStarts.length - 1] == j) {\r\n\t\t\t\t\t\t\tcurrentIndent--;\r\n\t\t\t\t\t\t\tblockStarts.pop();\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tlet hasTabs = false;\r\n\t\t\t\tfor (let j = 0; j < line.length; j++) {\r\n\t\t\t\t\tif (line[j] == '\\t') {\r\n\t\t\t\t\t\thasTabs = true;\r\n\t\t\t\t\t\twhiteSpaceLength++;\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (line[j] != ' ') {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\twhiteSpaceLength++;\r\n\t\t\t\t}\r\n\t\t\t\tif (whiteSpaceLength != currentIndent * tabSize || hasTabs) {\r\n\t\t\t\t\tlet replaced = '';\r\n\t\t\t\t\tfor (let j = 0; j < currentIndent * tabSize; j++) {\r\n\t\t\t\t\t\treplaced += ' ';\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst edit = TextEdit.replace({ start: document.positionAt(pos), end: document.positionAt(pos + whiteSpaceLength) }, replaced);\r\n\t\t\t\t\tedits.push(edit);\r\n\t\t\t\t}\r\n\t\t\t\tpos += line.length + 1;\r\n\t\t\t\tfor (let j = 0; j < blockStart.length; j++) {\r\n\t\t\t\t\tif (trimmed.indexOf(blockStart[j]) == 0) {\r\n\t\t\t\t\t\tconst next = trimmed.substr(trimmed.indexOf(blockStart[j]) + blockStart[j].length, 1);\r\n\t\t\t\t\t\tif (next != ' ' && next != '\\t') {\r\n\t\t\t\t\t\t\tif (i != lines.length - 1) {\r\n\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcurrentIndent++;\r\n\t\t\t\t\t\tblockStarts.push(j);\r\n\t\t\t\t\t\tif (blockStart[j] == 'if') {\r\n\t\t\t\t\t\t\tif (trimmed.substr(trimmed.length - 4, 4) != 'then') {\r\n\t\t\t\t\t\t\t\tcurrentIndent--;\r\n\t\t\t\t\t\t\t\tblockStarts.pop();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t// let edit = TextEdit.replace({ start: document.positionAt(19), end: document.positionAt(20) }, '    ');\r\n\t\t\t// edits.push(edit);\r\n\t\treturn Promise.resolve(edits);\r\n\t}\r\n}\r\n","import fs = require('fs');\r\nimport path = require('path');\r\nimport ini = require('ini');\r\nimport TibboBasicErrorListener from './TibboBasicErrorListener';\r\nimport { TBDefine } from './types';\r\n// import { ParserRuleContext } from 'antlr4';\r\nimport { TerminalNodeImpl } from 'antlr4/tree/Tree';\r\nimport { InputStream, ParserRuleContext } from 'antlr4';\r\n\r\nconst antlr4 = require('antlr4');\r\nconst TibboBasicPreprocessorLexer = require('../language/TibboBasic/lib/TibboBasicPreprocessorLexer').TibboBasicPreprocessorLexer;\r\nconst TibboBasicPreprocessorParser = require('../language/TibboBasic/lib/TibboBasicPreprocessorParser').TibboBasicPreprocessorParser;\r\nconst TibboBasicPreprocessorParserListener = require('../language/TibboBasic/lib/TibboBasicPreprocessorParserListener').TibboBasicPreprocessorParserListener;\r\n\r\n\r\nexport default class TibboBasicPreprocessor {\r\n\r\n    projectPath: string;\r\n    platformType: string;\r\n    platformsPath: string;\r\n    platformVersion: string;\r\n\r\n    defines: { [name: string]: TBDefine } = {};\r\n    codes: { [filename: string]: Array<TerminalNodeImpl> } = {};\r\n    files: { [filename: string]: string } = {};\r\n    filePriorities: string[] = [];\r\n    originalFiles: { [filename: string]: string } = {};\r\n\r\n    constructor(projectPath: string, platformsPath: string) {\r\n        let tprPath = '';\r\n        this.projectPath = projectPath;\r\n        fs.readdirSync(projectPath).forEach(file => {\r\n            const ext = path.extname(file);\r\n            if (ext == '.tpr') {\r\n                tprPath = path.join(projectPath, file);\r\n            }\r\n        });\r\n        const tpr = ini.parse(fs.readFileSync(tprPath, 'utf-8'));\r\n        this.platformType = tpr['project']['platform'];\r\n        this.platformsPath = platformsPath;\r\n        this.platformVersion = tpr['project']['src_lib_ver'];\r\n    }\r\n\r\n    parsePlatforms(): void {\r\n        this.codes = {};\r\n        this.defines = {};\r\n        //parse platforms\r\n        const currentPath = path.join(this.platformsPath, this.platformType);\r\n        this.parseFile(currentPath, this.platformType + '.tph');\r\n    }\r\n\r\n    getFilePath(currentDirectory: string, filePath: string): string {\r\n        const platformLibs = path.join(this.platformsPath, 'src', this.platformVersion);\r\n        if (fs.existsSync(path.join(platformLibs, filePath.toLowerCase()))) {\r\n            filePath = filePath.toLowerCase();\r\n        }\r\n        if (fs.existsSync(path.join(this.projectPath, filePath.toLowerCase()))) {\r\n            filePath = filePath.toLowerCase();\r\n        }\r\n        if (fs.existsSync(path.join(currentDirectory, filePath.toLowerCase()))) {\r\n            filePath = filePath.toLowerCase();\r\n        }\r\n        if (fs.existsSync(path.join(platformLibs, filePath))) {//check platforms path\r\n            filePath = path.join(platformLibs, filePath);\r\n        }\r\n        else if (fs.existsSync(path.join(this.projectPath, filePath))) {\r\n            filePath = path.join(this.projectPath, filePath);\r\n        }\r\n        else {//check relative\r\n            filePath = path.join(currentDirectory, filePath);\r\n        }\r\n        return filePath;\r\n    }\r\n\r\n    parseFile(currentDirectory: string, filePath: string, update = false): string {\r\n        filePath = this.getFilePath(currentDirectory, filePath);\r\n        if (this.files[filePath] && !update) {\r\n            return filePath;\r\n        }\r\n        let deviceRootFile = '';\r\n        if (this.originalFiles[filePath] == undefined) {\r\n            this.filePriorities.push(filePath);\r\n            deviceRootFile = fs.readFileSync(filePath, 'utf-8');\r\n            this.originalFiles[filePath] = deviceRootFile;\r\n        }\r\n        deviceRootFile = this.originalFiles[filePath];\r\n        const chars = new antlr4.InputStream(deviceRootFile);\r\n        chars.name = filePath;\r\n        let blankFile = this.originalFiles[filePath];\r\n        blankFile = blankFile.replace(/[^\\r\\n\\t]/g, ' ');\r\n        this.files[filePath] = blankFile;\r\n        this.codes[filePath] = [];\r\n        const lexer = new TibboBasicPreprocessorLexer(chars);\r\n        const tokens = new antlr4.CommonTokenStream(lexer);\r\n        const parser = new TibboBasicPreprocessorParser(tokens);\r\n        parser.buildParseTrees = true;\r\n        const errorListener = new TibboBasicErrorListener();\r\n        lexer.removeErrorListeners();\r\n        // lexer.addErrorListener(errorListener);\r\n        parser.removeErrorListeners();\r\n        parser.addErrorListener(errorListener);\r\n        const tree = parser.preprocessor();\r\n\r\n        const preprocessor = new PreprocessorListener(filePath, this, chars);\r\n        antlr4.tree.ParseTreeWalker.DEFAULT.walk(preprocessor, tree);\r\n        if (errorListener.errors.length > 0) {\r\n            // console.log(errorListener.errors);\r\n        }\r\n        return filePath;\r\n    }\r\n}\r\n\r\ninterface PreprocessorEvaluationBlock {\r\n    parentBlock: PreprocessorEvaluationBlock | undefined;\r\n    shouldEvaluate: boolean;\r\n    blockStart: number;\r\n    evaluationResults: Array<boolean>;\r\n}\r\n\r\nexport class PreprocessorListener extends TibboBasicPreprocessorParserListener {\r\n\r\n    preprocessor: TibboBasicPreprocessor;\r\n    filePath: string;\r\n    expressionStack: Array<number> = [];\r\n    charStream: InputStream;\r\n    lastLine: number;\r\n    currentBlock: PreprocessorEvaluationBlock | undefined;\r\n\r\n\r\n    constructor(filePath: string, preprocessor: TibboBasicPreprocessor, charStream: InputStream) {\r\n        super();\r\n        this.preprocessor = preprocessor;\r\n        this.filePath = filePath;\r\n        this.charStream = charStream;\r\n        this.lastLine = 0;\r\n        this.currentBlock = undefined;\r\n    }\r\n\r\n    enterCodeLine(ctx) {\r\n        if (this.currentBlock != undefined) {\r\n            if (this.currentBlock.shouldEvaluate) {\r\n                if (this.getCurrentStack()) {\r\n                    this.addCode(ctx);\r\n                }\r\n                else {\r\n                    if (ctx.start.line == this.lastLine) {\r\n                        this.addCode(ctx);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this.addCode(ctx);\r\n        }\r\n    }\r\n\r\n    enterPreprocessorDefine(ctx) {\r\n        if (this.getCurrentStack()) {\r\n            const name = ctx.children[2].symbol.text;\r\n            if (ctx.children.length == 4) {//define has value\r\n                this.preprocessor.defines[name] = {\r\n                    name: name,\r\n                    value: ctx.children[3].start.text.trim(),\r\n                    line: ctx.start.line\r\n                };\r\n            }\r\n            else {//define with no value\r\n                this.preprocessor.defines[name] = {\r\n                    name: name,\r\n                    value: \"\",\r\n                    line: ctx.start.line\r\n                };\r\n            }\r\n            this.addCode(ctx);\r\n        }\r\n    }\r\n\r\n    enterPreprocessorInclude(ctx) {\r\n        if (this.getCurrentStack()) {\r\n            const symbol = ctx.children[1].symbol.text;\r\n            let filePath = symbol.substring(1, symbol.length - 1);\r\n            filePath = filePath.split('\\\\').join(path.sep);\r\n            this.addCode(ctx);\r\n            if (path.basename(this.filePath) == filePath) {\r\n                return;\r\n            }\r\n            if (filePath == 'global.tbh') {\r\n                return;\r\n            }\r\n            this.preprocessor.parseFile(path.dirname(this.filePath), filePath, true);\r\n        }\r\n    }\r\n\r\n    enterPreprocessorDef(ctx) {\r\n        if (this.currentBlock == undefined || this.currentBlock && this.currentBlock.shouldEvaluate) {\r\n            this.addBlock(ctx);\r\n            const type = ctx.children[1].symbol.type;\r\n            const name = ctx.children[2].symbol.text\r\n            switch (type) {\r\n                case TibboBasicPreprocessorParser.IFDEF:\r\n                    this.addEvaluationResult(this.preprocessor.defines[name] != undefined, ctx);\r\n                    break;\r\n                case TibboBasicPreprocessorParser.IFNDEF:\r\n                    this.addEvaluationResult(this.preprocessor.defines[name] == undefined, ctx);\r\n                    break;\r\n            }\r\n            this.addCode(ctx);\r\n        }\r\n        else {\r\n            this.addBlock(ctx);\r\n            this.addEvaluationResult(false, ctx);\r\n        }\r\n    }\r\n\r\n    enterPreprocessorUndef(ctx) {\r\n        if (this.getCurrentStack()) {\r\n            const name = ctx.children[1].symbol.text;\r\n            this.defines[name] = undefined;\r\n            this.addCode(ctx);\r\n        }\r\n    }\r\n\r\n    enterPreprocessorEndConditional(ctx) {\r\n        if (this.currentBlock != undefined) {\r\n            if (this.currentBlock.shouldEvaluate) {\r\n                this.addCode(ctx);\r\n            }\r\n            this.currentBlock = this.currentBlock.parentBlock;\r\n        }\r\n        else {\r\n            this.addCode(ctx);\r\n        }\r\n    }\r\n\r\n    enterPreprocessorConditional(ctx) {\r\n        let shouldEvaluate = false;\r\n        switch (ctx.children[1].symbol.type) {\r\n            case TibboBasicPreprocessorParser.IF:\r\n                if (this.currentBlock == undefined || (this.currentBlock\r\n                    && this.currentBlock.shouldEvaluate)) {\r\n                    if (this.currentBlock) {\r\n                        if (this.currentBlock.evaluationResults[0]) {\r\n                            shouldEvaluate = true;\r\n                        }\r\n                    }\r\n                    else {\r\n                        shouldEvaluate = true;\r\n                    }\r\n                }\r\n                this.addBlock(ctx);\r\n                break;\r\n            case TibboBasicPreprocessorParser.ELIF:\r\n                {\r\n                    let found = false;\r\n                    if (this.currentBlock != undefined && this.currentBlock.shouldEvaluate) {\r\n                        for (let i = 0; i < this.currentBlock.evaluationResults.length; i++) {\r\n                            if (this.currentBlock.evaluationResults[i]) {\r\n                                found = true;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (!found) {\r\n                        shouldEvaluate = true;\r\n                    }\r\n                    else {\r\n                        this.addEvaluationResult(false, ctx);\r\n                    }\r\n                }\r\n                break;\r\n            case TibboBasicPreprocessorParser.ELSE:\r\n                {\r\n                    let found = false;\r\n                    if (this.currentBlock != undefined && this.currentBlock.shouldEvaluate) {\r\n                        for (let i = 0; i < this.currentBlock.evaluationResults.length; i++) {\r\n                            if (this.currentBlock.evaluationResults[i]) {\r\n                                found = true;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (!found) {\r\n                        this.addCode(ctx);\r\n                        this.addEvaluationResult(true, ctx);\r\n                        return;\r\n                    }\r\n                    else {\r\n                        this.addEvaluationResult(false, ctx);\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n        this.addCode(ctx);\r\n        if (shouldEvaluate) {\r\n            const result = this.evaluate(ctx.children);\r\n            this.addEvaluationResult(result, ctx);\r\n        }\r\n    }\r\n\r\n    evaluateStatement(ctx): boolean {\r\n        let result = true;\r\n        let evalString = '';\r\n        for (let i = 0; i < ctx.children.length; i++) {\r\n            const item = ctx.children[i];\r\n            evalString += this.getItemStatement(item);\r\n        }\r\n        result = eval(evalString);\r\n        return result;\r\n    }\r\n\r\n    evaluate(items) {\r\n        let result = false;\r\n        for (let i = 0; i < items.length; i++) {\r\n            const item = items[i];\r\n            if (item.ruleIndex == TibboBasicPreprocessorParser.RULE_preprocessor_expression && item.op == undefined) {\r\n                const text = item.children[0].getText();\r\n                // let definedValue = this.getDefineValue(text);\r\n                result = this.preprocessor.defines[text] != undefined && Number(this.preprocessor.defines[text].value) != 0;\r\n            }\r\n            if (item.ruleIndex == TibboBasicPreprocessorParser.RULE_preprocessor_expression && item.op != undefined) {\r\n                switch (item.op.type) {\r\n                    case TibboBasicPreprocessorParser.AND:\r\n                        result = this.evaluate([item.children[0]]) && this.evaluate([item.children[2]]);\r\n                        break;\r\n                    case TibboBasicPreprocessorParser.OR:\r\n                        result = this.evaluate([items[i].children[0]]) || this.evaluate([items[i].children[2]]);\r\n                        break;\r\n                    default:\r\n                        {\r\n                            const name = item.children[0].start.text;\r\n                            const evalValue = this.getDefineValue(item.children[2].start.text)\r\n                            const definedValue = this.getDefineValue(name);\r\n                            switch (item.op.type) {\r\n                                case TibboBasicPreprocessorParser.EQUAL:\r\n                                    result = evalValue == definedValue;\r\n                                    break;\r\n                                case TibboBasicPreprocessorParser.NOTEQUAL:\r\n                                    result = evalValue != definedValue;\r\n                                    break;\r\n                                case TibboBasicPreprocessorParser.LT:\r\n                                    result = evalValue < definedValue;\r\n                                    break;\r\n                                case TibboBasicPreprocessorParser.GT:\r\n                                    result = evalValue > definedValue;\r\n                                    break;\r\n                                case TibboBasicPreprocessorParser.LE:\r\n                                    result = evalValue <= definedValue;\r\n                                    break;\r\n                                case TibboBasicPreprocessorParser.GE:\r\n                                    result = evalValue >= definedValue;\r\n                                    break;\r\n                            }\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    getItemStatement(item) {\r\n        let evalString = '';\r\n        if (item.children) {\r\n            for (let i = 0; i < item.children.length; i++) {\r\n                evalString += this.getItemStatement(item.children[i]);\r\n            }\r\n        }\r\n        else {\r\n            switch (item.symbol.type) {\r\n                case TibboBasicPreprocessorParser.EQUAL:\r\n                    evalString += '==';\r\n                    break;\r\n                case TibboBasicPreprocessorParser.NOTEQUAL:\r\n                    evalString += '!=';\r\n                    break;\r\n                case TibboBasicPreprocessorParser.AND:\r\n                    evalString += '&&';\r\n                    break;\r\n                case TibboBasicPreprocessorParser.OR:\r\n                    evalString += '||';\r\n                    break;\r\n                case TibboBasicPreprocessorParser.LT:\r\n                    evalString += '<';\r\n                    break;\r\n                case TibboBasicPreprocessorParser.GT:\r\n                    evalString += '>';\r\n                    break;\r\n                case TibboBasicPreprocessorParser.LE:\r\n                    evalString += '<=';\r\n                    break;\r\n                case TibboBasicPreprocessorParser.GE:\r\n                    evalString += '>=';\r\n                    break;\r\n                case TibboBasicPreprocessorParser.CONDITIONAL_SYMBOL:\r\n                    evalString += '\"' + this.getDefineValue(item.symbol.text) + '\"';\r\n                    break;\r\n                case TibboBasicPreprocessorParser.DECIMAL_LITERAL:\r\n                case TibboBasicPreprocessorParser.DIRECTIVE_STRING:\r\n                    evalString += '\"' + item.symbol.text + '\"';\r\n                    break;\r\n            }\r\n        }\r\n\r\n        return evalString;\r\n    }\r\n\r\n    getDefineValue(name: string) {\r\n        if (this.preprocessor.defines[name] != undefined) {\r\n            const define = this.preprocessor.defines[name];\r\n            if (define.value != '') {\r\n                const nestedDefineValue = this.getDefineValue(define.value);\r\n                if (nestedDefineValue != name) {\r\n                    return nestedDefineValue;\r\n                }\r\n                else {\r\n                    return define.value;\r\n                }\r\n            }\r\n            else {\r\n                return define.value;\r\n            }\r\n        }\r\n        return name;\r\n    }\r\n\r\n    addCode(context: ParserRuleContext): void {\r\n        if (this.currentBlock != undefined) {\r\n            if (!this.currentBlock.shouldEvaluate) {\r\n                return;\r\n            }\r\n        }\r\n        const text = this.charStream.getText(context.start.start, context.stop.stop);\r\n        // this.preprocessor.codes[this.filePath]\r\n        this.preprocessor.files[this.filePath] = this.replaceRange(this.preprocessor.files[this.filePath],\r\n            context.start.start, context.stop.stop, text);\r\n        // if (context.children != undefined) {\r\n        //     for (let i = 0; i < context.children.length; i++) {\r\n        //         this.addCode(context.children[i]);\r\n        //     }\r\n        // }\r\n        // else {\r\n        //     this.preprocessor.codes[this.filePath].push(context);\r\n        // }\r\n    }\r\n\r\n    addEvaluationResult(result: boolean, ctx: ParserRuleContext) {\r\n        this.lastLine = ctx.start.line;\r\n        if (this.currentBlock != undefined) {\r\n            this.currentBlock.evaluationResults.push(result);\r\n        }\r\n    }\r\n\r\n    replaceRange(s, start, end, substitute) {\r\n        return s.substring(0, start) + substitute + s.substring(end + 1);\r\n    }\r\n\r\n    addBlock(ctx) {\r\n        let shouldEvaluate = false;\r\n        if (this.currentBlock == undefined) {\r\n            shouldEvaluate = true;\r\n        }\r\n        else {\r\n            shouldEvaluate = this.getCurrentStack();\r\n        }\r\n        const currentBlock: PreprocessorEvaluationBlock = {\r\n            shouldEvaluate: shouldEvaluate,\r\n            parentBlock: this.currentBlock,\r\n            blockStart: ctx.start.line,\r\n            evaluationResults: []\r\n        };\r\n        this.currentBlock = currentBlock;\r\n    }\r\n\r\n    addExpressionBlock() {\r\n        this.expressionStack.push(0);\r\n    }\r\n\r\n    getCurrentStack(block: PreprocessorEvaluationBlock | undefined = undefined): boolean {\r\n        let result = true;\r\n        if (block == undefined) {\r\n            block = this.currentBlock;\r\n        }\r\n        if (block != undefined) {\r\n            result = block.evaluationResults[block.evaluationResults.length - 1];\r\n        }\r\n        return result;\r\n    }\r\n\r\n    addExpressionCount() {\r\n        if (this.expressionStack.length == 0) {\r\n            this.addExpressionBlock();\r\n        }\r\n\r\n        this.expressionStack[this.expressionStack.length - 1]++;\r\n    }\r\n\r\n}","/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nexports.ATN = require('./ATN').ATN;\nexports.ATNDeserializer = require('./ATNDeserializer').ATNDeserializer;\nexports.LexerATNSimulator = require('./LexerATNSimulator').LexerATNSimulator;\nexports.ParserATNSimulator = require('./ParserATNSimulator').ParserATNSimulator;\nexports.PredictionMode = require('./PredictionMode').PredictionMode;\n","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n///\n\nvar Set = require('./Utils').Set;\nvar BitSet = require('./Utils').BitSet;\nvar Token = require('./Token').Token;\nvar ATNConfig = require('./atn/ATNConfig').ATNConfig;\nvar Interval = require('./IntervalSet').Interval;\nvar IntervalSet = require('./IntervalSet').IntervalSet;\nvar RuleStopState = require('./atn/ATNState').RuleStopState;\nvar RuleTransition = require('./atn/Transition').RuleTransition;\nvar NotSetTransition = require('./atn/Transition').NotSetTransition;\nvar WildcardTransition = require('./atn/Transition').WildcardTransition;\nvar AbstractPredicateTransition = require('./atn/Transition').AbstractPredicateTransition;\n\nvar pc = require('./PredictionContext');\nvar predictionContextFromRuleContext = pc.predictionContextFromRuleContext;\nvar PredictionContext = pc.PredictionContext;\nvar SingletonPredictionContext = pc.SingletonPredictionContext;\n\nfunction LL1Analyzer (atn) {\n    this.atn = atn;\n}\n\n//* Special value added to the lookahead sets to indicate that we hit\n//  a predicate during analysis if {@code seeThruPreds==false}.\n///\nLL1Analyzer.HIT_PRED = Token.INVALID_TYPE;\n\n\n//*\n// Calculates the SLL(1) expected lookahead set for each outgoing transition\n// of an {@link ATNState}. The returned array has one element for each\n// outgoing transition in {@code s}. If the closure from transition\n// <em>i</em> leads to a semantic predicate before matching a symbol, the\n// element at index <em>i</em> of the result will be {@code null}.\n//\n// @param s the ATN state\n// @return the expected symbols for each outgoing transition of {@code s}.\n///\nLL1Analyzer.prototype.getDecisionLookahead = function(s) {\n    if (s === null) {\n        return null;\n    }\n    var count = s.transitions.length;\n    var look = [];\n    for(var alt=0; alt< count; alt++) {\n        look[alt] = new IntervalSet();\n        var lookBusy = new Set();\n        var seeThruPreds = false; // fail to get lookahead upon pred\n        this._LOOK(s.transition(alt).target, null, PredictionContext.EMPTY,\n              look[alt], lookBusy, new BitSet(), seeThruPreds, false);\n        // Wipe out lookahead for this alternative if we found nothing\n        // or we had a predicate when we !seeThruPreds\n        if (look[alt].length===0 || look[alt].contains(LL1Analyzer.HIT_PRED)) {\n            look[alt] = null;\n        }\n    }\n    return look;\n};\n\n//*\n// Compute set of tokens that can follow {@code s} in the ATN in the\n// specified {@code ctx}.\n//\n// <p>If {@code ctx} is {@code null} and the end of the rule containing\n// {@code s} is reached, {@link Token//EPSILON} is added to the result set.\n// If {@code ctx} is not {@code null} and the end of the outermost rule is\n// reached, {@link Token//EOF} is added to the result set.</p>\n//\n// @param s the ATN state\n// @param stopState the ATN state to stop at. This can be a\n// {@link BlockEndState} to detect epsilon paths through a closure.\n// @param ctx the complete parser context, or {@code null} if the context\n// should be ignored\n//\n// @return The set of tokens that can follow {@code s} in the ATN in the\n// specified {@code ctx}.\n///\nLL1Analyzer.prototype.LOOK = function(s, stopState, ctx) {\n    var r = new IntervalSet();\n    var seeThruPreds = true; // ignore preds; get all lookahead\n\tctx = ctx || null;\n    var lookContext = ctx!==null ? predictionContextFromRuleContext(s.atn, ctx) : null;\n    this._LOOK(s, stopState, lookContext, r, new Set(), new BitSet(), seeThruPreds, true);\n    return r;\n};\n\n//*\n// Compute set of tokens that can follow {@code s} in the ATN in the\n// specified {@code ctx}.\n//\n// <p>If {@code ctx} is {@code null} and {@code stopState} or the end of the\n// rule containing {@code s} is reached, {@link Token//EPSILON} is added to\n// the result set. If {@code ctx} is not {@code null} and {@code addEOF} is\n// {@code true} and {@code stopState} or the end of the outermost rule is\n// reached, {@link Token//EOF} is added to the result set.</p>\n//\n// @param s the ATN state.\n// @param stopState the ATN state to stop at. This can be a\n// {@link BlockEndState} to detect epsilon paths through a closure.\n// @param ctx The outer context, or {@code null} if the outer context should\n// not be used.\n// @param look The result lookahead set.\n// @param lookBusy A set used for preventing epsilon closures in the ATN\n// from causing a stack overflow. Outside code should pass\n// {@code new Set<ATNConfig>} for this argument.\n// @param calledRuleStack A set used for preventing left recursion in the\n// ATN from causing a stack overflow. Outside code should pass\n// {@code new BitSet()} for this argument.\n// @param seeThruPreds {@code true} to true semantic predicates as\n// implicitly {@code true} and \"see through them\", otherwise {@code false}\n// to treat semantic predicates as opaque and add {@link //HIT_PRED} to the\n// result if one is encountered.\n// @param addEOF Add {@link Token//EOF} to the result if the end of the\n// outermost context is reached. This parameter has no effect if {@code ctx}\n// is {@code null}.\n///\nLL1Analyzer.prototype._LOOK = function(s, stopState , ctx, look, lookBusy, calledRuleStack, seeThruPreds, addEOF) {\n    var c = new ATNConfig({state:s, alt:0, context: ctx}, null);\n    if (lookBusy.contains(c)) {\n        return;\n    }\n    lookBusy.add(c);\n    if (s === stopState) {\n        if (ctx ===null) {\n            look.addOne(Token.EPSILON);\n            return;\n        } else if (ctx.isEmpty() && addEOF) {\n            look.addOne(Token.EOF);\n            return;\n        }\n    }\n    if (s instanceof RuleStopState ) {\n        if (ctx ===null) {\n            look.addOne(Token.EPSILON);\n            return;\n        } else if (ctx.isEmpty() && addEOF) {\n            look.addOne(Token.EOF);\n            return;\n        }\n        if (ctx !== PredictionContext.EMPTY) {\n            // run thru all possible stack tops in ctx\n            for(var i=0; i<ctx.length; i++) {\n                var returnState = this.atn.states[ctx.getReturnState(i)];\n                var removed = calledRuleStack.contains(returnState.ruleIndex);\n                try {\n                    calledRuleStack.remove(returnState.ruleIndex);\n                    this._LOOK(returnState, stopState, ctx.getParent(i), look, lookBusy, calledRuleStack, seeThruPreds, addEOF);\n                } finally {\n                    if (removed) {\n                        calledRuleStack.add(returnState.ruleIndex);\n                    }\n                }\n            }\n            return;\n        }\n    }\n    for(var j=0; j<s.transitions.length; j++) {\n        var t = s.transitions[j];\n        if (t.constructor === RuleTransition) {\n            if (calledRuleStack.contains(t.target.ruleIndex)) {\n                continue;\n            }\n            var newContext = SingletonPredictionContext.create(ctx, t.followState.stateNumber);\n            try {\n                calledRuleStack.add(t.target.ruleIndex);\n                this._LOOK(t.target, stopState, newContext, look, lookBusy, calledRuleStack, seeThruPreds, addEOF);\n            } finally {\n                calledRuleStack.remove(t.target.ruleIndex);\n            }\n        } else if (t instanceof AbstractPredicateTransition ) {\n            if (seeThruPreds) {\n                this._LOOK(t.target, stopState, ctx, look, lookBusy, calledRuleStack, seeThruPreds, addEOF);\n            } else {\n                look.addOne(LL1Analyzer.HIT_PRED);\n            }\n        } else if( t.isEpsilon) {\n            this._LOOK(t.target, stopState, ctx, look, lookBusy, calledRuleStack, seeThruPreds, addEOF);\n        } else if (t.constructor === WildcardTransition) {\n            look.addRange( Token.MIN_USER_TOKEN_TYPE, this.atn.maxTokenType );\n        } else {\n            var set = t.label;\n            if (set !== null) {\n                if (t instanceof NotSetTransition) {\n                    set = set.complement(Token.MIN_USER_TOKEN_TYPE, this.atn.maxTokenType);\n                }\n                look.addSet(set);\n            }\n        }\n    }\n};\n\nexports.LL1Analyzer = LL1Analyzer;\n\n","/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n///\n\n// Represents the type of recognizer an ATN applies to.\n\nfunction ATNType() {\n\n}\n\nATNType.LEXER = 0;\nATNType.PARSER = 1;\n\nexports.ATNType = ATNType;\n\n","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n///\n\n// When we hit an accept state in either the DFA or the ATN, we\n//  have to notify the character stream to start buffering characters\n//  via {@link IntStream//mark} and record the current state. The current sim state\n//  includes the current index into the input, the current line,\n//  and current character position in that line. Note that the Lexer is\n//  tracking the starting line and characterization of the token. These\n//  variables track the \"state\" of the simulator when it hits an accept state.\n//\n//  <p>We track these variables separately for the DFA and ATN simulation\n//  because the DFA simulation often has to fail over to the ATN\n//  simulation. If the ATN simulation fails, we need the DFA to fall\n//  back to its previously accepted state, if any. If the ATN succeeds,\n//  then the ATN does the accept and the DFA simulator that invoked it\n//  can simply return the predicted token type.</p>\n///\n\nvar Token = require('./../Token').Token;\nvar Lexer = require('./../Lexer').Lexer;\nvar ATN = require('./ATN').ATN;\nvar ATNSimulator = require('./ATNSimulator').ATNSimulator;\nvar DFAState = require('./../dfa/DFAState').DFAState;\nvar ATNConfigSet = require('./ATNConfigSet').ATNConfigSet;\nvar OrderedATNConfigSet = require('./ATNConfigSet').OrderedATNConfigSet;\nvar PredictionContext = require('./../PredictionContext').PredictionContext;\nvar SingletonPredictionContext = require('./../PredictionContext').SingletonPredictionContext;\nvar RuleStopState = require('./ATNState').RuleStopState;\nvar LexerATNConfig = require('./ATNConfig').LexerATNConfig;\nvar Transition = require('./Transition').Transition;\nvar LexerActionExecutor = require('./LexerActionExecutor').LexerActionExecutor;\nvar LexerNoViableAltException = require('./../error/Errors').LexerNoViableAltException;\n\nfunction resetSimState(sim) {\n\tsim.index = -1;\n\tsim.line = 0;\n\tsim.column = -1;\n\tsim.dfaState = null;\n}\n\nfunction SimState() {\n\tresetSimState(this);\n\treturn this;\n}\n\nSimState.prototype.reset = function() {\n\tresetSimState(this);\n};\n\nfunction LexerATNSimulator(recog, atn, decisionToDFA, sharedContextCache) {\n\tATNSimulator.call(this, atn, sharedContextCache);\n\tthis.decisionToDFA = decisionToDFA;\n\tthis.recog = recog;\n\t// The current token's starting index into the character stream.\n\t// Shared across DFA to ATN simulation in case the ATN fails and the\n\t// DFA did not have a previous accept state. In this case, we use the\n\t// ATN-generated exception object.\n\tthis.startIndex = -1;\n\t// line number 1..n within the input///\n\tthis.line = 1;\n\t// The index of the character relative to the beginning of the line\n\t// 0..n-1///\n\tthis.column = 0;\n\tthis.mode = Lexer.DEFAULT_MODE;\n\t// Used during DFA/ATN exec to record the most recent accept configuration\n\t// info\n\tthis.prevAccept = new SimState();\n\t// done\n\treturn this;\n}\n\nLexerATNSimulator.prototype = Object.create(ATNSimulator.prototype);\nLexerATNSimulator.prototype.constructor = LexerATNSimulator;\n\nLexerATNSimulator.debug = false;\nLexerATNSimulator.dfa_debug = false;\n\nLexerATNSimulator.MIN_DFA_EDGE = 0;\nLexerATNSimulator.MAX_DFA_EDGE = 127; // forces unicode to stay in ATN\n\nLexerATNSimulator.match_calls = 0;\n\nLexerATNSimulator.prototype.copyState = function(simulator) {\n\tthis.column = simulator.column;\n\tthis.line = simulator.line;\n\tthis.mode = simulator.mode;\n\tthis.startIndex = simulator.startIndex;\n};\n\nLexerATNSimulator.prototype.match = function(input, mode) {\n\tthis.match_calls += 1;\n\tthis.mode = mode;\n\tvar mark = input.mark();\n\ttry {\n\t\tthis.startIndex = input.index;\n\t\tthis.prevAccept.reset();\n\t\tvar dfa = this.decisionToDFA[mode];\n\t\tif (dfa.s0 === null) {\n\t\t\treturn this.matchATN(input);\n\t\t} else {\n\t\t\treturn this.execATN(input, dfa.s0);\n\t\t}\n\t} finally {\n\t\tinput.release(mark);\n\t}\n};\n\nLexerATNSimulator.prototype.reset = function() {\n\tthis.prevAccept.reset();\n\tthis.startIndex = -1;\n\tthis.line = 1;\n\tthis.column = 0;\n\tthis.mode = Lexer.DEFAULT_MODE;\n};\n\nLexerATNSimulator.prototype.matchATN = function(input) {\n\tvar startState = this.atn.modeToStartState[this.mode];\n\n\tif (LexerATNSimulator.debug) {\n\t\tconsole.log(\"matchATN mode \" + this.mode + \" start: \" + startState);\n\t}\n\tvar old_mode = this.mode;\n\tvar s0_closure = this.computeStartState(input, startState);\n\tvar suppressEdge = s0_closure.hasSemanticContext;\n\ts0_closure.hasSemanticContext = false;\n\n\tvar next = this.addDFAState(s0_closure);\n\tif (!suppressEdge) {\n\t\tthis.decisionToDFA[this.mode].s0 = next;\n\t}\n\n\tvar predict = this.execATN(input, next);\n\n\tif (LexerATNSimulator.debug) {\n\t\tconsole.log(\"DFA after matchATN: \" + this.decisionToDFA[old_mode].toLexerString());\n\t}\n\treturn predict;\n};\n\nLexerATNSimulator.prototype.execATN = function(input, ds0) {\n\tif (LexerATNSimulator.debug) {\n\t\tconsole.log(\"start state closure=\" + ds0.configs);\n\t}\n\tif (ds0.isAcceptState) {\n\t\t// allow zero-length tokens\n\t\tthis.captureSimState(this.prevAccept, input, ds0);\n\t}\n\tvar t = input.LA(1);\n\tvar s = ds0; // s is current/from DFA state\n\n\twhile (true) { // while more work\n\t\tif (LexerATNSimulator.debug) {\n\t\t\tconsole.log(\"execATN loop starting closure: \" + s.configs);\n\t\t}\n\n\t\t// As we move src->trg, src->trg, we keep track of the previous trg to\n\t\t// avoid looking up the DFA state again, which is expensive.\n\t\t// If the previous target was already part of the DFA, we might\n\t\t// be able to avoid doing a reach operation upon t. If s!=null,\n\t\t// it means that semantic predicates didn't prevent us from\n\t\t// creating a DFA state. Once we know s!=null, we check to see if\n\t\t// the DFA state has an edge already for t. If so, we can just reuse\n\t\t// it's configuration set; there's no point in re-computing it.\n\t\t// This is kind of like doing DFA simulation within the ATN\n\t\t// simulation because DFA simulation is really just a way to avoid\n\t\t// computing reach/closure sets. Technically, once we know that\n\t\t// we have a previously added DFA state, we could jump over to\n\t\t// the DFA simulator. But, that would mean popping back and forth\n\t\t// a lot and making things more complicated algorithmically.\n\t\t// This optimization makes a lot of sense for loops within DFA.\n\t\t// A character will take us back to an existing DFA state\n\t\t// that already has lots of edges out of it. e.g., .* in comments.\n\t\t// print(\"Target for:\" + str(s) + \" and:\" + str(t))\n\t\tvar target = this.getExistingTargetState(s, t);\n\t\t// print(\"Existing:\" + str(target))\n\t\tif (target === null) {\n\t\t\ttarget = this.computeTargetState(input, s, t);\n\t\t\t// print(\"Computed:\" + str(target))\n\t\t}\n\t\tif (target === ATNSimulator.ERROR) {\n\t\t\tbreak;\n\t\t}\n\t\t// If this is a consumable input element, make sure to consume before\n\t\t// capturing the accept state so the input index, line, and char\n\t\t// position accurately reflect the state of the interpreter at the\n\t\t// end of the token.\n\t\tif (t !== Token.EOF) {\n\t\t\tthis.consume(input);\n\t\t}\n\t\tif (target.isAcceptState) {\n\t\t\tthis.captureSimState(this.prevAccept, input, target);\n\t\t\tif (t === Token.EOF) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tt = input.LA(1);\n\t\ts = target; // flip; current DFA target becomes new src/from state\n\t}\n\treturn this.failOrAccept(this.prevAccept, input, s.configs, t);\n};\n\n// Get an existing target state for an edge in the DFA. If the target state\n// for the edge has not yet been computed or is otherwise not available,\n// this method returns {@code null}.\n//\n// @param s The current DFA state\n// @param t The next input symbol\n// @return The existing target DFA state for the given input symbol\n// {@code t}, or {@code null} if the target state for this edge is not\n// already cached\nLexerATNSimulator.prototype.getExistingTargetState = function(s, t) {\n\tif (s.edges === null || t < LexerATNSimulator.MIN_DFA_EDGE || t > LexerATNSimulator.MAX_DFA_EDGE) {\n\t\treturn null;\n\t}\n\n\tvar target = s.edges[t - LexerATNSimulator.MIN_DFA_EDGE];\n\tif(target===undefined) {\n\t\ttarget = null;\n\t}\n\tif (LexerATNSimulator.debug && target !== null) {\n\t\tconsole.log(\"reuse state \" + s.stateNumber + \" edge to \" + target.stateNumber);\n\t}\n\treturn target;\n};\n\n// Compute a target state for an edge in the DFA, and attempt to add the\n// computed state and corresponding edge to the DFA.\n//\n// @param input The input stream\n// @param s The current DFA state\n// @param t The next input symbol\n//\n// @return The computed target DFA state for the given input symbol\n// {@code t}. If {@code t} does not lead to a valid DFA state, this method\n// returns {@link //ERROR}.\nLexerATNSimulator.prototype.computeTargetState = function(input, s, t) {\n\tvar reach = new OrderedATNConfigSet();\n\t// if we don't find an existing DFA state\n\t// Fill reach starting from closure, following t transitions\n\tthis.getReachableConfigSet(input, s.configs, reach, t);\n\n\tif (reach.items.length === 0) { // we got nowhere on t from s\n\t\tif (!reach.hasSemanticContext) {\n\t\t\t// we got nowhere on t, don't throw out this knowledge; it'd\n\t\t\t// cause a failover from DFA later.\n\t\t\tthis.addDFAEdge(s, t, ATNSimulator.ERROR);\n\t\t}\n\t\t// stop when we can't match any more char\n\t\treturn ATNSimulator.ERROR;\n\t}\n\t// Add an edge from s to target DFA found/created for reach\n\treturn this.addDFAEdge(s, t, null, reach);\n};\n\nLexerATNSimulator.prototype.failOrAccept = function(prevAccept, input, reach, t) {\n\tif (this.prevAccept.dfaState !== null) {\n\t\tvar lexerActionExecutor = prevAccept.dfaState.lexerActionExecutor;\n\t\tthis.accept(input, lexerActionExecutor, this.startIndex,\n\t\t\t\tprevAccept.index, prevAccept.line, prevAccept.column);\n\t\treturn prevAccept.dfaState.prediction;\n\t} else {\n\t\t// if no accept and EOF is first char, return EOF\n\t\tif (t === Token.EOF && input.index === this.startIndex) {\n\t\t\treturn Token.EOF;\n\t\t}\n\t\tthrow new LexerNoViableAltException(this.recog, input, this.startIndex, reach);\n\t}\n};\n\n// Given a starting configuration set, figure out all ATN configurations\n// we can reach upon input {@code t}. Parameter {@code reach} is a return\n// parameter.\nLexerATNSimulator.prototype.getReachableConfigSet = function(input, closure,\n\t\treach, t) {\n\t// this is used to skip processing for configs which have a lower priority\n\t// than a config that already reached an accept state for the same rule\n\tvar skipAlt = ATN.INVALID_ALT_NUMBER;\n\tfor (var i = 0; i < closure.items.length; i++) {\n\t\tvar cfg = closure.items[i];\n\t\tvar currentAltReachedAcceptState = (cfg.alt === skipAlt);\n\t\tif (currentAltReachedAcceptState && cfg.passedThroughNonGreedyDecision) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (LexerATNSimulator.debug) {\n\t\t\tconsole.log(\"testing %s at %s\\n\", this.getTokenName(t), cfg\n\t\t\t\t\t.toString(this.recog, true));\n\t\t}\n\t\tfor (var j = 0; j < cfg.state.transitions.length; j++) {\n\t\t\tvar trans = cfg.state.transitions[j]; // for each transition\n\t\t\tvar target = this.getReachableTarget(trans, t);\n\t\t\tif (target !== null) {\n\t\t\t\tvar lexerActionExecutor = cfg.lexerActionExecutor;\n\t\t\t\tif (lexerActionExecutor !== null) {\n\t\t\t\t\tlexerActionExecutor = lexerActionExecutor.fixOffsetBeforeMatch(input.index - this.startIndex);\n\t\t\t\t}\n\t\t\t\tvar treatEofAsEpsilon = (t === Token.EOF);\n\t\t\t\tvar config = new LexerATNConfig({state:target, lexerActionExecutor:lexerActionExecutor}, cfg);\n\t\t\t\tif (this.closure(input, config, reach,\n\t\t\t\t\t\tcurrentAltReachedAcceptState, true, treatEofAsEpsilon)) {\n\t\t\t\t\t// any remaining configs for this alt have a lower priority\n\t\t\t\t\t// than the one that just reached an accept state.\n\t\t\t\t\tskipAlt = cfg.alt;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\nLexerATNSimulator.prototype.accept = function(input, lexerActionExecutor,\n\t\tstartIndex, index, line, charPos) {\n\tif (LexerATNSimulator.debug) {\n\t\tconsole.log(\"ACTION %s\\n\", lexerActionExecutor);\n\t}\n\t// seek to after last char in token\n\tinput.seek(index);\n\tthis.line = line;\n\tthis.column = charPos;\n\tif (lexerActionExecutor !== null && this.recog !== null) {\n\t\tlexerActionExecutor.execute(this.recog, input, startIndex);\n\t}\n};\n\nLexerATNSimulator.prototype.getReachableTarget = function(trans, t) {\n\tif (trans.matches(t, 0, Lexer.MAX_CHAR_VALUE)) {\n\t\treturn trans.target;\n\t} else {\n\t\treturn null;\n\t}\n};\n\nLexerATNSimulator.prototype.computeStartState = function(input, p) {\n\tvar initialContext = PredictionContext.EMPTY;\n\tvar configs = new OrderedATNConfigSet();\n\tfor (var i = 0; i < p.transitions.length; i++) {\n\t\tvar target = p.transitions[i].target;\n        var cfg = new LexerATNConfig({state:target, alt:i+1, context:initialContext}, null);\n\t\tthis.closure(input, cfg, configs, false, false, false);\n\t}\n\treturn configs;\n};\n\n// Since the alternatives within any lexer decision are ordered by\n// preference, this method stops pursuing the closure as soon as an accept\n// state is reached. After the first accept state is reached by depth-first\n// search from {@code config}, all other (potentially reachable) states for\n// this rule would have a lower priority.\n//\n// @return {@code true} if an accept state is reached, otherwise\n// {@code false}.\nLexerATNSimulator.prototype.closure = function(input, config, configs,\n\t\tcurrentAltReachedAcceptState, speculative, treatEofAsEpsilon) {\n\tvar cfg = null;\n\tif (LexerATNSimulator.debug) {\n\t\tconsole.log(\"closure(\" + config.toString(this.recog, true) + \")\");\n\t}\n\tif (config.state instanceof RuleStopState) {\n\t\tif (LexerATNSimulator.debug) {\n\t\t\tif (this.recog !== null) {\n\t\t\t\tconsole.log(\"closure at %s rule stop %s\\n\", this.recog.ruleNames[config.state.ruleIndex], config);\n\t\t\t} else {\n\t\t\t\tconsole.log(\"closure at rule stop %s\\n\", config);\n\t\t\t}\n\t\t}\n\t\tif (config.context === null || config.context.hasEmptyPath()) {\n\t\t\tif (config.context === null || config.context.isEmpty()) {\n\t\t\t\tconfigs.add(config);\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\tconfigs.add(new LexerATNConfig({ state:config.state, context:PredictionContext.EMPTY}, config));\n\t\t\t\tcurrentAltReachedAcceptState = true;\n\t\t\t}\n\t\t}\n\t\tif (config.context !== null && !config.context.isEmpty()) {\n\t\t\tfor (var i = 0; i < config.context.length; i++) {\n\t\t\t\tif (config.context.getReturnState(i) !== PredictionContext.EMPTY_RETURN_STATE) {\n\t\t\t\t\tvar newContext = config.context.getParent(i); // \"pop\" return state\n\t\t\t\t\tvar returnState = this.atn.states[config.context.getReturnState(i)];\n\t\t\t\t\tcfg = new LexerATNConfig({ state:returnState, context:newContext }, config);\n\t\t\t\t\tcurrentAltReachedAcceptState = this.closure(input, cfg,\n\t\t\t\t\t\t\tconfigs, currentAltReachedAcceptState, speculative,\n\t\t\t\t\t\t\ttreatEofAsEpsilon);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn currentAltReachedAcceptState;\n\t}\n\t// optimization\n\tif (!config.state.epsilonOnlyTransitions) {\n\t\tif (!currentAltReachedAcceptState || !config.passedThroughNonGreedyDecision) {\n\t\t\tconfigs.add(config);\n\t\t}\n\t}\n\tfor (var j = 0; j < config.state.transitions.length; j++) {\n\t\tvar trans = config.state.transitions[j];\n\t\tcfg = this.getEpsilonTarget(input, config, trans, configs, speculative, treatEofAsEpsilon);\n\t\tif (cfg !== null) {\n\t\t\tcurrentAltReachedAcceptState = this.closure(input, cfg, configs,\n\t\t\t\t\tcurrentAltReachedAcceptState, speculative, treatEofAsEpsilon);\n\t\t}\n\t}\n\treturn currentAltReachedAcceptState;\n};\n\n// side-effect: can alter configs.hasSemanticContext\nLexerATNSimulator.prototype.getEpsilonTarget = function(input, config, trans,\n\t\tconfigs, speculative, treatEofAsEpsilon) {\n\tvar cfg = null;\n\tif (trans.serializationType === Transition.RULE) {\n\t\tvar newContext = SingletonPredictionContext.create(config.context, trans.followState.stateNumber);\n\t\tcfg = new LexerATNConfig( { state:trans.target, context:newContext}, config);\n\t} else if (trans.serializationType === Transition.PRECEDENCE) {\n\t\tthrow \"Precedence predicates are not supported in lexers.\";\n\t} else if (trans.serializationType === Transition.PREDICATE) {\n\t\t// Track traversing semantic predicates. If we traverse,\n\t\t// we cannot add a DFA state for this \"reach\" computation\n\t\t// because the DFA would not test the predicate again in the\n\t\t// future. Rather than creating collections of semantic predicates\n\t\t// like v3 and testing them on prediction, v4 will test them on the\n\t\t// fly all the time using the ATN not the DFA. This is slower but\n\t\t// semantically it's not used that often. One of the key elements to\n\t\t// this predicate mechanism is not adding DFA states that see\n\t\t// predicates immediately afterwards in the ATN. For example,\n\n\t\t// a : ID {p1}? | ID {p2}? ;\n\n\t\t// should create the start state for rule 'a' (to save start state\n\t\t// competition), but should not create target of ID state. The\n\t\t// collection of ATN states the following ID references includes\n\t\t// states reached by traversing predicates. Since this is when we\n\t\t// test them, we cannot cash the DFA state target of ID.\n\n\t\tif (LexerATNSimulator.debug) {\n\t\t\tconsole.log(\"EVAL rule \" + trans.ruleIndex + \":\" + trans.predIndex);\n\t\t}\n\t\tconfigs.hasSemanticContext = true;\n\t\tif (this.evaluatePredicate(input, trans.ruleIndex, trans.predIndex, speculative)) {\n\t\t\tcfg = new LexerATNConfig({ state:trans.target}, config);\n\t\t}\n\t} else if (trans.serializationType === Transition.ACTION) {\n\t\tif (config.context === null || config.context.hasEmptyPath()) {\n\t\t\t// execute actions anywhere in the start rule for a token.\n\t\t\t//\n\t\t\t// TODO: if the entry rule is invoked recursively, some\n\t\t\t// actions may be executed during the recursive call. The\n\t\t\t// problem can appear when hasEmptyPath() is true but\n\t\t\t// isEmpty() is false. In this case, the config needs to be\n\t\t\t// split into two contexts - one with just the empty path\n\t\t\t// and another with everything but the empty path.\n\t\t\t// Unfortunately, the current algorithm does not allow\n\t\t\t// getEpsilonTarget to return two configurations, so\n\t\t\t// additional modifications are needed before we can support\n\t\t\t// the split operation.\n\t\t\tvar lexerActionExecutor = LexerActionExecutor.append(config.lexerActionExecutor,\n\t\t\t\t\tthis.atn.lexerActions[trans.actionIndex]);\n\t\t\tcfg = new LexerATNConfig({ state:trans.target, lexerActionExecutor:lexerActionExecutor }, config);\n\t\t} else {\n\t\t\t// ignore actions in referenced rules\n\t\t\tcfg = new LexerATNConfig( { state:trans.target}, config);\n\t\t}\n\t} else if (trans.serializationType === Transition.EPSILON) {\n\t\tcfg = new LexerATNConfig({ state:trans.target}, config);\n\t} else if (trans.serializationType === Transition.ATOM ||\n\t\t\t\ttrans.serializationType === Transition.RANGE ||\n\t\t\t\ttrans.serializationType === Transition.SET) {\n\t\tif (treatEofAsEpsilon) {\n\t\t\tif (trans.matches(Token.EOF, 0, Lexer.MAX_CHAR_VALUE)) {\n\t\t\t\tcfg = new LexerATNConfig( { state:trans.target }, config);\n\t\t\t}\n\t\t}\n\t}\n\treturn cfg;\n};\n\n// Evaluate a predicate specified in the lexer.\n//\n// <p>If {@code speculative} is {@code true}, this method was called before\n// {@link //consume} for the matched character. This method should call\n// {@link //consume} before evaluating the predicate to ensure position\n// sensitive values, including {@link Lexer//getText}, {@link Lexer//getLine},\n// and {@link Lexer//getcolumn}, properly reflect the current\n// lexer state. This method should restore {@code input} and the simulator\n// to the original state before returning (i.e. undo the actions made by the\n// call to {@link //consume}.</p>\n//\n// @param input The input stream.\n// @param ruleIndex The rule containing the predicate.\n// @param predIndex The index of the predicate within the rule.\n// @param speculative {@code true} if the current index in {@code input} is\n// one character before the predicate's location.\n//\n// @return {@code true} if the specified predicate evaluates to\n// {@code true}.\n// /\nLexerATNSimulator.prototype.evaluatePredicate = function(input, ruleIndex,\n\t\tpredIndex, speculative) {\n\t// assume true if no recognizer was provided\n\tif (this.recog === null) {\n\t\treturn true;\n\t}\n\tif (!speculative) {\n\t\treturn this.recog.sempred(null, ruleIndex, predIndex);\n\t}\n\tvar savedcolumn = this.column;\n\tvar savedLine = this.line;\n\tvar index = input.index;\n\tvar marker = input.mark();\n\ttry {\n\t\tthis.consume(input);\n\t\treturn this.recog.sempred(null, ruleIndex, predIndex);\n\t} finally {\n\t\tthis.column = savedcolumn;\n\t\tthis.line = savedLine;\n\t\tinput.seek(index);\n\t\tinput.release(marker);\n\t}\n};\n\nLexerATNSimulator.prototype.captureSimState = function(settings, input, dfaState) {\n\tsettings.index = input.index;\n\tsettings.line = this.line;\n\tsettings.column = this.column;\n\tsettings.dfaState = dfaState;\n};\n\nLexerATNSimulator.prototype.addDFAEdge = function(from_, tk, to, cfgs) {\n\tif (to === undefined) {\n\t\tto = null;\n\t}\n\tif (cfgs === undefined) {\n\t\tcfgs = null;\n\t}\n\tif (to === null && cfgs !== null) {\n\t\t// leading to this call, ATNConfigSet.hasSemanticContext is used as a\n\t\t// marker indicating dynamic predicate evaluation makes this edge\n\t\t// dependent on the specific input sequence, so the static edge in the\n\t\t// DFA should be omitted. The target DFAState is still created since\n\t\t// execATN has the ability to resynchronize with the DFA state cache\n\t\t// following the predicate evaluation step.\n\t\t//\n\t\t// TJP notes: next time through the DFA, we see a pred again and eval.\n\t\t// If that gets us to a previously created (but dangling) DFA\n\t\t// state, we can continue in pure DFA mode from there.\n\t\t// /\n\t\tvar suppressEdge = cfgs.hasSemanticContext;\n\t\tcfgs.hasSemanticContext = false;\n\n\t\tto = this.addDFAState(cfgs);\n\n\t\tif (suppressEdge) {\n\t\t\treturn to;\n\t\t}\n\t}\n\t// add the edge\n\tif (tk < LexerATNSimulator.MIN_DFA_EDGE || tk > LexerATNSimulator.MAX_DFA_EDGE) {\n\t\t// Only track edges within the DFA bounds\n\t\treturn to;\n\t}\n\tif (LexerATNSimulator.debug) {\n\t\tconsole.log(\"EDGE \" + from_ + \" -> \" + to + \" upon \" + tk);\n\t}\n\tif (from_.edges === null) {\n\t\t// make room for tokens 1..n and -1 masquerading as index 0\n\t\tfrom_.edges = [];\n\t}\n\tfrom_.edges[tk - LexerATNSimulator.MIN_DFA_EDGE] = to; // connect\n\n\treturn to;\n};\n\n// Add a new DFA state if there isn't one with this set of\n// configurations already. This method also detects the first\n// configuration containing an ATN rule stop state. Later, when\n// traversing the DFA, we will know which rule to accept.\nLexerATNSimulator.prototype.addDFAState = function(configs) {\n\tvar proposed = new DFAState(null, configs);\n\tvar firstConfigWithRuleStopState = null;\n\tfor (var i = 0; i < configs.items.length; i++) {\n\t\tvar cfg = configs.items[i];\n\t\tif (cfg.state instanceof RuleStopState) {\n\t\t\tfirstConfigWithRuleStopState = cfg;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (firstConfigWithRuleStopState !== null) {\n\t\tproposed.isAcceptState = true;\n\t\tproposed.lexerActionExecutor = firstConfigWithRuleStopState.lexerActionExecutor;\n\t\tproposed.prediction = this.atn.ruleToTokenType[firstConfigWithRuleStopState.state.ruleIndex];\n\t}\n\tvar dfa = this.decisionToDFA[this.mode];\n\tvar existing = dfa.states.get(proposed);\n\tif (existing!==null) {\n\t\treturn existing;\n\t}\n\tvar newState = proposed;\n\tnewState.stateNumber = dfa.states.length;\n\tconfigs.setReadonly(true);\n\tnewState.configs = configs;\n\tdfa.states.add(newState);\n\treturn newState;\n};\n\nLexerATNSimulator.prototype.getDFA = function(mode) {\n\treturn this.decisionToDFA[mode];\n};\n\n// Get the text matched so far for the current token.\nLexerATNSimulator.prototype.getText = function(input) {\n\t// index is first lookahead char, don't include.\n\treturn input.getText(this.startIndex, input.index - 1);\n};\n\nLexerATNSimulator.prototype.consume = function(input) {\n\tvar curChar = input.LA(1);\n\tif (curChar === \"\\n\".charCodeAt(0)) {\n\t\tthis.line += 1;\n\t\tthis.column = 0;\n\t} else {\n\t\tthis.column += 1;\n\t}\n\tinput.consume();\n};\n\nLexerATNSimulator.prototype.getTokenName = function(tt) {\n\tif (tt === -1) {\n\t\treturn \"EOF\";\n\t} else {\n\t\treturn \"'\" + String.fromCharCode(tt) + \"'\";\n\t}\n};\n\nexports.LexerATNSimulator = LexerATNSimulator;\n","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n//\n\n//\n// This default implementation of {@link TokenFactory} creates\n// {@link CommonToken} objects.\n//\n\nvar CommonToken = require('./Token').CommonToken;\n\nfunction TokenFactory() {\n\treturn this;\n}\n\nfunction CommonTokenFactory(copyText) {\n\tTokenFactory.call(this);\n    // Indicates whether {@link CommonToken//setText} should be called after\n    // constructing tokens to explicitly set the text. This is useful for cases\n    // where the input stream might not be able to provide arbitrary substrings\n    // of text from the input after the lexer creates a token (e.g. the\n    // implementation of {@link CharStream//getText} in\n    // {@link UnbufferedCharStream} throws an\n    // {@link UnsupportedOperationException}). Explicitly setting the token text\n    // allows {@link Token//getText} to be called at any time regardless of the\n    // input stream implementation.\n    //\n    // <p>\n    // The default value is {@code false} to avoid the performance and memory\n    // overhead of copying text for every token unless explicitly requested.</p>\n    //\n    this.copyText = copyText===undefined ? false : copyText;\n\treturn this;\n}\n\nCommonTokenFactory.prototype = Object.create(TokenFactory.prototype);\nCommonTokenFactory.prototype.constructor = CommonTokenFactory;\n\n//\n// The default {@link CommonTokenFactory} instance.\n//\n// <p>\n// This token factory does not explicitly copy token text when constructing\n// tokens.</p>\n//\nCommonTokenFactory.DEFAULT = new CommonTokenFactory();\n\nCommonTokenFactory.prototype.create = function(source, type, text, channel, start, stop, line, column) {\n    var t = new CommonToken(source, type, channel, start, stop);\n    t.line = line;\n    t.column = column;\n    if (text !==null) {\n        t.text = text;\n    } else if (this.copyText && source[1] !==null) {\n        t.text = source[1].getText(start,stop);\n    }\n    return t;\n};\n\nCommonTokenFactory.prototype.createThin = function(type, text) {\n    var t = new CommonToken(null, type);\n    t.text = text;\n    return t;\n};\n\nexports.CommonTokenFactory = CommonTokenFactory;\n","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n///\n\n// Represents an executor for a sequence of lexer actions which traversed during\n// the matching operation of a lexer rule (token).\n//\n// <p>The executor tracks position information for position-dependent lexer actions\n// efficiently, ensuring that actions appearing only at the end of the rule do\n// not cause bloating of the {@link DFA} created for the lexer.</p>\n\nvar hashStuff = require(\"../Utils\").hashStuff;\nvar LexerIndexedCustomAction = require('./LexerAction').LexerIndexedCustomAction;\n\nfunction LexerActionExecutor(lexerActions) {\n\tthis.lexerActions = lexerActions === null ? [] : lexerActions;\n\t// Caches the result of {@link //hashCode} since the hash code is an element\n\t// of the performance-critical {@link LexerATNConfig//hashCode} operation.\n\tthis.cachedHashCode = hashStuff(lexerActions); // \"\".join([str(la) for la in\n\t// lexerActions]))\n\treturn this;\n}\n\n// Creates a {@link LexerActionExecutor} which executes the actions for\n// the input {@code lexerActionExecutor} followed by a specified\n// {@code lexerAction}.\n//\n// @param lexerActionExecutor The executor for actions already traversed by\n// the lexer while matching a token within a particular\n// {@link LexerATNConfig}. If this is {@code null}, the method behaves as\n// though it were an empty executor.\n// @param lexerAction The lexer action to execute after the actions\n// specified in {@code lexerActionExecutor}.\n//\n// @return A {@link LexerActionExecutor} for executing the combine actions\n// of {@code lexerActionExecutor} and {@code lexerAction}.\nLexerActionExecutor.append = function(lexerActionExecutor, lexerAction) {\n\tif (lexerActionExecutor === null) {\n\t\treturn new LexerActionExecutor([ lexerAction ]);\n\t}\n\tvar lexerActions = lexerActionExecutor.lexerActions.concat([ lexerAction ]);\n\treturn new LexerActionExecutor(lexerActions);\n};\n\n// Creates a {@link LexerActionExecutor} which encodes the current offset\n// for position-dependent lexer actions.\n//\n// <p>Normally, when the executor encounters lexer actions where\n// {@link LexerAction//isPositionDependent} returns {@code true}, it calls\n// {@link IntStream//seek} on the input {@link CharStream} to set the input\n// position to the <em>end</em> of the current token. This behavior provides\n// for efficient DFA representation of lexer actions which appear at the end\n// of a lexer rule, even when the lexer rule matches a variable number of\n// characters.</p>\n//\n// <p>Prior to traversing a match transition in the ATN, the current offset\n// from the token start index is assigned to all position-dependent lexer\n// actions which have not already been assigned a fixed offset. By storing\n// the offsets relative to the token start index, the DFA representation of\n// lexer actions which appear in the middle of tokens remains efficient due\n// to sharing among tokens of the same length, regardless of their absolute\n// position in the input stream.</p>\n//\n// <p>If the current executor already has offsets assigned to all\n// position-dependent lexer actions, the method returns {@code this}.</p>\n//\n// @param offset The current offset to assign to all position-dependent\n// lexer actions which do not already have offsets assigned.\n//\n// @return A {@link LexerActionExecutor} which stores input stream offsets\n// for all position-dependent lexer actions.\n// /\nLexerActionExecutor.prototype.fixOffsetBeforeMatch = function(offset) {\n\tvar updatedLexerActions = null;\n\tfor (var i = 0; i < this.lexerActions.length; i++) {\n\t\tif (this.lexerActions[i].isPositionDependent &&\n\t\t\t\t!(this.lexerActions[i] instanceof LexerIndexedCustomAction)) {\n\t\t\tif (updatedLexerActions === null) {\n\t\t\t\tupdatedLexerActions = this.lexerActions.concat([]);\n\t\t\t}\n\t\t\tupdatedLexerActions[i] = new LexerIndexedCustomAction(offset,\n\t\t\t\t\tthis.lexerActions[i]);\n\t\t}\n\t}\n\tif (updatedLexerActions === null) {\n\t\treturn this;\n\t} else {\n\t\treturn new LexerActionExecutor(updatedLexerActions);\n\t}\n};\n\n// Execute the actions encapsulated by this executor within the context of a\n// particular {@link Lexer}.\n//\n// <p>This method calls {@link IntStream//seek} to set the position of the\n// {@code input} {@link CharStream} prior to calling\n// {@link LexerAction//execute} on a position-dependent action. Before the\n// method returns, the input position will be restored to the same position\n// it was in when the method was invoked.</p>\n//\n// @param lexer The lexer instance.\n// @param input The input stream which is the source for the current token.\n// When this method is called, the current {@link IntStream//index} for\n// {@code input} should be the start of the following token, i.e. 1\n// character past the end of the current token.\n// @param startIndex The token start index. This value may be passed to\n// {@link IntStream//seek} to set the {@code input} position to the beginning\n// of the token.\n// /\nLexerActionExecutor.prototype.execute = function(lexer, input, startIndex) {\n\tvar requiresSeek = false;\n\tvar stopIndex = input.index;\n\ttry {\n\t\tfor (var i = 0; i < this.lexerActions.length; i++) {\n\t\t\tvar lexerAction = this.lexerActions[i];\n\t\t\tif (lexerAction instanceof LexerIndexedCustomAction) {\n\t\t\t\tvar offset = lexerAction.offset;\n\t\t\t\tinput.seek(startIndex + offset);\n\t\t\t\tlexerAction = lexerAction.action;\n\t\t\t\trequiresSeek = (startIndex + offset) !== stopIndex;\n\t\t\t} else if (lexerAction.isPositionDependent) {\n\t\t\t\tinput.seek(stopIndex);\n\t\t\t\trequiresSeek = false;\n\t\t\t}\n\t\t\tlexerAction.execute(lexer);\n\t\t}\n\t} finally {\n\t\tif (requiresSeek) {\n\t\t\tinput.seek(stopIndex);\n\t\t}\n\t}\n};\n\nLexerActionExecutor.prototype.hashCode = function() {\n\treturn this.cachedHashCode;\n};\n\nLexerActionExecutor.prototype.updateHashCode = function(hash) {\n    hash.update(this.cachedHashCode);\n};\n\n\nLexerActionExecutor.prototype.equals = function(other) {\n\tif (this === other) {\n\t\treturn true;\n\t} else if (!(other instanceof LexerActionExecutor)) {\n\t\treturn false;\n\t} else if (this.cachedHashCode != other.cachedHashCode) {\n\t\treturn false;\n\t} else if (this.lexerActions.length != other.lexerActions.length) {\n\t\treturn false;\n\t} else {\n\t\tvar numActions = this.lexerActions.length\n\t\tfor (var idx = 0; idx < numActions; ++idx) {\n\t\t\tif (!this.lexerActions[idx].equals(other.lexerActions[idx])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n};\n\nexports.LexerActionExecutor = LexerActionExecutor;\n","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n//\n\n//\n// The embodiment of the adaptive LL(*), ALL(*), parsing strategy.\n//\n// <p>\n// The basic complexity of the adaptive strategy makes it harder to understand.\n// We begin with ATN simulation to build paths in a DFA. Subsequent prediction\n// requests go through the DFA first. If they reach a state without an edge for\n// the current symbol, the algorithm fails over to the ATN simulation to\n// complete the DFA path for the current input (until it finds a conflict state\n// or uniquely predicting state).</p>\n//\n// <p>\n// All of that is done without using the outer context because we want to create\n// a DFA that is not dependent upon the rule invocation stack when we do a\n// prediction. One DFA works in all contexts. We avoid using context not\n// necessarily because it's slower, although it can be, but because of the DFA\n// caching problem. The closure routine only considers the rule invocation stack\n// created during prediction beginning in the decision rule. For example, if\n// prediction occurs without invoking another rule's ATN, there are no context\n// stacks in the configurations. When lack of context leads to a conflict, we\n// don't know if it's an ambiguity or a weakness in the strong LL(*) parsing\n// strategy (versus full LL(*)).</p>\n//\n// <p>\n// When SLL yields a configuration set with conflict, we rewind the input and\n// retry the ATN simulation, this time using full outer context without adding\n// to the DFA. Configuration context stacks will be the full invocation stacks\n// from the start rule. If we get a conflict using full context, then we can\n// definitively say we have a true ambiguity for that input sequence. If we\n// don't get a conflict, it implies that the decision is sensitive to the outer\n// context. (It is not context-sensitive in the sense of context-sensitive\n// grammars.)</p>\n//\n// <p>\n// The next time we reach this DFA state with an SLL conflict, through DFA\n// simulation, we will again retry the ATN simulation using full context mode.\n// This is slow because we can't save the results and have to \"interpret\" the\n// ATN each time we get that input.</p>\n//\n// <p>\n// <strong>CACHING FULL CONTEXT PREDICTIONS</strong></p>\n//\n// <p>\n// We could cache results from full context to predicted alternative easily and\n// that saves a lot of time but doesn't work in presence of predicates. The set\n// of visible predicates from the ATN start state changes depending on the\n// context, because closure can fall off the end of a rule. I tried to cache\n// tuples (stack context, semantic context, predicted alt) but it was slower\n// than interpreting and much more complicated. Also required a huge amount of\n// memory. The goal is not to create the world's fastest parser anyway. I'd like\n// to keep this algorithm simple. By launching multiple threads, we can improve\n// the speed of parsing across a large number of files.</p>\n//\n// <p>\n// There is no strict ordering between the amount of input used by SLL vs LL,\n// which makes it really hard to build a cache for full context. Let's say that\n// we have input A B C that leads to an SLL conflict with full context X. That\n// implies that using X we might only use A B but we could also use A B C D to\n// resolve conflict. Input A B C D could predict alternative 1 in one position\n// in the input and A B C E could predict alternative 2 in another position in\n// input. The conflicting SLL configurations could still be non-unique in the\n// full context prediction, which would lead us to requiring more input than the\n// original A B C.\tTo make a\tprediction cache work, we have to track\tthe exact\n// input\tused during the previous prediction. That amounts to a cache that maps\n// X to a specific DFA for that context.</p>\n//\n// <p>\n// Something should be done for left-recursive expression predictions. They are\n// likely LL(1) + pred eval. Easier to do the whole SLL unless error and retry\n// with full LL thing Sam does.</p>\n//\n// <p>\n// <strong>AVOIDING FULL CONTEXT PREDICTION</strong></p>\n//\n// <p>\n// We avoid doing full context retry when the outer context is empty, we did not\n// dip into the outer context by falling off the end of the decision state rule,\n// or when we force SLL mode.</p>\n//\n// <p>\n// As an example of the not dip into outer context case, consider as super\n// constructor calls versus function calls. One grammar might look like\n// this:</p>\n//\n// <pre>\n// ctorBody\n//   : '{' superCall? stat* '}'\n//   ;\n// </pre>\n//\n// <p>\n// Or, you might see something like</p>\n//\n// <pre>\n// stat\n//   : superCall ';'\n//   | expression ';'\n//   | ...\n//   ;\n// </pre>\n//\n// <p>\n// In both cases I believe that no closure operations will dip into the outer\n// context. In the first case ctorBody in the worst case will stop at the '}'.\n// In the 2nd case it should stop at the ';'. Both cases should stay within the\n// entry rule and not dip into the outer context.</p>\n//\n// <p>\n// <strong>PREDICATES</strong></p>\n//\n// <p>\n// Predicates are always evaluated if present in either SLL or LL both. SLL and\n// LL simulation deals with predicates differently. SLL collects predicates as\n// it performs closure operations like ANTLR v3 did. It delays predicate\n// evaluation until it reaches and accept state. This allows us to cache the SLL\n// ATN simulation whereas, if we had evaluated predicates on-the-fly during\n// closure, the DFA state configuration sets would be different and we couldn't\n// build up a suitable DFA.</p>\n//\n// <p>\n// When building a DFA accept state during ATN simulation, we evaluate any\n// predicates and return the sole semantically valid alternative. If there is\n// more than 1 alternative, we report an ambiguity. If there are 0 alternatives,\n// we throw an exception. Alternatives without predicates act like they have\n// true predicates. The simple way to think about it is to strip away all\n// alternatives with false predicates and choose the minimum alternative that\n// remains.</p>\n//\n// <p>\n// When we start in the DFA and reach an accept state that's predicated, we test\n// those and return the minimum semantically viable alternative. If no\n// alternatives are viable, we throw an exception.</p>\n//\n// <p>\n// During full LL ATN simulation, closure always evaluates predicates and\n// on-the-fly. This is crucial to reducing the configuration set size during\n// closure. It hits a landmine when parsing with the Java grammar, for example,\n// without this on-the-fly evaluation.</p>\n//\n// <p>\n// <strong>SHARING DFA</strong></p>\n//\n// <p>\n// All instances of the same parser share the same decision DFAs through a\n// static field. Each instance gets its own ATN simulator but they share the\n// same {@link //decisionToDFA} field. They also share a\n// {@link PredictionContextCache} object that makes sure that all\n// {@link PredictionContext} objects are shared among the DFA states. This makes\n// a big size difference.</p>\n//\n// <p>\n// <strong>THREAD SAFETY</strong></p>\n//\n// <p>\n// The {@link ParserATNSimulator} locks on the {@link //decisionToDFA} field when\n// it adds a new DFA object to that array. {@link //addDFAEdge}\n// locks on the DFA for the current decision when setting the\n// {@link DFAState//edges} field. {@link //addDFAState} locks on\n// the DFA for the current decision when looking up a DFA state to see if it\n// already exists. We must make sure that all requests to add DFA states that\n// are equivalent result in the same shared DFA object. This is because lots of\n// threads will be trying to update the DFA at once. The\n// {@link //addDFAState} method also locks inside the DFA lock\n// but this time on the shared context cache when it rebuilds the\n// configurations' {@link PredictionContext} objects using cached\n// subgraphs/nodes. No other locking occurs, even during DFA simulation. This is\n// safe as long as we can guarantee that all threads referencing\n// {@code s.edge[t]} get the same physical target {@link DFAState}, or\n// {@code null}. Once into the DFA, the DFA simulation does not reference the\n// {@link DFA//states} map. It follows the {@link DFAState//edges} field to new\n// targets. The DFA simulator will either find {@link DFAState//edges} to be\n// {@code null}, to be non-{@code null} and {@code dfa.edges[t]} null, or\n// {@code dfa.edges[t]} to be non-null. The\n// {@link //addDFAEdge} method could be racing to set the field\n// but in either case the DFA simulator works; if {@code null}, and requests ATN\n// simulation. It could also race trying to get {@code dfa.edges[t]}, but either\n// way it will work because it's not doing a test and set operation.</p>\n//\n// <p>\n// <strong>Starting with SLL then failing to combined SLL/LL (Two-Stage\n// Parsing)</strong></p>\n//\n// <p>\n// Sam pointed out that if SLL does not give a syntax error, then there is no\n// point in doing full LL, which is slower. We only have to try LL if we get a\n// syntax error. For maximum speed, Sam starts the parser set to pure SLL\n// mode with the {@link BailErrorStrategy}:</p>\n//\n// <pre>\n// parser.{@link Parser//getInterpreter() getInterpreter()}.{@link //setPredictionMode setPredictionMode}{@code (}{@link PredictionMode//SLL}{@code )};\n// parser.{@link Parser//setErrorHandler setErrorHandler}(new {@link BailErrorStrategy}());\n// </pre>\n//\n// <p>\n// If it does not get a syntax error, then we're done. If it does get a syntax\n// error, we need to retry with the combined SLL/LL strategy.</p>\n//\n// <p>\n// The reason this works is as follows. If there are no SLL conflicts, then the\n// grammar is SLL (at least for that input set). If there is an SLL conflict,\n// the full LL analysis must yield a set of viable alternatives which is a\n// subset of the alternatives reported by SLL. If the LL set is a singleton,\n// then the grammar is LL but not SLL. If the LL set is the same size as the SLL\n// set, the decision is SLL. If the LL set has size &gt; 1, then that decision\n// is truly ambiguous on the current input. If the LL set is smaller, then the\n// SLL conflict resolution might choose an alternative that the full LL would\n// rule out as a possibility based upon better context information. If that's\n// the case, then the SLL parse will definitely get an error because the full LL\n// analysis says it's not viable. If SLL conflict resolution chooses an\n// alternative within the LL set, them both SLL and LL would choose the same\n// alternative because they both choose the minimum of multiple conflicting\n// alternatives.</p>\n//\n// <p>\n// Let's say we have a set of SLL conflicting alternatives {@code {1, 2, 3}} and\n// a smaller LL set called <em>s</em>. If <em>s</em> is {@code {2, 3}}, then SLL\n// parsing will get an error because SLL will pursue alternative 1. If\n// <em>s</em> is {@code {1, 2}} or {@code {1, 3}} then both SLL and LL will\n// choose the same alternative because alternative one is the minimum of either\n// set. If <em>s</em> is {@code {2}} or {@code {3}} then SLL will get a syntax\n// error. If <em>s</em> is {@code {1}} then SLL will succeed.</p>\n//\n// <p>\n// Of course, if the input is invalid, then we will get an error for sure in\n// both SLL and LL parsing. Erroneous input will therefore require 2 passes over\n// the input.</p>\n//\n\nvar Utils = require('./../Utils');\nvar Set = Utils.Set;\nvar BitSet = Utils.BitSet;\nvar DoubleDict = Utils.DoubleDict;\nvar ATN = require('./ATN').ATN;\nvar ATNState = require('./ATNState').ATNState;\nvar ATNConfig = require('./ATNConfig').ATNConfig;\nvar ATNConfigSet = require('./ATNConfigSet').ATNConfigSet;\nvar Token = require('./../Token').Token;\nvar DFAState = require('./../dfa/DFAState').DFAState;\nvar PredPrediction = require('./../dfa/DFAState').PredPrediction;\nvar ATNSimulator = require('./ATNSimulator').ATNSimulator;\nvar PredictionMode = require('./PredictionMode').PredictionMode;\nvar RuleContext = require('./../RuleContext').RuleContext;\nvar ParserRuleContext = require('./../ParserRuleContext').ParserRuleContext;\nvar SemanticContext = require('./SemanticContext').SemanticContext;\nvar StarLoopEntryState = require('./ATNState').StarLoopEntryState;\nvar RuleStopState = require('./ATNState').RuleStopState;\nvar PredictionContext = require('./../PredictionContext').PredictionContext;\nvar Interval = require('./../IntervalSet').Interval;\nvar Transitions = require('./Transition');\nvar Transition = Transitions.Transition;\nvar SetTransition = Transitions.SetTransition;\nvar NotSetTransition = Transitions.NotSetTransition;\nvar RuleTransition = Transitions.RuleTransition;\nvar ActionTransition = Transitions.ActionTransition;\nvar NoViableAltException = require('./../error/Errors').NoViableAltException;\n\nvar SingletonPredictionContext = require('./../PredictionContext').SingletonPredictionContext;\nvar predictionContextFromRuleContext = require('./../PredictionContext').predictionContextFromRuleContext;\n\nfunction ParserATNSimulator(parser, atn, decisionToDFA, sharedContextCache) {\n\tATNSimulator.call(this, atn, sharedContextCache);\n    this.parser = parser;\n    this.decisionToDFA = decisionToDFA;\n    // SLL, LL, or LL + exact ambig detection?//\n    this.predictionMode = PredictionMode.LL;\n    // LAME globals to avoid parameters!!!!! I need these down deep in predTransition\n    this._input = null;\n    this._startIndex = 0;\n    this._outerContext = null;\n    this._dfa = null;\n    // Each prediction operation uses a cache for merge of prediction contexts.\n    //  Don't keep around as it wastes huge amounts of memory. DoubleKeyMap\n    //  isn't synchronized but we're ok since two threads shouldn't reuse same\n    //  parser/atnsim object because it can only handle one input at a time.\n    //  This maps graphs a and b to merged result c. (a,b)&rarr;c. We can avoid\n    //  the merge if we ever see a and b again.  Note that (b,a)&rarr;c should\n    //  also be examined during cache lookup.\n    //\n    this.mergeCache = null;\n    return this;\n}\n\nParserATNSimulator.prototype = Object.create(ATNSimulator.prototype);\nParserATNSimulator.prototype.constructor = ParserATNSimulator;\n\nParserATNSimulator.prototype.debug = false;\nParserATNSimulator.prototype.debug_closure = false;\nParserATNSimulator.prototype.debug_add = false;\nParserATNSimulator.prototype.debug_list_atn_decisions = false;\nParserATNSimulator.prototype.dfa_debug = false;\nParserATNSimulator.prototype.retry_debug = false;\n\n\nParserATNSimulator.prototype.reset = function() {\n};\n\nParserATNSimulator.prototype.adaptivePredict = function(input, decision, outerContext) {\n    if (this.debug || this.debug_list_atn_decisions) {\n        console.log(\"adaptivePredict decision \" + decision +\n                               \" exec LA(1)==\" + this.getLookaheadName(input) +\n                               \" line \" + input.LT(1).line + \":\" +\n                               input.LT(1).column);\n    }\n    this._input = input;\n    this._startIndex = input.index;\n    this._outerContext = outerContext;\n\n    var dfa = this.decisionToDFA[decision];\n    this._dfa = dfa;\n    var m = input.mark();\n    var index = input.index;\n\n    // Now we are certain to have a specific decision's DFA\n    // But, do we still need an initial state?\n    try {\n        var s0;\n        if (dfa.precedenceDfa) {\n            // the start state for a precedence DFA depends on the current\n            // parser precedence, and is provided by a DFA method.\n            s0 = dfa.getPrecedenceStartState(this.parser.getPrecedence());\n        } else {\n            // the start state for a \"regular\" DFA is just s0\n            s0 = dfa.s0;\n        }\n        if (s0===null) {\n            if (outerContext===null) {\n                outerContext = RuleContext.EMPTY;\n            }\n            if (this.debug || this.debug_list_atn_decisions) {\n                console.log(\"predictATN decision \" + dfa.decision +\n                                   \" exec LA(1)==\" + this.getLookaheadName(input) +\n                                   \", outerContext=\" + outerContext.toString(this.parser.ruleNames));\n            }\n\n            var fullCtx = false;\n            var s0_closure = this.computeStartState(dfa.atnStartState, RuleContext.EMPTY, fullCtx);\n\n            if( dfa.precedenceDfa) {\n                // If this is a precedence DFA, we use applyPrecedenceFilter\n                // to convert the computed start state to a precedence start\n                // state. We then use DFA.setPrecedenceStartState to set the\n                // appropriate start state for the precedence level rather\n                // than simply setting DFA.s0.\n                //\n                dfa.s0.configs = s0_closure; // not used for prediction but useful to know start configs anyway\n                s0_closure = this.applyPrecedenceFilter(s0_closure);\n                s0 = this.addDFAState(dfa, new DFAState(null, s0_closure));\n                dfa.setPrecedenceStartState(this.parser.getPrecedence(), s0);\n            } else {\n                s0 = this.addDFAState(dfa, new DFAState(null, s0_closure));\n                dfa.s0 = s0;\n            }\n        }\n        var alt = this.execATN(dfa, s0, input, index, outerContext);\n        if (this.debug) {\n            console.log(\"DFA after predictATN: \" + dfa.toString(this.parser.literalNames));\n        }\n        return alt;\n    } finally {\n        this._dfa = null;\n        this.mergeCache = null; // wack cache after each prediction\n        input.seek(index);\n        input.release(m);\n    }\n};\n// Performs ATN simulation to compute a predicted alternative based\n//  upon the remaining input, but also updates the DFA cache to avoid\n//  having to traverse the ATN again for the same input sequence.\n\n// There are some key conditions we're looking for after computing a new\n// set of ATN configs (proposed DFA state):\n      // if the set is empty, there is no viable alternative for current symbol\n      // does the state uniquely predict an alternative?\n      // does the state have a conflict that would prevent us from\n      //   putting it on the work list?\n\n// We also have some key operations to do:\n      // add an edge from previous DFA state to potentially new DFA state, D,\n      //   upon current symbol but only if adding to work list, which means in all\n      //   cases except no viable alternative (and possibly non-greedy decisions?)\n      // collecting predicates and adding semantic context to DFA accept states\n      // adding rule context to context-sensitive DFA accept states\n      // consuming an input symbol\n      // reporting a conflict\n      // reporting an ambiguity\n      // reporting a context sensitivity\n      // reporting insufficient predicates\n\n// cover these cases:\n//    dead end\n//    single alt\n//    single alt + preds\n//    conflict\n//    conflict + preds\n//\nParserATNSimulator.prototype.execATN = function(dfa, s0, input, startIndex, outerContext ) {\n    if (this.debug || this.debug_list_atn_decisions) {\n        console.log(\"execATN decision \" + dfa.decision +\n                \" exec LA(1)==\" + this.getLookaheadName(input) +\n                \" line \" + input.LT(1).line + \":\" + input.LT(1).column);\n    }\n    var alt;\n    var previousD = s0;\n\n    if (this.debug) {\n        console.log(\"s0 = \" + s0);\n    }\n    var t = input.LA(1);\n    while(true) { // while more work\n        var D = this.getExistingTargetState(previousD, t);\n        if(D===null) {\n            D = this.computeTargetState(dfa, previousD, t);\n        }\n        if(D===ATNSimulator.ERROR) {\n            // if any configs in previous dipped into outer context, that\n            // means that input up to t actually finished entry rule\n            // at least for SLL decision. Full LL doesn't dip into outer\n            // so don't need special case.\n            // We will get an error no matter what so delay until after\n            // decision; better error message. Also, no reachable target\n            // ATN states in SLL implies LL will also get nowhere.\n            // If conflict in states that dip out, choose min since we\n            // will get error no matter what.\n            var e = this.noViableAlt(input, outerContext, previousD.configs, startIndex);\n            input.seek(startIndex);\n            alt = this.getSynValidOrSemInvalidAltThatFinishedDecisionEntryRule(previousD.configs, outerContext);\n            if(alt!==ATN.INVALID_ALT_NUMBER) {\n                return alt;\n            } else {\n                throw e;\n            }\n        }\n        if(D.requiresFullContext && this.predictionMode !== PredictionMode.SLL) {\n            // IF PREDS, MIGHT RESOLVE TO SINGLE ALT => SLL (or syntax error)\n            var conflictingAlts = null;\n            if (D.predicates!==null) {\n                if (this.debug) {\n                    console.log(\"DFA state has preds in DFA sim LL failover\");\n                }\n                var conflictIndex = input.index;\n                if(conflictIndex !== startIndex) {\n                    input.seek(startIndex);\n                }\n                conflictingAlts = this.evalSemanticContext(D.predicates, outerContext, true);\n                if (conflictingAlts.length===1) {\n                    if(this.debug) {\n                        console.log(\"Full LL avoided\");\n                    }\n                    return conflictingAlts.minValue();\n                }\n                if (conflictIndex !== startIndex) {\n                    // restore the index so reporting the fallback to full\n                    // context occurs with the index at the correct spot\n                    input.seek(conflictIndex);\n                }\n            }\n            if (this.dfa_debug) {\n                console.log(\"ctx sensitive state \" + outerContext +\" in \" + D);\n            }\n            var fullCtx = true;\n            var s0_closure = this.computeStartState(dfa.atnStartState, outerContext, fullCtx);\n            this.reportAttemptingFullContext(dfa, conflictingAlts, D.configs, startIndex, input.index);\n            alt = this.execATNWithFullContext(dfa, D, s0_closure, input, startIndex, outerContext);\n            return alt;\n        }\n        if (D.isAcceptState) {\n            if (D.predicates===null) {\n                return D.prediction;\n            }\n            var stopIndex = input.index;\n            input.seek(startIndex);\n            var alts = this.evalSemanticContext(D.predicates, outerContext, true);\n            if (alts.length===0) {\n                throw this.noViableAlt(input, outerContext, D.configs, startIndex);\n            } else if (alts.length===1) {\n                return alts.minValue();\n            } else {\n                // report ambiguity after predicate evaluation to make sure the correct set of ambig alts is reported.\n                this.reportAmbiguity(dfa, D, startIndex, stopIndex, false, alts, D.configs);\n                return alts.minValue();\n            }\n        }\n        previousD = D;\n\n        if (t !== Token.EOF) {\n            input.consume();\n            t = input.LA(1);\n        }\n    }\n};\n//\n// Get an existing target state for an edge in the DFA. If the target state\n// for the edge has not yet been computed or is otherwise not available,\n// this method returns {@code null}.\n//\n// @param previousD The current DFA state\n// @param t The next input symbol\n// @return The existing target DFA state for the given input symbol\n// {@code t}, or {@code null} if the target state for this edge is not\n// already cached\n//\nParserATNSimulator.prototype.getExistingTargetState = function(previousD, t) {\n    var edges = previousD.edges;\n    if (edges===null) {\n        return null;\n    } else {\n        return edges[t + 1] || null;\n    }\n};\n//\n// Compute a target state for an edge in the DFA, and attempt to add the\n// computed state and corresponding edge to the DFA.\n//\n// @param dfa The DFA\n// @param previousD The current DFA state\n// @param t The next input symbol\n//\n// @return The computed target DFA state for the given input symbol\n// {@code t}. If {@code t} does not lead to a valid DFA state, this method\n// returns {@link //ERROR}.\n//\nParserATNSimulator.prototype.computeTargetState = function(dfa, previousD, t) {\n   var reach = this.computeReachSet(previousD.configs, t, false);\n    if(reach===null) {\n        this.addDFAEdge(dfa, previousD, t, ATNSimulator.ERROR);\n        return ATNSimulator.ERROR;\n    }\n    // create new target state; we'll add to DFA after it's complete\n    var D = new DFAState(null, reach);\n\n    var predictedAlt = this.getUniqueAlt(reach);\n\n    if (this.debug) {\n        var altSubSets = PredictionMode.getConflictingAltSubsets(reach);\n        console.log(\"SLL altSubSets=\" + Utils.arrayToString(altSubSets) +\n                    \", previous=\" + previousD.configs +\n                    \", configs=\" + reach +\n                    \", predict=\" + predictedAlt +\n                    \", allSubsetsConflict=\" +\n                    PredictionMode.allSubsetsConflict(altSubSets) + \", conflictingAlts=\" +\n                    this.getConflictingAlts(reach));\n    }\n    if (predictedAlt!==ATN.INVALID_ALT_NUMBER) {\n        // NO CONFLICT, UNIQUELY PREDICTED ALT\n        D.isAcceptState = true;\n        D.configs.uniqueAlt = predictedAlt;\n        D.prediction = predictedAlt;\n    } else if (PredictionMode.hasSLLConflictTerminatingPrediction(this.predictionMode, reach)) {\n        // MORE THAN ONE VIABLE ALTERNATIVE\n        D.configs.conflictingAlts = this.getConflictingAlts(reach);\n        D.requiresFullContext = true;\n        // in SLL-only mode, we will stop at this state and return the minimum alt\n        D.isAcceptState = true;\n        D.prediction = D.configs.conflictingAlts.minValue();\n    }\n    if (D.isAcceptState && D.configs.hasSemanticContext) {\n        this.predicateDFAState(D, this.atn.getDecisionState(dfa.decision));\n        if( D.predicates!==null) {\n            D.prediction = ATN.INVALID_ALT_NUMBER;\n        }\n    }\n    // all adds to dfa are done after we've created full D state\n    D = this.addDFAEdge(dfa, previousD, t, D);\n    return D;\n};\n\nParserATNSimulator.prototype.predicateDFAState = function(dfaState, decisionState) {\n    // We need to test all predicates, even in DFA states that\n    // uniquely predict alternative.\n    var nalts = decisionState.transitions.length;\n    // Update DFA so reach becomes accept state with (predicate,alt)\n    // pairs if preds found for conflicting alts\n    var altsToCollectPredsFrom = this.getConflictingAltsOrUniqueAlt(dfaState.configs);\n    var altToPred = this.getPredsForAmbigAlts(altsToCollectPredsFrom, dfaState.configs, nalts);\n    if (altToPred!==null) {\n        dfaState.predicates = this.getPredicatePredictions(altsToCollectPredsFrom, altToPred);\n        dfaState.prediction = ATN.INVALID_ALT_NUMBER; // make sure we use preds\n    } else {\n        // There are preds in configs but they might go away\n        // when OR'd together like {p}? || NONE == NONE. If neither\n        // alt has preds, resolve to min alt\n        dfaState.prediction = altsToCollectPredsFrom.minValue();\n    }\n};\n\n// comes back with reach.uniqueAlt set to a valid alt\nParserATNSimulator.prototype.execATNWithFullContext = function(dfa, D, // how far we got before failing over\n                                     s0,\n                                     input,\n                                     startIndex,\n                                     outerContext) {\n    if (this.debug || this.debug_list_atn_decisions) {\n        console.log(\"execATNWithFullContext \"+s0);\n    }\n    var fullCtx = true;\n    var foundExactAmbig = false;\n    var reach = null;\n    var previous = s0;\n    input.seek(startIndex);\n    var t = input.LA(1);\n    var predictedAlt = -1;\n    while (true) { // while more work\n        reach = this.computeReachSet(previous, t, fullCtx);\n        if (reach===null) {\n            // if any configs in previous dipped into outer context, that\n            // means that input up to t actually finished entry rule\n            // at least for LL decision. Full LL doesn't dip into outer\n            // so don't need special case.\n            // We will get an error no matter what so delay until after\n            // decision; better error message. Also, no reachable target\n            // ATN states in SLL implies LL will also get nowhere.\n            // If conflict in states that dip out, choose min since we\n            // will get error no matter what.\n            var e = this.noViableAlt(input, outerContext, previous, startIndex);\n            input.seek(startIndex);\n            var alt = this.getSynValidOrSemInvalidAltThatFinishedDecisionEntryRule(previous, outerContext);\n            if(alt!==ATN.INVALID_ALT_NUMBER) {\n                return alt;\n            } else {\n                throw e;\n            }\n        }\n        var altSubSets = PredictionMode.getConflictingAltSubsets(reach);\n        if(this.debug) {\n            console.log(\"LL altSubSets=\" + altSubSets + \", predict=\" +\n                  PredictionMode.getUniqueAlt(altSubSets) + \", resolvesToJustOneViableAlt=\" +\n                  PredictionMode.resolvesToJustOneViableAlt(altSubSets));\n        }\n        reach.uniqueAlt = this.getUniqueAlt(reach);\n        // unique prediction?\n        if(reach.uniqueAlt!==ATN.INVALID_ALT_NUMBER) {\n            predictedAlt = reach.uniqueAlt;\n            break;\n        } else if (this.predictionMode !== PredictionMode.LL_EXACT_AMBIG_DETECTION) {\n            predictedAlt = PredictionMode.resolvesToJustOneViableAlt(altSubSets);\n            if(predictedAlt !== ATN.INVALID_ALT_NUMBER) {\n                break;\n            }\n        } else {\n            // In exact ambiguity mode, we never try to terminate early.\n            // Just keeps scarfing until we know what the conflict is\n            if (PredictionMode.allSubsetsConflict(altSubSets) && PredictionMode.allSubsetsEqual(altSubSets)) {\n                foundExactAmbig = true;\n                predictedAlt = PredictionMode.getSingleViableAlt(altSubSets);\n                break;\n            }\n            // else there are multiple non-conflicting subsets or\n            // we're not sure what the ambiguity is yet.\n            // So, keep going.\n        }\n        previous = reach;\n        if( t !== Token.EOF) {\n            input.consume();\n            t = input.LA(1);\n        }\n    }\n    // If the configuration set uniquely predicts an alternative,\n    // without conflict, then we know that it's a full LL decision\n    // not SLL.\n    if (reach.uniqueAlt !== ATN.INVALID_ALT_NUMBER ) {\n        this.reportContextSensitivity(dfa, predictedAlt, reach, startIndex, input.index);\n        return predictedAlt;\n    }\n    // We do not check predicates here because we have checked them\n    // on-the-fly when doing full context prediction.\n\n    //\n    // In non-exact ambiguity detection mode, we might\tactually be able to\n    // detect an exact ambiguity, but I'm not going to spend the cycles\n    // needed to check. We only emit ambiguity warnings in exact ambiguity\n    // mode.\n    //\n    // For example, we might know that we have conflicting configurations.\n    // But, that does not mean that there is no way forward without a\n    // conflict. It's possible to have nonconflicting alt subsets as in:\n\n    // altSubSets=[{1, 2}, {1, 2}, {1}, {1, 2}]\n\n    // from\n    //\n    //    [(17,1,[5 $]), (13,1,[5 10 $]), (21,1,[5 10 $]), (11,1,[$]),\n    //     (13,2,[5 10 $]), (21,2,[5 10 $]), (11,2,[$])]\n    //\n    // In this case, (17,1,[5 $]) indicates there is some next sequence that\n    // would resolve this without conflict to alternative 1. Any other viable\n    // next sequence, however, is associated with a conflict.  We stop\n    // looking for input because no amount of further lookahead will alter\n    // the fact that we should predict alternative 1.  We just can't say for\n    // sure that there is an ambiguity without looking further.\n\n    this.reportAmbiguity(dfa, D, startIndex, input.index, foundExactAmbig, null, reach);\n\n    return predictedAlt;\n};\n\nParserATNSimulator.prototype.computeReachSet = function(closure, t, fullCtx) {\n    if (this.debug) {\n        console.log(\"in computeReachSet, starting closure: \" + closure);\n    }\n    if( this.mergeCache===null) {\n        this.mergeCache = new DoubleDict();\n    }\n    var intermediate = new ATNConfigSet(fullCtx);\n\n    // Configurations already in a rule stop state indicate reaching the end\n    // of the decision rule (local context) or end of the start rule (full\n    // context). Once reached, these configurations are never updated by a\n    // closure operation, so they are handled separately for the performance\n    // advantage of having a smaller intermediate set when calling closure.\n    //\n    // For full-context reach operations, separate handling is required to\n    // ensure that the alternative matching the longest overall sequence is\n    // chosen when multiple such configurations can match the input.\n\n    var skippedStopStates = null;\n\n    // First figure out where we can reach on input t\n    for (var i=0; i<closure.items.length;i++) {\n        var c = closure.items[i];\n        if(this.debug_add) {\n            console.log(\"testing \" + this.getTokenName(t) + \" at \" + c);\n        }\n        if (c.state instanceof RuleStopState) {\n            if (fullCtx || t === Token.EOF) {\n                if (skippedStopStates===null) {\n                    skippedStopStates = [];\n                }\n                skippedStopStates.push(c);\n                if(this.debug_add) {\n                    console.log(\"added \" + c + \" to skippedStopStates\");\n                }\n            }\n            continue;\n        }\n        for(var j=0;j<c.state.transitions.length;j++) {\n            var trans = c.state.transitions[j];\n            var target = this.getReachableTarget(trans, t);\n            if (target!==null) {\n                var cfg = new ATNConfig({state:target}, c);\n                intermediate.add(cfg, this.mergeCache);\n                if(this.debug_add) {\n                    console.log(\"added \" + cfg + \" to intermediate\");\n                }\n            }\n        }\n    }\n    // Now figure out where the reach operation can take us...\n    var reach = null;\n\n    // This block optimizes the reach operation for intermediate sets which\n    // trivially indicate a termination state for the overall\n    // adaptivePredict operation.\n    //\n    // The conditions assume that intermediate\n    // contains all configurations relevant to the reach set, but this\n    // condition is not true when one or more configurations have been\n    // withheld in skippedStopStates, or when the current symbol is EOF.\n    //\n    if (skippedStopStates===null && t!==Token.EOF) {\n        if (intermediate.items.length===1) {\n            // Don't pursue the closure if there is just one state.\n            // It can only have one alternative; just add to result\n            // Also don't pursue the closure if there is unique alternative\n            // among the configurations.\n            reach = intermediate;\n        } else if (this.getUniqueAlt(intermediate)!==ATN.INVALID_ALT_NUMBER) {\n            // Also don't pursue the closure if there is unique alternative\n            // among the configurations.\n            reach = intermediate;\n        }\n    }\n    // If the reach set could not be trivially determined, perform a closure\n    // operation on the intermediate set to compute its initial value.\n    //\n    if (reach===null) {\n        reach = new ATNConfigSet(fullCtx);\n        var closureBusy = new Set();\n        var treatEofAsEpsilon = t === Token.EOF;\n        for (var k=0; k<intermediate.items.length;k++) {\n            this.closure(intermediate.items[k], reach, closureBusy, false, fullCtx, treatEofAsEpsilon);\n        }\n    }\n    if (t === Token.EOF) {\n        // After consuming EOF no additional input is possible, so we are\n        // only interested in configurations which reached the end of the\n        // decision rule (local context) or end of the start rule (full\n        // context). Update reach to contain only these configurations. This\n        // handles both explicit EOF transitions in the grammar and implicit\n        // EOF transitions following the end of the decision or start rule.\n        //\n        // When reach==intermediate, no closure operation was performed. In\n        // this case, removeAllConfigsNotInRuleStopState needs to check for\n        // reachable rule stop states as well as configurations already in\n        // a rule stop state.\n        //\n        // This is handled before the configurations in skippedStopStates,\n        // because any configurations potentially added from that list are\n        // already guaranteed to meet this condition whether or not it's\n        // required.\n        //\n        reach = this.removeAllConfigsNotInRuleStopState(reach, reach === intermediate);\n    }\n    // If skippedStopStates!==null, then it contains at least one\n    // configuration. For full-context reach operations, these\n    // configurations reached the end of the start rule, in which case we\n    // only add them back to reach if no configuration during the current\n    // closure operation reached such a state. This ensures adaptivePredict\n    // chooses an alternative matching the longest overall sequence when\n    // multiple alternatives are viable.\n    //\n    if (skippedStopStates!==null && ( (! fullCtx) || (! PredictionMode.hasConfigInRuleStopState(reach)))) {\n        for (var l=0; l<skippedStopStates.length;l++) {\n            reach.add(skippedStopStates[l], this.mergeCache);\n        }\n    }\n    if (reach.items.length===0) {\n        return null;\n    } else {\n        return reach;\n    }\n};\n//\n// Return a configuration set containing only the configurations from\n// {@code configs} which are in a {@link RuleStopState}. If all\n// configurations in {@code configs} are already in a rule stop state, this\n// method simply returns {@code configs}.\n//\n// <p>When {@code lookToEndOfRule} is true, this method uses\n// {@link ATN//nextTokens} for each configuration in {@code configs} which is\n// not already in a rule stop state to see if a rule stop state is reachable\n// from the configuration via epsilon-only transitions.</p>\n//\n// @param configs the configuration set to update\n// @param lookToEndOfRule when true, this method checks for rule stop states\n// reachable by epsilon-only transitions from each configuration in\n// {@code configs}.\n//\n// @return {@code configs} if all configurations in {@code configs} are in a\n// rule stop state, otherwise return a new configuration set containing only\n// the configurations from {@code configs} which are in a rule stop state\n//\nParserATNSimulator.prototype.removeAllConfigsNotInRuleStopState = function(configs, lookToEndOfRule) {\n    if (PredictionMode.allConfigsInRuleStopStates(configs)) {\n        return configs;\n    }\n    var result = new ATNConfigSet(configs.fullCtx);\n    for(var i=0; i<configs.items.length;i++) {\n        var config = configs.items[i];\n        if (config.state instanceof RuleStopState) {\n            result.add(config, this.mergeCache);\n            continue;\n        }\n        if (lookToEndOfRule && config.state.epsilonOnlyTransitions) {\n            var nextTokens = this.atn.nextTokens(config.state);\n            if (nextTokens.contains(Token.EPSILON)) {\n                var endOfRuleState = this.atn.ruleToStopState[config.state.ruleIndex];\n                result.add(new ATNConfig({state:endOfRuleState}, config), this.mergeCache);\n            }\n        }\n    }\n    return result;\n};\n\nParserATNSimulator.prototype.computeStartState = function(p, ctx, fullCtx) {\n    // always at least the implicit call to start rule\n    var initialContext = predictionContextFromRuleContext(this.atn, ctx);\n    var configs = new ATNConfigSet(fullCtx);\n    for(var i=0;i<p.transitions.length;i++) {\n        var target = p.transitions[i].target;\n        var c = new ATNConfig({ state:target, alt:i+1, context:initialContext }, null);\n        var closureBusy = new Set();\n        this.closure(c, configs, closureBusy, true, fullCtx, false);\n    }\n    return configs;\n};\n\n//\n// This method transforms the start state computed by\n// {@link //computeStartState} to the special start state used by a\n// precedence DFA for a particular precedence value. The transformation\n// process applies the following changes to the start state's configuration\n// set.\n//\n// <ol>\n// <li>Evaluate the precedence predicates for each configuration using\n// {@link SemanticContext//evalPrecedence}.</li>\n// <li>Remove all configurations which predict an alternative greater than\n// 1, for which another configuration that predicts alternative 1 is in the\n// same ATN state with the same prediction context. This transformation is\n// valid for the following reasons:\n// <ul>\n// <li>The closure block cannot contain any epsilon transitions which bypass\n// the body of the closure, so all states reachable via alternative 1 are\n// part of the precedence alternatives of the transformed left-recursive\n// rule.</li>\n// <li>The \"primary\" portion of a left recursive rule cannot contain an\n// epsilon transition, so the only way an alternative other than 1 can exist\n// in a state that is also reachable via alternative 1 is by nesting calls\n// to the left-recursive rule, with the outer calls not being at the\n// preferred precedence level.</li>\n// </ul>\n// </li>\n// </ol>\n//\n// <p>\n// The prediction context must be considered by this filter to address\n// situations like the following.\n// </p>\n// <code>\n// <pre>\n// grammar TA;\n// prog: statement* EOF;\n// statement: letterA | statement letterA 'b' ;\n// letterA: 'a';\n// </pre>\n// </code>\n// <p>\n// If the above grammar, the ATN state immediately before the token\n// reference {@code 'a'} in {@code letterA} is reachable from the left edge\n// of both the primary and closure blocks of the left-recursive rule\n// {@code statement}. The prediction context associated with each of these\n// configurations distinguishes between them, and prevents the alternative\n// which stepped out to {@code prog} (and then back in to {@code statement}\n// from being eliminated by the filter.\n// </p>\n//\n// @param configs The configuration set computed by\n// {@link //computeStartState} as the start state for the DFA.\n// @return The transformed configuration set representing the start state\n// for a precedence DFA at a particular precedence level (determined by\n// calling {@link Parser//getPrecedence}).\n//\nParserATNSimulator.prototype.applyPrecedenceFilter = function(configs) {\n\tvar config;\n\tvar statesFromAlt1 = [];\n    var configSet = new ATNConfigSet(configs.fullCtx);\n    for(var i=0; i<configs.items.length; i++) {\n        config = configs.items[i];\n        // handle alt 1 first\n        if (config.alt !== 1) {\n            continue;\n        }\n        var updatedContext = config.semanticContext.evalPrecedence(this.parser, this._outerContext);\n        if (updatedContext===null) {\n            // the configuration was eliminated\n            continue;\n        }\n        statesFromAlt1[config.state.stateNumber] = config.context;\n        if (updatedContext !== config.semanticContext) {\n            configSet.add(new ATNConfig({semanticContext:updatedContext}, config), this.mergeCache);\n        } else {\n            configSet.add(config, this.mergeCache);\n        }\n    }\n    for(i=0; i<configs.items.length; i++) {\n        config = configs.items[i];\n        if (config.alt === 1) {\n            // already handled\n            continue;\n        }\n        // In the future, this elimination step could be updated to also\n        // filter the prediction context for alternatives predicting alt>1\n        // (basically a graph subtraction algorithm).\n\t\tif (!config.precedenceFilterSuppressed) {\n            var context = statesFromAlt1[config.state.stateNumber] || null;\n            if (context!==null && context.equals(config.context)) {\n                // eliminated\n                continue;\n            }\n\t\t}\n        configSet.add(config, this.mergeCache);\n    }\n    return configSet;\n};\n\nParserATNSimulator.prototype.getReachableTarget = function(trans, ttype) {\n    if (trans.matches(ttype, 0, this.atn.maxTokenType)) {\n        return trans.target;\n    } else {\n        return null;\n    }\n};\n\nParserATNSimulator.prototype.getPredsForAmbigAlts = function(ambigAlts, configs, nalts) {\n    // REACH=[1|1|[]|0:0, 1|2|[]|0:1]\n    // altToPred starts as an array of all null contexts. The entry at index i\n    // corresponds to alternative i. altToPred[i] may have one of three values:\n    //   1. null: no ATNConfig c is found such that c.alt==i\n    //   2. SemanticContext.NONE: At least one ATNConfig c exists such that\n    //      c.alt==i and c.semanticContext==SemanticContext.NONE. In other words,\n    //      alt i has at least one unpredicated config.\n    //   3. Non-NONE Semantic Context: There exists at least one, and for all\n    //      ATNConfig c such that c.alt==i, c.semanticContext!=SemanticContext.NONE.\n    //\n    // From this, it is clear that NONE||anything==NONE.\n    //\n    var altToPred = [];\n    for(var i=0;i<configs.items.length;i++) {\n        var c = configs.items[i];\n        if(ambigAlts.contains( c.alt )) {\n            altToPred[c.alt] = SemanticContext.orContext(altToPred[c.alt] || null, c.semanticContext);\n        }\n    }\n    var nPredAlts = 0;\n    for (i =1;i< nalts+1;i++) {\n        var pred = altToPred[i] || null;\n        if (pred===null) {\n            altToPred[i] = SemanticContext.NONE;\n        } else if (pred !== SemanticContext.NONE) {\n            nPredAlts += 1;\n        }\n    }\n    // nonambig alts are null in altToPred\n    if (nPredAlts===0) {\n        altToPred = null;\n    }\n    if (this.debug) {\n        console.log(\"getPredsForAmbigAlts result \" + Utils.arrayToString(altToPred));\n    }\n    return altToPred;\n};\n\nParserATNSimulator.prototype.getPredicatePredictions = function(ambigAlts, altToPred) {\n    var pairs = [];\n    var containsPredicate = false;\n    for (var i=1; i<altToPred.length;i++) {\n        var pred = altToPred[i];\n        // unpredicated is indicated by SemanticContext.NONE\n        if( ambigAlts!==null && ambigAlts.contains( i )) {\n            pairs.push(new PredPrediction(pred, i));\n        }\n        if (pred !== SemanticContext.NONE) {\n            containsPredicate = true;\n        }\n    }\n    if (! containsPredicate) {\n        return null;\n    }\n    return pairs;\n};\n\n//\n// This method is used to improve the localization of error messages by\n// choosing an alternative rather than throwing a\n// {@link NoViableAltException} in particular prediction scenarios where the\n// {@link //ERROR} state was reached during ATN simulation.\n//\n// <p>\n// The default implementation of this method uses the following\n// algorithm to identify an ATN configuration which successfully parsed the\n// decision entry rule. Choosing such an alternative ensures that the\n// {@link ParserRuleContext} returned by the calling rule will be complete\n// and valid, and the syntax error will be reported later at a more\n// localized location.</p>\n//\n// <ul>\n// <li>If a syntactically valid path or paths reach the end of the decision rule and\n// they are semantically valid if predicated, return the min associated alt.</li>\n// <li>Else, if a semantically invalid but syntactically valid path exist\n// or paths exist, return the minimum associated alt.\n// </li>\n// <li>Otherwise, return {@link ATN//INVALID_ALT_NUMBER}.</li>\n// </ul>\n//\n// <p>\n// In some scenarios, the algorithm described above could predict an\n// alternative which will result in a {@link FailedPredicateException} in\n// the parser. Specifically, this could occur if the <em>only</em> configuration\n// capable of successfully parsing to the end of the decision rule is\n// blocked by a semantic predicate. By choosing this alternative within\n// {@link //adaptivePredict} instead of throwing a\n// {@link NoViableAltException}, the resulting\n// {@link FailedPredicateException} in the parser will identify the specific\n// predicate which is preventing the parser from successfully parsing the\n// decision rule, which helps developers identify and correct logic errors\n// in semantic predicates.\n// </p>\n//\n// @param configs The ATN configurations which were valid immediately before\n// the {@link //ERROR} state was reached\n// @param outerContext The is the \\gamma_0 initial parser context from the paper\n// or the parser stack at the instant before prediction commences.\n//\n// @return The value to return from {@link //adaptivePredict}, or\n// {@link ATN//INVALID_ALT_NUMBER} if a suitable alternative was not\n// identified and {@link //adaptivePredict} should report an error instead.\n//\nParserATNSimulator.prototype.getSynValidOrSemInvalidAltThatFinishedDecisionEntryRule = function(configs, outerContext) {\n    var cfgs = this.splitAccordingToSemanticValidity(configs, outerContext);\n    var semValidConfigs = cfgs[0];\n    var semInvalidConfigs = cfgs[1];\n    var alt = this.getAltThatFinishedDecisionEntryRule(semValidConfigs);\n    if (alt!==ATN.INVALID_ALT_NUMBER) { // semantically/syntactically viable path exists\n        return alt;\n    }\n    // Is there a syntactically valid path with a failed pred?\n    if (semInvalidConfigs.items.length>0) {\n        alt = this.getAltThatFinishedDecisionEntryRule(semInvalidConfigs);\n        if (alt!==ATN.INVALID_ALT_NUMBER) { // syntactically viable path exists\n            return alt;\n        }\n    }\n    return ATN.INVALID_ALT_NUMBER;\n};\n\nParserATNSimulator.prototype.getAltThatFinishedDecisionEntryRule = function(configs) {\n    var alts = [];\n    for(var i=0;i<configs.items.length; i++) {\n        var c = configs.items[i];\n        if (c.reachesIntoOuterContext>0 || ((c.state instanceof RuleStopState) && c.context.hasEmptyPath())) {\n            if(alts.indexOf(c.alt)<0) {\n                alts.push(c.alt);\n            }\n        }\n    }\n    if (alts.length===0) {\n        return ATN.INVALID_ALT_NUMBER;\n    } else {\n        return Math.min.apply(null, alts);\n    }\n};\n// Walk the list of configurations and split them according to\n//  those that have preds evaluating to true/false.  If no pred, assume\n//  true pred and include in succeeded set.  Returns Pair of sets.\n//\n//  Create a new set so as not to alter the incoming parameter.\n//\n//  Assumption: the input stream has been restored to the starting point\n//  prediction, which is where predicates need to evaluate.\n//\nParserATNSimulator.prototype.splitAccordingToSemanticValidity = function( configs, outerContext) {\n    var succeeded = new ATNConfigSet(configs.fullCtx);\n    var failed = new ATNConfigSet(configs.fullCtx);\n    for(var i=0;i<configs.items.length; i++) {\n        var c = configs.items[i];\n        if (c.semanticContext !== SemanticContext.NONE) {\n            var predicateEvaluationResult = c.semanticContext.evaluate(this.parser, outerContext);\n            if (predicateEvaluationResult) {\n                succeeded.add(c);\n            } else {\n                failed.add(c);\n            }\n        } else {\n            succeeded.add(c);\n        }\n    }\n    return [succeeded, failed];\n};\n\n// Look through a list of predicate/alt pairs, returning alts for the\n//  pairs that win. A {@code NONE} predicate indicates an alt containing an\n//  unpredicated config which behaves as \"always true.\" If !complete\n//  then we stop at the first predicate that evaluates to true. This\n//  includes pairs with null predicates.\n//\nParserATNSimulator.prototype.evalSemanticContext = function(predPredictions, outerContext, complete) {\n    var predictions = new BitSet();\n    for(var i=0;i<predPredictions.length;i++) {\n    \tvar pair = predPredictions[i];\n        if (pair.pred === SemanticContext.NONE) {\n            predictions.add(pair.alt);\n            if (! complete) {\n                break;\n            }\n            continue;\n        }\n        var predicateEvaluationResult = pair.pred.evaluate(this.parser, outerContext);\n        if (this.debug || this.dfa_debug) {\n            console.log(\"eval pred \" + pair + \"=\" + predicateEvaluationResult);\n        }\n        if (predicateEvaluationResult) {\n            if (this.debug || this.dfa_debug) {\n                console.log(\"PREDICT \" + pair.alt);\n            }\n            predictions.add(pair.alt);\n            if (! complete) {\n                break;\n            }\n        }\n    }\n    return predictions;\n};\n\n// TODO: If we are doing predicates, there is no point in pursuing\n//     closure operations if we reach a DFA state that uniquely predicts\n//     alternative. We will not be caching that DFA state and it is a\n//     waste to pursue the closure. Might have to advance when we do\n//     ambig detection thought :(\n//\n\nParserATNSimulator.prototype.closure = function(config, configs, closureBusy, collectPredicates, fullCtx, treatEofAsEpsilon) {\n    var initialDepth = 0;\n    this.closureCheckingStopState(config, configs, closureBusy, collectPredicates,\n                             fullCtx, initialDepth, treatEofAsEpsilon);\n};\n\n\nParserATNSimulator.prototype.closureCheckingStopState = function(config, configs, closureBusy, collectPredicates, fullCtx, depth, treatEofAsEpsilon) {\n    if (this.debug || this.debug_closure) {\n        console.log(\"closure(\" + config.toString(this.parser,true) + \")\");\n        // console.log(\"configs(\" + configs.toString() + \")\");\n        if(config.reachesIntoOuterContext>50) {\n            throw \"problem\";\n        }\n    }\n    if (config.state instanceof RuleStopState) {\n        // We hit rule end. If we have context info, use it\n        // run thru all possible stack tops in ctx\n        if (! config.context.isEmpty()) {\n            for ( var i =0; i<config.context.length; i++) {\n                if (config.context.getReturnState(i) === PredictionContext.EMPTY_RETURN_STATE) {\n                    if (fullCtx) {\n                        configs.add(new ATNConfig({state:config.state, context:PredictionContext.EMPTY}, config), this.mergeCache);\n                        continue;\n                    } else {\n                        // we have no context info, just chase follow links (if greedy)\n                        if (this.debug) {\n                            console.log(\"FALLING off rule \" + this.getRuleName(config.state.ruleIndex));\n                        }\n                        this.closure_(config, configs, closureBusy, collectPredicates,\n                                 fullCtx, depth, treatEofAsEpsilon);\n                    }\n                    continue;\n                }\n                var returnState = this.atn.states[config.context.getReturnState(i)];\n                var newContext = config.context.getParent(i); // \"pop\" return state\n                var parms = {state:returnState, alt:config.alt, context:newContext, semanticContext:config.semanticContext};\n                var c = new ATNConfig(parms, null);\n                // While we have context to pop back from, we may have\n                // gotten that context AFTER having falling off a rule.\n                // Make sure we track that we are now out of context.\n                c.reachesIntoOuterContext = config.reachesIntoOuterContext;\n                this.closureCheckingStopState(c, configs, closureBusy, collectPredicates, fullCtx, depth - 1, treatEofAsEpsilon);\n            }\n            return;\n        } else if( fullCtx) {\n            // reached end of start rule\n            configs.add(config, this.mergeCache);\n            return;\n        } else {\n            // else if we have no context info, just chase follow links (if greedy)\n            if (this.debug) {\n                console.log(\"FALLING off rule \" + this.getRuleName(config.state.ruleIndex));\n            }\n        }\n    }\n    this.closure_(config, configs, closureBusy, collectPredicates, fullCtx, depth, treatEofAsEpsilon);\n};\n\n\n// Do the actual work of walking epsilon edges//\nParserATNSimulator.prototype.closure_ = function(config, configs, closureBusy, collectPredicates, fullCtx, depth, treatEofAsEpsilon) {\n    var p = config.state;\n    // optimization\n    if (! p.epsilonOnlyTransitions) {\n        configs.add(config, this.mergeCache);\n        // make sure to not return here, because EOF transitions can act as\n        // both epsilon transitions and non-epsilon transitions.\n    }\n    for(var i = 0;i<p.transitions.length; i++) {\n        if(i==0 && this.canDropLoopEntryEdgeInLeftRecursiveRule(config))\n            continue;\n\n        var t = p.transitions[i];\n        var continueCollecting = collectPredicates && !(t instanceof ActionTransition);\n        var c = this.getEpsilonTarget(config, t, continueCollecting, depth === 0, fullCtx, treatEofAsEpsilon);\n        if (c!==null) {\n            var newDepth = depth;\n            if ( config.state instanceof RuleStopState) {\n                // target fell off end of rule; mark resulting c as having dipped into outer context\n                // We can't get here if incoming config was rule stop and we had context\n                // track how far we dip into outer context.  Might\n                // come in handy and we avoid evaluating context dependent\n                // preds if this is > 0.\n\t\t\t\tif (this._dfa !== null && this._dfa.precedenceDfa) {\n\t\t\t\t\tif (t.outermostPrecedenceReturn === this._dfa.atnStartState.ruleIndex) {\n\t\t\t\t\t\tc.precedenceFilterSuppressed = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n                c.reachesIntoOuterContext += 1;\n                if (closureBusy.add(c)!==c) {\n                    // avoid infinite recursion for right-recursive rules\n                    continue;\n                }\n                configs.dipsIntoOuterContext = true; // TODO: can remove? only care when we add to set per middle of this method\n                newDepth -= 1;\n                if (this.debug) {\n                    console.log(\"dips into outer ctx: \" + c);\n                }\n            } else {\n                if (!t.isEpsilon && closureBusy.add(c)!==c){\n                    // avoid infinite recursion for EOF* and EOF+\n                    continue;\n                }\n                if (t instanceof RuleTransition) {\n                    // latch when newDepth goes negative - once we step out of the entry context we can't return\n                    if (newDepth >= 0) {\n                        newDepth += 1;\n                    }\n                }\n            }\n            this.closureCheckingStopState(c, configs, closureBusy, continueCollecting, fullCtx, newDepth, treatEofAsEpsilon);\n        }\n    }\n};\n\n\nParserATNSimulator.prototype.canDropLoopEntryEdgeInLeftRecursiveRule = function(config) {\n    // return False\n    var p = config.state;\n    // First check to see if we are in StarLoopEntryState generated during\n    // left-recursion elimination. For efficiency, also check if\n    // the context has an empty stack case. If so, it would mean\n    // global FOLLOW so we can't perform optimization\n    // Are we the special loop entry/exit state? or SLL wildcard\n    if(p.stateType != ATNState.STAR_LOOP_ENTRY)\n        return false;\n    if(p.stateType != ATNState.STAR_LOOP_ENTRY || !p.isPrecedenceDecision ||\n           config.context.isEmpty() || config.context.hasEmptyPath())\n        return false;\n\n    // Require all return states to return back to the same rule that p is in.\n    var numCtxs = config.context.length;\n    for(var i=0; i<numCtxs; i++) { // for each stack context\n        var returnState = this.atn.states[config.context.getReturnState(i)];\n        if (returnState.ruleIndex != p.ruleIndex)\n            return false;\n    }\n\n    var decisionStartState = p.transitions[0].target;\n    var blockEndStateNum = decisionStartState.endState.stateNumber;\n    var blockEndState = this.atn.states[blockEndStateNum];\n\n    // Verify that the top of each stack context leads to loop entry/exit\n    // state through epsilon edges and w/o leaving rule.\n    for(var i=0; i<numCtxs; i++) { // for each stack context\n        var returnStateNumber = config.context.getReturnState(i);\n        var returnState = this.atn.states[returnStateNumber];\n        // all states must have single outgoing epsilon edge\n        if (returnState.transitions.length != 1 || !returnState.transitions[0].isEpsilon)\n            return false;\n\n        // Look for prefix op case like 'not expr', (' type ')' expr\n        var returnStateTarget = returnState.transitions[0].target;\n        if ( returnState.stateType == ATNState.BLOCK_END && returnStateTarget == p )\n            continue;\n\n        // Look for 'expr op expr' or case where expr's return state is block end\n        // of (...)* internal block; the block end points to loop back\n        // which points to p but we don't need to check that\n        if ( returnState == blockEndState )\n            continue;\n\n        // Look for ternary expr ? expr : expr. The return state points at block end,\n        // which points at loop entry state\n        if ( returnStateTarget == blockEndState )\n            continue;\n\n        // Look for complex prefix 'between expr and expr' case where 2nd expr's\n        // return state points at block end state of (...)* internal block\n        if (returnStateTarget.stateType == ATNState.BLOCK_END && returnStateTarget.transitions.length == 1\n                && returnStateTarget.transitions[0].isEpsilon && returnStateTarget.transitions[0].target == p)\n            continue;\n\n        // anything else ain't conforming\n        return false;\n    }\n    return true;\n};\n\n\nParserATNSimulator.prototype.getRuleName = function( index) {\n    if (this.parser!==null && index>=0) {\n        return this.parser.ruleNames[index];\n    } else {\n        return \"<rule \" + index + \">\";\n    }\n};\n\nParserATNSimulator.prototype.getEpsilonTarget = function(config, t, collectPredicates, inContext, fullCtx, treatEofAsEpsilon) {\n    switch(t.serializationType) {\n    case Transition.RULE:\n        return this.ruleTransition(config, t);\n    case Transition.PRECEDENCE:\n        return this.precedenceTransition(config, t, collectPredicates, inContext, fullCtx);\n    case Transition.PREDICATE:\n        return this.predTransition(config, t, collectPredicates, inContext, fullCtx);\n    case Transition.ACTION:\n        return this.actionTransition(config, t);\n    case Transition.EPSILON:\n        return new ATNConfig({state:t.target}, config);\n    case Transition.ATOM:\n    case Transition.RANGE:\n    case Transition.SET:\n        // EOF transitions act like epsilon transitions after the first EOF\n        // transition is traversed\n        if (treatEofAsEpsilon) {\n            if (t.matches(Token.EOF, 0, 1)) {\n                return new ATNConfig({state: t.target}, config);\n            }\n        }\n        return null;\n    default:\n    \treturn null;\n    }\n};\n\nParserATNSimulator.prototype.actionTransition = function(config, t) {\n    if (this.debug) {\n        var index = t.actionIndex==-1 ? 65535 : t.actionIndex;\n        console.log(\"ACTION edge \" + t.ruleIndex + \":\" + index);\n    }\n    return new ATNConfig({state:t.target}, config);\n};\n\nParserATNSimulator.prototype.precedenceTransition = function(config, pt,  collectPredicates, inContext, fullCtx) {\n    if (this.debug) {\n        console.log(\"PRED (collectPredicates=\" + collectPredicates + \") \" +\n                pt.precedence + \">=_p, ctx dependent=true\");\n        if (this.parser!==null) {\n        \tconsole.log(\"context surrounding pred is \" + Utils.arrayToString(this.parser.getRuleInvocationStack()));\n        }\n    }\n    var c = null;\n    if (collectPredicates && inContext) {\n        if (fullCtx) {\n            // In full context mode, we can evaluate predicates on-the-fly\n            // during closure, which dramatically reduces the size of\n            // the config sets. It also obviates the need to test predicates\n            // later during conflict resolution.\n            var currentPosition = this._input.index;\n            this._input.seek(this._startIndex);\n            var predSucceeds = pt.getPredicate().evaluate(this.parser, this._outerContext);\n            this._input.seek(currentPosition);\n            if (predSucceeds) {\n                c = new ATNConfig({state:pt.target}, config); // no pred context\n            }\n        } else {\n            var newSemCtx = SemanticContext.andContext(config.semanticContext, pt.getPredicate());\n            c = new ATNConfig({state:pt.target, semanticContext:newSemCtx}, config);\n        }\n    } else {\n        c = new ATNConfig({state:pt.target}, config);\n    }\n    if (this.debug) {\n        console.log(\"config from pred transition=\" + c);\n    }\n    return c;\n};\n\nParserATNSimulator.prototype.predTransition = function(config, pt, collectPredicates, inContext, fullCtx) {\n    if (this.debug) {\n        console.log(\"PRED (collectPredicates=\" + collectPredicates + \") \" + pt.ruleIndex +\n                \":\" + pt.predIndex + \", ctx dependent=\" + pt.isCtxDependent);\n        if (this.parser!==null) {\n            console.log(\"context surrounding pred is \" + Utils.arrayToString(this.parser.getRuleInvocationStack()));\n        }\n    }\n    var c = null;\n    if (collectPredicates && ((pt.isCtxDependent && inContext) || ! pt.isCtxDependent)) {\n        if (fullCtx) {\n            // In full context mode, we can evaluate predicates on-the-fly\n            // during closure, which dramatically reduces the size of\n            // the config sets. It also obviates the need to test predicates\n            // later during conflict resolution.\n            var currentPosition = this._input.index;\n            this._input.seek(this._startIndex);\n            var predSucceeds = pt.getPredicate().evaluate(this.parser, this._outerContext);\n            this._input.seek(currentPosition);\n            if (predSucceeds) {\n                c = new ATNConfig({state:pt.target}, config); // no pred context\n            }\n        } else {\n            var newSemCtx = SemanticContext.andContext(config.semanticContext, pt.getPredicate());\n            c = new ATNConfig({state:pt.target, semanticContext:newSemCtx}, config);\n        }\n    } else {\n        c = new ATNConfig({state:pt.target}, config);\n    }\n    if (this.debug) {\n        console.log(\"config from pred transition=\" + c);\n    }\n    return c;\n};\n\nParserATNSimulator.prototype.ruleTransition = function(config, t) {\n    if (this.debug) {\n        console.log(\"CALL rule \" + this.getRuleName(t.target.ruleIndex) + \", ctx=\" + config.context);\n    }\n    var returnState = t.followState;\n    var newContext = SingletonPredictionContext.create(config.context, returnState.stateNumber);\n    return new ATNConfig({state:t.target, context:newContext}, config );\n};\n\nParserATNSimulator.prototype.getConflictingAlts = function(configs) {\n    var altsets = PredictionMode.getConflictingAltSubsets(configs);\n    return PredictionMode.getAlts(altsets);\n};\n\n // Sam pointed out a problem with the previous definition, v3, of\n // ambiguous states. If we have another state associated with conflicting\n // alternatives, we should keep going. For example, the following grammar\n //\n // s : (ID | ID ID?) ';' ;\n //\n // When the ATN simulation reaches the state before ';', it has a DFA\n // state that looks like: [12|1|[], 6|2|[], 12|2|[]]. Naturally\n // 12|1|[] and 12|2|[] conflict, but we cannot stop processing this node\n // because alternative to has another way to continue, via [6|2|[]].\n // The key is that we have a single state that has config's only associated\n // with a single alternative, 2, and crucially the state transitions\n // among the configurations are all non-epsilon transitions. That means\n // we don't consider any conflicts that include alternative 2. So, we\n // ignore the conflict between alts 1 and 2. We ignore a set of\n // conflicting alts when there is an intersection with an alternative\n // associated with a single alt state in the state&rarr;config-list map.\n //\n // It's also the case that we might have two conflicting configurations but\n // also a 3rd nonconflicting configuration for a different alternative:\n // [1|1|[], 1|2|[], 8|3|[]]. This can come about from grammar:\n //\n // a : A | A | A B ;\n //\n // After matching input A, we reach the stop state for rule A, state 1.\n // State 8 is the state right before B. Clearly alternatives 1 and 2\n // conflict and no amount of further lookahead will separate the two.\n // However, alternative 3 will be able to continue and so we do not\n // stop working on this state. In the previous example, we're concerned\n // with states associated with the conflicting alternatives. Here alt\n // 3 is not associated with the conflicting configs, but since we can continue\n // looking for input reasonably, I don't declare the state done. We\n // ignore a set of conflicting alts when we have an alternative\n // that we still need to pursue.\n//\n\nParserATNSimulator.prototype.getConflictingAltsOrUniqueAlt = function(configs) {\n    var conflictingAlts = null;\n    if (configs.uniqueAlt!== ATN.INVALID_ALT_NUMBER) {\n        conflictingAlts = new BitSet();\n        conflictingAlts.add(configs.uniqueAlt);\n    } else {\n        conflictingAlts = configs.conflictingAlts;\n    }\n    return conflictingAlts;\n};\n\nParserATNSimulator.prototype.getTokenName = function( t) {\n    if (t===Token.EOF) {\n        return \"EOF\";\n    }\n    if( this.parser!==null && this.parser.literalNames!==null) {\n        if (t >= this.parser.literalNames.length && t >= this.parser.symbolicNames.length) {\n            console.log(\"\" + t + \" ttype out of range: \" + this.parser.literalNames);\n            console.log(\"\" + this.parser.getInputStream().getTokens());\n        } else {\n            var name = this.parser.literalNames[t] || this.parser.symbolicNames[t];\n            return name + \"<\" + t + \">\";\n        }\n    }\n    return \"\" + t;\n};\n\nParserATNSimulator.prototype.getLookaheadName = function(input) {\n    return this.getTokenName(input.LA(1));\n};\n\n// Used for debugging in adaptivePredict around execATN but I cut\n//  it out for clarity now that alg. works well. We can leave this\n//  \"dead\" code for a bit.\n//\nParserATNSimulator.prototype.dumpDeadEndConfigs = function(nvae) {\n    console.log(\"dead end configs: \");\n    var decs = nvae.getDeadEndConfigs();\n    for(var i=0; i<decs.length; i++) {\n    \tvar c = decs[i];\n        var trans = \"no edges\";\n        if (c.state.transitions.length>0) {\n            var t = c.state.transitions[0];\n            if (t instanceof AtomTransition) {\n                trans = \"Atom \"+ this.getTokenName(t.label);\n            } else if (t instanceof SetTransition) {\n                var neg = (t instanceof NotSetTransition);\n                trans = (neg ? \"~\" : \"\") + \"Set \" + t.set;\n            }\n        }\n        console.error(c.toString(this.parser, true) + \":\" + trans);\n    }\n};\n\nParserATNSimulator.prototype.noViableAlt = function(input, outerContext, configs, startIndex) {\n    return new NoViableAltException(this.parser, input, input.get(startIndex), input.LT(1), configs, outerContext);\n};\n\nParserATNSimulator.prototype.getUniqueAlt = function(configs) {\n    var alt = ATN.INVALID_ALT_NUMBER;\n    for(var i=0;i<configs.items.length;i++) {\n    \tvar c = configs.items[i];\n        if (alt === ATN.INVALID_ALT_NUMBER) {\n            alt = c.alt // found first alt\n        } else if( c.alt!==alt) {\n            return ATN.INVALID_ALT_NUMBER;\n        }\n    }\n    return alt;\n};\n\n//\n// Add an edge to the DFA, if possible. This method calls\n// {@link //addDFAState} to ensure the {@code to} state is present in the\n// DFA. If {@code from} is {@code null}, or if {@code t} is outside the\n// range of edges that can be represented in the DFA tables, this method\n// returns without adding the edge to the DFA.\n//\n// <p>If {@code to} is {@code null}, this method returns {@code null}.\n// Otherwise, this method returns the {@link DFAState} returned by calling\n// {@link //addDFAState} for the {@code to} state.</p>\n//\n// @param dfa The DFA\n// @param from The source state for the edge\n// @param t The input symbol\n// @param to The target state for the edge\n//\n// @return If {@code to} is {@code null}, this method returns {@code null};\n// otherwise this method returns the result of calling {@link //addDFAState}\n// on {@code to}\n//\nParserATNSimulator.prototype.addDFAEdge = function(dfa, from_, t, to) {\n    if( this.debug) {\n        console.log(\"EDGE \" + from_ + \" -> \" + to + \" upon \" + this.getTokenName(t));\n    }\n    if (to===null) {\n        return null;\n    }\n    to = this.addDFAState(dfa, to); // used existing if possible not incoming\n    if (from_===null || t < -1 || t > this.atn.maxTokenType) {\n        return to;\n    }\n    if (from_.edges===null) {\n        from_.edges = [];\n    }\n    from_.edges[t+1] = to; // connect\n\n    if (this.debug) {\n        var literalNames = this.parser===null ? null : this.parser.literalNames;\n        var symbolicNames = this.parser===null ? null : this.parser.symbolicNames;\n        console.log(\"DFA=\\n\" + dfa.toString(literalNames, symbolicNames));\n    }\n    return to;\n};\n//\n// Add state {@code D} to the DFA if it is not already present, and return\n// the actual instance stored in the DFA. If a state equivalent to {@code D}\n// is already in the DFA, the existing state is returned. Otherwise this\n// method returns {@code D} after adding it to the DFA.\n//\n// <p>If {@code D} is {@link //ERROR}, this method returns {@link //ERROR} and\n// does not change the DFA.</p>\n//\n// @param dfa The dfa\n// @param D The DFA state to add\n// @return The state stored in the DFA. This will be either the existing\n// state if {@code D} is already in the DFA, or {@code D} itself if the\n// state was not already present.\n//\nParserATNSimulator.prototype.addDFAState = function(dfa, D) {\n    if (D == ATNSimulator.ERROR) {\n        return D;\n    }\n    var existing = dfa.states.get(D);\n    if(existing!==null) {\n        return existing;\n    }\n    D.stateNumber = dfa.states.length;\n    if (! D.configs.readOnly) {\n        D.configs.optimizeConfigs(this);\n        D.configs.setReadonly(true);\n    }\n    dfa.states.add(D);\n    if (this.debug) {\n        console.log(\"adding new DFA state: \" + D);\n    }\n    return D;\n};\n\nParserATNSimulator.prototype.reportAttemptingFullContext = function(dfa, conflictingAlts, configs, startIndex, stopIndex) {\n    if (this.debug || this.retry_debug) {\n        var interval = new Interval(startIndex, stopIndex + 1);\n        console.log(\"reportAttemptingFullContext decision=\" + dfa.decision + \":\" + configs +\n                           \", input=\" + this.parser.getTokenStream().getText(interval));\n    }\n    if (this.parser!==null) {\n        this.parser.getErrorListenerDispatch().reportAttemptingFullContext(this.parser, dfa, startIndex, stopIndex, conflictingAlts, configs);\n    }\n};\n\nParserATNSimulator.prototype.reportContextSensitivity = function(dfa, prediction, configs, startIndex, stopIndex) {\n    if (this.debug || this.retry_debug) {\n        var interval = new Interval(startIndex, stopIndex + 1);\n        console.log(\"reportContextSensitivity decision=\" + dfa.decision + \":\" + configs +\n                           \", input=\" + this.parser.getTokenStream().getText(interval));\n    }\n    if (this.parser!==null) {\n        this.parser.getErrorListenerDispatch().reportContextSensitivity(this.parser, dfa, startIndex, stopIndex, prediction, configs);\n    }\n};\n\n// If context sensitive parsing, we know it's ambiguity not conflict//\nParserATNSimulator.prototype.reportAmbiguity = function(dfa, D, startIndex, stopIndex,\n                               exact, ambigAlts, configs ) {\n    if (this.debug || this.retry_debug) {\n        var interval = new Interval(startIndex, stopIndex + 1);\n        console.log(\"reportAmbiguity \" + ambigAlts + \":\" + configs +\n                           \", input=\" + this.parser.getTokenStream().getText(interval));\n    }\n    if (this.parser!==null) {\n        this.parser.getErrorListenerDispatch().reportAmbiguity(this.parser, dfa, startIndex, stopIndex, exact, ambigAlts, configs);\n    }\n};\n\nexports.ParserATNSimulator = ParserATNSimulator;","/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nexports.DFA = require('./DFA').DFA;\nexports.DFASerializer = require('./DFASerializer').DFASerializer;\nexports.LexerDFASerializer = require('./DFASerializer').LexerDFASerializer;\nexports.PredPrediction = require('./DFAState').PredPrediction;\n","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nvar Set = require(\"../Utils\").Set;\nvar DFAState = require('./DFAState').DFAState;\nvar StarLoopEntryState = require('../atn/ATNState').StarLoopEntryState;\nvar ATNConfigSet = require('./../atn/ATNConfigSet').ATNConfigSet;\nvar DFASerializer = require('./DFASerializer').DFASerializer;\nvar LexerDFASerializer = require('./DFASerializer').LexerDFASerializer;\n\n\n\nfunction DFA(atnStartState, decision) {\n\tif (decision === undefined) {\n\t\tdecision = 0;\n\t}\n\t// From which ATN state did we create this DFA?\n\tthis.atnStartState = atnStartState;\n\tthis.decision = decision;\n\t// A set of all DFA states. Use {@link Map} so we can get old state back\n\t// ({@link Set} only allows you to see if it's there).\n\tthis._states = new Set();\n\tthis.s0 = null;\n\t// {@code true} if this DFA is for a precedence decision; otherwise,\n\t// {@code false}. This is the backing field for {@link //isPrecedenceDfa},\n\t// {@link //setPrecedenceDfa}.\n\tthis.precedenceDfa = false;\n    if (atnStartState instanceof StarLoopEntryState)\n    {\n        if (atnStartState.isPrecedenceDecision) {\n            this.precedenceDfa = true;\n            var precedenceState = new DFAState(null, new ATNConfigSet());\n            precedenceState.edges = [];\n            precedenceState.isAcceptState = false;\n            precedenceState.requiresFullContext = false;\n            this.s0 = precedenceState;\n        }\n    }\n\treturn this;\n}\n\n// Get the start state for a specific precedence value.\n//\n// @param precedence The current precedence.\n// @return The start state corresponding to the specified precedence, or\n// {@code null} if no start state exists for the specified precedence.\n//\n// @throws IllegalStateException if this is not a precedence DFA.\n// @see //isPrecedenceDfa()\n\nDFA.prototype.getPrecedenceStartState = function(precedence) {\n\tif (!(this.precedenceDfa)) {\n\t\tthrow (\"Only precedence DFAs may contain a precedence start state.\");\n\t}\n\t// s0.edges is never null for a precedence DFA\n\tif (precedence < 0 || precedence >= this.s0.edges.length) {\n\t\treturn null;\n\t}\n\treturn this.s0.edges[precedence] || null;\n};\n\n// Set the start state for a specific precedence value.\n//\n// @param precedence The current precedence.\n// @param startState The start state corresponding to the specified\n// precedence.\n//\n// @throws IllegalStateException if this is not a precedence DFA.\n// @see //isPrecedenceDfa()\n//\nDFA.prototype.setPrecedenceStartState = function(precedence, startState) {\n\tif (!(this.precedenceDfa)) {\n\t\tthrow (\"Only precedence DFAs may contain a precedence start state.\");\n\t}\n\tif (precedence < 0) {\n\t\treturn;\n\t}\n\n\t// synchronization on s0 here is ok. when the DFA is turned into a\n\t// precedence DFA, s0 will be initialized once and not updated again\n\t// s0.edges is never null for a precedence DFA\n\tthis.s0.edges[precedence] = startState;\n};\n\n//\n// Sets whether this is a precedence DFA. If the specified value differs\n// from the current DFA configuration, the following actions are taken;\n// otherwise no changes are made to the current DFA.\n//\n// <ul>\n// <li>The {@link //states} map is cleared</li>\n// <li>If {@code precedenceDfa} is {@code false}, the initial state\n// {@link //s0} is set to {@code null}; otherwise, it is initialized to a new\n// {@link DFAState} with an empty outgoing {@link DFAState//edges} array to\n// store the start states for individual precedence values.</li>\n// <li>The {@link //precedenceDfa} field is updated</li>\n// </ul>\n//\n// @param precedenceDfa {@code true} if this is a precedence DFA; otherwise,\n// {@code false}\n\nDFA.prototype.setPrecedenceDfa = function(precedenceDfa) {\n\tif (this.precedenceDfa!==precedenceDfa) {\n\t\tthis._states = new DFAStatesSet();\n\t\tif (precedenceDfa) {\n\t\t\tvar precedenceState = new DFAState(null, new ATNConfigSet());\n\t\t\tprecedenceState.edges = [];\n\t\t\tprecedenceState.isAcceptState = false;\n\t\t\tprecedenceState.requiresFullContext = false;\n\t\t\tthis.s0 = precedenceState;\n\t\t} else {\n\t\t\tthis.s0 = null;\n\t\t}\n\t\tthis.precedenceDfa = precedenceDfa;\n\t}\n};\n\nObject.defineProperty(DFA.prototype, \"states\", {\n\tget : function() {\n\t\treturn this._states;\n\t}\n});\n\n// Return a list of all states in this DFA, ordered by state number.\nDFA.prototype.sortedStates = function() {\n\tvar list = this._states.values();\n\treturn list.sort(function(a, b) {\n\t\treturn a.stateNumber - b.stateNumber;\n\t});\n};\n\nDFA.prototype.toString = function(literalNames, symbolicNames) {\n\tliteralNames = literalNames || null;\n\tsymbolicNames = symbolicNames || null;\n\tif (this.s0 === null) {\n\t\treturn \"\";\n\t}\n\tvar serializer = new DFASerializer(this, literalNames, symbolicNames);\n\treturn serializer.toString();\n};\n\nDFA.prototype.toLexerString = function() {\n\tif (this.s0 === null) {\n\t\treturn \"\";\n\t}\n\tvar serializer = new LexerDFASerializer(this);\n\treturn serializer.toString();\n};\n\nexports.DFA = DFA;\n","/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nvar Tree = require('./Tree');\nexports.Trees = require('./Trees').Trees;\nexports.RuleNode = Tree.RuleNode;\nexports.ParseTreeListener = Tree.ParseTreeListener;\nexports.ParseTreeVisitor = Tree.ParseTreeVisitor;\nexports.ParseTreeWalker = Tree.ParseTreeWalker;\n","/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nexports.RecognitionException = require('./Errors').RecognitionException;\nexports.NoViableAltException = require('./Errors').NoViableAltException;\nexports.LexerNoViableAltException = require('./Errors').LexerNoViableAltException;\nexports.InputMismatchException = require('./Errors').InputMismatchException;\nexports.FailedPredicateException = require('./Errors').FailedPredicateException;\nexports.DiagnosticErrorListener = require('./DiagnosticErrorListener').DiagnosticErrorListener;\nexports.BailErrorStrategy = require('./ErrorStrategy').BailErrorStrategy;\nexports.ErrorListener = require('./ErrorListener').ErrorListener;\n","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n//\n\n//\n// This implementation of {@link ANTLRErrorListener} can be used to identify\n// certain potential correctness and performance problems in grammars. \"Reports\"\n// are made by calling {@link Parser//notifyErrorListeners} with the appropriate\n// message.\n//\n// <ul>\n// <li><b>Ambiguities</b>: These are cases where more than one path through the\n// grammar can match the input.</li>\n// <li><b>Weak context sensitivity</b>: These are cases where full-context\n// prediction resolved an SLL conflict to a unique alternative which equaled the\n// minimum alternative of the SLL conflict.</li>\n// <li><b>Strong (forced) context sensitivity</b>: These are cases where the\n// full-context prediction resolved an SLL conflict to a unique alternative,\n// <em>and</em> the minimum alternative of the SLL conflict was found to not be\n// a truly viable alternative. Two-stage parsing cannot be used for inputs where\n// this situation occurs.</li>\n// </ul>\n\nvar BitSet = require('./../Utils').BitSet;\nvar ErrorListener = require('./ErrorListener').ErrorListener;\nvar Interval = require('./../IntervalSet').Interval;\n\nfunction DiagnosticErrorListener(exactOnly) {\n\tErrorListener.call(this);\n\texactOnly = exactOnly || true;\n\t// whether all ambiguities or only exact ambiguities are reported.\n\tthis.exactOnly = exactOnly;\n\treturn this;\n}\n\nDiagnosticErrorListener.prototype = Object.create(ErrorListener.prototype);\nDiagnosticErrorListener.prototype.constructor = DiagnosticErrorListener;\n\nDiagnosticErrorListener.prototype.reportAmbiguity = function(recognizer, dfa,\n\t\tstartIndex, stopIndex, exact, ambigAlts, configs) {\n\tif (this.exactOnly && !exact) {\n\t\treturn;\n\t}\n\tvar msg = \"reportAmbiguity d=\" +\n\t\t\tthis.getDecisionDescription(recognizer, dfa) +\n\t\t\t\": ambigAlts=\" +\n\t\t\tthis.getConflictingAlts(ambigAlts, configs) +\n\t\t\t\", input='\" +\n\t\t\trecognizer.getTokenStream().getText(new Interval(startIndex, stopIndex)) + \"'\";\n\trecognizer.notifyErrorListeners(msg);\n};\n\nDiagnosticErrorListener.prototype.reportAttemptingFullContext = function(\n\t\trecognizer, dfa, startIndex, stopIndex, conflictingAlts, configs) {\n\tvar msg = \"reportAttemptingFullContext d=\" +\n\t\t\tthis.getDecisionDescription(recognizer, dfa) +\n\t\t\t\", input='\" +\n\t\t\trecognizer.getTokenStream().getText(new Interval(startIndex, stopIndex)) + \"'\";\n\trecognizer.notifyErrorListeners(msg);\n};\n\nDiagnosticErrorListener.prototype.reportContextSensitivity = function(\n\t\trecognizer, dfa, startIndex, stopIndex, prediction, configs) {\n\tvar msg = \"reportContextSensitivity d=\" +\n\t\t\tthis.getDecisionDescription(recognizer, dfa) +\n\t\t\t\", input='\" +\n\t\t\trecognizer.getTokenStream().getText(new Interval(startIndex, stopIndex)) + \"'\";\n\trecognizer.notifyErrorListeners(msg);\n};\n\nDiagnosticErrorListener.prototype.getDecisionDescription = function(recognizer, dfa) {\n\tvar decision = dfa.decision;\n\tvar ruleIndex = dfa.atnStartState.ruleIndex;\n\n\tvar ruleNames = recognizer.ruleNames;\n\tif (ruleIndex < 0 || ruleIndex >= ruleNames.length) {\n\t\treturn \"\" + decision;\n\t}\n\tvar ruleName = ruleNames[ruleIndex] || null;\n\tif (ruleName === null || ruleName.length === 0) {\n\t\treturn \"\" + decision;\n\t}\n\treturn \"\" + decision + \" (\" + ruleName + \")\";\n};\n\n//\n// Computes the set of conflicting or ambiguous alternatives from a\n// configuration set, if that information was not already provided by the\n// parser.\n//\n// @param reportedAlts The set of conflicting or ambiguous alternatives, as\n// reported by the parser.\n// @param configs The conflicting or ambiguous configuration set.\n// @return Returns {@code reportedAlts} if it is not {@code null}, otherwise\n// returns the set of alternatives represented in {@code configs}.\n//\nDiagnosticErrorListener.prototype.getConflictingAlts = function(reportedAlts, configs) {\n\tif (reportedAlts !== null) {\n\t\treturn reportedAlts;\n\t}\n\tvar result = new BitSet();\n\tfor (var i = 0; i < configs.items.length; i++) {\n\t\tresult.add(configs.items[i].alt);\n\t}\n\treturn \"{\" + result.values().join(\", \") + \"}\";\n};\n\nexports.DiagnosticErrorListener = DiagnosticErrorListener;","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n//\n\nvar InputStream = require('./InputStream').InputStream;\n\nvar isNodeJs = typeof window === 'undefined' && typeof importScripts === 'undefined';\nvar fs = isNodeJs ? require(\"fs\") : null;\n\n// Utility functions to create InputStreams from various sources.\n//\n// All returned InputStreams support the full range of Unicode\n// up to U+10FFFF (the default behavior of InputStream only supports\n// code points up to U+FFFF).\nvar CharStreams = {\n  // Creates an InputStream from a string.\n  fromString: function(str) {\n    return new InputStream(str, true);\n  },\n\n  // Asynchronously creates an InputStream from a blob given the\n  // encoding of the bytes in that blob (defaults to 'utf8' if\n  // encoding is null).\n  //\n  // Invokes onLoad(result) on success, onError(error) on\n  // failure.\n  fromBlob: function(blob, encoding, onLoad, onError) {\n    var reader = FileReader();\n    reader.onload = function(e) {\n      var is = new InputStream(e.target.result, true);\n      onLoad(is);\n    };\n    reader.onerror = onError;\n    reader.readAsText(blob, encoding);\n  },\n\n  // Creates an InputStream from a Buffer given the\n  // encoding of the bytes in that buffer (defaults to 'utf8' if\n  // encoding is null).\n  fromBuffer: function(buffer, encoding) {\n    return new InputStream(buffer.toString(encoding), true);\n  },\n\n  // Asynchronously creates an InputStream from a file on disk given\n  // the encoding of the bytes in that file (defaults to 'utf8' if\n  // encoding is null).\n  //\n  // Invokes callback(error, result) on completion.\n  fromPath: function(path, encoding, callback) {\n    fs.readFile(path, encoding, function(err, data) {\n      var is = null;\n      if (data !== null) {\n        is = new InputStream(data, true);\n      }\n      callback(err, is);\n    });\n  },\n\n  // Synchronously creates an InputStream given a path to a file\n  // on disk and the encoding of the bytes in that file (defaults to\n  // 'utf8' if encoding is null).\n  fromPathSync: function(path, encoding) {\n    var data = fs.readFileSync(path, encoding);\n    return new InputStream(data, true);\n  }\n};\n\nexports.CharStreams = CharStreams;\n","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n//\n\n//\n//  This is an InputStream that is loaded from a file all at once\n//  when you construct the object.\n//\nvar InputStream = require('./InputStream').InputStream;\nvar isNodeJs = typeof window === 'undefined' && typeof importScripts === 'undefined';\nvar fs = isNodeJs ? require(\"fs\") : null;\n\nfunction FileStream(fileName, decodeToUnicodeCodePoints) {\n\tvar data = fs.readFileSync(fileName, \"utf8\");\n\tInputStream.call(this, data, decodeToUnicodeCodePoints);\n\tthis.fileName = fileName;\n\treturn this;\n}\n\nFileStream.prototype = Object.create(InputStream.prototype);\nFileStream.prototype.constructor = FileStream;\n\nexports.FileStream = FileStream;\n","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n///\n\n//\n// This class extends {@link BufferedTokenStream} with functionality to filter\n// token streams to tokens on a particular channel (tokens where\n// {@link Token//getChannel} returns a particular value).\n//\n// <p>\n// This token stream provides access to all tokens by index or when calling\n// methods like {@link //getText}. The channel filtering is only used for code\n// accessing tokens via the lookahead methods {@link //LA}, {@link //LT}, and\n// {@link //LB}.</p>\n//\n// <p>\n// By default, tokens are placed on the default channel\n// ({@link Token//DEFAULT_CHANNEL}), but may be reassigned by using the\n// {@code ->channel(HIDDEN)} lexer command, or by using an embedded action to\n// call {@link Lexer//setChannel}.\n// </p>\n//\n// <p>\n// Note: lexer rules which use the {@code ->skip} lexer command or call\n// {@link Lexer//skip} do not produce tokens at all, so input text matched by\n// such a rule will not be available as part of the token stream, regardless of\n// channel.</p>\n///\n\nvar Token = require('./Token').Token;\nvar BufferedTokenStream = require('./BufferedTokenStream').BufferedTokenStream;\n\nfunction CommonTokenStream(lexer, channel) {\n\tBufferedTokenStream.call(this, lexer);\n    this.channel = channel===undefined ? Token.DEFAULT_CHANNEL : channel;\n    return this;\n}\n\nCommonTokenStream.prototype = Object.create(BufferedTokenStream.prototype);\nCommonTokenStream.prototype.constructor = CommonTokenStream;\n\nCommonTokenStream.prototype.adjustSeekIndex = function(i) {\n    return this.nextTokenOnChannel(i, this.channel);\n};\n\nCommonTokenStream.prototype.LB = function(k) {\n    if (k===0 || this.index-k<0) {\n        return null;\n    }\n    var i = this.index;\n    var n = 1;\n    // find k good tokens looking backwards\n    while (n <= k) {\n        // skip off-channel tokens\n        i = this.previousTokenOnChannel(i - 1, this.channel);\n        n += 1;\n    }\n    if (i < 0) {\n        return null;\n    }\n    return this.tokens[i];\n};\n\nCommonTokenStream.prototype.LT = function(k) {\n    this.lazyInit();\n    if (k === 0) {\n        return null;\n    }\n    if (k < 0) {\n        return this.LB(-k);\n    }\n    var i = this.index;\n    var n = 1; // we know tokens[pos] is a good one\n    // find k good tokens\n    while (n < k) {\n        // skip off-channel tokens, but make sure to not look past EOF\n        if (this.sync(i + 1)) {\n            i = this.nextTokenOnChannel(i + 1, this.channel);\n        }\n        n += 1;\n    }\n    return this.tokens[i];\n};\n\n// Count EOF just once.///\nCommonTokenStream.prototype.getNumberOfOnChannelTokens = function() {\n    var n = 0;\n    this.fill();\n    for (var i =0; i< this.tokens.length;i++) {\n        var t = this.tokens[i];\n        if( t.channel===this.channel) {\n            n += 1;\n        }\n        if( t.type===Token.EOF) {\n            break;\n        }\n    }\n    return n;\n};\n\nexports.CommonTokenStream = CommonTokenStream;","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\n// This implementation of {@link TokenStream} loads tokens from a\n// {@link TokenSource} on-demand, and places the tokens in a buffer to provide\n// access to any previous token by index.\n//\n// <p>\n// This token stream ignores the value of {@link Token//getChannel}. If your\n// parser requires the token stream filter tokens to only those on a particular\n// channel, such as {@link Token//DEFAULT_CHANNEL} or\n// {@link Token//HIDDEN_CHANNEL}, use a filtering token stream such a\n// {@link CommonTokenStream}.</p>\n\nvar Token = require('./Token').Token;\nvar Lexer = require('./Lexer').Lexer;\nvar Interval = require('./IntervalSet').Interval;\n\n// this is just to keep meaningful parameter types to Parser\nfunction TokenStream() {\n\treturn this;\n}\n\nfunction BufferedTokenStream(tokenSource) {\n\n\tTokenStream.call(this);\n\t// The {@link TokenSource} from which tokens for this stream are fetched.\n\tthis.tokenSource = tokenSource;\n\n\t// A collection of all tokens fetched from the token source. The list is\n\t// considered a complete view of the input once {@link //fetchedEOF} is set\n\t// to {@code true}.\n\tthis.tokens = [];\n\n\t// The index into {@link //tokens} of the current token (next token to\n\t// {@link //consume}). {@link //tokens}{@code [}{@link //p}{@code ]} should\n\t// be\n\t// {@link //LT LT(1)}.\n\t//\n\t// <p>This field is set to -1 when the stream is first constructed or when\n\t// {@link //setTokenSource} is called, indicating that the first token has\n\t// not yet been fetched from the token source. For additional information,\n\t// see the documentation of {@link IntStream} for a description of\n\t// Initializing Methods.</p>\n\tthis.index = -1;\n\n\t// Indicates whether the {@link Token//EOF} token has been fetched from\n\t// {@link //tokenSource} and added to {@link //tokens}. This field improves\n\t// performance for the following cases:\n\t//\n\t// <ul>\n\t// <li>{@link //consume}: The lookahead check in {@link //consume} to\n\t// prevent\n\t// consuming the EOF symbol is optimized by checking the values of\n\t// {@link //fetchedEOF} and {@link //p} instead of calling {@link\n\t// //LA}.</li>\n\t// <li>{@link //fetch}: The check to prevent adding multiple EOF symbols\n\t// into\n\t// {@link //tokens} is trivial with this field.</li>\n\t// <ul>\n\tthis.fetchedEOF = false;\n\treturn this;\n}\n\nBufferedTokenStream.prototype = Object.create(TokenStream.prototype);\nBufferedTokenStream.prototype.constructor = BufferedTokenStream;\n\nBufferedTokenStream.prototype.mark = function() {\n\treturn 0;\n};\n\nBufferedTokenStream.prototype.release = function(marker) {\n\t// no resources to release\n};\n\nBufferedTokenStream.prototype.reset = function() {\n\tthis.seek(0);\n};\n\nBufferedTokenStream.prototype.seek = function(index) {\n\tthis.lazyInit();\n\tthis.index = this.adjustSeekIndex(index);\n};\n\nBufferedTokenStream.prototype.get = function(index) {\n\tthis.lazyInit();\n\treturn this.tokens[index];\n};\n\nBufferedTokenStream.prototype.consume = function() {\n\tvar skipEofCheck = false;\n\tif (this.index >= 0) {\n\t\tif (this.fetchedEOF) {\n\t\t\t// the last token in tokens is EOF. skip check if p indexes any\n\t\t\t// fetched token except the last.\n\t\t\tskipEofCheck = this.index < this.tokens.length - 1;\n\t\t} else {\n\t\t\t// no EOF token in tokens. skip check if p indexes a fetched token.\n\t\t\tskipEofCheck = this.index < this.tokens.length;\n\t\t}\n\t} else {\n\t\t// not yet initialized\n\t\tskipEofCheck = false;\n\t}\n\tif (!skipEofCheck && this.LA(1) === Token.EOF) {\n\t\tthrow \"cannot consume EOF\";\n\t}\n\tif (this.sync(this.index + 1)) {\n\t\tthis.index = this.adjustSeekIndex(this.index + 1);\n\t}\n};\n\n// Make sure index {@code i} in tokens has a token.\n//\n// @return {@code true} if a token is located at index {@code i}, otherwise\n// {@code false}.\n// @see //get(int i)\n// /\nBufferedTokenStream.prototype.sync = function(i) {\n\tvar n = i - this.tokens.length + 1; // how many more elements we need?\n\tif (n > 0) {\n\t\tvar fetched = this.fetch(n);\n\t\treturn fetched >= n;\n\t}\n\treturn true;\n};\n\n// Add {@code n} elements to buffer.\n//\n// @return The actual number of elements added to the buffer.\n// /\nBufferedTokenStream.prototype.fetch = function(n) {\n\tif (this.fetchedEOF) {\n\t\treturn 0;\n\t}\n\tfor (var i = 0; i < n; i++) {\n\t\tvar t = this.tokenSource.nextToken();\n\t\tt.tokenIndex = this.tokens.length;\n\t\tthis.tokens.push(t);\n\t\tif (t.type === Token.EOF) {\n\t\t\tthis.fetchedEOF = true;\n\t\t\treturn i + 1;\n\t\t}\n\t}\n\treturn n;\n};\n\n// Get all tokens from start..stop inclusively///\nBufferedTokenStream.prototype.getTokens = function(start, stop, types) {\n\tif (types === undefined) {\n\t\ttypes = null;\n\t}\n\tif (start < 0 || stop < 0) {\n\t\treturn null;\n\t}\n\tthis.lazyInit();\n\tvar subset = [];\n\tif (stop >= this.tokens.length) {\n\t\tstop = this.tokens.length - 1;\n\t}\n\tfor (var i = start; i < stop; i++) {\n\t\tvar t = this.tokens[i];\n\t\tif (t.type === Token.EOF) {\n\t\t\tbreak;\n\t\t}\n\t\tif (types === null || types.contains(t.type)) {\n\t\t\tsubset.push(t);\n\t\t}\n\t}\n\treturn subset;\n};\n\nBufferedTokenStream.prototype.LA = function(i) {\n\treturn this.LT(i).type;\n};\n\nBufferedTokenStream.prototype.LB = function(k) {\n\tif (this.index - k < 0) {\n\t\treturn null;\n\t}\n\treturn this.tokens[this.index - k];\n};\n\nBufferedTokenStream.prototype.LT = function(k) {\n\tthis.lazyInit();\n\tif (k === 0) {\n\t\treturn null;\n\t}\n\tif (k < 0) {\n\t\treturn this.LB(-k);\n\t}\n\tvar i = this.index + k - 1;\n\tthis.sync(i);\n\tif (i >= this.tokens.length) { // return EOF token\n\t\t// EOF must be last token\n\t\treturn this.tokens[this.tokens.length - 1];\n\t}\n\treturn this.tokens[i];\n};\n\n// Allowed derived classes to modify the behavior of operations which change\n// the current stream position by adjusting the target token index of a seek\n// operation. The default implementation simply returns {@code i}. If an\n// exception is thrown in this method, the current stream index should not be\n// changed.\n//\n// <p>For example, {@link CommonTokenStream} overrides this method to ensure\n// that\n// the seek target is always an on-channel token.</p>\n//\n// @param i The target token index.\n// @return The adjusted target token index.\n\nBufferedTokenStream.prototype.adjustSeekIndex = function(i) {\n\treturn i;\n};\n\nBufferedTokenStream.prototype.lazyInit = function() {\n\tif (this.index === -1) {\n\t\tthis.setup();\n\t}\n};\n\nBufferedTokenStream.prototype.setup = function() {\n\tthis.sync(0);\n\tthis.index = this.adjustSeekIndex(0);\n};\n\n// Reset this token stream by setting its token source.///\nBufferedTokenStream.prototype.setTokenSource = function(tokenSource) {\n\tthis.tokenSource = tokenSource;\n\tthis.tokens = [];\n\tthis.index = -1;\n\tthis.fetchedEOF = false;\n};\n\n\n// Given a starting index, return the index of the next token on channel.\n// Return i if tokens[i] is on channel. Return -1 if there are no tokens\n// on channel between i and EOF.\n// /\nBufferedTokenStream.prototype.nextTokenOnChannel = function(i, channel) {\n\tthis.sync(i);\n\tif (i >= this.tokens.length) {\n\t\treturn -1;\n\t}\n\tvar token = this.tokens[i];\n\twhile (token.channel !== this.channel) {\n\t\tif (token.type === Token.EOF) {\n\t\t\treturn -1;\n\t\t}\n\t\ti += 1;\n\t\tthis.sync(i);\n\t\ttoken = this.tokens[i];\n\t}\n\treturn i;\n};\n\n// Given a starting index, return the index of the previous token on channel.\n// Return i if tokens[i] is on channel. Return -1 if there are no tokens\n// on channel between i and 0.\nBufferedTokenStream.prototype.previousTokenOnChannel = function(i, channel) {\n\twhile (i >= 0 && this.tokens[i].channel !== channel) {\n\t\ti -= 1;\n\t}\n\treturn i;\n};\n\n// Collect all tokens on specified channel to the right of\n// the current token up until we see a token on DEFAULT_TOKEN_CHANNEL or\n// EOF. If channel is -1, find any non default channel token.\nBufferedTokenStream.prototype.getHiddenTokensToRight = function(tokenIndex,\n\t\tchannel) {\n\tif (channel === undefined) {\n\t\tchannel = -1;\n\t}\n\tthis.lazyInit();\n\tif (tokenIndex < 0 || tokenIndex >= this.tokens.length) {\n\t\tthrow \"\" + tokenIndex + \" not in 0..\" + this.tokens.length - 1;\n\t}\n\tvar nextOnChannel = this.nextTokenOnChannel(tokenIndex + 1, Lexer.DEFAULT_TOKEN_CHANNEL);\n\tvar from_ = tokenIndex + 1;\n\t// if none onchannel to right, nextOnChannel=-1 so set to = last token\n\tvar to = nextOnChannel === -1 ? this.tokens.length - 1 : nextOnChannel;\n\treturn this.filterForChannel(from_, to, channel);\n};\n\n// Collect all tokens on specified channel to the left of\n// the current token up until we see a token on DEFAULT_TOKEN_CHANNEL.\n// If channel is -1, find any non default channel token.\nBufferedTokenStream.prototype.getHiddenTokensToLeft = function(tokenIndex,\n\t\tchannel) {\n\tif (channel === undefined) {\n\t\tchannel = -1;\n\t}\n\tthis.lazyInit();\n\tif (tokenIndex < 0 || tokenIndex >= this.tokens.length) {\n\t\tthrow \"\" + tokenIndex + \" not in 0..\" + this.tokens.length - 1;\n\t}\n\tvar prevOnChannel = this.previousTokenOnChannel(tokenIndex - 1, Lexer.DEFAULT_TOKEN_CHANNEL);\n\tif (prevOnChannel === tokenIndex - 1) {\n\t\treturn null;\n\t}\n\t// if none on channel to left, prevOnChannel=-1 then from=0\n\tvar from_ = prevOnChannel + 1;\n\tvar to = tokenIndex - 1;\n\treturn this.filterForChannel(from_, to, channel);\n};\n\nBufferedTokenStream.prototype.filterForChannel = function(left, right, channel) {\n\tvar hidden = [];\n\tfor (var i = left; i < right + 1; i++) {\n\t\tvar t = this.tokens[i];\n\t\tif (channel === -1) {\n\t\t\tif (t.channel !== Lexer.DEFAULT_TOKEN_CHANNEL) {\n\t\t\t\thidden.push(t);\n\t\t\t}\n\t\t} else if (t.channel === channel) {\n\t\t\thidden.push(t);\n\t\t}\n\t}\n\tif (hidden.length === 0) {\n\t\treturn null;\n\t}\n\treturn hidden;\n};\n\nBufferedTokenStream.prototype.getSourceName = function() {\n\treturn this.tokenSource.getSourceName();\n};\n\n// Get the text of all tokens in this buffer.///\nBufferedTokenStream.prototype.getText = function(interval) {\n\tthis.lazyInit();\n\tthis.fill();\n\tif (interval === undefined || interval === null) {\n\t\tinterval = new Interval(0, this.tokens.length - 1);\n\t}\n\tvar start = interval.start;\n\tif (start instanceof Token) {\n\t\tstart = start.tokenIndex;\n\t}\n\tvar stop = interval.stop;\n\tif (stop instanceof Token) {\n\t\tstop = stop.tokenIndex;\n\t}\n\tif (start === null || stop === null || start < 0 || stop < 0) {\n\t\treturn \"\";\n\t}\n\tif (stop >= this.tokens.length) {\n\t\tstop = this.tokens.length - 1;\n\t}\n\tvar s = \"\";\n\tfor (var i = start; i < stop + 1; i++) {\n\t\tvar t = this.tokens[i];\n\t\tif (t.type === Token.EOF) {\n\t\t\tbreak;\n\t\t}\n\t\ts = s + t.text;\n\t}\n\treturn s;\n};\n\n// Get all tokens from lexer until EOF///\nBufferedTokenStream.prototype.fill = function() {\n\tthis.lazyInit();\n\twhile (this.fetch(1000) === 1000) {\n\t\tcontinue;\n\t}\n};\n\nexports.BufferedTokenStream = BufferedTokenStream;\n","/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nvar Token = require('./Token').Token;\nvar ParseTreeListener = require('./tree/Tree').ParseTreeListener;\nvar Recognizer = require('./Recognizer').Recognizer;\nvar DefaultErrorStrategy = require('./error/ErrorStrategy').DefaultErrorStrategy;\nvar ATNDeserializer = require('./atn/ATNDeserializer').ATNDeserializer;\nvar ATNDeserializationOptions = require('./atn/ATNDeserializationOptions').ATNDeserializationOptions;\nvar TerminalNode = require('./tree/Tree').TerminalNode;\nvar ErrorNode = require('./tree/Tree').ErrorNode;\n\nfunction TraceListener(parser) {\n\tParseTreeListener.call(this);\n    this.parser = parser;\n\treturn this;\n}\n\nTraceListener.prototype = Object.create(ParseTreeListener.prototype);\nTraceListener.prototype.constructor = TraceListener;\n\nTraceListener.prototype.enterEveryRule = function(ctx) {\n\tconsole.log(\"enter   \" + this.parser.ruleNames[ctx.ruleIndex] + \", LT(1)=\" + this.parser._input.LT(1).text);\n};\n\nTraceListener.prototype.visitTerminal = function( node) {\n\tconsole.log(\"consume \" + node.symbol + \" rule \" + this.parser.ruleNames[this.parser._ctx.ruleIndex]);\n};\n\nTraceListener.prototype.exitEveryRule = function(ctx) {\n\tconsole.log(\"exit    \" + this.parser.ruleNames[ctx.ruleIndex] + \", LT(1)=\" + this.parser._input.LT(1).text);\n};\n\n// this is all the parsing support code essentially; most of it is error\n// recovery stuff.//\nfunction Parser(input) {\n\tRecognizer.call(this);\n\t// The input stream.\n\tthis._input = null;\n\t// The error handling strategy for the parser. The default value is a new\n\t// instance of {@link DefaultErrorStrategy}.\n\tthis._errHandler = new DefaultErrorStrategy();\n\tthis._precedenceStack = [];\n\tthis._precedenceStack.push(0);\n\t// The {@link ParserRuleContext} object for the currently executing rule.\n\t// this is always non-null during the parsing process.\n\tthis._ctx = null;\n\t// Specifies whether or not the parser should construct a parse tree during\n\t// the parsing process. The default value is {@code true}.\n\tthis.buildParseTrees = true;\n\t// When {@link //setTrace}{@code (true)} is called, a reference to the\n\t// {@link TraceListener} is stored here so it can be easily removed in a\n\t// later call to {@link //setTrace}{@code (false)}. The listener itself is\n\t// implemented as a parser listener so this field is not directly used by\n\t// other parser methods.\n\tthis._tracer = null;\n\t// The list of {@link ParseTreeListener} listeners registered to receive\n\t// events during the parse.\n\tthis._parseListeners = null;\n\t// The number of syntax errors reported during parsing. this value is\n\t// incremented each time {@link //notifyErrorListeners} is called.\n\tthis._syntaxErrors = 0;\n\tthis.setInputStream(input);\n\treturn this;\n}\n\nParser.prototype = Object.create(Recognizer.prototype);\nParser.prototype.contructor = Parser;\n\n// this field maps from the serialized ATN string to the deserialized {@link\n// ATN} with\n// bypass alternatives.\n//\n// @see ATNDeserializationOptions//isGenerateRuleBypassTransitions()\n//\nParser.bypassAltsAtnCache = {};\n\n// reset the parser's state//\nParser.prototype.reset = function() {\n\tif (this._input !== null) {\n\t\tthis._input.seek(0);\n\t}\n\tthis._errHandler.reset(this);\n\tthis._ctx = null;\n\tthis._syntaxErrors = 0;\n\tthis.setTrace(false);\n\tthis._precedenceStack = [];\n\tthis._precedenceStack.push(0);\n\tif (this._interp !== null) {\n\t\tthis._interp.reset();\n\t}\n};\n\n// Match current input symbol against {@code ttype}. If the symbol type\n// matches, {@link ANTLRErrorStrategy//reportMatch} and {@link //consume} are\n// called to complete the match process.\n//\n// <p>If the symbol type does not match,\n// {@link ANTLRErrorStrategy//recoverInline} is called on the current error\n// strategy to attempt recovery. If {@link //getBuildParseTree} is\n// {@code true} and the token index of the symbol returned by\n// {@link ANTLRErrorStrategy//recoverInline} is -1, the symbol is added to\n// the parse tree by calling {@link ParserRuleContext//addErrorNode}.</p>\n//\n// @param ttype the token type to match\n// @return the matched symbol\n// @throws RecognitionException if the current input symbol did not match\n// {@code ttype} and the error strategy could not recover from the\n// mismatched symbol\n\nParser.prototype.match = function(ttype) {\n\tvar t = this.getCurrentToken();\n\tif (t.type === ttype) {\n\t\tthis._errHandler.reportMatch(this);\n\t\tthis.consume();\n\t} else {\n\t\tt = this._errHandler.recoverInline(this);\n\t\tif (this.buildParseTrees && t.tokenIndex === -1) {\n\t\t\t// we must have conjured up a new token during single token\n\t\t\t// insertion\n\t\t\t// if it's not the current symbol\n\t\t\tthis._ctx.addErrorNode(t);\n\t\t}\n\t}\n\treturn t;\n};\n// Match current input symbol as a wildcard. If the symbol type matches\n// (i.e. has a value greater than 0), {@link ANTLRErrorStrategy//reportMatch}\n// and {@link //consume} are called to complete the match process.\n//\n// <p>If the symbol type does not match,\n// {@link ANTLRErrorStrategy//recoverInline} is called on the current error\n// strategy to attempt recovery. If {@link //getBuildParseTree} is\n// {@code true} and the token index of the symbol returned by\n// {@link ANTLRErrorStrategy//recoverInline} is -1, the symbol is added to\n// the parse tree by calling {@link ParserRuleContext//addErrorNode}.</p>\n//\n// @return the matched symbol\n// @throws RecognitionException if the current input symbol did not match\n// a wildcard and the error strategy could not recover from the mismatched\n// symbol\n\nParser.prototype.matchWildcard = function() {\n\tvar t = this.getCurrentToken();\n\tif (t.type > 0) {\n\t\tthis._errHandler.reportMatch(this);\n\t\tthis.consume();\n\t} else {\n\t\tt = this._errHandler.recoverInline(this);\n\t\tif (this._buildParseTrees && t.tokenIndex === -1) {\n\t\t\t// we must have conjured up a new token during single token\n\t\t\t// insertion\n\t\t\t// if it's not the current symbol\n\t\t\tthis._ctx.addErrorNode(t);\n\t\t}\n\t}\n\treturn t;\n};\n\nParser.prototype.getParseListeners = function() {\n\treturn this._parseListeners || [];\n};\n\n// Registers {@code listener} to receive events during the parsing process.\n//\n// <p>To support output-preserving grammar transformations (including but not\n// limited to left-recursion removal, automated left-factoring, and\n// optimized code generation), calls to listener methods during the parse\n// may differ substantially from calls made by\n// {@link ParseTreeWalker//DEFAULT} used after the parse is complete. In\n// particular, rule entry and exit events may occur in a different order\n// during the parse than after the parser. In addition, calls to certain\n// rule entry methods may be omitted.</p>\n//\n// <p>With the following specific exceptions, calls to listener events are\n// <em>deterministic</em>, i.e. for identical input the calls to listener\n// methods will be the same.</p>\n//\n// <ul>\n// <li>Alterations to the grammar used to generate code may change the\n// behavior of the listener calls.</li>\n// <li>Alterations to the command line options passed to ANTLR 4 when\n// generating the parser may change the behavior of the listener calls.</li>\n// <li>Changing the version of the ANTLR Tool used to generate the parser\n// may change the behavior of the listener calls.</li>\n// </ul>\n//\n// @param listener the listener to add\n//\n// @throws NullPointerException if {@code} listener is {@code null}\n//\nParser.prototype.addParseListener = function(listener) {\n\tif (listener === null) {\n\t\tthrow \"listener\";\n\t}\n\tif (this._parseListeners === null) {\n\t\tthis._parseListeners = [];\n\t}\n\tthis._parseListeners.push(listener);\n};\n\n//\n// Remove {@code listener} from the list of parse listeners.\n//\n// <p>If {@code listener} is {@code null} or has not been added as a parse\n// listener, this method does nothing.</p>\n// @param listener the listener to remove\n//\nParser.prototype.removeParseListener = function(listener) {\n\tif (this._parseListeners !== null) {\n\t\tvar idx = this._parseListeners.indexOf(listener);\n\t\tif (idx >= 0) {\n\t\t\tthis._parseListeners.splice(idx, 1);\n\t\t}\n\t\tif (this._parseListeners.length === 0) {\n\t\t\tthis._parseListeners = null;\n\t\t}\n\t}\n};\n\n// Remove all parse listeners.\nParser.prototype.removeParseListeners = function() {\n\tthis._parseListeners = null;\n};\n\n// Notify any parse listeners of an enter rule event.\nParser.prototype.triggerEnterRuleEvent = function() {\n\tif (this._parseListeners !== null) {\n        var ctx = this._ctx;\n\t\tthis._parseListeners.map(function(listener) {\n\t\t\tlistener.enterEveryRule(ctx);\n\t\t\tctx.enterRule(listener);\n\t\t});\n\t}\n};\n\n//\n// Notify any parse listeners of an exit rule event.\n//\n// @see //addParseListener\n//\nParser.prototype.triggerExitRuleEvent = function() {\n\tif (this._parseListeners !== null) {\n\t\t// reverse order walk of listeners\n        var ctx = this._ctx;\n\t\tthis._parseListeners.slice(0).reverse().map(function(listener) {\n\t\t\tctx.exitRule(listener);\n\t\t\tlistener.exitEveryRule(ctx);\n\t\t});\n\t}\n};\n\nParser.prototype.getTokenFactory = function() {\n\treturn this._input.tokenSource._factory;\n};\n\n// Tell our token source and error strategy about a new way to create tokens.//\nParser.prototype.setTokenFactory = function(factory) {\n\tthis._input.tokenSource._factory = factory;\n};\n\n// The ATN with bypass alternatives is expensive to create so we create it\n// lazily.\n//\n// @throws UnsupportedOperationException if the current parser does not\n// implement the {@link //getSerializedATN()} method.\n//\nParser.prototype.getATNWithBypassAlts = function() {\n\tvar serializedAtn = this.getSerializedATN();\n\tif (serializedAtn === null) {\n\t\tthrow \"The current parser does not support an ATN with bypass alternatives.\";\n\t}\n\tvar result = this.bypassAltsAtnCache[serializedAtn];\n\tif (result === null) {\n\t\tvar deserializationOptions = new ATNDeserializationOptions();\n\t\tdeserializationOptions.generateRuleBypassTransitions = true;\n\t\tresult = new ATNDeserializer(deserializationOptions)\n\t\t\t\t.deserialize(serializedAtn);\n\t\tthis.bypassAltsAtnCache[serializedAtn] = result;\n\t}\n\treturn result;\n};\n\n// The preferred method of getting a tree pattern. For example, here's a\n// sample use:\n//\n// <pre>\n// ParseTree t = parser.expr();\n// ParseTreePattern p = parser.compileParseTreePattern(\"&lt;ID&gt;+0\",\n// MyParser.RULE_expr);\n// ParseTreeMatch m = p.match(t);\n// String id = m.get(\"ID\");\n// </pre>\n\nvar Lexer = require('./Lexer').Lexer;\n\nParser.prototype.compileParseTreePattern = function(pattern, patternRuleIndex, lexer) {\n\tlexer = lexer || null;\n\tif (lexer === null) {\n\t\tif (this.getTokenStream() !== null) {\n\t\t\tvar tokenSource = this.getTokenStream().tokenSource;\n\t\t\tif (tokenSource instanceof Lexer) {\n\t\t\t\tlexer = tokenSource;\n\t\t\t}\n\t\t}\n\t}\n\tif (lexer === null) {\n\t\tthrow \"Parser can't discover a lexer to use\";\n\t}\n\tvar m = new ParseTreePatternMatcher(lexer, this);\n\treturn m.compile(pattern, patternRuleIndex);\n};\n\nParser.prototype.getInputStream = function() {\n\treturn this.getTokenStream();\n};\n\nParser.prototype.setInputStream = function(input) {\n\tthis.setTokenStream(input);\n};\n\nParser.prototype.getTokenStream = function() {\n\treturn this._input;\n};\n\n// Set the token stream and reset the parser.//\nParser.prototype.setTokenStream = function(input) {\n\tthis._input = null;\n\tthis.reset();\n\tthis._input = input;\n};\n\n// Match needs to return the current input symbol, which gets put\n// into the label for the associated token ref; e.g., x=ID.\n//\nParser.prototype.getCurrentToken = function() {\n\treturn this._input.LT(1);\n};\n\nParser.prototype.notifyErrorListeners = function(msg, offendingToken, err) {\n\toffendingToken = offendingToken || null;\n\terr = err || null;\n\tif (offendingToken === null) {\n\t\toffendingToken = this.getCurrentToken();\n\t}\n\tthis._syntaxErrors += 1;\n\tvar line = offendingToken.line;\n\tvar column = offendingToken.column;\n\tvar listener = this.getErrorListenerDispatch();\n\tlistener.syntaxError(this, offendingToken, line, column, msg, err);\n};\n\n//\n// Consume and return the {@linkplain //getCurrentToken current symbol}.\n//\n// <p>E.g., given the following input with {@code A} being the current\n// lookahead symbol, this function moves the cursor to {@code B} and returns\n// {@code A}.</p>\n//\n// <pre>\n// A B\n// ^\n// </pre>\n//\n// If the parser is not in error recovery mode, the consumed symbol is added\n// to the parse tree using {@link ParserRuleContext//addChild(Token)}, and\n// {@link ParseTreeListener//visitTerminal} is called on any parse listeners.\n// If the parser <em>is</em> in error recovery mode, the consumed symbol is\n// added to the parse tree using\n// {@link ParserRuleContext//addErrorNode(Token)}, and\n// {@link ParseTreeListener//visitErrorNode} is called on any parse\n// listeners.\n//\nParser.prototype.consume = function() {\n\tvar o = this.getCurrentToken();\n\tif (o.type !== Token.EOF) {\n\t\tthis.getInputStream().consume();\n\t}\n\tvar hasListener = this._parseListeners !== null && this._parseListeners.length > 0;\n\tif (this.buildParseTrees || hasListener) {\n\t\tvar node;\n\t\tif (this._errHandler.inErrorRecoveryMode(this)) {\n\t\t\tnode = this._ctx.addErrorNode(o);\n\t\t} else {\n\t\t\tnode = this._ctx.addTokenNode(o);\n\t\t}\n        node.invokingState = this.state;\n\t\tif (hasListener) {\n\t\t\tthis._parseListeners.map(function(listener) {\n\t\t\t\tif (node instanceof ErrorNode || (node.isErrorNode !== undefined && node.isErrorNode())) {\n\t\t\t\t\tlistener.visitErrorNode(node);\n\t\t\t\t} else if (node instanceof TerminalNode) {\n\t\t\t\t\tlistener.visitTerminal(node);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\treturn o;\n};\n\nParser.prototype.addContextToParseTree = function() {\n\t// add current context to parent if we have a parent\n\tif (this._ctx.parentCtx !== null) {\n\t\tthis._ctx.parentCtx.addChild(this._ctx);\n\t}\n};\n\n// Always called by generated parsers upon entry to a rule. Access field\n// {@link //_ctx} get the current context.\n\nParser.prototype.enterRule = function(localctx, state, ruleIndex) {\n\tthis.state = state;\n\tthis._ctx = localctx;\n\tthis._ctx.start = this._input.LT(1);\n\tif (this.buildParseTrees) {\n\t\tthis.addContextToParseTree();\n\t}\n\tif (this._parseListeners !== null) {\n\t\tthis.triggerEnterRuleEvent();\n\t}\n};\n\nParser.prototype.exitRule = function() {\n\tthis._ctx.stop = this._input.LT(-1);\n\t// trigger event on _ctx, before it reverts to parent\n\tif (this._parseListeners !== null) {\n\t\tthis.triggerExitRuleEvent();\n\t}\n\tthis.state = this._ctx.invokingState;\n\tthis._ctx = this._ctx.parentCtx;\n};\n\nParser.prototype.enterOuterAlt = function(localctx, altNum) {\n   \tlocalctx.setAltNumber(altNum);\n\t// if we have new localctx, make sure we replace existing ctx\n\t// that is previous child of parse tree\n\tif (this.buildParseTrees && this._ctx !== localctx) {\n\t\tif (this._ctx.parentCtx !== null) {\n\t\t\tthis._ctx.parentCtx.removeLastChild();\n\t\t\tthis._ctx.parentCtx.addChild(localctx);\n\t\t}\n\t}\n\tthis._ctx = localctx;\n};\n\n// Get the precedence level for the top-most precedence rule.\n//\n// @return The precedence level for the top-most precedence rule, or -1 if\n// the parser context is not nested within a precedence rule.\n\nParser.prototype.getPrecedence = function() {\n\tif (this._precedenceStack.length === 0) {\n\t\treturn -1;\n\t} else {\n\t\treturn this._precedenceStack[this._precedenceStack.length-1];\n\t}\n};\n\nParser.prototype.enterRecursionRule = function(localctx, state, ruleIndex,\n\t\tprecedence) {\n\tthis.state = state;\n\tthis._precedenceStack.push(precedence);\n\tthis._ctx = localctx;\n\tthis._ctx.start = this._input.LT(1);\n\tif (this._parseListeners !== null) {\n\t\tthis.triggerEnterRuleEvent(); // simulates rule entry for\n\t\t\t\t\t\t\t\t\t\t// left-recursive rules\n\t}\n};\n\n//\n// Like {@link //enterRule} but for recursive rules.\n\nParser.prototype.pushNewRecursionContext = function(localctx, state, ruleIndex) {\n\tvar previous = this._ctx;\n\tprevious.parentCtx = localctx;\n\tprevious.invokingState = state;\n\tprevious.stop = this._input.LT(-1);\n\n\tthis._ctx = localctx;\n\tthis._ctx.start = previous.start;\n\tif (this.buildParseTrees) {\n\t\tthis._ctx.addChild(previous);\n\t}\n\tif (this._parseListeners !== null) {\n\t\tthis.triggerEnterRuleEvent(); // simulates rule entry for\n\t\t\t\t\t\t\t\t\t\t// left-recursive rules\n\t}\n};\n\nParser.prototype.unrollRecursionContexts = function(parentCtx) {\n\tthis._precedenceStack.pop();\n\tthis._ctx.stop = this._input.LT(-1);\n\tvar retCtx = this._ctx; // save current ctx (return value)\n\t// unroll so _ctx is as it was before call to recursive method\n\tif (this._parseListeners !== null) {\n\t\twhile (this._ctx !== parentCtx) {\n\t\t\tthis.triggerExitRuleEvent();\n\t\t\tthis._ctx = this._ctx.parentCtx;\n\t\t}\n\t} else {\n\t\tthis._ctx = parentCtx;\n\t}\n\t// hook into tree\n\tretCtx.parentCtx = parentCtx;\n\tif (this.buildParseTrees && parentCtx !== null) {\n\t\t// add return ctx into invoking rule's tree\n\t\tparentCtx.addChild(retCtx);\n\t}\n};\n\nParser.prototype.getInvokingContext = function(ruleIndex) {\n\tvar ctx = this._ctx;\n\twhile (ctx !== null) {\n\t\tif (ctx.ruleIndex === ruleIndex) {\n\t\t\treturn ctx;\n\t\t}\n\t\tctx = ctx.parentCtx;\n\t}\n\treturn null;\n};\n\nParser.prototype.precpred = function(localctx, precedence) {\n\treturn precedence >= this._precedenceStack[this._precedenceStack.length-1];\n};\n\nParser.prototype.inContext = function(context) {\n\t// TODO: useful in parser?\n\treturn false;\n};\n\n//\n// Checks whether or not {@code symbol} can follow the current state in the\n// ATN. The behavior of this method is equivalent to the following, but is\n// implemented such that the complete context-sensitive follow set does not\n// need to be explicitly constructed.\n//\n// <pre>\n// return getExpectedTokens().contains(symbol);\n// </pre>\n//\n// @param symbol the symbol type to check\n// @return {@code true} if {@code symbol} can follow the current state in\n// the ATN, otherwise {@code false}.\n\nParser.prototype.isExpectedToken = function(symbol) {\n\tvar atn = this._interp.atn;\n\tvar ctx = this._ctx;\n\tvar s = atn.states[this.state];\n\tvar following = atn.nextTokens(s);\n\tif (following.contains(symbol)) {\n\t\treturn true;\n\t}\n\tif (!following.contains(Token.EPSILON)) {\n\t\treturn false;\n\t}\n\twhile (ctx !== null && ctx.invokingState >= 0 && following.contains(Token.EPSILON)) {\n\t\tvar invokingState = atn.states[ctx.invokingState];\n\t\tvar rt = invokingState.transitions[0];\n\t\tfollowing = atn.nextTokens(rt.followState);\n\t\tif (following.contains(symbol)) {\n\t\t\treturn true;\n\t\t}\n\t\tctx = ctx.parentCtx;\n\t}\n\tif (following.contains(Token.EPSILON) && symbol === Token.EOF) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n};\n\n// Computes the set of input symbols which could follow the current parser\n// state and context, as given by {@link //getState} and {@link //getContext},\n// respectively.\n//\n// @see ATN//getExpectedTokens(int, RuleContext)\n//\nParser.prototype.getExpectedTokens = function() {\n\treturn this._interp.atn.getExpectedTokens(this.state, this._ctx);\n};\n\nParser.prototype.getExpectedTokensWithinCurrentRule = function() {\n\tvar atn = this._interp.atn;\n\tvar s = atn.states[this.state];\n\treturn atn.nextTokens(s);\n};\n\n// Get a rule's index (i.e., {@code RULE_ruleName} field) or -1 if not found.//\nParser.prototype.getRuleIndex = function(ruleName) {\n\tvar ruleIndex = this.getRuleIndexMap()[ruleName];\n\tif (ruleIndex !== null) {\n\t\treturn ruleIndex;\n\t} else {\n\t\treturn -1;\n\t}\n};\n\n// Return List&lt;String&gt; of the rule names in your parser instance\n// leading up to a call to the current rule. You could override if\n// you want more details such as the file/line info of where\n// in the ATN a rule is invoked.\n//\n// this is very useful for error messages.\n//\nParser.prototype.getRuleInvocationStack = function(p) {\n\tp = p || null;\n\tif (p === null) {\n\t\tp = this._ctx;\n\t}\n\tvar stack = [];\n\twhile (p !== null) {\n\t\t// compute what follows who invoked us\n\t\tvar ruleIndex = p.ruleIndex;\n\t\tif (ruleIndex < 0) {\n\t\t\tstack.push(\"n/a\");\n\t\t} else {\n\t\t\tstack.push(this.ruleNames[ruleIndex]);\n\t\t}\n\t\tp = p.parentCtx;\n\t}\n\treturn stack;\n};\n\n// For debugging and other purposes.//\nParser.prototype.getDFAStrings = function() {\n\treturn this._interp.decisionToDFA.toString();\n};\n// For debugging and other purposes.//\nParser.prototype.dumpDFA = function() {\n\tvar seenOne = false;\n\tfor (var i = 0; i < this._interp.decisionToDFA.length; i++) {\n\t\tvar dfa = this._interp.decisionToDFA[i];\n\t\tif (dfa.states.length > 0) {\n\t\t\tif (seenOne) {\n\t\t\t\tconsole.log();\n\t\t\t}\n\t\t\tthis.printer.println(\"Decision \" + dfa.decision + \":\");\n\t\t\tthis.printer.print(dfa.toString(this.literalNames, this.symbolicNames));\n\t\t\tseenOne = true;\n\t\t}\n\t}\n};\n\n/*\n\"\t\t\tprinter = function() {\\r\\n\" +\n\"\t\t\t\tthis.println = function(s) { document.getElementById('output') += s + '\\\\n'; }\\r\\n\" +\n\"\t\t\t\tthis.print = function(s) { document.getElementById('output') += s; }\\r\\n\" +\n\"\t\t\t};\\r\\n\" +\n*/\n\nParser.prototype.getSourceName = function() {\n\treturn this._input.sourceName;\n};\n\n// During a parse is sometimes useful to listen in on the rule entry and exit\n// events as well as token matches. this is for quick and dirty debugging.\n//\nParser.prototype.setTrace = function(trace) {\n\tif (!trace) {\n\t\tthis.removeParseListener(this._tracer);\n\t\tthis._tracer = null;\n\t} else {\n\t\tif (this._tracer !== null) {\n\t\t\tthis.removeParseListener(this._tracer);\n\t\t}\n\t\tthis._tracer = new TraceListener(this);\n\t\tthis.addParseListener(this._tracer);\n\t}\n};\n\nexports.Parser = Parser;","// Generated from /Users/jimmyhu/Projects/tibbo-basic/server/language/TibboBasic/TibboBasicPreprocessorLexer.g4 by ANTLR 4.8\r\n// jshint ignore: start\r\nvar antlr4 = require('antlr4/index');\r\n\r\n\r\n\r\nvar serializedATN = [\"\\u0003\\u608b\\ua72a\\u8133\\ub9ed\\u417c\\u3be7\\u7786\\u5964\",\r\n    \"\\u0002&\\u0233\\b\\u0001\\b\\u0001\\b\\u0001\\b\\u0001\\b\\u0001\\u0004\\u0002\\t\",\r\n    \"\\u0002\\u0004\\u0003\\t\\u0003\\u0004\\u0004\\t\\u0004\\u0004\\u0005\\t\\u0005\\u0004\",\r\n    \"\\u0006\\t\\u0006\\u0004\\u0007\\t\\u0007\\u0004\\b\\t\\b\\u0004\\t\\t\\t\\u0004\\n\\t\",\r\n    \"\\n\\u0004\\u000b\\t\\u000b\\u0004\\f\\t\\f\\u0004\\r\\t\\r\\u0004\\u000e\\t\\u000e\\u0004\",\r\n    \"\\u000f\\t\\u000f\\u0004\\u0010\\t\\u0010\\u0004\\u0011\\t\\u0011\\u0004\\u0012\\t\",\r\n    \"\\u0012\\u0004\\u0013\\t\\u0013\\u0004\\u0014\\t\\u0014\\u0004\\u0015\\t\\u0015\\u0004\",\r\n    \"\\u0016\\t\\u0016\\u0004\\u0017\\t\\u0017\\u0004\\u0018\\t\\u0018\\u0004\\u0019\\t\",\r\n    \"\\u0019\\u0004\\u001a\\t\\u001a\\u0004\\u001b\\t\\u001b\\u0004\\u001c\\t\\u001c\\u0004\",\r\n    \"\\u001d\\t\\u001d\\u0004\\u001e\\t\\u001e\\u0004\\u001f\\t\\u001f\\u0004 \\t \\u0004\",\r\n    \"!\\t!\\u0004\\\"\\t\\\"\\u0004#\\t#\\u0004$\\t$\\u0004%\\t%\\u0004&\\t&\\u0004\\'\\t\\'\",\r\n    \"\\u0004(\\t(\\u0004)\\t)\\u0004*\\t*\\u0004+\\t+\\u0004,\\t,\\u0004-\\t-\\u0004.\",\r\n    \"\\t.\\u0004/\\t/\\u00040\\t0\\u00041\\t1\\u00042\\t2\\u00043\\t3\\u00044\\t4\\u0004\",\r\n    \"5\\t5\\u00046\\t6\\u00047\\t7\\u00048\\t8\\u00049\\t9\\u0004:\\t:\\u0004;\\t;\\u0004\",\r\n    \"<\\t<\\u0004=\\t=\\u0004>\\t>\\u0004?\\t?\\u0004@\\t@\\u0004A\\tA\\u0004B\\tB\\u0004\",\r\n    \"C\\tC\\u0004D\\tD\\u0004E\\tE\\u0004F\\tF\\u0004G\\tG\\u0004H\\tH\\u0004I\\tI\\u0004\",\r\n    \"J\\tJ\\u0004K\\tK\\u0004L\\tL\\u0003\\u0002\\u0006\\u0002\\u009f\\n\\u0002\\r\\u0002\",\r\n    \"\\u000e\\u0002\\u00a0\\u0003\\u0002\\u0003\\u0002\\u0003\\u0003\\u0007\\u0003\\u00a6\",\r\n    \"\\n\\u0003\\f\\u0003\\u000e\\u0003\\u00a9\\u000b\\u0003\\u0003\\u0003\\u0003\\u0003\",\r\n    \"\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\",\r\n    \"\\u0006\\u0003\\u00b3\\n\\u0003\\r\\u0003\\u000e\\u0003\\u00b4\\u0003\\u0003\\u0003\",\r\n    \"\\u0003\\u0003\\u0004\\u0007\\u0004\\u00ba\\n\\u0004\\f\\u0004\\u000e\\u0004\\u00bd\",\r\n    \"\\u000b\\u0004\\u0003\\u0004\\u0003\\u0004\\u0003\\u0004\\u0003\\u0004\\u0003\\u0004\",\r\n    \"\\u0003\\u0004\\u0003\\u0004\\u0003\\u0004\\u0003\\u0004\\u0003\\u0004\\u0006\\u0004\",\r\n    \"\\u00c9\\n\\u0004\\r\\u0004\\u000e\\u0004\\u00ca\\u0003\\u0004\\u0003\\u0004\\u0003\",\r\n    \"\\u0005\\u0007\\u0005\\u00d0\\n\\u0005\\f\\u0005\\u000e\\u0005\\u00d3\\u000b\\u0005\",\r\n    \"\\u0003\\u0005\\u0003\\u0005\\u0003\\u0005\\u0003\\u0005\\u0003\\u0006\\u0003\\u0006\",\r\n    \"\\u0007\\u0006\\u00db\\n\\u0006\\f\\u0006\\u000e\\u0006\\u00de\\u000b\\u0006\\u0003\",\r\n    \"\\u0006\\u0003\\u0006\\u0003\\u0007\\u0003\\u0007\\u0003\\u0007\\u0003\\u0007\\u0003\",\r\n    \"\\b\\u0006\\b\\u00e7\\n\\b\\r\\b\\u000e\\b\\u00e8\\u0003\\t\\u0005\\t\\u00ec\\n\\t\\u0003\",\r\n    \"\\t\\u0003\\t\\u0003\\n\\u0003\\n\\u0003\\n\\u0003\\n\\u0003\\n\\u0003\\n\\u0003\\n\\u0003\",\r\n    \"\\n\\u0003\\n\\u0003\\u000b\\u0003\\u000b\\u0003\\u000b\\u0003\\u000b\\u0003\\u000b\",\r\n    \"\\u0003\\u000b\\u0003\\u000b\\u0006\\u000b\\u0100\\n\\u000b\\r\\u000b\\u000e\\u000b\",\r\n    \"\\u0101\\u0003\\u000b\\u0003\\u000b\\u0003\\f\\u0003\\f\\u0003\\f\\u0003\\f\\u0003\",\r\n    \"\\f\\u0003\\f\\u0003\\f\\u0003\\f\\u0003\\r\\u0003\\r\\u0003\\r\\u0003\\u000e\\u0003\",\r\n    \"\\u000e\\u0003\\u000e\\u0003\\u000e\\u0003\\u000e\\u0003\\u000f\\u0003\\u000f\\u0003\",\r\n    \"\\u000f\\u0003\\u000f\\u0003\\u000f\\u0003\\u0010\\u0003\\u0010\\u0003\\u0010\\u0003\",\r\n    \"\\u0010\\u0003\\u0010\\u0003\\u0010\\u0003\\u0011\\u0003\\u0011\\u0003\\u0011\\u0003\",\r\n    \"\\u0011\\u0003\\u0011\\u0003\\u0011\\u0003\\u0012\\u0003\\u0012\\u0003\\u0012\\u0003\",\r\n    \"\\u0012\\u0003\\u0012\\u0003\\u0012\\u0003\\u0012\\u0003\\u0013\\u0003\\u0013\\u0003\",\r\n    \"\\u0013\\u0003\\u0013\\u0003\\u0013\\u0003\\u0013\\u0003\\u0014\\u0003\\u0014\\u0003\",\r\n    \"\\u0014\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\\u0003\",\r\n    \"\\u0015\\u0003\\u0015\\u0003\\u0016\\u0003\\u0016\\u0003\\u0017\\u0003\\u0017\\u0003\",\r\n    \"\\u0018\\u0003\\u0018\\u0003\\u0019\\u0003\\u0019\\u0003\\u0019\\u0003\\u001a\\u0003\",\r\n    \"\\u001a\\u0003\\u001a\\u0003\\u001a\\u0003\\u001b\\u0003\\u001b\\u0003\\u001b\\u0003\",\r\n    \"\\u001c\\u0003\\u001c\\u0003\\u001d\\u0003\\u001d\\u0003\\u001e\\u0003\\u001e\\u0003\",\r\n    \"\\u001e\\u0003\\u001f\\u0003\\u001f\\u0003\\u001f\\u0003 \\u0006 \\u0159\\n \\r\",\r\n    \" \\u000e \\u015a\\u0003 \\u0003 \\u0003!\\u0003!\\u0003\\\"\\u0003\\\"\\u0003\\\"\\u0007\",\r\n    \"\\\"\\u0164\\n\\\"\\f\\\"\\u000e\\\"\\u0167\\u000b\\\"\\u0003#\\u0006#\\u016a\\n#\\r#\\u000e\",\r\n    \"#\\u016b\\u0003$\\u0006$\\u016f\\n$\\r$\\u000e$\\u0170\\u0003$\\u0003$\\u0007$\",\r\n    \"\\u0175\\n$\\f$\\u000e$\\u0178\\u000b$\\u0003$\\u0003$\\u0006$\\u017c\\n$\\r$\\u000e\",\r\n    \"$\\u017d\\u0005$\\u0180\\n$\\u0003%\\u0005%\\u0183\\n%\\u0003%\\u0003%\\u0003%\",\r\n    \"\\u0003%\\u0003%\\u0003&\\u0003&\\u0007&\\u018c\\n&\\f&\\u000e&\\u018f\\u000b&\",\r\n    \"\\u0003&\\u0003&\\u0003&\\u0003\\'\\u0003\\'\\u0003\\'\\u0007\\'\\u0197\\n\\'\\f\\'\",\r\n    \"\\u000e\\'\\u019a\\u000b\\'\\u0003\\'\\u0003\\'\\u0003\\'\\u0007\\'\\u019f\\n\\'\\f\\'\",\r\n    \"\\u000e\\'\\u01a2\\u000b\\'\\u0003\\'\\u0005\\'\\u01a5\\n\\'\\u0003\\'\\u0003\\'\\u0003\",\r\n    \"\\'\\u0003(\\u0005(\\u01ab\\n(\\u0003(\\u0003(\\u0003(\\u0003(\\u0003(\\u0003)\",\r\n    \"\\u0006)\\u01b3\\n)\\r)\\u000e)\\u01b4\\u0003*\\u0003*\\u0005*\\u01b9\\n*\\u0003\",\r\n    \"*\\u0003*\\u0003*\\u0003*\\u0003+\\u0005+\\u01c0\\n+\\u0003+\\u0003+\\u0003+\\u0003\",\r\n    \"+\\u0003+\\u0003,\\u0003,\\u0003,\\u0003,\\u0007,\\u01cb\\n,\\f,\\u000e,\\u01ce\",\r\n    \"\\u000b,\\u0003,\\u0003,\\u0003,\\u0003,\\u0003-\\u0003-\\u0003-\\u0003-\\u0005\",\r\n    \"-\\u01d8\\n-\\u0003.\\u0003.\\u0003.\\u0003.\\u0003.\\u0003.\\u0003.\\u0003.\\u0003\",\r\n    \".\\u0005.\\u01e3\\n.\\u0003/\\u0003/\\u0003/\\u0003/\\u0003/\\u0003/\\u0003/\\u0003\",\r\n    \"0\\u00030\\u00031\\u00031\\u00031\\u00031\\u00071\\u01f2\\n1\\f1\\u000e1\\u01f5\",\r\n    \"\\u000b1\\u00031\\u00031\\u00032\\u00032\\u00032\\u00032\\u00032\\u00052\\u01fe\",\r\n    \"\\n2\\u00033\\u00033\\u00034\\u00034\\u00035\\u00035\\u00036\\u00036\\u00037\\u0003\",\r\n    \"7\\u00038\\u00038\\u00039\\u00039\\u0003:\\u0003:\\u0003;\\u0003;\\u0003<\\u0003\",\r\n    \"<\\u0003=\\u0003=\\u0003>\\u0003>\\u0003?\\u0003?\\u0003@\\u0003@\\u0003A\\u0003\",\r\n    \"A\\u0003B\\u0003B\\u0003C\\u0003C\\u0003D\\u0003D\\u0003E\\u0003E\\u0003F\\u0003\",\r\n    \"F\\u0003G\\u0003G\\u0003H\\u0003H\\u0003I\\u0003I\\u0003J\\u0003J\\u0003K\\u0003\",\r\n    \"K\\u0003L\\u0003L\\u0002\\u0002M\\u0007\\u0003\\t\\u0004\\u000b\\u0005\\r\\u0006\",\r\n    \"\\u000f\\u0002\\u0011\\u0002\\u0013\\u0007\\u0015\\b\\u0017\\t\\u0019\\n\\u001b\\u000b\",\r\n    \"\\u001d\\f\\u001f\\r!\\u000e#\\u000f%\\u0010\\'\\u0011)\\u0012+\\u0013-\\u0014/\",\r\n    \"\\u00151\\u00163\\u00175\\u00187\\u00199\\u001a;\\u001b=\\u001c?\\u001dA\\u001e\",\r\n    \"C\\u001fE G!I\\\"K#M\\u0002O\\u0002Q\\u0002S\\u0002U$W%Y\\u0002[&]\\u0002_\\u0002\",\r\n    \"a\\u0002c\\u0002e\\u0002g\\u0002i\\u0002k\\u0002m\\u0002o\\u0002q\\u0002s\\u0002\",\r\n    \"u\\u0002w\\u0002y\\u0002{\\u0002}\\u0002\\u007f\\u0002\\u0081\\u0002\\u0083\\u0002\",\r\n    \"\\u0085\\u0002\\u0087\\u0002\\u0089\\u0002\\u008b\\u0002\\u008d\\u0002\\u008f\\u0002\",\r\n    \"\\u0091\\u0002\\u0093\\u0002\\u0095\\u0002\\u0097\\u0002\\u0099\\u0002\\u009b\\u0002\",\r\n    \"\\u0007\\u0002\\u0003\\u0004\\u0005\\u0006/\\u0004\\u0002\\u000b\\u000b\\\"\\\"\\u0004\",\r\n    \"\\u0002\\f\\f\\u000f\\u000f\\u0006\\u0002\\f\\f\\u000f\\u000f$%))\\u0004\\u00022\",\r\n    \";aa\\u0003\\u00022;\\u0007\\u0002\\u000b\\u000b\\\"\\\"..002;\\u0005\\u0002\\f\\f\",\r\n    \"\\u000f\\u000f^^\\u0004\\u0002$$bb\\u0005\\u0002\\f\\f\\u000f\\u000f$$\\n\\u0002\",\r\n    \"$$))^^ddhhppttvv\\u0003\\u000225\\u0003\\u000229\\u0005\\u00022;CHch\\u0004\",\r\n    \"\\u0002$$^^\\u0006\\u0002&&C\\\\aac|\\u0004\\u0002\\u0002\\u0101\\ud802\\udc01\",\r\n    \"\\u0003\\u0002\\ud802\\udc01\\u0003\\u0002\\udc02\\ue001\\u0003\\u0002\\u00eb\\u00eb\",\r\n    \"\\u0004\\u0002CCcc\\u0004\\u0002DDdd\\u0004\\u0002EEee\\u0004\\u0002FFff\\u0004\",\r\n    \"\\u0002GGgg\\u0004\\u0002HHhh\\u0004\\u0002IIii\\u0004\\u0002JJjj\\u0004\\u0002\",\r\n    \"KKkk\\u0004\\u0002LLll\\u0004\\u0002MMmm\\u0004\\u0002NNnn\\u0004\\u0002OOo\",\r\n    \"o\\u0004\\u0002PPpp\\u0004\\u0002QQqq\\u0004\\u0002RRrr\\u0004\\u0002SSss\\u0004\",\r\n    \"\\u0002TTtt\\u0004\\u0002UUuu\\u0004\\u0002VVvv\\u0004\\u0002WWww\\u0004\\u0002\",\r\n    \"XXxx\\u0004\\u0002YYyy\\u0004\\u0002ZZzz\\u0004\\u0002[[{{\\u0004\\u0002\\\\\\\\\",\r\n    \"||\\u0002\\u0236\\u0002\\u0007\\u0003\\u0002\\u0002\\u0002\\u0002\\t\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0002\\u000b\\u0003\\u0002\\u0002\\u0002\\u0002\\r\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0002\\u000f\\u0003\\u0002\\u0002\\u0002\\u0002\\u0011\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0002\\u0013\\u0003\\u0002\\u0002\\u0002\\u0002\\u0015\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0003\\u0017\\u0003\\u0002\\u0002\\u0002\\u0003\\u0019\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0003\\u001b\\u0003\\u0002\\u0002\\u0002\\u0003\\u001d\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0003\\u001f\\u0003\\u0002\\u0002\\u0002\\u0003!\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0003#\\u0003\\u0002\\u0002\\u0002\\u0003%\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u0003\\'\\u0003\\u0002\\u0002\\u0002\\u0003)\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0003+\\u0003\\u0002\\u0002\\u0002\\u0003-\\u0003\\u0002\\u0002\\u0002\\u0003\",\r\n    \"/\\u0003\\u0002\\u0002\\u0002\\u00031\\u0003\\u0002\\u0002\\u0002\\u00033\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u00035\\u0003\\u0002\\u0002\\u0002\\u00037\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u00039\\u0003\\u0002\\u0002\\u0002\\u0003;\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u0003=\\u0003\\u0002\\u0002\\u0002\\u0003?\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0003A\\u0003\\u0002\\u0002\\u0002\\u0003C\\u0003\\u0002\\u0002\\u0002\\u0003\",\r\n    \"E\\u0003\\u0002\\u0002\\u0002\\u0003G\\u0003\\u0002\\u0002\\u0002\\u0003I\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0003K\\u0003\\u0002\\u0002\\u0002\\u0003M\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0003O\\u0003\\u0002\\u0002\\u0002\\u0004Q\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u0005S\\u0003\\u0002\\u0002\\u0002\\u0005U\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0006W\\u0003\\u0002\\u0002\\u0002\\u0006Y\\u0003\\u0002\\u0002\\u0002\\u0006\",\r\n    \"[\\u0003\\u0002\\u0002\\u0002\\u0007\\u009e\\u0003\\u0002\\u0002\\u0002\\t\\u00a7\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u000b\\u00bb\\u0003\\u0002\\u0002\\u0002\\r\\u00d1\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u000f\\u00d8\\u0003\\u0002\\u0002\\u0002\\u0011\\u00e1\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0013\\u00e6\\u0003\\u0002\\u0002\\u0002\\u0015\\u00eb\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0017\\u00ef\\u0003\\u0002\\u0002\\u0002\\u0019\\u00f8\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u001b\\u0105\\u0003\\u0002\\u0002\\u0002\\u001d\\u010d\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u001f\\u0110\\u0003\\u0002\\u0002\\u0002!\\u0115\",\r\n    \"\\u0003\\u0002\\u0002\\u0002#\\u011a\\u0003\\u0002\\u0002\\u0002%\\u0120\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\'\\u0126\\u0003\\u0002\\u0002\\u0002)\\u012d\\u0003\\u0002\",\r\n    \"\\u0002\\u0002+\\u0133\\u0003\\u0002\\u0002\\u0002-\\u013b\\u0003\\u0002\\u0002\",\r\n    \"\\u0002/\\u013d\\u0003\\u0002\\u0002\\u00021\\u013f\\u0003\\u0002\\u0002\\u0002\",\r\n    \"3\\u0141\\u0003\\u0002\\u0002\\u00025\\u0143\\u0003\\u0002\\u0002\\u00027\\u0146\",\r\n    \"\\u0003\\u0002\\u0002\\u00029\\u014a\\u0003\\u0002\\u0002\\u0002;\\u014d\\u0003\",\r\n    \"\\u0002\\u0002\\u0002=\\u014f\\u0003\\u0002\\u0002\\u0002?\\u0151\\u0003\\u0002\",\r\n    \"\\u0002\\u0002A\\u0154\\u0003\\u0002\\u0002\\u0002C\\u0158\\u0003\\u0002\\u0002\",\r\n    \"\\u0002E\\u015e\\u0003\\u0002\\u0002\\u0002G\\u0160\\u0003\\u0002\\u0002\\u0002\",\r\n    \"I\\u0169\\u0003\\u0002\\u0002\\u0002K\\u017f\\u0003\\u0002\\u0002\\u0002M\\u0182\",\r\n    \"\\u0003\\u0002\\u0002\\u0002O\\u0189\\u0003\\u0002\\u0002\\u0002Q\\u0193\\u0003\",\r\n    \"\\u0002\\u0002\\u0002S\\u01aa\\u0003\\u0002\\u0002\\u0002U\\u01b2\\u0003\\u0002\",\r\n    \"\\u0002\\u0002W\\u01b6\\u0003\\u0002\\u0002\\u0002Y\\u01bf\\u0003\\u0002\\u0002\",\r\n    \"\\u0002[\\u01c6\\u0003\\u0002\\u0002\\u0002]\\u01d7\\u0003\\u0002\\u0002\\u0002\",\r\n    \"_\\u01e2\\u0003\\u0002\\u0002\\u0002a\\u01e4\\u0003\\u0002\\u0002\\u0002c\\u01eb\",\r\n    \"\\u0003\\u0002\\u0002\\u0002e\\u01ed\\u0003\\u0002\\u0002\\u0002g\\u01fd\\u0003\",\r\n    \"\\u0002\\u0002\\u0002i\\u01ff\\u0003\\u0002\\u0002\\u0002k\\u0201\\u0003\\u0002\",\r\n    \"\\u0002\\u0002m\\u0203\\u0003\\u0002\\u0002\\u0002o\\u0205\\u0003\\u0002\\u0002\",\r\n    \"\\u0002q\\u0207\\u0003\\u0002\\u0002\\u0002s\\u0209\\u0003\\u0002\\u0002\\u0002\",\r\n    \"u\\u020b\\u0003\\u0002\\u0002\\u0002w\\u020d\\u0003\\u0002\\u0002\\u0002y\\u020f\",\r\n    \"\\u0003\\u0002\\u0002\\u0002{\\u0211\\u0003\\u0002\\u0002\\u0002}\\u0213\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u007f\\u0215\\u0003\\u0002\\u0002\\u0002\\u0081\\u0217\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0083\\u0219\\u0003\\u0002\\u0002\\u0002\\u0085\\u021b\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0087\\u021d\\u0003\\u0002\\u0002\\u0002\\u0089\\u021f\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u008b\\u0221\\u0003\\u0002\\u0002\\u0002\\u008d\\u0223\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u008f\\u0225\\u0003\\u0002\\u0002\\u0002\\u0091\\u0227\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0093\\u0229\\u0003\\u0002\\u0002\\u0002\\u0095\\u022b\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0097\\u022d\\u0003\\u0002\\u0002\\u0002\\u0099\\u022f\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u009b\\u0231\\u0003\\u0002\\u0002\\u0002\\u009d\\u009f\\t\",\r\n    \"\\u0002\\u0002\\u0002\\u009e\\u009d\\u0003\\u0002\\u0002\\u0002\\u009f\\u00a0\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u00a0\\u009e\\u0003\\u0002\\u0002\\u0002\\u00a0\\u00a1\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u00a1\\u00a2\\u0003\\u0002\\u0002\\u0002\\u00a2\\u00a3\\b\",\r\n    \"\\u0002\\u0002\\u0002\\u00a3\\b\\u0003\\u0002\\u0002\\u0002\\u00a4\\u00a6\\t\\u0002\",\r\n    \"\\u0002\\u0002\\u00a5\\u00a4\\u0003\\u0002\\u0002\\u0002\\u00a6\\u00a9\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u00a7\\u00a5\\u0003\\u0002\\u0002\\u0002\\u00a7\\u00a8\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u00a8\\u00aa\\u0003\\u0002\\u0002\\u0002\\u00a9\\u00a7\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u00aa\\u00ab\\u0005y;\\u0002\\u00ab\\u00ac\\u0005\\u0083@\\u0002\",\r\n    \"\\u00ac\\u00ad\\u0005m5\\u0002\\u00ad\\u00ae\\u0005\\u007f>\\u0002\\u00ae\\u00af\",\r\n    \"\\u0005\\u0091G\\u0002\\u00af\\u00b0\\u0005o6\\u0002\\u00b0\\u00b2\\u0005q7\\u0002\",\r\n    \"\\u00b1\\u00b3\\t\\u0002\\u0002\\u0002\\u00b2\\u00b1\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u00b3\\u00b4\\u0003\\u0002\\u0002\\u0002\\u00b4\\u00b2\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u00b4\\u00b5\\u0003\\u0002\\u0002\\u0002\\u00b5\\u00b6\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u00b6\\u00b7\\b\\u0003\\u0003\\u0002\\u00b7\\n\\u0003\\u0002\\u0002\\u0002\\u00b8\",\r\n    \"\\u00ba\\t\\u0002\\u0002\\u0002\\u00b9\\u00b8\\u0003\\u0002\\u0002\\u0002\\u00ba\",\r\n    \"\\u00bd\\u0003\\u0002\\u0002\\u0002\\u00bb\\u00b9\\u0003\\u0002\\u0002\\u0002\\u00bb\",\r\n    \"\\u00bc\\u0003\\u0002\\u0002\\u0002\\u00bc\\u00be\\u0003\\u0002\\u0002\\u0002\\u00bd\",\r\n    \"\\u00bb\\u0003\\u0002\\u0002\\u0002\\u00be\\u00bf\\u0005y;\\u0002\\u00bf\\u00c0\",\r\n    \"\\u0005\\u0083@\\u0002\\u00c0\\u00c1\\u0005m5\\u0002\\u00c1\\u00c2\\u0005\\u007f\",\r\n    \">\\u0002\\u00c2\\u00c3\\u0005\\u0091G\\u0002\\u00c3\\u00c4\\u0005o6\\u0002\\u00c4\",\r\n    \"\\u00c5\\u0005q7\\u0002\\u00c5\\u00c6\\u0005\\u0087B\\u0002\\u00c6\\u00c8\\u0005\",\r\n    \"\\u0087B\\u0002\\u00c7\\u00c9\\t\\u0002\\u0002\\u0002\\u00c8\\u00c7\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u00c9\\u00ca\\u0003\\u0002\\u0002\\u0002\\u00ca\\u00c8\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u00ca\\u00cb\\u0003\\u0002\\u0002\\u0002\\u00cb\\u00cc\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u00cc\\u00cd\\b\\u0004\\u0003\\u0002\\u00cd\\f\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u00ce\\u00d0\\t\\u0002\\u0002\\u0002\\u00cf\\u00ce\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u00d0\\u00d3\\u0003\\u0002\\u0002\\u0002\\u00d1\\u00cf\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u00d1\\u00d2\\u0003\\u0002\\u0002\\u0002\\u00d2\\u00d4\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u00d3\\u00d1\\u0003\\u0002\\u0002\\u0002\\u00d4\\u00d5\\u0007%\\u0002\",\r\n    \"\\u0002\\u00d5\\u00d6\\u0003\\u0002\\u0002\\u0002\\u00d6\\u00d7\\b\\u0005\\u0004\",\r\n    \"\\u0002\\u00d7\\u000e\\u0003\\u0002\\u0002\\u0002\\u00d8\\u00dc\\u0007)\\u0002\",\r\n    \"\\u0002\\u00d9\\u00db\\n\\u0003\\u0002\\u0002\\u00da\\u00d9\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u00db\\u00de\\u0003\\u0002\\u0002\\u0002\\u00dc\\u00da\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u00dc\\u00dd\\u0003\\u0002\\u0002\\u0002\\u00dd\\u00df\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u00de\\u00dc\\u0003\\u0002\\u0002\\u0002\\u00df\\u00e0\\b\\u0006\\u0005\",\r\n    \"\\u0002\\u00e0\\u0010\\u0003\\u0002\\u0002\\u0002\\u00e1\\u00e2\\u0005e1\\u0002\",\r\n    \"\\u00e2\\u00e3\\u0003\\u0002\\u0002\\u0002\\u00e3\\u00e4\\b\\u0007\\u0005\\u0002\",\r\n    \"\\u00e4\\u0012\\u0003\\u0002\\u0002\\u0002\\u00e5\\u00e7\\n\\u0004\\u0002\\u0002\",\r\n    \"\\u00e6\\u00e5\\u0003\\u0002\\u0002\\u0002\\u00e7\\u00e8\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u00e8\\u00e6\\u0003\\u0002\\u0002\\u0002\\u00e8\\u00e9\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u00e9\\u0014\\u0003\\u0002\\u0002\\u0002\\u00ea\\u00ec\\u0007\\u000f\\u0002\\u0002\",\r\n    \"\\u00eb\\u00ea\\u0003\\u0002\\u0002\\u0002\\u00eb\\u00ec\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u00ec\\u00ed\\u0003\\u0002\\u0002\\u0002\\u00ed\\u00ee\\u0007\\f\\u0002\\u0002\",\r\n    \"\\u00ee\\u0016\\u0003\\u0002\\u0002\\u0002\\u00ef\\u00f0\\u0005\\u0087B\\u0002\",\r\n    \"\\u00f0\\u00f1\\u0005\\u008bD\\u0002\\u00f1\\u00f2\\u0005i3\\u0002\\u00f2\\u00f3\",\r\n    \"\\u0005u9\\u0002\\u00f3\\u00f4\\u0005\\u0081?\\u0002\\u00f4\\u00f5\\u0005i3\\u0002\",\r\n    \"\\u00f5\\u00f6\\u0003\\u0002\\u0002\\u0002\\u00f6\\u00f7\\b\\n\\u0006\\u0002\\u00f7\",\r\n    \"\\u0018\\u0003\\u0002\\u0002\\u0002\\u00f8\\u00f9\\u0005o6\\u0002\\u00f9\\u00fa\",\r\n    \"\\u0005q7\\u0002\\u00fa\\u00fb\\u0005s8\\u0002\\u00fb\\u00fc\\u0005y;\\u0002\\u00fc\",\r\n    \"\\u00fd\\u0005\\u0083@\\u0002\\u00fd\\u00ff\\u0005q7\\u0002\\u00fe\\u0100\\t\\u0002\",\r\n    \"\\u0002\\u0002\\u00ff\\u00fe\\u0003\\u0002\\u0002\\u0002\\u0100\\u0101\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0101\\u00ff\\u0003\\u0002\\u0002\\u0002\\u0101\\u0102\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0102\\u0103\\u0003\\u0002\\u0002\\u0002\\u0103\\u0104\\b\\u000b\",\r\n    \"\\u0007\\u0002\\u0104\\u001a\\u0003\\u0002\\u0002\\u0002\\u0105\\u0106\\u0005o\",\r\n    \"6\\u0002\\u0106\\u0107\\u0005q7\\u0002\\u0107\\u0108\\u0005s8\\u0002\\u0108\\u0109\",\r\n    \"\\u0005y;\\u0002\\u0109\\u010a\\u0005\\u0083@\\u0002\\u010a\\u010b\\u0005q7\\u0002\",\r\n    \"\\u010b\\u010c\\u0005o6\\u0002\\u010c\\u001c\\u0003\\u0002\\u0002\\u0002\\u010d\",\r\n    \"\\u010e\\u0005y;\\u0002\\u010e\\u010f\\u0005s8\\u0002\\u010f\\u001e\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0110\\u0111\\u0005q7\\u0002\\u0111\\u0112\\u0005\\u007f>\\u0002\",\r\n    \"\\u0112\\u0113\\u0005y;\\u0002\\u0113\\u0114\\u0005s8\\u0002\\u0114 \\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0115\\u0116\\u0005q7\\u0002\\u0116\\u0117\\u0005\\u007f>\\u0002\",\r\n    \"\\u0117\\u0118\\u0005\\u008dE\\u0002\\u0118\\u0119\\u0005q7\\u0002\\u0119\\\"\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u011a\\u011b\\u0005\\u0091G\\u0002\\u011b\\u011c\\u0005\",\r\n    \"\\u0083@\\u0002\\u011c\\u011d\\u0005o6\\u0002\\u011d\\u011e\\u0005q7\\u0002\\u011e\",\r\n    \"\\u011f\\u0005s8\\u0002\\u011f$\\u0003\\u0002\\u0002\\u0002\\u0120\\u0121\\u0005\",\r\n    \"y;\\u0002\\u0121\\u0122\\u0005s8\\u0002\\u0122\\u0123\\u0005o6\\u0002\\u0123\\u0124\",\r\n    \"\\u0005q7\\u0002\\u0124\\u0125\\u0005s8\\u0002\\u0125&\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0126\\u0127\\u0005y;\\u0002\\u0127\\u0128\\u0005s8\\u0002\\u0128\\u0129\\u0005\",\r\n    \"\\u0083@\\u0002\\u0129\\u012a\\u0005o6\\u0002\\u012a\\u012b\\u0005q7\\u0002\\u012b\",\r\n    \"\\u012c\\u0005s8\\u0002\\u012c(\\u0003\\u0002\\u0002\\u0002\\u012d\\u012e\\u0005\",\r\n    \"q7\\u0002\\u012e\\u012f\\u0005\\u0083@\\u0002\\u012f\\u0130\\u0005o6\\u0002\\u0130\",\r\n    \"\\u0131\\u0005y;\\u0002\\u0131\\u0132\\u0005s8\\u0002\\u0132*\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u0133\\u0134\\u0005q7\\u0002\\u0134\\u0135\\u0005\\u008bD\\u0002\\u0135\",\r\n    \"\\u0136\\u0005\\u008bD\\u0002\\u0136\\u0137\\u0005\\u0085A\\u0002\\u0137\\u0138\",\r\n    \"\\u0005\\u008bD\\u0002\\u0138\\u0139\\u0003\\u0002\\u0002\\u0002\\u0139\\u013a\",\r\n    \"\\b\\u0014\\u0006\\u0002\\u013a,\\u0003\\u0002\\u0002\\u0002\\u013b\\u013c\\u0007\",\r\n    \"#\\u0002\\u0002\\u013c.\\u0003\\u0002\\u0002\\u0002\\u013d\\u013e\\u0007*\\u0002\",\r\n    \"\\u0002\\u013e0\\u0003\\u0002\\u0002\\u0002\\u013f\\u0140\\u0007+\\u0002\\u0002\",\r\n    \"\\u01402\\u0003\\u0002\\u0002\\u0002\\u0141\\u0142\\u0007?\\u0002\\u0002\\u0142\",\r\n    \"4\\u0003\\u0002\\u0002\\u0002\\u0143\\u0144\\u0007>\\u0002\\u0002\\u0144\\u0145\",\r\n    \"\\u0007@\\u0002\\u0002\\u01456\\u0003\\u0002\\u0002\\u0002\\u0146\\u0147\\u0005\",\r\n    \"i3\\u0002\\u0147\\u0148\\u0005\\u0083@\\u0002\\u0148\\u0149\\u0005o6\\u0002\\u0149\",\r\n    \"8\\u0003\\u0002\\u0002\\u0002\\u014a\\u014b\\u0005\\u0085A\\u0002\\u014b\\u014c\",\r\n    \"\\u0005\\u008bD\\u0002\\u014c:\\u0003\\u0002\\u0002\\u0002\\u014d\\u014e\\u0007\",\r\n    \">\\u0002\\u0002\\u014e<\\u0003\\u0002\\u0002\\u0002\\u014f\\u0150\\u0007@\\u0002\",\r\n    \"\\u0002\\u0150>\\u0003\\u0002\\u0002\\u0002\\u0151\\u0152\\u0007>\\u0002\\u0002\",\r\n    \"\\u0152\\u0153\\u0007?\\u0002\\u0002\\u0153@\\u0003\\u0002\\u0002\\u0002\\u0154\",\r\n    \"\\u0155\\u0007@\\u0002\\u0002\\u0155\\u0156\\u0007?\\u0002\\u0002\\u0156B\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0157\\u0159\\t\\u0002\\u0002\\u0002\\u0158\\u0157\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0159\\u015a\\u0003\\u0002\\u0002\\u0002\\u015a\\u0158\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u015a\\u015b\\u0003\\u0002\\u0002\\u0002\\u015b\\u015c\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u015c\\u015d\\b \\u0002\\u0002\\u015dD\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u015e\\u015f\\u0005e1\\u0002\\u015fF\\u0003\\u0002\\u0002\\u0002\\u0160\",\r\n    \"\\u0165\\u0005g2\\u0002\\u0161\\u0164\\u0005g2\\u0002\\u0162\\u0164\\t\\u0005\\u0002\",\r\n    \"\\u0002\\u0163\\u0161\\u0003\\u0002\\u0002\\u0002\\u0163\\u0162\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u0164\\u0167\\u0003\\u0002\\u0002\\u0002\\u0165\\u0163\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u0165\\u0166\\u0003\\u0002\\u0002\\u0002\\u0166H\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u0167\\u0165\\u0003\\u0002\\u0002\\u0002\\u0168\\u016a\\t\\u0006\\u0002\",\r\n    \"\\u0002\\u0169\\u0168\\u0003\\u0002\\u0002\\u0002\\u016a\\u016b\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u016b\\u0169\\u0003\\u0002\\u0002\\u0002\\u016b\\u016c\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u016cJ\\u0003\\u0002\\u0002\\u0002\\u016d\\u016f\\t\\u0006\\u0002\\u0002\",\r\n    \"\\u016e\\u016d\\u0003\\u0002\\u0002\\u0002\\u016f\\u0170\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0170\\u016e\\u0003\\u0002\\u0002\\u0002\\u0170\\u0171\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0171\\u0172\\u0003\\u0002\\u0002\\u0002\\u0172\\u0176\\u00070\\u0002\\u0002\",\r\n    \"\\u0173\\u0175\\t\\u0006\\u0002\\u0002\\u0174\\u0173\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0175\\u0178\\u0003\\u0002\\u0002\\u0002\\u0176\\u0174\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0176\\u0177\\u0003\\u0002\\u0002\\u0002\\u0177\\u0180\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0178\\u0176\\u0003\\u0002\\u0002\\u0002\\u0179\\u017b\\u00070\\u0002\\u0002\",\r\n    \"\\u017a\\u017c\\t\\u0006\\u0002\\u0002\\u017b\\u017a\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u017c\\u017d\\u0003\\u0002\\u0002\\u0002\\u017d\\u017b\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u017d\\u017e\\u0003\\u0002\\u0002\\u0002\\u017e\\u0180\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u017f\\u016e\\u0003\\u0002\\u0002\\u0002\\u017f\\u0179\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0180L\\u0003\\u0002\\u0002\\u0002\\u0181\\u0183\\u0007\\u000f\\u0002\\u0002\",\r\n    \"\\u0182\\u0181\\u0003\\u0002\\u0002\\u0002\\u0182\\u0183\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0183\\u0184\\u0003\\u0002\\u0002\\u0002\\u0184\\u0185\\u0007\\f\\u0002\\u0002\",\r\n    \"\\u0185\\u0186\\u0003\\u0002\\u0002\\u0002\\u0186\\u0187\\b%\\b\\u0002\\u0187\\u0188\",\r\n    \"\\b%\\t\\u0002\\u0188N\\u0003\\u0002\\u0002\\u0002\\u0189\\u018d\\u0007)\\u0002\",\r\n    \"\\u0002\\u018a\\u018c\\n\\u0003\\u0002\\u0002\\u018b\\u018a\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u018c\\u018f\\u0003\\u0002\\u0002\\u0002\\u018d\\u018b\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u018d\\u018e\\u0003\\u0002\\u0002\\u0002\\u018e\\u0190\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u018f\\u018d\\u0003\\u0002\\u0002\\u0002\\u0190\\u0191\\b&\\u0005\\u0002\",\r\n    \"\\u0191\\u0192\\b&\\t\\u0002\\u0192P\\u0003\\u0002\\u0002\\u0002\\u0193\\u0198\\u0005\",\r\n    \"g2\\u0002\\u0194\\u0197\\u0005g2\\u0002\\u0195\\u0197\\t\\u0006\\u0002\\u0002\\u0196\",\r\n    \"\\u0194\\u0003\\u0002\\u0002\\u0002\\u0196\\u0195\\u0003\\u0002\\u0002\\u0002\\u0197\",\r\n    \"\\u019a\\u0003\\u0002\\u0002\\u0002\\u0198\\u0196\\u0003\\u0002\\u0002\\u0002\\u0198\",\r\n    \"\\u0199\\u0003\\u0002\\u0002\\u0002\\u0199\\u01a4\\u0003\\u0002\\u0002\\u0002\\u019a\",\r\n    \"\\u0198\\u0003\\u0002\\u0002\\u0002\\u019b\\u01a0\\u0007*\\u0002\\u0002\\u019c\",\r\n    \"\\u019f\\u0005g2\\u0002\\u019d\\u019f\\t\\u0007\\u0002\\u0002\\u019e\\u019c\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u019e\\u019d\\u0003\\u0002\\u0002\\u0002\\u019f\\u01a2\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u01a0\\u019e\\u0003\\u0002\\u0002\\u0002\\u01a0\\u01a1\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u01a1\\u01a3\\u0003\\u0002\\u0002\\u0002\\u01a2\\u01a0\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u01a3\\u01a5\\u0007+\\u0002\\u0002\\u01a4\\u019b\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u01a4\\u01a5\\u0003\\u0002\\u0002\\u0002\\u01a5\\u01a6\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u01a6\\u01a7\\b\\'\\n\\u0002\\u01a7\\u01a8\\b\\'\\u0006\\u0002\",\r\n    \"\\u01a8R\\u0003\\u0002\\u0002\\u0002\\u01a9\\u01ab\\u0007\\u000f\\u0002\\u0002\",\r\n    \"\\u01aa\\u01a9\\u0003\\u0002\\u0002\\u0002\\u01aa\\u01ab\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u01ab\\u01ac\\u0003\\u0002\\u0002\\u0002\\u01ac\\u01ad\\u0007\\f\\u0002\\u0002\",\r\n    \"\\u01ad\\u01ae\\u0003\\u0002\\u0002\\u0002\\u01ae\\u01af\\b(\\b\\u0002\\u01af\\u01b0\",\r\n    \"\\b(\\t\\u0002\\u01b0T\\u0003\\u0002\\u0002\\u0002\\u01b1\\u01b3\\n\\b\\u0002\\u0002\",\r\n    \"\\u01b2\\u01b1\\u0003\\u0002\\u0002\\u0002\\u01b3\\u01b4\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u01b4\\u01b2\\u0003\\u0002\\u0002\\u0002\\u01b4\\u01b5\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u01b5V\\u0003\\u0002\\u0002\\u0002\\u01b6\\u01b8\\u0007^\\u0002\\u0002\\u01b7\",\r\n    \"\\u01b9\\u0007\\u000f\\u0002\\u0002\\u01b8\\u01b7\\u0003\\u0002\\u0002\\u0002\\u01b8\",\r\n    \"\\u01b9\\u0003\\u0002\\u0002\\u0002\\u01b9\\u01ba\\u0003\\u0002\\u0002\\u0002\\u01ba\",\r\n    \"\\u01bb\\u0007\\f\\u0002\\u0002\\u01bb\\u01bc\\u0003\\u0002\\u0002\\u0002\\u01bc\",\r\n    \"\\u01bd\\b*\\u0002\\u0002\\u01bdX\\u0003\\u0002\\u0002\\u0002\\u01be\\u01c0\\u0007\",\r\n    \"\\u000f\\u0002\\u0002\\u01bf\\u01be\\u0003\\u0002\\u0002\\u0002\\u01bf\\u01c0\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u01c0\\u01c1\\u0003\\u0002\\u0002\\u0002\\u01c1\\u01c2\\u0007\",\r\n    \"\\f\\u0002\\u0002\\u01c2\\u01c3\\u0003\\u0002\\u0002\\u0002\\u01c3\\u01c4\\b+\\b\",\r\n    \"\\u0002\\u01c4\\u01c5\\b+\\t\\u0002\\u01c5Z\\u0003\\u0002\\u0002\\u0002\\u01c6\\u01cc\",\r\n    \"\\t\\t\\u0002\\u0002\\u01c7\\u01cb\\n\\n\\u0002\\u0002\\u01c8\\u01c9\\u0007$\\u0002\",\r\n    \"\\u0002\\u01c9\\u01cb\\u0007$\\u0002\\u0002\\u01ca\\u01c7\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u01ca\\u01c8\\u0003\\u0002\\u0002\\u0002\\u01cb\\u01ce\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u01cc\\u01ca\\u0003\\u0002\\u0002\\u0002\\u01cc\\u01cd\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u01cd\\u01cf\\u0003\\u0002\\u0002\\u0002\\u01ce\\u01cc\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u01cf\\u01d0\\t\\t\\u0002\\u0002\\u01d0\\u01d1\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u01d1\\u01d2\\b,\\t\\u0002\\u01d2\\\\\\u0003\\u0002\\u0002\\u0002\\u01d3\\u01d4\",\r\n    \"\\u0007^\\u0002\\u0002\\u01d4\\u01d8\\t\\u000b\\u0002\\u0002\\u01d5\\u01d8\\u0005\",\r\n    \"_.\\u0002\\u01d6\\u01d8\\u0005a/\\u0002\\u01d7\\u01d3\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u01d7\\u01d5\\u0003\\u0002\\u0002\\u0002\\u01d7\\u01d6\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u01d8^\\u0003\\u0002\\u0002\\u0002\\u01d9\\u01da\\u0007^\\u0002\\u0002\\u01da\",\r\n    \"\\u01db\\t\\f\\u0002\\u0002\\u01db\\u01dc\\t\\r\\u0002\\u0002\\u01dc\\u01e3\\t\\r\\u0002\",\r\n    \"\\u0002\\u01dd\\u01de\\u0007^\\u0002\\u0002\\u01de\\u01df\\t\\r\\u0002\\u0002\\u01df\",\r\n    \"\\u01e3\\t\\r\\u0002\\u0002\\u01e0\\u01e1\\u0007^\\u0002\\u0002\\u01e1\\u01e3\\t\",\r\n    \"\\r\\u0002\\u0002\\u01e2\\u01d9\\u0003\\u0002\\u0002\\u0002\\u01e2\\u01dd\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u01e2\\u01e0\\u0003\\u0002\\u0002\\u0002\\u01e3`\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u01e4\\u01e5\\u0007^\\u0002\\u0002\\u01e5\\u01e6\\u0007\",\r\n    \"w\\u0002\\u0002\\u01e6\\u01e7\\u0005c0\\u0002\\u01e7\\u01e8\\u0005c0\\u0002\\u01e8\",\r\n    \"\\u01e9\\u0005c0\\u0002\\u01e9\\u01ea\\u0005c0\\u0002\\u01eab\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u01eb\\u01ec\\t\\u000e\\u0002\\u0002\\u01ecd\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u01ed\\u01f3\\u0007$\\u0002\\u0002\\u01ee\\u01f2\\n\\u000f\\u0002\\u0002\\u01ef\",\r\n    \"\\u01f0\\u0007^\\u0002\\u0002\\u01f0\\u01f2\\u000b\\u0002\\u0002\\u0002\\u01f1\",\r\n    \"\\u01ee\\u0003\\u0002\\u0002\\u0002\\u01f1\\u01ef\\u0003\\u0002\\u0002\\u0002\\u01f2\",\r\n    \"\\u01f5\\u0003\\u0002\\u0002\\u0002\\u01f3\\u01f1\\u0003\\u0002\\u0002\\u0002\\u01f3\",\r\n    \"\\u01f4\\u0003\\u0002\\u0002\\u0002\\u01f4\\u01f6\\u0003\\u0002\\u0002\\u0002\\u01f5\",\r\n    \"\\u01f3\\u0003\\u0002\\u0002\\u0002\\u01f6\\u01f7\\u0007$\\u0002\\u0002\\u01f7\",\r\n    \"f\\u0003\\u0002\\u0002\\u0002\\u01f8\\u01fe\\t\\u0010\\u0002\\u0002\\u01f9\\u01fe\",\r\n    \"\\n\\u0011\\u0002\\u0002\\u01fa\\u01fb\\t\\u0012\\u0002\\u0002\\u01fb\\u01fe\\t\\u0013\",\r\n    \"\\u0002\\u0002\\u01fc\\u01fe\\t\\u0014\\u0002\\u0002\\u01fd\\u01f8\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u01fd\\u01f9\\u0003\\u0002\\u0002\\u0002\\u01fd\\u01fa\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u01fd\\u01fc\\u0003\\u0002\\u0002\\u0002\\u01feh\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u01ff\\u0200\\t\\u0015\\u0002\\u0002\\u0200j\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u0201\\u0202\\t\\u0016\\u0002\\u0002\\u0202l\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0203\\u0204\\t\\u0017\\u0002\\u0002\\u0204n\\u0003\\u0002\\u0002\\u0002\\u0205\",\r\n    \"\\u0206\\t\\u0018\\u0002\\u0002\\u0206p\\u0003\\u0002\\u0002\\u0002\\u0207\\u0208\",\r\n    \"\\t\\u0019\\u0002\\u0002\\u0208r\\u0003\\u0002\\u0002\\u0002\\u0209\\u020a\\t\\u001a\",\r\n    \"\\u0002\\u0002\\u020at\\u0003\\u0002\\u0002\\u0002\\u020b\\u020c\\t\\u001b\\u0002\",\r\n    \"\\u0002\\u020cv\\u0003\\u0002\\u0002\\u0002\\u020d\\u020e\\t\\u001c\\u0002\\u0002\",\r\n    \"\\u020ex\\u0003\\u0002\\u0002\\u0002\\u020f\\u0210\\t\\u001d\\u0002\\u0002\\u0210\",\r\n    \"z\\u0003\\u0002\\u0002\\u0002\\u0211\\u0212\\t\\u001e\\u0002\\u0002\\u0212|\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0213\\u0214\\t\\u001f\\u0002\\u0002\\u0214~\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0215\\u0216\\t \\u0002\\u0002\\u0216\\u0080\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u0217\\u0218\\t!\\u0002\\u0002\\u0218\\u0082\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0219\\u021a\\t\\\"\\u0002\\u0002\\u021a\\u0084\\u0003\\u0002\\u0002\\u0002\\u021b\",\r\n    \"\\u021c\\t#\\u0002\\u0002\\u021c\\u0086\\u0003\\u0002\\u0002\\u0002\\u021d\\u021e\",\r\n    \"\\t$\\u0002\\u0002\\u021e\\u0088\\u0003\\u0002\\u0002\\u0002\\u021f\\u0220\\t%\\u0002\",\r\n    \"\\u0002\\u0220\\u008a\\u0003\\u0002\\u0002\\u0002\\u0221\\u0222\\t&\\u0002\\u0002\",\r\n    \"\\u0222\\u008c\\u0003\\u0002\\u0002\\u0002\\u0223\\u0224\\t\\'\\u0002\\u0002\\u0224\",\r\n    \"\\u008e\\u0003\\u0002\\u0002\\u0002\\u0225\\u0226\\t(\\u0002\\u0002\\u0226\\u0090\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0227\\u0228\\t)\\u0002\\u0002\\u0228\\u0092\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0229\\u022a\\t*\\u0002\\u0002\\u022a\\u0094\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u022b\\u022c\\t+\\u0002\\u0002\\u022c\\u0096\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u022d\\u022e\\t,\\u0002\\u0002\\u022e\\u0098\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u022f\\u0230\\t-\\u0002\\u0002\\u0230\\u009a\\u0003\\u0002\\u0002\\u0002\\u0231\",\r\n    \"\\u0232\\t.\\u0002\\u0002\\u0232\\u009c\\u0003\\u0002\\u0002\\u0002+\\u0002\\u0003\",\r\n    \"\\u0004\\u0005\\u0006\\u00a0\\u00a7\\u00b4\\u00bb\\u00ca\\u00d1\\u00dc\\u00e8\\u00eb\",\r\n    \"\\u0101\\u015a\\u0163\\u0165\\u016b\\u0170\\u0176\\u017d\\u017f\\u0182\\u018d\\u0196\",\r\n    \"\\u0198\\u019e\\u01a0\\u01a4\\u01aa\\u01b4\\u01b8\\u01bf\\u01ca\\u01cc\\u01d7\\u01e2\",\r\n    \"\\u01f1\\u01f3\\u01fd\\u000b\\u0002\\u0003\\u0002\\u0004\\u0006\\u0002\\u0004\\u0003\",\r\n    \"\\u0002\\t\\u0007\\u0002\\u0004\\u0005\\u0002\\u0004\\u0004\\u0002\\t\\b\\u0002\\u0004\",\r\n    \"\\u0002\\u0002\\t!\\u0002\"].join(\"\");\r\n\r\n\r\nvar atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);\r\n\r\nvar decisionsToDFA = atn.decisionToState.map( function(ds, index) { return new antlr4.dfa.DFA(ds, index); });\r\n\r\nfunction TibboBasicPreprocessorLexer(input) {\r\n\tantlr4.Lexer.call(this, input);\r\n    this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());\r\n    return this;\r\n}\r\n\r\nTibboBasicPreprocessorLexer.prototype = Object.create(antlr4.Lexer.prototype);\r\nTibboBasicPreprocessorLexer.prototype.constructor = TibboBasicPreprocessorLexer;\r\n\r\nObject.defineProperty(TibboBasicPreprocessorLexer.prototype, \"atn\", {\r\n        get : function() {\r\n                return atn;\r\n        }\r\n});\r\n\r\nTibboBasicPreprocessorLexer.EOF = antlr4.Token.EOF;\r\nTibboBasicPreprocessorLexer.WS = 1;\r\nTibboBasicPreprocessorLexer.INCLUDE = 2;\r\nTibboBasicPreprocessorLexer.INCLUDEPP = 3;\r\nTibboBasicPreprocessorLexer.SHARP = 4;\r\nTibboBasicPreprocessorLexer.CODE = 5;\r\nTibboBasicPreprocessorLexer.NEW_LINE = 6;\r\nTibboBasicPreprocessorLexer.PRAGMA = 7;\r\nTibboBasicPreprocessorLexer.DEFINE = 8;\r\nTibboBasicPreprocessorLexer.DEFINED = 9;\r\nTibboBasicPreprocessorLexer.IF = 10;\r\nTibboBasicPreprocessorLexer.ELIF = 11;\r\nTibboBasicPreprocessorLexer.ELSE = 12;\r\nTibboBasicPreprocessorLexer.UNDEF = 13;\r\nTibboBasicPreprocessorLexer.IFDEF = 14;\r\nTibboBasicPreprocessorLexer.IFNDEF = 15;\r\nTibboBasicPreprocessorLexer.ENDIF = 16;\r\nTibboBasicPreprocessorLexer.ERROR = 17;\r\nTibboBasicPreprocessorLexer.BANG = 18;\r\nTibboBasicPreprocessorLexer.LPAREN = 19;\r\nTibboBasicPreprocessorLexer.RPAREN = 20;\r\nTibboBasicPreprocessorLexer.EQUAL = 21;\r\nTibboBasicPreprocessorLexer.NOTEQUAL = 22;\r\nTibboBasicPreprocessorLexer.AND = 23;\r\nTibboBasicPreprocessorLexer.OR = 24;\r\nTibboBasicPreprocessorLexer.LT = 25;\r\nTibboBasicPreprocessorLexer.GT = 26;\r\nTibboBasicPreprocessorLexer.LE = 27;\r\nTibboBasicPreprocessorLexer.GE = 28;\r\nTibboBasicPreprocessorLexer.DIRECTIVE_WHITESPACES = 29;\r\nTibboBasicPreprocessorLexer.DIRECTIVE_STRING = 30;\r\nTibboBasicPreprocessorLexer.CONDITIONAL_SYMBOL = 31;\r\nTibboBasicPreprocessorLexer.DECIMAL_LITERAL = 32;\r\nTibboBasicPreprocessorLexer.FLOAT = 33;\r\nTibboBasicPreprocessorLexer.TEXT = 34;\r\nTibboBasicPreprocessorLexer.INCLUDE_DIRECITVE_TEXT_NEW_LINE = 35;\r\nTibboBasicPreprocessorLexer.INCLUDE_FILE = 36;\r\n\r\nTibboBasicPreprocessorLexer.COMMENTS_CHANNEL = 2;\r\n\r\nTibboBasicPreprocessorLexer.DIRECTIVE_MODE = 1;\r\nTibboBasicPreprocessorLexer.DIRECTIVE_DEFINE = 2;\r\nTibboBasicPreprocessorLexer.DIRECTIVE_TEXT = 3;\r\nTibboBasicPreprocessorLexer.DIRECTIVE_INCLUDE_TEXT = 4;\r\n\r\nTibboBasicPreprocessorLexer.prototype.channelNames = [ \"DEFAULT_TOKEN_CHANNEL\", \"HIDDEN\", \r\n                                                                                          \"COMMENTS_CHANNEL\" ];\r\n\r\nTibboBasicPreprocessorLexer.prototype.modeNames = [ \"DEFAULT_MODE\", \"DIRECTIVE_MODE\", \r\n                                                    \"DIRECTIVE_DEFINE\", \r\n                                                    \"DIRECTIVE_TEXT\", \"DIRECTIVE_INCLUDE_TEXT\" ];\r\n\r\nTibboBasicPreprocessorLexer.prototype.literalNames = [ null, null, null, \r\n                                                       null, null, null, \r\n                                                       null, null, null, \r\n                                                       null, null, null, \r\n                                                       null, null, null, \r\n                                                       null, null, null, \r\n                                                       \"'!'\", \"'('\", \"')'\", \r\n                                                       \"'='\", \"'<>'\", null, \r\n                                                       null, \"'<'\", \"'>'\", \r\n                                                       \"'<='\", \"'>='\" ];\r\n\r\nTibboBasicPreprocessorLexer.prototype.symbolicNames = [ null, \"WS\", \"INCLUDE\", \r\n                                                        \"INCLUDEPP\", \"SHARP\", \r\n                                                        \"CODE\", \"NEW_LINE\", \r\n                                                        \"PRAGMA\", \"DEFINE\", \r\n                                                        \"DEFINED\", \"IF\", \r\n                                                        \"ELIF\", \"ELSE\", \r\n                                                        \"UNDEF\", \"IFDEF\", \r\n                                                        \"IFNDEF\", \"ENDIF\", \r\n                                                        \"ERROR\", \"BANG\", \r\n                                                        \"LPAREN\", \"RPAREN\", \r\n                                                        \"EQUAL\", \"NOTEQUAL\", \r\n                                                        \"AND\", \"OR\", \"LT\", \r\n                                                        \"GT\", \"LE\", \"GE\", \r\n                                                        \"DIRECTIVE_WHITESPACES\", \r\n                                                        \"DIRECTIVE_STRING\", \r\n                                                        \"CONDITIONAL_SYMBOL\", \r\n                                                        \"DECIMAL_LITERAL\", \r\n                                                        \"FLOAT\", \"TEXT\", \r\n                                                        \"INCLUDE_DIRECITVE_TEXT_NEW_LINE\", \r\n                                                        \"INCLUDE_FILE\" ];\r\n\r\nTibboBasicPreprocessorLexer.prototype.ruleNames = [ \"WS\", \"INCLUDE\", \"INCLUDEPP\", \r\n                                                    \"SHARP\", \"COMMENT\", \r\n                                                    \"STRING\", \"CODE\", \"NEW_LINE\", \r\n                                                    \"PRAGMA\", \"DEFINE\", \r\n                                                    \"DEFINED\", \"IF\", \"ELIF\", \r\n                                                    \"ELSE\", \"UNDEF\", \"IFDEF\", \r\n                                                    \"IFNDEF\", \"ENDIF\", \"ERROR\", \r\n                                                    \"BANG\", \"LPAREN\", \"RPAREN\", \r\n                                                    \"EQUAL\", \"NOTEQUAL\", \r\n                                                    \"AND\", \"OR\", \"LT\", \"GT\", \r\n                                                    \"LE\", \"GE\", \"DIRECTIVE_WHITESPACES\", \r\n                                                    \"DIRECTIVE_STRING\", \r\n                                                    \"CONDITIONAL_SYMBOL\", \r\n                                                    \"DECIMAL_LITERAL\", \"FLOAT\", \r\n                                                    \"DIRECTIVE_NEW_LINE\", \r\n                                                    \"DIRECTIVE_COMMENT\", \r\n                                                    \"DIRECTIVE_DEFINE_CONDITIONAL_SYMBOL\", \r\n                                                    \"TEXT_NEW_LINE\", \"TEXT\", \r\n                                                    \"INCLUDE_DIRECITVE_TEXT_NEW_LINE\", \r\n                                                    \"INCLUDE_TEXT_NEW_LINE\", \r\n                                                    \"INCLUDE_FILE\", \"EscapeSequence\", \r\n                                                    \"OctalEscape\", \"UnicodeEscape\", \r\n                                                    \"HexDigit\", \"StringFragment\", \r\n                                                    \"LETTER\", \"A\", \"B\", \r\n                                                    \"C\", \"D\", \"E\", \"F\", \r\n                                                    \"G\", \"H\", \"I\", \"J\", \r\n                                                    \"K\", \"L\", \"M\", \"N\", \r\n                                                    \"O\", \"P\", \"Q\", \"R\", \r\n                                                    \"S\", \"T\", \"U\", \"V\", \r\n                                                    \"W\", \"X\", \"Y\", \"Z\" ];\r\n\r\nTibboBasicPreprocessorLexer.prototype.grammarFileName = \"TibboBasicPreprocessorLexer.g4\";\r\n\r\n\r\nexports.TibboBasicPreprocessorLexer = TibboBasicPreprocessorLexer;\r\n\r\n","// Generated from /Users/jimmyhu/Projects/TIDEDesktopService/language/TibboBasic/TibboBasicPreprocessorParser.g4 by ANTLR 4.8\r\n// jshint ignore: start\r\nvar antlr4 = require('antlr4/index');\r\nvar TibboBasicPreprocessorParserListener = require('./TibboBasicPreprocessorParserListener').TibboBasicPreprocessorParserListener;\r\nvar TibboBasicPreprocessorParserVisitor = require('./TibboBasicPreprocessorParserVisitor').TibboBasicPreprocessorParserVisitor;\r\n\r\nvar grammarFileName = \"TibboBasicPreprocessorParser.g4\";\r\n\r\n\r\nvar serializedATN = [\"\\u0003\\u608b\\ua72a\\u8133\\ub9ed\\u417c\\u3be7\\u7786\\u5964\",\r\n    \"\\u0003&}\\u0004\\u0002\\t\\u0002\\u0004\\u0003\\t\\u0003\\u0004\\u0004\\t\\u0004\",\r\n    \"\\u0004\\u0005\\t\\u0005\\u0004\\u0006\\t\\u0006\\u0004\\u0007\\t\\u0007\\u0004\\b\",\r\n    \"\\t\\b\\u0004\\t\\t\\t\\u0004\\n\\t\\n\\u0003\\u0002\\u0007\\u0002\\u0016\\n\\u0002\\f\",\r\n    \"\\u0002\\u000e\\u0002\\u0019\\u000b\\u0002\\u0003\\u0002\\u0007\\u0002\\u001c\\n\",\r\n    \"\\u0002\\f\\u0002\\u000e\\u0002\\u001f\\u000b\\u0002\\u0003\\u0002\\u0005\\u0002\",\r\n    \"\\\"\\n\\u0002\\u0003\\u0003\\u0007\\u0003%\\n\\u0003\\f\\u0003\\u000e\\u0003(\\u000b\",\r\n    \"\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0004\\u0003\\u0004\\u0003\\u0004\\u0005\",\r\n    \"\\u0004/\\n\\u0004\\u0003\\u0005\\u0003\\u0005\\u0003\\u0006\\u0003\\u0006\\u0003\",\r\n    \"\\u0006\\u0003\\u0006\\u0003\\u0006\\u0003\\u0006\\u0003\\u0006\\u0003\\u0006\\u0003\",\r\n    \"\\u0006\\u0003\\u0006\\u0003\\u0006\\u0003\\u0006\\u0003\\u0006\\u0003\\u0006\\u0003\",\r\n    \"\\u0006\\u0003\\u0006\\u0003\\u0006\\u0003\\u0006\\u0003\\u0006\\u0003\\u0006\\u0003\",\r\n    \"\\u0006\\u0003\\u0006\\u0003\\u0006\\u0003\\u0006\\u0003\\u0006\\u0003\\u0006\\u0003\",\r\n    \"\\u0006\\u0003\\u0006\\u0003\\u0006\\u0005\\u0006P\\n\\u0006\\u0005\\u0006R\\n\\u0006\",\r\n    \"\\u0003\\u0007\\u0003\\u0007\\u0003\\u0007\\u0003\\b\\u0006\\bX\\n\\b\\r\\b\\u000e\",\r\n    \"\\bY\\u0003\\t\\u0003\\t\\u0003\\t\\u0003\\t\\u0003\\t\\u0003\\t\\u0003\\t\\u0003\\t\",\r\n    \"\\u0005\\td\\n\\t\\u0003\\t\\u0003\\t\\u0003\\t\\u0003\\t\\u0003\\t\\u0003\\t\\u0003\",\r\n    \"\\t\\u0003\\t\\u0005\\tn\\n\\t\\u0003\\t\\u0003\\t\\u0003\\t\\u0003\\t\\u0003\\t\\u0003\",\r\n    \"\\t\\u0007\\tv\\n\\t\\f\\t\\u000e\\ty\\u000b\\t\\u0003\\n\\u0003\\n\\u0003\\n\\u0002\\u0003\",\r\n    \"\\u0010\\u000b\\u0002\\u0004\\u0006\\b\\n\\f\\u000e\\u0010\\u0012\\u0002\\u0006\\u0003\",\r\n    \"\\u0002\\u0004\\u0005\\u0003\\u0002\\u0017\\u0018\\u0003\\u0002\\u001b\\u001e\\u0003\",\r\n    \"\\u0002 \\\"\\u0002\\u008b\\u0002\\u0017\\u0003\\u0002\\u0002\\u0002\\u0004&\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0006.\\u0003\\u0002\\u0002\\u0002\\b0\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\nQ\\u0003\\u0002\\u0002\\u0002\\fS\\u0003\\u0002\\u0002\\u0002\\u000eW\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0010m\\u0003\\u0002\\u0002\\u0002\\u0012z\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0014\\u0016\\u0005\\u0004\\u0003\\u0002\\u0015\\u0014\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0016\\u0019\\u0003\\u0002\\u0002\\u0002\\u0017\\u0015\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0017\\u0018\\u0003\\u0002\\u0002\\u0002\\u0018!\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0019\\u0017\\u0003\\u0002\\u0002\\u0002\\u001a\\u001c\\u0007\",\r\n    \"\\b\\u0002\\u0002\\u001b\\u001a\\u0003\\u0002\\u0002\\u0002\\u001c\\u001f\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u001d\\u001b\\u0003\\u0002\\u0002\\u0002\\u001d\\u001e\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u001e\\\"\\u0003\\u0002\\u0002\\u0002\\u001f\\u001d\\u0003\",\r\n    \"\\u0002\\u0002\\u0002 \\\"\\u0007\\u0002\\u0002\\u0003!\\u001d\\u0003\\u0002\\u0002\",\r\n    \"\\u0002! \\u0003\\u0002\\u0002\\u0002\\\"\\u0003\\u0003\\u0002\\u0002\\u0002#%\\u0007\",\r\n    \"\\b\\u0002\\u0002$#\\u0003\\u0002\\u0002\\u0002%(\\u0003\\u0002\\u0002\\u0002&\",\r\n    \"$\\u0003\\u0002\\u0002\\u0002&\\'\\u0003\\u0002\\u0002\\u0002\\')\\u0003\\u0002\",\r\n    \"\\u0002\\u0002(&\\u0003\\u0002\\u0002\\u0002)*\\u0005\\u0006\\u0004\\u0002*\\u0005\",\r\n    \"\\u0003\\u0002\\u0002\\u0002+/\\u0005\\f\\u0007\\u0002,/\\u0005\\n\\u0006\\u0002\",\r\n    \"-/\\u0005\\b\\u0005\\u0002.+\\u0003\\u0002\\u0002\\u0002.,\\u0003\\u0002\\u0002\",\r\n    \"\\u0002.-\\u0003\\u0002\\u0002\\u0002/\\u0007\\u0003\\u0002\\u0002\\u000201\\u0007\",\r\n    \"\\u0007\\u0002\\u00021\\t\\u0003\\u0002\\u0002\\u000223\\u0007\\u0006\\u0002\\u0002\",\r\n    \"34\\u0007\\f\\u0002\\u00024R\\u0005\\u0010\\t\\u000256\\u0007\\u0006\\u0002\\u0002\",\r\n    \"67\\u0007\\r\\u0002\\u00027R\\u0005\\u0010\\t\\u000289\\u0007\\u0006\\u0002\\u0002\",\r\n    \"9R\\u0007\\u000e\\u0002\\u0002:;\\u0007\\u0006\\u0002\\u0002;R\\u0007\\u0012\\u0002\",\r\n    \"\\u0002<=\\u0007\\u0006\\u0002\\u0002=>\\u0007\\u0010\\u0002\\u0002>R\\u0007!\",\r\n    \"\\u0002\\u0002?@\\u0007\\u0006\\u0002\\u0002@A\\u0007\\u0011\\u0002\\u0002AR\\u0007\",\r\n    \"!\\u0002\\u0002BC\\u0007\\u0006\\u0002\\u0002CD\\u0007\\u000f\\u0002\\u0002DR\",\r\n    \"\\u0007!\\u0002\\u0002EF\\u0007\\u0006\\u0002\\u0002FG\\u0007\\t\\u0002\\u0002\",\r\n    \"GR\\u0005\\u000e\\b\\u0002HI\\u0007\\u0006\\u0002\\u0002IJ\\u0007\\u0013\\u0002\",\r\n    \"\\u0002JR\\u0005\\u000e\\b\\u0002KL\\u0007\\u0006\\u0002\\u0002LM\\u0007\\n\\u0002\",\r\n    \"\\u0002MO\\u0007!\\u0002\\u0002NP\\u0005\\u000e\\b\\u0002ON\\u0003\\u0002\\u0002\",\r\n    \"\\u0002OP\\u0003\\u0002\\u0002\\u0002PR\\u0003\\u0002\\u0002\\u0002Q2\\u0003\\u0002\",\r\n    \"\\u0002\\u0002Q5\\u0003\\u0002\\u0002\\u0002Q8\\u0003\\u0002\\u0002\\u0002Q:\\u0003\",\r\n    \"\\u0002\\u0002\\u0002Q<\\u0003\\u0002\\u0002\\u0002Q?\\u0003\\u0002\\u0002\\u0002\",\r\n    \"QB\\u0003\\u0002\\u0002\\u0002QE\\u0003\\u0002\\u0002\\u0002QH\\u0003\\u0002\\u0002\",\r\n    \"\\u0002QK\\u0003\\u0002\\u0002\\u0002R\\u000b\\u0003\\u0002\\u0002\\u0002ST\\t\",\r\n    \"\\u0002\\u0002\\u0002TU\\u0007&\\u0002\\u0002U\\r\\u0003\\u0002\\u0002\\u0002V\",\r\n    \"X\\u0007$\\u0002\\u0002WV\\u0003\\u0002\\u0002\\u0002XY\\u0003\\u0002\\u0002\\u0002\",\r\n    \"YW\\u0003\\u0002\\u0002\\u0002YZ\\u0003\\u0002\\u0002\\u0002Z\\u000f\\u0003\\u0002\",\r\n    \"\\u0002\\u0002[\\\\\\b\\t\\u0001\\u0002\\\\n\\u0007\\\"\\u0002\\u0002]n\\u0007 \\u0002\",\r\n    \"\\u0002^c\\u0007!\\u0002\\u0002_`\\u0007\\u0015\\u0002\\u0002`a\\u0005\\u0010\",\r\n    \"\\t\\u0002ab\\u0007\\u0016\\u0002\\u0002bd\\u0003\\u0002\\u0002\\u0002c_\\u0003\",\r\n    \"\\u0002\\u0002\\u0002cd\\u0003\\u0002\\u0002\\u0002dn\\u0003\\u0002\\u0002\\u0002\",\r\n    \"ef\\u0005\\u0012\\n\\u0002fg\\t\\u0003\\u0002\\u0002gh\\u0005\\u0012\\n\\u0002h\",\r\n    \"n\\u0003\\u0002\\u0002\\u0002ij\\u0005\\u0012\\n\\u0002jk\\t\\u0004\\u0002\\u0002\",\r\n    \"kl\\u0005\\u0012\\n\\u0002ln\\u0003\\u0002\\u0002\\u0002m[\\u0003\\u0002\\u0002\",\r\n    \"\\u0002m]\\u0003\\u0002\\u0002\\u0002m^\\u0003\\u0002\\u0002\\u0002me\\u0003\\u0002\",\r\n    \"\\u0002\\u0002mi\\u0003\\u0002\\u0002\\u0002nw\\u0003\\u0002\\u0002\\u0002op\\f\",\r\n    \"\\u0005\\u0002\\u0002pq\\u0007\\u0019\\u0002\\u0002qv\\u0005\\u0010\\t\\u0006r\",\r\n    \"s\\f\\u0004\\u0002\\u0002st\\u0007\\u001a\\u0002\\u0002tv\\u0005\\u0010\\t\\u0005\",\r\n    \"uo\\u0003\\u0002\\u0002\\u0002ur\\u0003\\u0002\\u0002\\u0002vy\\u0003\\u0002\\u0002\",\r\n    \"\\u0002wu\\u0003\\u0002\\u0002\\u0002wx\\u0003\\u0002\\u0002\\u0002x\\u0011\\u0003\",\r\n    \"\\u0002\\u0002\\u0002yw\\u0003\\u0002\\u0002\\u0002z{\\t\\u0005\\u0002\\u0002{\",\r\n    \"\\u0013\\u0003\\u0002\\u0002\\u0002\\u000e\\u0017\\u001d!&.OQYcmuw\"].join(\"\");\r\n\r\n\r\nvar atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);\r\n\r\nvar decisionsToDFA = atn.decisionToState.map( function(ds, index) { return new antlr4.dfa.DFA(ds, index); });\r\n\r\nvar sharedContextCache = new antlr4.PredictionContextCache();\r\n\r\nvar literalNames = [ null, null, null, null, null, null, null, null, null, \r\n                     null, null, null, null, null, null, null, null, null, \r\n                     \"'!'\", \"'('\", \"')'\", \"'='\", \"'<>'\", null, null, \"'<'\", \r\n                     \"'>'\", \"'<='\", \"'>='\" ];\r\n\r\nvar symbolicNames = [ null, \"WS\", \"INCLUDE\", \"INCLUDEPP\", \"SHARP\", \"CODE\", \r\n                      \"NEW_LINE\", \"PRAGMA\", \"DEFINE\", \"DEFINED\", \"IF\", \"ELIF\", \r\n                      \"ELSE\", \"UNDEF\", \"IFDEF\", \"IFNDEF\", \"ENDIF\", \"ERROR\", \r\n                      \"BANG\", \"LPAREN\", \"RPAREN\", \"EQUAL\", \"NOTEQUAL\", \"AND\", \r\n                      \"OR\", \"LT\", \"GT\", \"LE\", \"GE\", \"DIRECTIVE_WHITESPACES\", \r\n                      \"DIRECTIVE_STRING\", \"CONDITIONAL_SYMBOL\", \"DECIMAL_LITERAL\", \r\n                      \"FLOAT\", \"TEXT\", \"INCLUDE_DIRECITVE_TEXT_NEW_LINE\", \r\n                      \"INCLUDE_FILE\" ];\r\n\r\nvar ruleNames =  [ \"preprocessor\", \"line\", \"text\", \"codeLine\", \"directive\", \r\n                   \"include_file\", \"directive_text\", \"preprocessor_expression\", \r\n                   \"preprocessor_item\" ];\r\n\r\nfunction TibboBasicPreprocessorParser (input) {\r\n\tantlr4.Parser.call(this, input);\r\n    this._interp = new antlr4.atn.ParserATNSimulator(this, atn, decisionsToDFA, sharedContextCache);\r\n    this.ruleNames = ruleNames;\r\n    this.literalNames = literalNames;\r\n    this.symbolicNames = symbolicNames;\r\n    return this;\r\n}\r\n\r\nTibboBasicPreprocessorParser.prototype = Object.create(antlr4.Parser.prototype);\r\nTibboBasicPreprocessorParser.prototype.constructor = TibboBasicPreprocessorParser;\r\n\r\nObject.defineProperty(TibboBasicPreprocessorParser.prototype, \"atn\", {\r\n\tget : function() {\r\n\t\treturn atn;\r\n\t}\r\n});\r\n\r\nTibboBasicPreprocessorParser.EOF = antlr4.Token.EOF;\r\nTibboBasicPreprocessorParser.WS = 1;\r\nTibboBasicPreprocessorParser.INCLUDE = 2;\r\nTibboBasicPreprocessorParser.INCLUDEPP = 3;\r\nTibboBasicPreprocessorParser.SHARP = 4;\r\nTibboBasicPreprocessorParser.CODE = 5;\r\nTibboBasicPreprocessorParser.NEW_LINE = 6;\r\nTibboBasicPreprocessorParser.PRAGMA = 7;\r\nTibboBasicPreprocessorParser.DEFINE = 8;\r\nTibboBasicPreprocessorParser.DEFINED = 9;\r\nTibboBasicPreprocessorParser.IF = 10;\r\nTibboBasicPreprocessorParser.ELIF = 11;\r\nTibboBasicPreprocessorParser.ELSE = 12;\r\nTibboBasicPreprocessorParser.UNDEF = 13;\r\nTibboBasicPreprocessorParser.IFDEF = 14;\r\nTibboBasicPreprocessorParser.IFNDEF = 15;\r\nTibboBasicPreprocessorParser.ENDIF = 16;\r\nTibboBasicPreprocessorParser.ERROR = 17;\r\nTibboBasicPreprocessorParser.BANG = 18;\r\nTibboBasicPreprocessorParser.LPAREN = 19;\r\nTibboBasicPreprocessorParser.RPAREN = 20;\r\nTibboBasicPreprocessorParser.EQUAL = 21;\r\nTibboBasicPreprocessorParser.NOTEQUAL = 22;\r\nTibboBasicPreprocessorParser.AND = 23;\r\nTibboBasicPreprocessorParser.OR = 24;\r\nTibboBasicPreprocessorParser.LT = 25;\r\nTibboBasicPreprocessorParser.GT = 26;\r\nTibboBasicPreprocessorParser.LE = 27;\r\nTibboBasicPreprocessorParser.GE = 28;\r\nTibboBasicPreprocessorParser.DIRECTIVE_WHITESPACES = 29;\r\nTibboBasicPreprocessorParser.DIRECTIVE_STRING = 30;\r\nTibboBasicPreprocessorParser.CONDITIONAL_SYMBOL = 31;\r\nTibboBasicPreprocessorParser.DECIMAL_LITERAL = 32;\r\nTibboBasicPreprocessorParser.FLOAT = 33;\r\nTibboBasicPreprocessorParser.TEXT = 34;\r\nTibboBasicPreprocessorParser.INCLUDE_DIRECITVE_TEXT_NEW_LINE = 35;\r\nTibboBasicPreprocessorParser.INCLUDE_FILE = 36;\r\n\r\nTibboBasicPreprocessorParser.RULE_preprocessor = 0;\r\nTibboBasicPreprocessorParser.RULE_line = 1;\r\nTibboBasicPreprocessorParser.RULE_text = 2;\r\nTibboBasicPreprocessorParser.RULE_codeLine = 3;\r\nTibboBasicPreprocessorParser.RULE_directive = 4;\r\nTibboBasicPreprocessorParser.RULE_include_file = 5;\r\nTibboBasicPreprocessorParser.RULE_directive_text = 6;\r\nTibboBasicPreprocessorParser.RULE_preprocessor_expression = 7;\r\nTibboBasicPreprocessorParser.RULE_preprocessor_item = 8;\r\n\r\n\r\nfunction PreprocessorContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = TibboBasicPreprocessorParser.RULE_preprocessor;\r\n    return this;\r\n}\r\n\r\nPreprocessorContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nPreprocessorContext.prototype.constructor = PreprocessorContext;\r\n\r\nPreprocessorContext.prototype.EOF = function() {\r\n    return this.getToken(TibboBasicPreprocessorParser.EOF, 0);\r\n};\r\n\r\nPreprocessorContext.prototype.line = function(i) {\r\n    if(i===undefined) {\r\n        i = null;\r\n    }\r\n    if(i===null) {\r\n        return this.getTypedRuleContexts(LineContext);\r\n    } else {\r\n        return this.getTypedRuleContext(LineContext,i);\r\n    }\r\n};\r\n\r\nPreprocessorContext.prototype.NEW_LINE = function(i) {\r\n\tif(i===undefined) {\r\n\t\ti = null;\r\n\t}\r\n    if(i===null) {\r\n        return this.getTokens(TibboBasicPreprocessorParser.NEW_LINE);\r\n    } else {\r\n        return this.getToken(TibboBasicPreprocessorParser.NEW_LINE, i);\r\n    }\r\n};\r\n\r\n\r\nPreprocessorContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof TibboBasicPreprocessorParserListener ) {\r\n        listener.enterPreprocessor(this);\r\n\t}\r\n};\r\n\r\nPreprocessorContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof TibboBasicPreprocessorParserListener ) {\r\n        listener.exitPreprocessor(this);\r\n\t}\r\n};\r\n\r\nPreprocessorContext.prototype.accept = function(visitor) {\r\n    if ( visitor instanceof TibboBasicPreprocessorParserVisitor ) {\r\n        return visitor.visitPreprocessor(this);\r\n    } else {\r\n        return visitor.visitChildren(this);\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nTibboBasicPreprocessorParser.PreprocessorContext = PreprocessorContext;\r\n\r\nTibboBasicPreprocessorParser.prototype.preprocessor = function() {\r\n\r\n    var localctx = new PreprocessorContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 0, TibboBasicPreprocessorParser.RULE_preprocessor);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 21;\r\n        this._errHandler.sync(this);\r\n        var _alt = this._interp.adaptivePredict(this._input,0,this._ctx)\r\n        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {\r\n            if(_alt===1) {\r\n                this.state = 18;\r\n                this.line(); \r\n            }\r\n            this.state = 23;\r\n            this._errHandler.sync(this);\r\n            _alt = this._interp.adaptivePredict(this._input,0,this._ctx);\r\n        }\r\n\r\n        this.state = 31;\r\n        this._errHandler.sync(this);\r\n        var la_ = this._interp.adaptivePredict(this._input,2,this._ctx);\r\n        switch(la_) {\r\n        case 1:\r\n            this.state = 27;\r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n            while(_la===TibboBasicPreprocessorParser.NEW_LINE) {\r\n                this.state = 24;\r\n                this.match(TibboBasicPreprocessorParser.NEW_LINE);\r\n                this.state = 29;\r\n                this._errHandler.sync(this);\r\n                _la = this._input.LA(1);\r\n            }\r\n            break;\r\n\r\n        case 2:\r\n            this.state = 30;\r\n            this.match(TibboBasicPreprocessorParser.EOF);\r\n            break;\r\n\r\n        }\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\n\r\nfunction LineContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = TibboBasicPreprocessorParser.RULE_line;\r\n    return this;\r\n}\r\n\r\nLineContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nLineContext.prototype.constructor = LineContext;\r\n\r\nLineContext.prototype.text = function() {\r\n    return this.getTypedRuleContext(TextContext,0);\r\n};\r\n\r\nLineContext.prototype.NEW_LINE = function(i) {\r\n\tif(i===undefined) {\r\n\t\ti = null;\r\n\t}\r\n    if(i===null) {\r\n        return this.getTokens(TibboBasicPreprocessorParser.NEW_LINE);\r\n    } else {\r\n        return this.getToken(TibboBasicPreprocessorParser.NEW_LINE, i);\r\n    }\r\n};\r\n\r\n\r\nLineContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof TibboBasicPreprocessorParserListener ) {\r\n        listener.enterLine(this);\r\n\t}\r\n};\r\n\r\nLineContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof TibboBasicPreprocessorParserListener ) {\r\n        listener.exitLine(this);\r\n\t}\r\n};\r\n\r\nLineContext.prototype.accept = function(visitor) {\r\n    if ( visitor instanceof TibboBasicPreprocessorParserVisitor ) {\r\n        return visitor.visitLine(this);\r\n    } else {\r\n        return visitor.visitChildren(this);\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nTibboBasicPreprocessorParser.LineContext = LineContext;\r\n\r\nTibboBasicPreprocessorParser.prototype.line = function() {\r\n\r\n    var localctx = new LineContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 2, TibboBasicPreprocessorParser.RULE_line);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 36;\r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        while(_la===TibboBasicPreprocessorParser.NEW_LINE) {\r\n            this.state = 33;\r\n            this.match(TibboBasicPreprocessorParser.NEW_LINE);\r\n            this.state = 38;\r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n        }\r\n        this.state = 39;\r\n        this.text();\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\n\r\nfunction TextContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = TibboBasicPreprocessorParser.RULE_text;\r\n    return this;\r\n}\r\n\r\nTextContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nTextContext.prototype.constructor = TextContext;\r\n\r\nTextContext.prototype.include_file = function() {\r\n    return this.getTypedRuleContext(Include_fileContext,0);\r\n};\r\n\r\nTextContext.prototype.directive = function() {\r\n    return this.getTypedRuleContext(DirectiveContext,0);\r\n};\r\n\r\nTextContext.prototype.codeLine = function() {\r\n    return this.getTypedRuleContext(CodeLineContext,0);\r\n};\r\n\r\nTextContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof TibboBasicPreprocessorParserListener ) {\r\n        listener.enterText(this);\r\n\t}\r\n};\r\n\r\nTextContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof TibboBasicPreprocessorParserListener ) {\r\n        listener.exitText(this);\r\n\t}\r\n};\r\n\r\nTextContext.prototype.accept = function(visitor) {\r\n    if ( visitor instanceof TibboBasicPreprocessorParserVisitor ) {\r\n        return visitor.visitText(this);\r\n    } else {\r\n        return visitor.visitChildren(this);\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nTibboBasicPreprocessorParser.TextContext = TextContext;\r\n\r\nTibboBasicPreprocessorParser.prototype.text = function() {\r\n\r\n    var localctx = new TextContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 4, TibboBasicPreprocessorParser.RULE_text);\r\n    try {\r\n        this.state = 44;\r\n        this._errHandler.sync(this);\r\n        switch(this._input.LA(1)) {\r\n        case TibboBasicPreprocessorParser.INCLUDE:\r\n        case TibboBasicPreprocessorParser.INCLUDEPP:\r\n            this.enterOuterAlt(localctx, 1);\r\n            this.state = 41;\r\n            this.include_file();\r\n            break;\r\n        case TibboBasicPreprocessorParser.SHARP:\r\n            this.enterOuterAlt(localctx, 2);\r\n            this.state = 42;\r\n            this.directive();\r\n            break;\r\n        case TibboBasicPreprocessorParser.CODE:\r\n            this.enterOuterAlt(localctx, 3);\r\n            this.state = 43;\r\n            this.codeLine();\r\n            break;\r\n        default:\r\n            throw new antlr4.error.NoViableAltException(this);\r\n        }\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\n\r\nfunction CodeLineContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = TibboBasicPreprocessorParser.RULE_codeLine;\r\n    return this;\r\n}\r\n\r\nCodeLineContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nCodeLineContext.prototype.constructor = CodeLineContext;\r\n\r\nCodeLineContext.prototype.CODE = function() {\r\n    return this.getToken(TibboBasicPreprocessorParser.CODE, 0);\r\n};\r\n\r\nCodeLineContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof TibboBasicPreprocessorParserListener ) {\r\n        listener.enterCodeLine(this);\r\n\t}\r\n};\r\n\r\nCodeLineContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof TibboBasicPreprocessorParserListener ) {\r\n        listener.exitCodeLine(this);\r\n\t}\r\n};\r\n\r\nCodeLineContext.prototype.accept = function(visitor) {\r\n    if ( visitor instanceof TibboBasicPreprocessorParserVisitor ) {\r\n        return visitor.visitCodeLine(this);\r\n    } else {\r\n        return visitor.visitChildren(this);\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nTibboBasicPreprocessorParser.CodeLineContext = CodeLineContext;\r\n\r\nTibboBasicPreprocessorParser.prototype.codeLine = function() {\r\n\r\n    var localctx = new CodeLineContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 6, TibboBasicPreprocessorParser.RULE_codeLine);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 46;\r\n        this.match(TibboBasicPreprocessorParser.CODE);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\n\r\nfunction DirectiveContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = TibboBasicPreprocessorParser.RULE_directive;\r\n    return this;\r\n}\r\n\r\nDirectiveContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nDirectiveContext.prototype.constructor = DirectiveContext;\r\n\r\n\r\n \r\nDirectiveContext.prototype.copyFrom = function(ctx) {\r\n    antlr4.ParserRuleContext.prototype.copyFrom.call(this, ctx);\r\n};\r\n\r\n\r\nfunction PreprocessorDefContext(parser, ctx) {\r\n\tDirectiveContext.call(this, parser);\r\n    DirectiveContext.prototype.copyFrom.call(this, ctx);\r\n    return this;\r\n}\r\n\r\nPreprocessorDefContext.prototype = Object.create(DirectiveContext.prototype);\r\nPreprocessorDefContext.prototype.constructor = PreprocessorDefContext;\r\n\r\nTibboBasicPreprocessorParser.PreprocessorDefContext = PreprocessorDefContext;\r\n\r\nPreprocessorDefContext.prototype.SHARP = function() {\r\n    return this.getToken(TibboBasicPreprocessorParser.SHARP, 0);\r\n};\r\n\r\nPreprocessorDefContext.prototype.IFDEF = function() {\r\n    return this.getToken(TibboBasicPreprocessorParser.IFDEF, 0);\r\n};\r\n\r\nPreprocessorDefContext.prototype.CONDITIONAL_SYMBOL = function() {\r\n    return this.getToken(TibboBasicPreprocessorParser.CONDITIONAL_SYMBOL, 0);\r\n};\r\n\r\nPreprocessorDefContext.prototype.IFNDEF = function() {\r\n    return this.getToken(TibboBasicPreprocessorParser.IFNDEF, 0);\r\n};\r\nPreprocessorDefContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof TibboBasicPreprocessorParserListener ) {\r\n        listener.enterPreprocessorDef(this);\r\n\t}\r\n};\r\n\r\nPreprocessorDefContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof TibboBasicPreprocessorParserListener ) {\r\n        listener.exitPreprocessorDef(this);\r\n\t}\r\n};\r\n\r\nPreprocessorDefContext.prototype.accept = function(visitor) {\r\n    if ( visitor instanceof TibboBasicPreprocessorParserVisitor ) {\r\n        return visitor.visitPreprocessorDef(this);\r\n    } else {\r\n        return visitor.visitChildren(this);\r\n    }\r\n};\r\n\r\n\r\nfunction PreprocessorErrorContext(parser, ctx) {\r\n\tDirectiveContext.call(this, parser);\r\n    DirectiveContext.prototype.copyFrom.call(this, ctx);\r\n    return this;\r\n}\r\n\r\nPreprocessorErrorContext.prototype = Object.create(DirectiveContext.prototype);\r\nPreprocessorErrorContext.prototype.constructor = PreprocessorErrorContext;\r\n\r\nTibboBasicPreprocessorParser.PreprocessorErrorContext = PreprocessorErrorContext;\r\n\r\nPreprocessorErrorContext.prototype.SHARP = function() {\r\n    return this.getToken(TibboBasicPreprocessorParser.SHARP, 0);\r\n};\r\n\r\nPreprocessorErrorContext.prototype.ERROR = function() {\r\n    return this.getToken(TibboBasicPreprocessorParser.ERROR, 0);\r\n};\r\n\r\nPreprocessorErrorContext.prototype.directive_text = function() {\r\n    return this.getTypedRuleContext(Directive_textContext,0);\r\n};\r\nPreprocessorErrorContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof TibboBasicPreprocessorParserListener ) {\r\n        listener.enterPreprocessorError(this);\r\n\t}\r\n};\r\n\r\nPreprocessorErrorContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof TibboBasicPreprocessorParserListener ) {\r\n        listener.exitPreprocessorError(this);\r\n\t}\r\n};\r\n\r\nPreprocessorErrorContext.prototype.accept = function(visitor) {\r\n    if ( visitor instanceof TibboBasicPreprocessorParserVisitor ) {\r\n        return visitor.visitPreprocessorError(this);\r\n    } else {\r\n        return visitor.visitChildren(this);\r\n    }\r\n};\r\n\r\n\r\nfunction PreprocessorUndefContext(parser, ctx) {\r\n\tDirectiveContext.call(this, parser);\r\n    DirectiveContext.prototype.copyFrom.call(this, ctx);\r\n    return this;\r\n}\r\n\r\nPreprocessorUndefContext.prototype = Object.create(DirectiveContext.prototype);\r\nPreprocessorUndefContext.prototype.constructor = PreprocessorUndefContext;\r\n\r\nTibboBasicPreprocessorParser.PreprocessorUndefContext = PreprocessorUndefContext;\r\n\r\nPreprocessorUndefContext.prototype.SHARP = function() {\r\n    return this.getToken(TibboBasicPreprocessorParser.SHARP, 0);\r\n};\r\n\r\nPreprocessorUndefContext.prototype.UNDEF = function() {\r\n    return this.getToken(TibboBasicPreprocessorParser.UNDEF, 0);\r\n};\r\n\r\nPreprocessorUndefContext.prototype.CONDITIONAL_SYMBOL = function() {\r\n    return this.getToken(TibboBasicPreprocessorParser.CONDITIONAL_SYMBOL, 0);\r\n};\r\nPreprocessorUndefContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof TibboBasicPreprocessorParserListener ) {\r\n        listener.enterPreprocessorUndef(this);\r\n\t}\r\n};\r\n\r\nPreprocessorUndefContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof TibboBasicPreprocessorParserListener ) {\r\n        listener.exitPreprocessorUndef(this);\r\n\t}\r\n};\r\n\r\nPreprocessorUndefContext.prototype.accept = function(visitor) {\r\n    if ( visitor instanceof TibboBasicPreprocessorParserVisitor ) {\r\n        return visitor.visitPreprocessorUndef(this);\r\n    } else {\r\n        return visitor.visitChildren(this);\r\n    }\r\n};\r\n\r\n\r\nfunction PreprocessorConditionalContext(parser, ctx) {\r\n\tDirectiveContext.call(this, parser);\r\n    DirectiveContext.prototype.copyFrom.call(this, ctx);\r\n    return this;\r\n}\r\n\r\nPreprocessorConditionalContext.prototype = Object.create(DirectiveContext.prototype);\r\nPreprocessorConditionalContext.prototype.constructor = PreprocessorConditionalContext;\r\n\r\nTibboBasicPreprocessorParser.PreprocessorConditionalContext = PreprocessorConditionalContext;\r\n\r\nPreprocessorConditionalContext.prototype.SHARP = function() {\r\n    return this.getToken(TibboBasicPreprocessorParser.SHARP, 0);\r\n};\r\n\r\nPreprocessorConditionalContext.prototype.IF = function() {\r\n    return this.getToken(TibboBasicPreprocessorParser.IF, 0);\r\n};\r\n\r\nPreprocessorConditionalContext.prototype.preprocessor_expression = function() {\r\n    return this.getTypedRuleContext(Preprocessor_expressionContext,0);\r\n};\r\n\r\nPreprocessorConditionalContext.prototype.ELIF = function() {\r\n    return this.getToken(TibboBasicPreprocessorParser.ELIF, 0);\r\n};\r\n\r\nPreprocessorConditionalContext.prototype.ELSE = function() {\r\n    return this.getToken(TibboBasicPreprocessorParser.ELSE, 0);\r\n};\r\nPreprocessorConditionalContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof TibboBasicPreprocessorParserListener ) {\r\n        listener.enterPreprocessorConditional(this);\r\n\t}\r\n};\r\n\r\nPreprocessorConditionalContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof TibboBasicPreprocessorParserListener ) {\r\n        listener.exitPreprocessorConditional(this);\r\n\t}\r\n};\r\n\r\nPreprocessorConditionalContext.prototype.accept = function(visitor) {\r\n    if ( visitor instanceof TibboBasicPreprocessorParserVisitor ) {\r\n        return visitor.visitPreprocessorConditional(this);\r\n    } else {\r\n        return visitor.visitChildren(this);\r\n    }\r\n};\r\n\r\n\r\nfunction PreprocessorPragmaContext(parser, ctx) {\r\n\tDirectiveContext.call(this, parser);\r\n    DirectiveContext.prototype.copyFrom.call(this, ctx);\r\n    return this;\r\n}\r\n\r\nPreprocessorPragmaContext.prototype = Object.create(DirectiveContext.prototype);\r\nPreprocessorPragmaContext.prototype.constructor = PreprocessorPragmaContext;\r\n\r\nTibboBasicPreprocessorParser.PreprocessorPragmaContext = PreprocessorPragmaContext;\r\n\r\nPreprocessorPragmaContext.prototype.SHARP = function() {\r\n    return this.getToken(TibboBasicPreprocessorParser.SHARP, 0);\r\n};\r\n\r\nPreprocessorPragmaContext.prototype.PRAGMA = function() {\r\n    return this.getToken(TibboBasicPreprocessorParser.PRAGMA, 0);\r\n};\r\n\r\nPreprocessorPragmaContext.prototype.directive_text = function() {\r\n    return this.getTypedRuleContext(Directive_textContext,0);\r\n};\r\nPreprocessorPragmaContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof TibboBasicPreprocessorParserListener ) {\r\n        listener.enterPreprocessorPragma(this);\r\n\t}\r\n};\r\n\r\nPreprocessorPragmaContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof TibboBasicPreprocessorParserListener ) {\r\n        listener.exitPreprocessorPragma(this);\r\n\t}\r\n};\r\n\r\nPreprocessorPragmaContext.prototype.accept = function(visitor) {\r\n    if ( visitor instanceof TibboBasicPreprocessorParserVisitor ) {\r\n        return visitor.visitPreprocessorPragma(this);\r\n    } else {\r\n        return visitor.visitChildren(this);\r\n    }\r\n};\r\n\r\n\r\nfunction PreprocessorDefineContext(parser, ctx) {\r\n\tDirectiveContext.call(this, parser);\r\n    DirectiveContext.prototype.copyFrom.call(this, ctx);\r\n    return this;\r\n}\r\n\r\nPreprocessorDefineContext.prototype = Object.create(DirectiveContext.prototype);\r\nPreprocessorDefineContext.prototype.constructor = PreprocessorDefineContext;\r\n\r\nTibboBasicPreprocessorParser.PreprocessorDefineContext = PreprocessorDefineContext;\r\n\r\nPreprocessorDefineContext.prototype.SHARP = function() {\r\n    return this.getToken(TibboBasicPreprocessorParser.SHARP, 0);\r\n};\r\n\r\nPreprocessorDefineContext.prototype.DEFINE = function() {\r\n    return this.getToken(TibboBasicPreprocessorParser.DEFINE, 0);\r\n};\r\n\r\nPreprocessorDefineContext.prototype.CONDITIONAL_SYMBOL = function() {\r\n    return this.getToken(TibboBasicPreprocessorParser.CONDITIONAL_SYMBOL, 0);\r\n};\r\n\r\nPreprocessorDefineContext.prototype.directive_text = function() {\r\n    return this.getTypedRuleContext(Directive_textContext,0);\r\n};\r\nPreprocessorDefineContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof TibboBasicPreprocessorParserListener ) {\r\n        listener.enterPreprocessorDefine(this);\r\n\t}\r\n};\r\n\r\nPreprocessorDefineContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof TibboBasicPreprocessorParserListener ) {\r\n        listener.exitPreprocessorDefine(this);\r\n\t}\r\n};\r\n\r\nPreprocessorDefineContext.prototype.accept = function(visitor) {\r\n    if ( visitor instanceof TibboBasicPreprocessorParserVisitor ) {\r\n        return visitor.visitPreprocessorDefine(this);\r\n    } else {\r\n        return visitor.visitChildren(this);\r\n    }\r\n};\r\n\r\n\r\nfunction PreprocessorEndConditionalContext(parser, ctx) {\r\n\tDirectiveContext.call(this, parser);\r\n    DirectiveContext.prototype.copyFrom.call(this, ctx);\r\n    return this;\r\n}\r\n\r\nPreprocessorEndConditionalContext.prototype = Object.create(DirectiveContext.prototype);\r\nPreprocessorEndConditionalContext.prototype.constructor = PreprocessorEndConditionalContext;\r\n\r\nTibboBasicPreprocessorParser.PreprocessorEndConditionalContext = PreprocessorEndConditionalContext;\r\n\r\nPreprocessorEndConditionalContext.prototype.SHARP = function() {\r\n    return this.getToken(TibboBasicPreprocessorParser.SHARP, 0);\r\n};\r\n\r\nPreprocessorEndConditionalContext.prototype.ENDIF = function() {\r\n    return this.getToken(TibboBasicPreprocessorParser.ENDIF, 0);\r\n};\r\nPreprocessorEndConditionalContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof TibboBasicPreprocessorParserListener ) {\r\n        listener.enterPreprocessorEndConditional(this);\r\n\t}\r\n};\r\n\r\nPreprocessorEndConditionalContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof TibboBasicPreprocessorParserListener ) {\r\n        listener.exitPreprocessorEndConditional(this);\r\n\t}\r\n};\r\n\r\nPreprocessorEndConditionalContext.prototype.accept = function(visitor) {\r\n    if ( visitor instanceof TibboBasicPreprocessorParserVisitor ) {\r\n        return visitor.visitPreprocessorEndConditional(this);\r\n    } else {\r\n        return visitor.visitChildren(this);\r\n    }\r\n};\r\n\r\n\r\n\r\nTibboBasicPreprocessorParser.DirectiveContext = DirectiveContext;\r\n\r\nTibboBasicPreprocessorParser.prototype.directive = function() {\r\n\r\n    var localctx = new DirectiveContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 8, TibboBasicPreprocessorParser.RULE_directive);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.state = 79;\r\n        this._errHandler.sync(this);\r\n        var la_ = this._interp.adaptivePredict(this._input,6,this._ctx);\r\n        switch(la_) {\r\n        case 1:\r\n            localctx = new PreprocessorConditionalContext(this, localctx);\r\n            this.enterOuterAlt(localctx, 1);\r\n            this.state = 48;\r\n            this.match(TibboBasicPreprocessorParser.SHARP);\r\n            this.state = 49;\r\n            this.match(TibboBasicPreprocessorParser.IF);\r\n            this.state = 50;\r\n            this.preprocessor_expression(0);\r\n            break;\r\n\r\n        case 2:\r\n            localctx = new PreprocessorConditionalContext(this, localctx);\r\n            this.enterOuterAlt(localctx, 2);\r\n            this.state = 51;\r\n            this.match(TibboBasicPreprocessorParser.SHARP);\r\n            this.state = 52;\r\n            this.match(TibboBasicPreprocessorParser.ELIF);\r\n            this.state = 53;\r\n            this.preprocessor_expression(0);\r\n            break;\r\n\r\n        case 3:\r\n            localctx = new PreprocessorConditionalContext(this, localctx);\r\n            this.enterOuterAlt(localctx, 3);\r\n            this.state = 54;\r\n            this.match(TibboBasicPreprocessorParser.SHARP);\r\n            this.state = 55;\r\n            this.match(TibboBasicPreprocessorParser.ELSE);\r\n            break;\r\n\r\n        case 4:\r\n            localctx = new PreprocessorEndConditionalContext(this, localctx);\r\n            this.enterOuterAlt(localctx, 4);\r\n            this.state = 56;\r\n            this.match(TibboBasicPreprocessorParser.SHARP);\r\n            this.state = 57;\r\n            this.match(TibboBasicPreprocessorParser.ENDIF);\r\n            break;\r\n\r\n        case 5:\r\n            localctx = new PreprocessorDefContext(this, localctx);\r\n            this.enterOuterAlt(localctx, 5);\r\n            this.state = 58;\r\n            this.match(TibboBasicPreprocessorParser.SHARP);\r\n            this.state = 59;\r\n            this.match(TibboBasicPreprocessorParser.IFDEF);\r\n            this.state = 60;\r\n            this.match(TibboBasicPreprocessorParser.CONDITIONAL_SYMBOL);\r\n            break;\r\n\r\n        case 6:\r\n            localctx = new PreprocessorDefContext(this, localctx);\r\n            this.enterOuterAlt(localctx, 6);\r\n            this.state = 61;\r\n            this.match(TibboBasicPreprocessorParser.SHARP);\r\n            this.state = 62;\r\n            this.match(TibboBasicPreprocessorParser.IFNDEF);\r\n            this.state = 63;\r\n            this.match(TibboBasicPreprocessorParser.CONDITIONAL_SYMBOL);\r\n            break;\r\n\r\n        case 7:\r\n            localctx = new PreprocessorUndefContext(this, localctx);\r\n            this.enterOuterAlt(localctx, 7);\r\n            this.state = 64;\r\n            this.match(TibboBasicPreprocessorParser.SHARP);\r\n            this.state = 65;\r\n            this.match(TibboBasicPreprocessorParser.UNDEF);\r\n            this.state = 66;\r\n            this.match(TibboBasicPreprocessorParser.CONDITIONAL_SYMBOL);\r\n            break;\r\n\r\n        case 8:\r\n            localctx = new PreprocessorPragmaContext(this, localctx);\r\n            this.enterOuterAlt(localctx, 8);\r\n            this.state = 67;\r\n            this.match(TibboBasicPreprocessorParser.SHARP);\r\n            this.state = 68;\r\n            this.match(TibboBasicPreprocessorParser.PRAGMA);\r\n            this.state = 69;\r\n            this.directive_text();\r\n            break;\r\n\r\n        case 9:\r\n            localctx = new PreprocessorErrorContext(this, localctx);\r\n            this.enterOuterAlt(localctx, 9);\r\n            this.state = 70;\r\n            this.match(TibboBasicPreprocessorParser.SHARP);\r\n            this.state = 71;\r\n            this.match(TibboBasicPreprocessorParser.ERROR);\r\n            this.state = 72;\r\n            this.directive_text();\r\n            break;\r\n\r\n        case 10:\r\n            localctx = new PreprocessorDefineContext(this, localctx);\r\n            this.enterOuterAlt(localctx, 10);\r\n            this.state = 73;\r\n            this.match(TibboBasicPreprocessorParser.SHARP);\r\n            this.state = 74;\r\n            this.match(TibboBasicPreprocessorParser.DEFINE);\r\n            this.state = 75;\r\n            this.match(TibboBasicPreprocessorParser.CONDITIONAL_SYMBOL);\r\n            this.state = 77;\r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n            if(_la===TibboBasicPreprocessorParser.TEXT) {\r\n                this.state = 76;\r\n                this.directive_text();\r\n            }\r\n\r\n            break;\r\n\r\n        }\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\n\r\nfunction Include_fileContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = TibboBasicPreprocessorParser.RULE_include_file;\r\n    return this;\r\n}\r\n\r\nInclude_fileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nInclude_fileContext.prototype.constructor = Include_fileContext;\r\n\r\n\r\n \r\nInclude_fileContext.prototype.copyFrom = function(ctx) {\r\n    antlr4.ParserRuleContext.prototype.copyFrom.call(this, ctx);\r\n};\r\n\r\n\r\nfunction PreprocessorIncludeContext(parser, ctx) {\r\n\tInclude_fileContext.call(this, parser);\r\n    Include_fileContext.prototype.copyFrom.call(this, ctx);\r\n    return this;\r\n}\r\n\r\nPreprocessorIncludeContext.prototype = Object.create(Include_fileContext.prototype);\r\nPreprocessorIncludeContext.prototype.constructor = PreprocessorIncludeContext;\r\n\r\nTibboBasicPreprocessorParser.PreprocessorIncludeContext = PreprocessorIncludeContext;\r\n\r\nPreprocessorIncludeContext.prototype.INCLUDE_FILE = function() {\r\n    return this.getToken(TibboBasicPreprocessorParser.INCLUDE_FILE, 0);\r\n};\r\n\r\nPreprocessorIncludeContext.prototype.INCLUDE = function() {\r\n    return this.getToken(TibboBasicPreprocessorParser.INCLUDE, 0);\r\n};\r\n\r\nPreprocessorIncludeContext.prototype.INCLUDEPP = function() {\r\n    return this.getToken(TibboBasicPreprocessorParser.INCLUDEPP, 0);\r\n};\r\nPreprocessorIncludeContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof TibboBasicPreprocessorParserListener ) {\r\n        listener.enterPreprocessorInclude(this);\r\n\t}\r\n};\r\n\r\nPreprocessorIncludeContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof TibboBasicPreprocessorParserListener ) {\r\n        listener.exitPreprocessorInclude(this);\r\n\t}\r\n};\r\n\r\nPreprocessorIncludeContext.prototype.accept = function(visitor) {\r\n    if ( visitor instanceof TibboBasicPreprocessorParserVisitor ) {\r\n        return visitor.visitPreprocessorInclude(this);\r\n    } else {\r\n        return visitor.visitChildren(this);\r\n    }\r\n};\r\n\r\n\r\n\r\nTibboBasicPreprocessorParser.Include_fileContext = Include_fileContext;\r\n\r\nTibboBasicPreprocessorParser.prototype.include_file = function() {\r\n\r\n    var localctx = new Include_fileContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 10, TibboBasicPreprocessorParser.RULE_include_file);\r\n    var _la = 0; // Token type\r\n    try {\r\n        localctx = new PreprocessorIncludeContext(this, localctx);\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 81;\r\n        _la = this._input.LA(1);\r\n        if(!(_la===TibboBasicPreprocessorParser.INCLUDE || _la===TibboBasicPreprocessorParser.INCLUDEPP)) {\r\n        this._errHandler.recoverInline(this);\r\n        }\r\n        else {\r\n        \tthis._errHandler.reportMatch(this);\r\n            this.consume();\r\n        }\r\n        this.state = 82;\r\n        this.match(TibboBasicPreprocessorParser.INCLUDE_FILE);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\n\r\nfunction Directive_textContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = TibboBasicPreprocessorParser.RULE_directive_text;\r\n    return this;\r\n}\r\n\r\nDirective_textContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nDirective_textContext.prototype.constructor = Directive_textContext;\r\n\r\nDirective_textContext.prototype.TEXT = function(i) {\r\n\tif(i===undefined) {\r\n\t\ti = null;\r\n\t}\r\n    if(i===null) {\r\n        return this.getTokens(TibboBasicPreprocessorParser.TEXT);\r\n    } else {\r\n        return this.getToken(TibboBasicPreprocessorParser.TEXT, i);\r\n    }\r\n};\r\n\r\n\r\nDirective_textContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof TibboBasicPreprocessorParserListener ) {\r\n        listener.enterDirective_text(this);\r\n\t}\r\n};\r\n\r\nDirective_textContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof TibboBasicPreprocessorParserListener ) {\r\n        listener.exitDirective_text(this);\r\n\t}\r\n};\r\n\r\nDirective_textContext.prototype.accept = function(visitor) {\r\n    if ( visitor instanceof TibboBasicPreprocessorParserVisitor ) {\r\n        return visitor.visitDirective_text(this);\r\n    } else {\r\n        return visitor.visitChildren(this);\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nTibboBasicPreprocessorParser.Directive_textContext = Directive_textContext;\r\n\r\nTibboBasicPreprocessorParser.prototype.directive_text = function() {\r\n\r\n    var localctx = new Directive_textContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 12, TibboBasicPreprocessorParser.RULE_directive_text);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 85; \r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        do {\r\n            this.state = 84;\r\n            this.match(TibboBasicPreprocessorParser.TEXT);\r\n            this.state = 87; \r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n        } while(_la===TibboBasicPreprocessorParser.TEXT);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\n\r\nfunction Preprocessor_expressionContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = TibboBasicPreprocessorParser.RULE_preprocessor_expression;\r\n    return this;\r\n}\r\n\r\nPreprocessor_expressionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nPreprocessor_expressionContext.prototype.constructor = Preprocessor_expressionContext;\r\n\r\n\r\n \r\nPreprocessor_expressionContext.prototype.copyFrom = function(ctx) {\r\n    antlr4.ParserRuleContext.prototype.copyFrom.call(this, ctx);\r\n};\r\n\r\nfunction PreprocessorBinaryContext(parser, ctx) {\r\n\tPreprocessor_expressionContext.call(this, parser);\r\n    this.op = null; // Token;\r\n    Preprocessor_expressionContext.prototype.copyFrom.call(this, ctx);\r\n    return this;\r\n}\r\n\r\nPreprocessorBinaryContext.prototype = Object.create(Preprocessor_expressionContext.prototype);\r\nPreprocessorBinaryContext.prototype.constructor = PreprocessorBinaryContext;\r\n\r\nTibboBasicPreprocessorParser.PreprocessorBinaryContext = PreprocessorBinaryContext;\r\n\r\nPreprocessorBinaryContext.prototype.preprocessor_item = function(i) {\r\n    if(i===undefined) {\r\n        i = null;\r\n    }\r\n    if(i===null) {\r\n        return this.getTypedRuleContexts(Preprocessor_itemContext);\r\n    } else {\r\n        return this.getTypedRuleContext(Preprocessor_itemContext,i);\r\n    }\r\n};\r\n\r\nPreprocessorBinaryContext.prototype.EQUAL = function() {\r\n    return this.getToken(TibboBasicPreprocessorParser.EQUAL, 0);\r\n};\r\n\r\nPreprocessorBinaryContext.prototype.NOTEQUAL = function() {\r\n    return this.getToken(TibboBasicPreprocessorParser.NOTEQUAL, 0);\r\n};\r\n\r\nPreprocessorBinaryContext.prototype.LT = function() {\r\n    return this.getToken(TibboBasicPreprocessorParser.LT, 0);\r\n};\r\n\r\nPreprocessorBinaryContext.prototype.GT = function() {\r\n    return this.getToken(TibboBasicPreprocessorParser.GT, 0);\r\n};\r\n\r\nPreprocessorBinaryContext.prototype.LE = function() {\r\n    return this.getToken(TibboBasicPreprocessorParser.LE, 0);\r\n};\r\n\r\nPreprocessorBinaryContext.prototype.GE = function() {\r\n    return this.getToken(TibboBasicPreprocessorParser.GE, 0);\r\n};\r\n\r\nPreprocessorBinaryContext.prototype.preprocessor_expression = function(i) {\r\n    if(i===undefined) {\r\n        i = null;\r\n    }\r\n    if(i===null) {\r\n        return this.getTypedRuleContexts(Preprocessor_expressionContext);\r\n    } else {\r\n        return this.getTypedRuleContext(Preprocessor_expressionContext,i);\r\n    }\r\n};\r\n\r\nPreprocessorBinaryContext.prototype.AND = function() {\r\n    return this.getToken(TibboBasicPreprocessorParser.AND, 0);\r\n};\r\n\r\nPreprocessorBinaryContext.prototype.OR = function() {\r\n    return this.getToken(TibboBasicPreprocessorParser.OR, 0);\r\n};\r\nPreprocessorBinaryContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof TibboBasicPreprocessorParserListener ) {\r\n        listener.enterPreprocessorBinary(this);\r\n\t}\r\n};\r\n\r\nPreprocessorBinaryContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof TibboBasicPreprocessorParserListener ) {\r\n        listener.exitPreprocessorBinary(this);\r\n\t}\r\n};\r\n\r\nPreprocessorBinaryContext.prototype.accept = function(visitor) {\r\n    if ( visitor instanceof TibboBasicPreprocessorParserVisitor ) {\r\n        return visitor.visitPreprocessorBinary(this);\r\n    } else {\r\n        return visitor.visitChildren(this);\r\n    }\r\n};\r\n\r\n\r\nfunction PreprocessorConstantContext(parser, ctx) {\r\n\tPreprocessor_expressionContext.call(this, parser);\r\n    Preprocessor_expressionContext.prototype.copyFrom.call(this, ctx);\r\n    return this;\r\n}\r\n\r\nPreprocessorConstantContext.prototype = Object.create(Preprocessor_expressionContext.prototype);\r\nPreprocessorConstantContext.prototype.constructor = PreprocessorConstantContext;\r\n\r\nTibboBasicPreprocessorParser.PreprocessorConstantContext = PreprocessorConstantContext;\r\n\r\nPreprocessorConstantContext.prototype.DECIMAL_LITERAL = function() {\r\n    return this.getToken(TibboBasicPreprocessorParser.DECIMAL_LITERAL, 0);\r\n};\r\n\r\nPreprocessorConstantContext.prototype.DIRECTIVE_STRING = function() {\r\n    return this.getToken(TibboBasicPreprocessorParser.DIRECTIVE_STRING, 0);\r\n};\r\nPreprocessorConstantContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof TibboBasicPreprocessorParserListener ) {\r\n        listener.enterPreprocessorConstant(this);\r\n\t}\r\n};\r\n\r\nPreprocessorConstantContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof TibboBasicPreprocessorParserListener ) {\r\n        listener.exitPreprocessorConstant(this);\r\n\t}\r\n};\r\n\r\nPreprocessorConstantContext.prototype.accept = function(visitor) {\r\n    if ( visitor instanceof TibboBasicPreprocessorParserVisitor ) {\r\n        return visitor.visitPreprocessorConstant(this);\r\n    } else {\r\n        return visitor.visitChildren(this);\r\n    }\r\n};\r\n\r\n\r\nfunction PreprocessorConditionalSymbolContext(parser, ctx) {\r\n\tPreprocessor_expressionContext.call(this, parser);\r\n    Preprocessor_expressionContext.prototype.copyFrom.call(this, ctx);\r\n    return this;\r\n}\r\n\r\nPreprocessorConditionalSymbolContext.prototype = Object.create(Preprocessor_expressionContext.prototype);\r\nPreprocessorConditionalSymbolContext.prototype.constructor = PreprocessorConditionalSymbolContext;\r\n\r\nTibboBasicPreprocessorParser.PreprocessorConditionalSymbolContext = PreprocessorConditionalSymbolContext;\r\n\r\nPreprocessorConditionalSymbolContext.prototype.CONDITIONAL_SYMBOL = function() {\r\n    return this.getToken(TibboBasicPreprocessorParser.CONDITIONAL_SYMBOL, 0);\r\n};\r\n\r\nPreprocessorConditionalSymbolContext.prototype.LPAREN = function() {\r\n    return this.getToken(TibboBasicPreprocessorParser.LPAREN, 0);\r\n};\r\n\r\nPreprocessorConditionalSymbolContext.prototype.preprocessor_expression = function() {\r\n    return this.getTypedRuleContext(Preprocessor_expressionContext,0);\r\n};\r\n\r\nPreprocessorConditionalSymbolContext.prototype.RPAREN = function() {\r\n    return this.getToken(TibboBasicPreprocessorParser.RPAREN, 0);\r\n};\r\nPreprocessorConditionalSymbolContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof TibboBasicPreprocessorParserListener ) {\r\n        listener.enterPreprocessorConditionalSymbol(this);\r\n\t}\r\n};\r\n\r\nPreprocessorConditionalSymbolContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof TibboBasicPreprocessorParserListener ) {\r\n        listener.exitPreprocessorConditionalSymbol(this);\r\n\t}\r\n};\r\n\r\nPreprocessorConditionalSymbolContext.prototype.accept = function(visitor) {\r\n    if ( visitor instanceof TibboBasicPreprocessorParserVisitor ) {\r\n        return visitor.visitPreprocessorConditionalSymbol(this);\r\n    } else {\r\n        return visitor.visitChildren(this);\r\n    }\r\n};\r\n\r\n\r\n\r\nTibboBasicPreprocessorParser.prototype.preprocessor_expression = function(_p) {\r\n\tif(_p===undefined) {\r\n\t    _p = 0;\r\n\t}\r\n    var _parentctx = this._ctx;\r\n    var _parentState = this.state;\r\n    var localctx = new Preprocessor_expressionContext(this, this._ctx, _parentState);\r\n    var _prevctx = localctx;\r\n    var _startState = 14;\r\n    this.enterRecursionRule(localctx, 14, TibboBasicPreprocessorParser.RULE_preprocessor_expression, _p);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 107;\r\n        this._errHandler.sync(this);\r\n        var la_ = this._interp.adaptivePredict(this._input,9,this._ctx);\r\n        switch(la_) {\r\n        case 1:\r\n            localctx = new PreprocessorConstantContext(this, localctx);\r\n            this._ctx = localctx;\r\n            _prevctx = localctx;\r\n\r\n            this.state = 90;\r\n            this.match(TibboBasicPreprocessorParser.DECIMAL_LITERAL);\r\n            break;\r\n\r\n        case 2:\r\n            localctx = new PreprocessorConstantContext(this, localctx);\r\n            this._ctx = localctx;\r\n            _prevctx = localctx;\r\n            this.state = 91;\r\n            this.match(TibboBasicPreprocessorParser.DIRECTIVE_STRING);\r\n            break;\r\n\r\n        case 3:\r\n            localctx = new PreprocessorConditionalSymbolContext(this, localctx);\r\n            this._ctx = localctx;\r\n            _prevctx = localctx;\r\n            this.state = 92;\r\n            this.match(TibboBasicPreprocessorParser.CONDITIONAL_SYMBOL);\r\n            this.state = 97;\r\n            this._errHandler.sync(this);\r\n            var la_ = this._interp.adaptivePredict(this._input,8,this._ctx);\r\n            if(la_===1) {\r\n                this.state = 93;\r\n                this.match(TibboBasicPreprocessorParser.LPAREN);\r\n                this.state = 94;\r\n                this.preprocessor_expression(0);\r\n                this.state = 95;\r\n                this.match(TibboBasicPreprocessorParser.RPAREN);\r\n\r\n            }\r\n            break;\r\n\r\n        case 4:\r\n            localctx = new PreprocessorBinaryContext(this, localctx);\r\n            this._ctx = localctx;\r\n            _prevctx = localctx;\r\n            this.state = 99;\r\n            this.preprocessor_item();\r\n            this.state = 100;\r\n            localctx.op = this._input.LT(1);\r\n            _la = this._input.LA(1);\r\n            if(!(_la===TibboBasicPreprocessorParser.EQUAL || _la===TibboBasicPreprocessorParser.NOTEQUAL)) {\r\n                localctx.op = this._errHandler.recoverInline(this);\r\n            }\r\n            else {\r\n            \tthis._errHandler.reportMatch(this);\r\n                this.consume();\r\n            }\r\n            this.state = 101;\r\n            this.preprocessor_item();\r\n            break;\r\n\r\n        case 5:\r\n            localctx = new PreprocessorBinaryContext(this, localctx);\r\n            this._ctx = localctx;\r\n            _prevctx = localctx;\r\n            this.state = 103;\r\n            this.preprocessor_item();\r\n            this.state = 104;\r\n            localctx.op = this._input.LT(1);\r\n            _la = this._input.LA(1);\r\n            if(!((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << TibboBasicPreprocessorParser.LT) | (1 << TibboBasicPreprocessorParser.GT) | (1 << TibboBasicPreprocessorParser.LE) | (1 << TibboBasicPreprocessorParser.GE))) !== 0))) {\r\n                localctx.op = this._errHandler.recoverInline(this);\r\n            }\r\n            else {\r\n            \tthis._errHandler.reportMatch(this);\r\n                this.consume();\r\n            }\r\n            this.state = 105;\r\n            this.preprocessor_item();\r\n            break;\r\n\r\n        }\r\n        this._ctx.stop = this._input.LT(-1);\r\n        this.state = 117;\r\n        this._errHandler.sync(this);\r\n        var _alt = this._interp.adaptivePredict(this._input,11,this._ctx)\r\n        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {\r\n            if(_alt===1) {\r\n                if(this._parseListeners!==null) {\r\n                    this.triggerExitRuleEvent();\r\n                }\r\n                _prevctx = localctx;\r\n                this.state = 115;\r\n                this._errHandler.sync(this);\r\n                var la_ = this._interp.adaptivePredict(this._input,10,this._ctx);\r\n                switch(la_) {\r\n                case 1:\r\n                    localctx = new PreprocessorBinaryContext(this, new Preprocessor_expressionContext(this, _parentctx, _parentState));\r\n                    this.pushNewRecursionContext(localctx, _startState, TibboBasicPreprocessorParser.RULE_preprocessor_expression);\r\n                    this.state = 109;\r\n                    if (!( this.precpred(this._ctx, 3))) {\r\n                        throw new antlr4.error.FailedPredicateException(this, \"this.precpred(this._ctx, 3)\");\r\n                    }\r\n                    this.state = 110;\r\n                    localctx.op = this.match(TibboBasicPreprocessorParser.AND);\r\n                    this.state = 111;\r\n                    this.preprocessor_expression(4);\r\n                    break;\r\n\r\n                case 2:\r\n                    localctx = new PreprocessorBinaryContext(this, new Preprocessor_expressionContext(this, _parentctx, _parentState));\r\n                    this.pushNewRecursionContext(localctx, _startState, TibboBasicPreprocessorParser.RULE_preprocessor_expression);\r\n                    this.state = 112;\r\n                    if (!( this.precpred(this._ctx, 2))) {\r\n                        throw new antlr4.error.FailedPredicateException(this, \"this.precpred(this._ctx, 2)\");\r\n                    }\r\n                    this.state = 113;\r\n                    localctx.op = this.match(TibboBasicPreprocessorParser.OR);\r\n                    this.state = 114;\r\n                    this.preprocessor_expression(3);\r\n                    break;\r\n\r\n                } \r\n            }\r\n            this.state = 119;\r\n            this._errHandler.sync(this);\r\n            _alt = this._interp.adaptivePredict(this._input,11,this._ctx);\r\n        }\r\n\r\n    } catch( error) {\r\n        if(error instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = error;\r\n\t        this._errHandler.reportError(this, error);\r\n\t        this._errHandler.recover(this, error);\r\n\t    } else {\r\n\t    \tthrow error;\r\n\t    }\r\n    } finally {\r\n        this.unrollRecursionContexts(_parentctx)\r\n    }\r\n    return localctx;\r\n};\r\n\r\n\r\nfunction Preprocessor_itemContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = TibboBasicPreprocessorParser.RULE_preprocessor_item;\r\n    return this;\r\n}\r\n\r\nPreprocessor_itemContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nPreprocessor_itemContext.prototype.constructor = Preprocessor_itemContext;\r\n\r\nPreprocessor_itemContext.prototype.CONDITIONAL_SYMBOL = function() {\r\n    return this.getToken(TibboBasicPreprocessorParser.CONDITIONAL_SYMBOL, 0);\r\n};\r\n\r\nPreprocessor_itemContext.prototype.DECIMAL_LITERAL = function() {\r\n    return this.getToken(TibboBasicPreprocessorParser.DECIMAL_LITERAL, 0);\r\n};\r\n\r\nPreprocessor_itemContext.prototype.DIRECTIVE_STRING = function() {\r\n    return this.getToken(TibboBasicPreprocessorParser.DIRECTIVE_STRING, 0);\r\n};\r\n\r\nPreprocessor_itemContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof TibboBasicPreprocessorParserListener ) {\r\n        listener.enterPreprocessor_item(this);\r\n\t}\r\n};\r\n\r\nPreprocessor_itemContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof TibboBasicPreprocessorParserListener ) {\r\n        listener.exitPreprocessor_item(this);\r\n\t}\r\n};\r\n\r\nPreprocessor_itemContext.prototype.accept = function(visitor) {\r\n    if ( visitor instanceof TibboBasicPreprocessorParserVisitor ) {\r\n        return visitor.visitPreprocessor_item(this);\r\n    } else {\r\n        return visitor.visitChildren(this);\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nTibboBasicPreprocessorParser.Preprocessor_itemContext = Preprocessor_itemContext;\r\n\r\nTibboBasicPreprocessorParser.prototype.preprocessor_item = function() {\r\n\r\n    var localctx = new Preprocessor_itemContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 16, TibboBasicPreprocessorParser.RULE_preprocessor_item);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 120;\r\n        _la = this._input.LA(1);\r\n        if(!(((((_la - 30)) & ~0x1f) == 0 && ((1 << (_la - 30)) & ((1 << (TibboBasicPreprocessorParser.DIRECTIVE_STRING - 30)) | (1 << (TibboBasicPreprocessorParser.CONDITIONAL_SYMBOL - 30)) | (1 << (TibboBasicPreprocessorParser.DECIMAL_LITERAL - 30)))) !== 0))) {\r\n        this._errHandler.recoverInline(this);\r\n        }\r\n        else {\r\n        \tthis._errHandler.reportMatch(this);\r\n            this.consume();\r\n        }\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\n\r\nTibboBasicPreprocessorParser.prototype.sempred = function(localctx, ruleIndex, predIndex) {\r\n\tswitch(ruleIndex) {\r\n\tcase 7:\r\n\t\t\treturn this.preprocessor_expression_sempred(localctx, predIndex);\r\n    default:\r\n        throw \"No predicate with index:\" + ruleIndex;\r\n   }\r\n};\r\n\r\nTibboBasicPreprocessorParser.prototype.preprocessor_expression_sempred = function(localctx, predIndex) {\r\n\tswitch(predIndex) {\r\n\t\tcase 0:\r\n\t\t\treturn this.precpred(this._ctx, 3);\r\n\t\tcase 1:\r\n\t\t\treturn this.precpred(this._ctx, 2);\r\n\t\tdefault:\r\n\t\t\tthrow \"No predicate with index:\" + predIndex;\r\n\t}\r\n};\r\n\r\n\r\nexports.TibboBasicPreprocessorParser = TibboBasicPreprocessorParser;\r\n","// Generated from /Users/jimmyhu/Projects/TIDEDesktopService/language/TibboBasic/TibboBasicPreprocessorParser.g4 by ANTLR 4.8\r\n// jshint ignore: start\r\nvar antlr4 = require('antlr4/index');\r\n\r\n// This class defines a complete generic visitor for a parse tree produced by TibboBasicPreprocessorParser.\r\n\r\nfunction TibboBasicPreprocessorParserVisitor() {\r\n\tantlr4.tree.ParseTreeVisitor.call(this);\r\n\treturn this;\r\n}\r\n\r\nTibboBasicPreprocessorParserVisitor.prototype = Object.create(antlr4.tree.ParseTreeVisitor.prototype);\r\nTibboBasicPreprocessorParserVisitor.prototype.constructor = TibboBasicPreprocessorParserVisitor;\r\n\r\n// Visit a parse tree produced by TibboBasicPreprocessorParser#preprocessor.\r\nTibboBasicPreprocessorParserVisitor.prototype.visitPreprocessor = function(ctx) {\r\n  return this.visitChildren(ctx);\r\n};\r\n\r\n\r\n// Visit a parse tree produced by TibboBasicPreprocessorParser#line.\r\nTibboBasicPreprocessorParserVisitor.prototype.visitLine = function(ctx) {\r\n  return this.visitChildren(ctx);\r\n};\r\n\r\n\r\n// Visit a parse tree produced by TibboBasicPreprocessorParser#text.\r\nTibboBasicPreprocessorParserVisitor.prototype.visitText = function(ctx) {\r\n  return this.visitChildren(ctx);\r\n};\r\n\r\n\r\n// Visit a parse tree produced by TibboBasicPreprocessorParser#codeLine.\r\nTibboBasicPreprocessorParserVisitor.prototype.visitCodeLine = function(ctx) {\r\n  return this.visitChildren(ctx);\r\n};\r\n\r\n\r\n// Visit a parse tree produced by TibboBasicPreprocessorParser#preprocessorConditional.\r\nTibboBasicPreprocessorParserVisitor.prototype.visitPreprocessorConditional = function(ctx) {\r\n  return this.visitChildren(ctx);\r\n};\r\n\r\n\r\n// Visit a parse tree produced by TibboBasicPreprocessorParser#preprocessorEndConditional.\r\nTibboBasicPreprocessorParserVisitor.prototype.visitPreprocessorEndConditional = function(ctx) {\r\n  return this.visitChildren(ctx);\r\n};\r\n\r\n\r\n// Visit a parse tree produced by TibboBasicPreprocessorParser#preprocessorDef.\r\nTibboBasicPreprocessorParserVisitor.prototype.visitPreprocessorDef = function(ctx) {\r\n  return this.visitChildren(ctx);\r\n};\r\n\r\n\r\n// Visit a parse tree produced by TibboBasicPreprocessorParser#preprocessorUndef.\r\nTibboBasicPreprocessorParserVisitor.prototype.visitPreprocessorUndef = function(ctx) {\r\n  return this.visitChildren(ctx);\r\n};\r\n\r\n\r\n// Visit a parse tree produced by TibboBasicPreprocessorParser#preprocessorPragma.\r\nTibboBasicPreprocessorParserVisitor.prototype.visitPreprocessorPragma = function(ctx) {\r\n  return this.visitChildren(ctx);\r\n};\r\n\r\n\r\n// Visit a parse tree produced by TibboBasicPreprocessorParser#preprocessorError.\r\nTibboBasicPreprocessorParserVisitor.prototype.visitPreprocessorError = function(ctx) {\r\n  return this.visitChildren(ctx);\r\n};\r\n\r\n\r\n// Visit a parse tree produced by TibboBasicPreprocessorParser#preprocessorDefine.\r\nTibboBasicPreprocessorParserVisitor.prototype.visitPreprocessorDefine = function(ctx) {\r\n  return this.visitChildren(ctx);\r\n};\r\n\r\n\r\n// Visit a parse tree produced by TibboBasicPreprocessorParser#preprocessorInclude.\r\nTibboBasicPreprocessorParserVisitor.prototype.visitPreprocessorInclude = function(ctx) {\r\n  return this.visitChildren(ctx);\r\n};\r\n\r\n\r\n// Visit a parse tree produced by TibboBasicPreprocessorParser#directive_text.\r\nTibboBasicPreprocessorParserVisitor.prototype.visitDirective_text = function(ctx) {\r\n  return this.visitChildren(ctx);\r\n};\r\n\r\n\r\n// Visit a parse tree produced by TibboBasicPreprocessorParser#preprocessorBinary.\r\nTibboBasicPreprocessorParserVisitor.prototype.visitPreprocessorBinary = function(ctx) {\r\n  return this.visitChildren(ctx);\r\n};\r\n\r\n\r\n// Visit a parse tree produced by TibboBasicPreprocessorParser#preprocessorConstant.\r\nTibboBasicPreprocessorParserVisitor.prototype.visitPreprocessorConstant = function(ctx) {\r\n  return this.visitChildren(ctx);\r\n};\r\n\r\n\r\n// Visit a parse tree produced by TibboBasicPreprocessorParser#preprocessorConditionalSymbol.\r\nTibboBasicPreprocessorParserVisitor.prototype.visitPreprocessorConditionalSymbol = function(ctx) {\r\n  return this.visitChildren(ctx);\r\n};\r\n\r\n\r\n// Visit a parse tree produced by TibboBasicPreprocessorParser#preprocessor_item.\r\nTibboBasicPreprocessorParserVisitor.prototype.visitPreprocessor_item = function(ctx) {\r\n  return this.visitChildren(ctx);\r\n};\r\n\r\n\r\n\r\nexports.TibboBasicPreprocessorParserVisitor = TibboBasicPreprocessorParserVisitor;","import fs = require('fs');\r\n// import path = require('path');\r\n// import ini = require('ini');\r\nimport TibboBasicErrorListener from './TibboBasicErrorListener';\r\n// import { CommonToken } from 'antlr4/Token';\r\nimport { TBObject, TBEnum, TBFunction, TBConst, TBVariable, TBScope, TBSyscall, TBType, TBSyntaxError, TBEvent, TBRange, TBSymbol } from './types';\r\nimport { CommonToken } from 'antlr4/Token';\r\nimport { TerminalNode } from 'antlr4/tree/Tree';\r\nimport { CommonTokenStream } from 'antlr4/CommonTokenStream';\r\n\r\nconst antlr4 = require('antlr4');\r\nconst TibboBasicLexer = require('../language/TibboBasic/lib/TibboBasicLexer').TibboBasicLexer;\r\nconst TibboBasicParser = require('../language/TibboBasic/lib/TibboBasicParser').TibboBasicParser;\r\nconst TibboBasicParserListener = require('../language/TibboBasic/lib/TibboBasicParserListener').TibboBasicParserListener;\r\n\r\nexport default class TibboBasicProjectParser {\r\n\r\n    objects: { [name: string]: TBObject } = {};\r\n    syscalls: { [name: string]: TBSyscall } = {};\r\n\r\n    tokens: { [name: string]: CommonTokenStream } = {};\r\n    trees: { [name: string]: any } = {};\r\n    events: { [name: string]: TBEvent } = {};\r\n    errors: { [name: string]: Array<TBSyntaxError> } = {};\r\n\r\n    enums: { [name: string]: TBEnum } = {};\r\n    functions: { [name: string]: TBFunction } = {};\r\n    consts: { [name: string]: TBConst } = {};\r\n    types: { [name: string]: TBType } = {};\r\n\r\n    comments: { [fileName: string]: CommonToken[] } = {};\r\n    variables: Array<TBVariable> = [];\r\n    scopes: Array<TBScope> = [];\r\n    symbolDeclarations: { [fileName: string]: number[] } = {};\r\n    references: { [symbolName: string]: TBSymbol[] } = {};\r\n\r\n    parseFile(filePath: string, fileContents?: string): void {\r\n        // const t1 = new Date().getTime();\r\n        let deviceRootFile: string | undefined = '';\r\n        if (fileContents != undefined) {\r\n            deviceRootFile = fileContents;\r\n        }\r\n        else {\r\n            deviceRootFile = fs.readFileSync(filePath, 'utf-8');\r\n        }\r\n        if (deviceRootFile == undefined) {\r\n            return;\r\n        }\r\n\r\n        this.resetFileSymbols(filePath);\r\n\r\n        // console.log(`Parsing ${filePath}`);\r\n        const chars = new antlr4.InputStream(deviceRootFile);\r\n        chars.name = filePath;\r\n        const lexer = new TibboBasicLexer(chars);\r\n        const tokens = new antlr4.CommonTokenStream(lexer);\r\n        const parser = new TibboBasicParser(tokens);\r\n        parser.buildParseTrees = true;\r\n        const errorListener = new TibboBasicErrorListener();\r\n        lexer.removeErrorListeners();\r\n        // lexer.addErrorListener(errorListener);\r\n        parser.removeErrorListeners();\r\n        parser.addErrorListener(errorListener);\r\n        const tree = parser.startRule();\r\n        this.tokens[filePath] = tokens;\r\n        this.trees[filePath] = tree;\r\n\r\n\r\n        const listener = new ParserListener(this);\r\n        antlr4.tree.ParseTreeWalker.DEFAULT.walk(listener, tree);\r\n        if (errorListener.errors.length > 0) {\r\n            // console.log(errorListener.errors);\r\n        }\r\n        this.errors[filePath] = errorListener.errors;\r\n\r\n        // const t2 = new Date().getTime();\r\n        // const secondsElapsed = (t2 - t1) / 1000;\r\n        // console.log(`parsed file in ${secondsElapsed} s`);\r\n    }\r\n\r\n    getTokenAtPosition(filePath: string, offset: number): TerminalNode | undefined {\r\n        let tree = this.trees[filePath];\r\n        if (tree == undefined) {\r\n            tree = this.trees[filePath.charAt(0).toUpperCase() + filePath.slice(1)];\r\n        }\r\n        if (tree != undefined) {\r\n            return this.findToken(offset, tree.children);\r\n        }\r\n    }\r\n\r\n    findToken(offset: number, children: Array<any>): TerminalNode | undefined {\r\n        for (let i = 0; i < children.length; i++) {\r\n            if (children[i].children == undefined) {\r\n                if (children[i].symbol && children[i].symbol.start <= offset && children[i].symbol.stop >= offset) {\r\n                    return children[i];\r\n                }\r\n            }\r\n            else {\r\n                const item = this.findToken(offset, children[i].children);\r\n                if (item != undefined) {\r\n                    return item;\r\n                }\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    getScope(filePath: string, offset: number): TBScope | undefined {\r\n        for (let i = 0; i < this.scopes.length; i++) {\r\n            if (this.scopes[i].file == filePath) {\r\n                if (this.scopes[i].start.start <= offset && this.scopes[i].end.start >= offset) {\r\n                    return this.scopes[i];\r\n                }\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    getScopeVariables(scope: TBScope | undefined): Array<TBVariable> {\r\n        const variables: Array<TBVariable> = [];\r\n        if (!scope) {\r\n            return variables;\r\n        }\r\n        for (let i = 0; i < this.variables.length; i++) {\r\n            const variable = this.variables[i];\r\n            if (variable.location.startToken.source[1].name == scope.file) {\r\n                if (variable.location.startToken.start >= scope.start.start\r\n                    && variable.location.startToken.start < scope.end.start) {\r\n                    variables.push(variable);\r\n                }\r\n            }\r\n        }\r\n        return variables;\r\n    }\r\n\r\n    constructComments(): void {\r\n        this.comments = {};\r\n        for (const key in this.tokens) {\r\n            const tokens = this.tokens[key].tokens;\r\n            for (let i = 0; i < tokens.length; i++) {\r\n                if (tokens[i].channel == TibboBasicLexer.COMMENTS_CHANNEL) {\r\n                    const token = tokens[i] as CommonToken;\r\n                    const fileName = token.source[1].name;\r\n                    if (this.comments[fileName] == undefined) {\r\n                        this.comments[fileName] = [];\r\n                    }\r\n                    this.comments[fileName].push(token);\r\n                }\r\n            }\r\n        }\r\n\r\n        for (const key in this.objects) {\r\n            const items = [\r\n                this.objects[key].properties,\r\n                this.objects[key].functions,\r\n                this.objects[key].events\r\n            ];\r\n            items.forEach(prop => {\r\n                for (let i = 0; i < prop.length; i++) {\r\n                    const item = prop[i];\r\n                    item.comments = this.findComments(item.location.stopToken);\r\n                }\r\n            });\r\n            this.objects[key].comments = this.findComments(this.objects[key].location.stopToken);\r\n        }\r\n        let queue = [\r\n            this.enums,\r\n            this.consts,\r\n            this.functions,\r\n            this.variables,\r\n            this.types,\r\n            this.syscalls\r\n        ];\r\n        queue.forEach(table => {\r\n            for (const key in table) {\r\n                const item = table[key];\r\n                if (!item.location) {\r\n                    continue;\r\n                }\r\n                const fileName = item.location.startToken.source[1].name;\r\n                if (this.symbolDeclarations[fileName] == undefined) {\r\n                    this.symbolDeclarations[fileName] = [];\r\n                }\r\n                this.symbolDeclarations[fileName].push(item.location.startToken.line);\r\n                if (item['members'] != undefined) {\r\n                    for (let i = 0; i < item['members'].length; i++) {\r\n                        this.symbolDeclarations[fileName].push(item['members'][i].location.startToken.line);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        queue = [\r\n            this.enums,\r\n            this.consts,\r\n            this.variables,\r\n            this.types\r\n        ];\r\n        queue.forEach(table => {\r\n            for (const key in table) {\r\n                const item = table[key];\r\n                if (!item.location) {\r\n                    continue;\r\n                }\r\n                const fileName = item.location.startToken.source[1].name;\r\n                if (this.symbolDeclarations[fileName] == undefined) {\r\n                    this.symbolDeclarations[fileName] = [];\r\n                }\r\n                item.comments = this.findComments(item.location.stopToken, true);\r\n                if (item['members'] != undefined) {\r\n                    for (let i = 0; i < item['members'].length; i++) {\r\n                        if (item['members'][i].comments.length == 0) {\r\n                            item['members'][i].comments =\r\n                                this.findComments(item['members'][i].location.stopToken, true);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        queue = [\r\n            this.functions,\r\n            this.syscalls\r\n        ];\r\n        queue.forEach(table => {\r\n            for (const key in table) {\r\n                const item = table[key];\r\n                if (!item.location) {\r\n                    continue;\r\n                }\r\n                const fileName = item.location.startToken.source[1].name;\r\n                if (this.symbolDeclarations[fileName] == undefined) {\r\n                    this.symbolDeclarations[fileName] = [];\r\n                }\r\n                item.comments = this.findComments(item.location.stopToken);\r\n            }\r\n        });\r\n    }\r\n\r\n    findComments(location: CommonToken, startsInline = false): Array<CommonToken> {\r\n        const filePath = location.source[1].name;\r\n        let line = location.line;\r\n        const comments: Array<CommonToken> = [];\r\n        const fileComments = this.comments[filePath];\r\n        if (fileComments == undefined) {\r\n            return comments;\r\n        }\r\n\r\n        for (let i = 0; i < fileComments.length; i++) {\r\n            let found = false;\r\n            if (comments.length == 0 && !startsInline) {\r\n                if (line == fileComments[i].line || line + 1 == fileComments[i].line) {\r\n                    found = true;\r\n                    if (line + 1 == fileComments[i].line) {\r\n                        line++;\r\n                    }\r\n                }\r\n            }\r\n            else if (line == fileComments[i].line) {\r\n                found = true;\r\n            }\r\n            if (found) {\r\n                if (this.symbolDeclarations[filePath] &&\r\n                    this.symbolDeclarations[filePath].includes(line)) {\r\n                    if (startsInline && line != location.line) {\r\n                        break;\r\n                    }\r\n                }\r\n                const comment = fileComments[i] as CommonToken;\r\n                comments.push(comment);\r\n                line++;\r\n            }\r\n\r\n\r\n        }\r\n        return comments;\r\n    }\r\n\r\n    addVariable(variable: TBVariable): void {\r\n        //TODO set scope of variable\r\n        let found = false;\r\n        for (let i = 0; i < this.variables.length; i++) {\r\n            if (this.variables[i].name == variable.name) {\r\n                if (this.variables[i].location.startToken.line == variable.location.startToken.line ||\r\n                    Math.abs(variable.location.startToken.line - this.variables[i].location.startToken.line) < 3) {\r\n                    found = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!found) {\r\n            this.variables.push(variable);\r\n        }\r\n    }\r\n\r\n    resetFileSymbols(filePath: string): void {\r\n        // enums: { [name: string]: TBEnum } = {};\r\n        // functions: { [name: string]: TBFunction } = {};\r\n        // subs: { [name: string]: TBSub } = {};\r\n        // consts: { [name: string]: TBConst } = {};\r\n        // types: { [name: string]: TBType } = {};\r\n\r\n        // comments: { [fileName: string]: CommonToken[] } = {};\r\n        // variables: Array<TBVariable> = [];\r\n        // scopes: Array<TBScope> = [];\r\n        // symbolDeclarations: { [fileName: string]: number[] } = {};\r\n        for (const key in this.enums) {\r\n            if (this.enums[key].location.startToken.source[1].name == filePath) {\r\n                delete this.enums[key];\r\n            }\r\n        }\r\n\r\n        for (const key in this.functions) {\r\n            if (this.events[key] == undefined) {\r\n                const location = this.functions[key].location;\r\n                const func = this.functions[key];\r\n                if (location != undefined) {\r\n                    if (location.startToken.source[1].name == filePath) {\r\n                        delete this.functions[key];\r\n                    }\r\n                }\r\n                for (let i = 0; i < func.references.length; i++) {\r\n                    if (func.references[i].startToken.source[1].name == filePath) {\r\n                        func.references.splice(i, 1);\r\n                        i--;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        for (const key in this.consts) {\r\n            if (this.consts[key].location.startToken.source[1].name == filePath) {\r\n                delete this.consts[key];\r\n            }\r\n        }\r\n\r\n        for (const key in this.types) {\r\n            if (this.types[key].location.startToken.source[1].name == filePath) {\r\n                delete this.types[key];\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < this.scopes.length; i++) {\r\n            if (this.scopes[i].file == filePath) {\r\n                this.scopes.splice(i, 1);\r\n                i--;\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < this.variables.length; i++) {\r\n            if (this.variables[i].location.startToken.source[1].name == filePath) {\r\n                this.variables.splice(i, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\nclass ParserListener extends TibboBasicParserListener {\r\n\r\n    parser: TibboBasicProjectParser;\r\n    currentObject?: string;\r\n    currentProperty?: string;\r\n    scopeStack: Array<TBScope> = [];\r\n\r\n    constructor(parser: TibboBasicProjectParser) {\r\n        super();\r\n        this.parser = parser;\r\n    }\r\n\r\n    enterObjectDeclaration(ctx) {\r\n        const name = ctx.children[1].symbol.text;\r\n        this.parser.objects[name] = {\r\n            name: name,\r\n            location: {\r\n                startToken: ctx.start,\r\n                stopToken: ctx.start\r\n            },\r\n            properties: [],\r\n            events: [],\r\n            functions: [],\r\n            comments: []\r\n        };\r\n    }\r\n\r\n    enterEnumerationStmt(ctx) {\r\n        const name = ctx.children[1].symbol.text.toLowerCase();\r\n        this.parser.enums[name] = {\r\n            name: name,\r\n            members: [],\r\n            location: {\r\n                startToken: ctx.start,\r\n                stopToken: ctx.start\r\n            },\r\n            comments: []\r\n        };\r\n    }\r\n\r\n    enterEnumerationStmt_Constant(ctx) {\r\n        const enumName = ctx.parentCtx.children[1].symbol.text.toLowerCase();\r\n        const name = ctx.children[0].symbol.text.toLowerCase();\r\n        const value = (this.parser.enums[enumName].members.length).toString().toLowerCase();\r\n\r\n        this.parser.enums[enumName].members.push({\r\n            name: name,\r\n            value: value,\r\n            comments: [],\r\n            location: {\r\n                startToken: ctx.start,\r\n                stopToken: ctx.start\r\n            },\r\n        });\r\n    }\r\n\r\n    enterSyscallDeclarationInner(ctx) {\r\n        if (ctx.object != null) {\r\n            const objectName = ctx.object.text;\r\n            const functionName = ctx.property.text;\r\n            if (this.parser.objects[objectName] != undefined) {\r\n\r\n                this.parser.objects[objectName].functions.push({\r\n                    name: functionName,\r\n                    syscall: undefined,\r\n                    location: {\r\n                        startToken: ctx.start,\r\n                        stopToken: ctx.start\r\n                    },\r\n                    parameters: [],\r\n                    dataType: '',\r\n                    comments: []\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            //non object syscall\r\n            const name = ctx.property.text;\r\n            let valueType = '';\r\n            for (let i = 0; i < ctx.children.length; i++) {\r\n                if (ctx.children[i].ruleIndex == TibboBasicParser.RULE_asTypeClause) {\r\n                    valueType = ctx.children[i].valueType.getText();\r\n                }\r\n            }\r\n            this.parser.syscalls[name] = {\r\n                name: name,\r\n                parameters: [],\r\n                location: {\r\n                    startToken: ctx.start,\r\n                    stopToken: ctx.start\r\n                },\r\n                dataType: valueType,\r\n                comments: []\r\n            };\r\n        }\r\n    }\r\n\r\n    enterPropertyDefineStmt(ctx) {\r\n        const objectName = ctx.object.text;\r\n        const propertyName = ctx.property.text;\r\n        if (this.parser.objects[objectName] != undefined) {\r\n            this.currentObject = objectName;\r\n            this.currentProperty = propertyName;\r\n\r\n            this.parser.objects[objectName].properties.push({\r\n                name: propertyName,\r\n                dataType: '',\r\n                location: {\r\n                    startToken: ctx.start,\r\n                    stopToken: ctx.start\r\n                },\r\n                comments: []\r\n            });\r\n        }\r\n    }\r\n\r\n    exitPropertyDefineStmt(ctx) {\r\n        this.currentObject = undefined;\r\n        this.currentProperty = undefined;\r\n    }\r\n\r\n    enterAsTypeClause(ctx) {\r\n        if (ctx.parentCtx.ruleIndex == TibboBasicParser.RULE_propertyGetStmt && this.currentObject != undefined) {\r\n            const valueType = ctx.valueType.getText();\r\n            for (let i = 0; i < this.parser.objects[this.currentObject].properties.length; i++) {\r\n                if (this.parser.objects[this.currentObject].properties[i].name == this.currentProperty) {\r\n                    this.parser.objects[this.currentObject].properties[i].dataType = valueType;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    enterSubStmt(ctx) {\r\n        if (ctx.name) {\r\n            const name = ctx.name.text;\r\n            this.addFunction(name, {\r\n                location: {\r\n                    startToken: ctx.start,\r\n                    stopToken: ctx.name\r\n                },\r\n            });\r\n\r\n            const scope: TBScope = {\r\n                file: ctx.start.source[1].name,\r\n                start: ctx.start,\r\n                end: ctx.stop\r\n            };\r\n            this.parser.scopes.push(scope);\r\n            this.scopeStack.push(scope);\r\n        }\r\n    }\r\n\r\n    exitSubStmt(ctx) {\r\n        this.scopeStack.pop();\r\n    }\r\n\r\n    enterFunctionStmt(ctx) {\r\n        if (ctx.name) {\r\n            const name = ctx.name.text;\r\n            let length = '';\r\n            let location: TBRange = {\r\n                startToken: ctx.start,\r\n                stopToken: ctx.start\r\n            };\r\n            for (let i = 0; i < ctx.children.length; i++) {\r\n                if (ctx.children[i].ruleIndex == TibboBasicParser.RULE_asTypeClause) {\r\n                    const valueType = ctx.children[i].valueType.getText();\r\n                    if (ctx.children[i].children.length >= 4) {\r\n                        length = ctx.children[i].children[2].getText();\r\n                    }\r\n                    location = {\r\n                        startToken: ctx.start,\r\n                        stopToken: ctx.children[i].stop\r\n                    }\r\n                    const variable: TBVariable = {\r\n                        name: name,\r\n                        value: '',\r\n                        length: length,\r\n                        dataType: valueType,\r\n                        location: {\r\n                            startToken: ctx.name,\r\n                            stopToken: ctx.name\r\n                        },\r\n                        references: [],\r\n                        comments: []\r\n                    }\r\n                    variable.parentScope = this.scopeStack[this.scopeStack.length - 1];\r\n\r\n                    this.parser.addVariable(variable);\r\n                }\r\n            }\r\n            this.addFunction(name, {\r\n                dataType: ctx.returnType.children[1].getText(),\r\n                location: location,\r\n            })\r\n            const scope: TBScope = {\r\n                file: ctx.start.source[1].name,\r\n                start: ctx.start,\r\n                end: ctx.stop\r\n            };\r\n            this.parser.scopes.push(scope);\r\n            this.scopeStack.push(scope);\r\n        }\r\n    }\r\n\r\n    enterConstSubStmt(ctx) {\r\n        this.parser.consts[ctx.name.text] = {\r\n            name: ctx.name.text,\r\n            value: ctx.value.getText(),\r\n            location: {\r\n                startToken: ctx.start,\r\n                stopToken: ctx.stop\r\n            },\r\n            comments: []\r\n        }\r\n    }\r\n\r\n    enterVariableListItem(ctx) {\r\n        if (ctx.parentCtx.variableType === null) {\r\n            return;\r\n        }\r\n        const variableType = ctx.parentCtx.variableType.valueType.getText()\r\n        let length = '';\r\n        if (ctx.children.length >= 4) {\r\n            length = ctx.children[2].getText();\r\n        }\r\n        const name = ctx.children[0].symbol.text;\r\n        const variable: TBVariable = {\r\n            name: name,\r\n            value: '',\r\n            length: length,\r\n            dataType: variableType,\r\n            location: {\r\n                startToken: ctx.start,\r\n                stopToken: ctx.start\r\n            },\r\n            references: [],\r\n            comments: []\r\n        };\r\n        variable.parentScope = this.scopeStack[this.scopeStack.length - 1];\r\n        this.parser.addVariable(variable);\r\n    }\r\n\r\n    enterParam(ctx) {\r\n\r\n        if (ctx.parentCtx.parentCtx.ruleIndex == TibboBasicParser.RULE_declareSubStmt ||\r\n            ctx.parentCtx.parentCtx.ruleIndex == TibboBasicParser.RULE_declareFuncStmt) {\r\n            return;\r\n        }\r\n        let valueType = 'void';\r\n        let length = '';\r\n        ctx.children.forEach(element => {\r\n            if (element.ruleIndex == TibboBasicParser.RULE_asTypeClause) {\r\n                valueType = element.valueType.getText();\r\n                if (element.children.length >= 4) {\r\n                    length = element.children[2].getText();\r\n                }\r\n            }\r\n        });\r\n        const variable = {\r\n            name: ctx.name.text,\r\n            value: '',\r\n            length: length,\r\n            dataType: valueType,\r\n            location: {\r\n                startToken: ctx.name,\r\n                stopToken: ctx.name\r\n            },\r\n            references: [],\r\n            comments: []\r\n        };\r\n        const param = {\r\n            name: ctx.name.text,\r\n            dataType: valueType,\r\n            byref: ctx.byref != null\r\n        };\r\n        this.parser.addVariable(variable);\r\n        if (ctx.parentCtx.parentCtx.ruleIndex == TibboBasicParser.RULE_subStmt) {\r\n            this.parser.functions[ctx.parentCtx.parentCtx.name.text].parameters.push(param);\r\n        }\r\n        if (ctx.parentCtx.parentCtx.ruleIndex == TibboBasicParser.RULE_functionStmt) {\r\n            this.parser.functions[ctx.parentCtx.parentCtx.name.text].parameters.push(param);\r\n        }\r\n        if (ctx.parentCtx.parentCtx.ruleIndex == TibboBasicParser.RULE_syscallDeclarationInner) {\r\n            const objName = ctx.parentCtx.parentCtx.object;\r\n            if (objName) {\r\n                const obj = this.parser.objects[ctx.parentCtx.parentCtx.children[0].symbol.text];\r\n                const prop = ctx.parentCtx.parentCtx.children[2].symbol.text;\r\n                for (let i = 0; i < obj.functions.length; i++) {\r\n                    if (obj.functions[i].name == prop) {\r\n                        obj.functions[i].parameters.push(param);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                this.parser.syscalls[ctx.parentCtx.parentCtx.children[0].symbol.text].parameters.push(param);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    enterBlockIfThenElse(ctx) {\r\n        const scope: TBScope = {\r\n            file: ctx.start.source[1].name,\r\n            start: ctx.start,\r\n            end: ctx.stop,\r\n            parentScope: this.scopeStack[this.scopeStack.length - 1]\r\n        };\r\n        this.parser.scopes.push(scope);\r\n        this.scopeStack.push(scope);\r\n    }\r\n\r\n    exitBlockIfThenElse(ctx) {\r\n        this.scopeStack.pop();\r\n    }\r\n\r\n    enterDeclareSubStmt(ctx) {\r\n        const name = ctx.children[2].symbol.text;\r\n        this.addFunction(name, {\r\n            declaration: {\r\n                startToken: ctx.start,\r\n                stopToken: ctx.start\r\n            },\r\n        });\r\n    }\r\n\r\n    enterDeclareFuncStmt(ctx) {\r\n        const name = ctx.children[2].symbol.text;\r\n        this.addFunction(name, {\r\n            declaration: {\r\n                startToken: ctx.start,\r\n                stopToken: ctx.start\r\n            }\r\n        });\r\n    }\r\n\r\n    enterInlineIfThenElse(ctx) {\r\n        const scope: TBScope = {\r\n            file: ctx.start.source[1].name,\r\n            start: ctx.start.start,\r\n            end: ctx.stop.stop,\r\n            parentScope: this.scopeStack[this.scopeStack.length - 1]\r\n        };\r\n        this.parser.scopes.push(scope);\r\n        this.scopeStack.push(scope);\r\n    }\r\n\r\n    exitInlineIfThenElse(ctx) {\r\n        this.scopeStack.pop();\r\n    }\r\n\r\n    enterTypeStmt(ctx) {\r\n        const name = ctx.children[1].getText();\r\n        const members: Array<TBVariable> = [];\r\n        for (let i = 0; i < ctx.children.length; i++) {\r\n            if (ctx.children[i].ruleIndex == TibboBasicParser.RULE_typeStmtElement) {\r\n                const item = ctx.children[i];\r\n                const varName = item.children[0].getText();\r\n                let dataType = '';\r\n                const length = '';\r\n                let asType = item.children[1];\r\n                for (let j = 0; j < item.children.length; j++) {\r\n                    if (item.children[j].ruleIndex && item.children[j].ruleIndex == TibboBasicParser.RULE_asTypeClause) {\r\n                        asType = item.children[j];\r\n                        break;\r\n                    }\r\n                }\r\n                dataType = asType.children[1].getText();\r\n                const variable: TBVariable = {\r\n                    name: varName,\r\n                    value: '',\r\n                    length: length,\r\n                    dataType: dataType,\r\n                    location: {\r\n                        startToken: item.start,\r\n                        stopToken: item.start\r\n                    },\r\n                    references: [],\r\n                    comments: []\r\n                };\r\n                members.push(variable);\r\n            }\r\n        }\r\n        this.parser.types[name] = {\r\n            name: name,\r\n            members: members,\r\n            location: {\r\n                startToken: ctx.start,\r\n                stopToken: ctx.start\r\n            },\r\n            comments: []\r\n        };\r\n    }\r\n\r\n    enterEventDeclaration(ctx) {\r\n        const name = ctx.name.text;\r\n        const params = [];\r\n\r\n        this.parser.events[name] = {\r\n            name: name,\r\n            eventNumber: ctx.number,\r\n            parameters: params,\r\n            location: {\r\n                startToken: ctx.start,\r\n                stopToken: ctx.start\r\n            },\r\n            comments: []\r\n        }\r\n    }\r\n\r\n    getComments(ctx) {\r\n        let comments = '';\r\n        if (ctx && ctx.children) {\r\n            for (let i = 0; i < ctx.children.length; i++) {\r\n                comments += ctx.children[i].getText().substring(1);\r\n            }\r\n        }\r\n        return comments;\r\n    }\r\n\r\n    enterPrimaryExpression(ctx) {\r\n        for (let i = 0; i < ctx.children.length; i++) {\r\n            let item = ctx.children[i];\r\n            if (item.ruleIndex == TibboBasicParser.RULE_literal && item.start.type == TibboBasicParser.IDENTIFIER) {\r\n                let location: TBRange = {\r\n                    startToken: ctx.start,\r\n                    stopToken: ctx.start\r\n                };\r\n                let symbolName = item.start.text;\r\n\r\n                // this.addSymbolReference(symbolName, location);\r\n                // this.addFunction(symbolName, {});\r\n                // this.parser.functions[symbolName].references.push(location);\r\n            }\r\n        }\r\n    }\r\n\r\n    enterExpression(ctx) {\r\n        if (!ctx.children) {\r\n            return;\r\n        }\r\n        for (let i = 0; i < ctx.children.length; i++) {\r\n            let item = ctx.children[i];\r\n            if (item.ruleIndex == TibboBasicParser.RULE_literal && item.start.type == TibboBasicParser.IDENTIFIER) {\r\n                let symbolName = item.start.text;\r\n                console.log(symbolName);\r\n            }\r\n            // console.log(ctx.getText());\r\n        }\r\n\r\n    }\r\n\r\n    addFunction(name: string, func: any): void {\r\n        if (name != undefined) {\r\n            if (this.parser.functions[name] == undefined) {\r\n                this.parser.functions[name] = {\r\n                    name: name,\r\n                    parameters: [],\r\n                    comments: [],\r\n                    references: []\r\n                }\r\n            }\r\n        }\r\n        for (const key in func) {\r\n            this.parser.functions[name][key] = func[key];\r\n        }\r\n    }\r\n\r\n    addSymbolReference(name: string, location: TBRange): void {\r\n\r\n    }\r\n\r\n    // enterPostfixExpression(ctx) {\r\n    //     console.log(ctx.getText());\r\n    // }\r\n}","// Generated from /Users/jimmyhu/Projects/tibbo-basic/server/language/TibboBasic/TibboBasicLexer.g4 by ANTLR 4.8\r\n// jshint ignore: start\r\nvar antlr4 = require('antlr4/index');\r\n\r\n\r\n\r\nvar serializedATN = [\"\\u0003\\u608b\\ua72a\\u8133\\ub9ed\\u417c\\u3be7\\u7786\\u5964\",\r\n    \"\\u0002\\u0094\\u06c2\\b\\u0001\\b\\u0001\\b\\u0001\\b\\u0001\\b\\u0001\\u0004\\u0002\",\r\n    \"\\t\\u0002\\u0004\\u0003\\t\\u0003\\u0004\\u0004\\t\\u0004\\u0004\\u0005\\t\\u0005\",\r\n    \"\\u0004\\u0006\\t\\u0006\\u0004\\u0007\\t\\u0007\\u0004\\b\\t\\b\\u0004\\t\\t\\t\\u0004\",\r\n    \"\\n\\t\\n\\u0004\\u000b\\t\\u000b\\u0004\\f\\t\\f\\u0004\\r\\t\\r\\u0004\\u000e\\t\\u000e\",\r\n    \"\\u0004\\u000f\\t\\u000f\\u0004\\u0010\\t\\u0010\\u0004\\u0011\\t\\u0011\\u0004\\u0012\",\r\n    \"\\t\\u0012\\u0004\\u0013\\t\\u0013\\u0004\\u0014\\t\\u0014\\u0004\\u0015\\t\\u0015\",\r\n    \"\\u0004\\u0016\\t\\u0016\\u0004\\u0017\\t\\u0017\\u0004\\u0018\\t\\u0018\\u0004\\u0019\",\r\n    \"\\t\\u0019\\u0004\\u001a\\t\\u001a\\u0004\\u001b\\t\\u001b\\u0004\\u001c\\t\\u001c\",\r\n    \"\\u0004\\u001d\\t\\u001d\\u0004\\u001e\\t\\u001e\\u0004\\u001f\\t\\u001f\\u0004 \",\r\n    \"\\t \\u0004!\\t!\\u0004\\\"\\t\\\"\\u0004#\\t#\\u0004$\\t$\\u0004%\\t%\\u0004&\\t&\\u0004\",\r\n    \"\\'\\t\\'\\u0004(\\t(\\u0004)\\t)\\u0004*\\t*\\u0004+\\t+\\u0004,\\t,\\u0004-\\t-\\u0004\",\r\n    \".\\t.\\u0004/\\t/\\u00040\\t0\\u00041\\t1\\u00042\\t2\\u00043\\t3\\u00044\\t4\\u0004\",\r\n    \"5\\t5\\u00046\\t6\\u00047\\t7\\u00048\\t8\\u00049\\t9\\u0004:\\t:\\u0004;\\t;\\u0004\",\r\n    \"<\\t<\\u0004=\\t=\\u0004>\\t>\\u0004?\\t?\\u0004@\\t@\\u0004A\\tA\\u0004B\\tB\\u0004\",\r\n    \"C\\tC\\u0004D\\tD\\u0004E\\tE\\u0004F\\tF\\u0004G\\tG\\u0004H\\tH\\u0004I\\tI\\u0004\",\r\n    \"J\\tJ\\u0004K\\tK\\u0004L\\tL\\u0004M\\tM\\u0004N\\tN\\u0004O\\tO\\u0004P\\tP\\u0004\",\r\n    \"Q\\tQ\\u0004R\\tR\\u0004S\\tS\\u0004T\\tT\\u0004U\\tU\\u0004V\\tV\\u0004W\\tW\\u0004\",\r\n    \"X\\tX\\u0004Y\\tY\\u0004Z\\tZ\\u0004[\\t[\\u0004\\\\\\t\\\\\\u0004]\\t]\\u0004^\\t^\\u0004\",\r\n    \"_\\t_\\u0004`\\t`\\u0004a\\ta\\u0004b\\tb\\u0004c\\tc\\u0004d\\td\\u0004e\\te\\u0004\",\r\n    \"f\\tf\\u0004g\\tg\\u0004h\\th\\u0004i\\ti\\u0004j\\tj\\u0004k\\tk\\u0004l\\tl\\u0004\",\r\n    \"m\\tm\\u0004n\\tn\\u0004o\\to\\u0004p\\tp\\u0004q\\tq\\u0004r\\tr\\u0004s\\ts\\u0004\",\r\n    \"t\\tt\\u0004u\\tu\\u0004v\\tv\\u0004w\\tw\\u0004x\\tx\\u0004y\\ty\\u0004z\\tz\\u0004\",\r\n    \"{\\t{\\u0004|\\t|\\u0004}\\t}\\u0004~\\t~\\u0004\\u007f\\t\\u007f\\u0004\\u0080\\t\",\r\n    \"\\u0080\\u0004\\u0081\\t\\u0081\\u0004\\u0082\\t\\u0082\\u0004\\u0083\\t\\u0083\\u0004\",\r\n    \"\\u0084\\t\\u0084\\u0004\\u0085\\t\\u0085\\u0004\\u0086\\t\\u0086\\u0004\\u0087\\t\",\r\n    \"\\u0087\\u0004\\u0088\\t\\u0088\\u0004\\u0089\\t\\u0089\\u0004\\u008a\\t\\u008a\\u0004\",\r\n    \"\\u008b\\t\\u008b\\u0004\\u008c\\t\\u008c\\u0004\\u008d\\t\\u008d\\u0004\\u008e\\t\",\r\n    \"\\u008e\\u0004\\u008f\\t\\u008f\\u0004\\u0090\\t\\u0090\\u0004\\u0091\\t\\u0091\\u0004\",\r\n    \"\\u0092\\t\\u0092\\u0004\\u0093\\t\\u0093\\u0004\\u0094\\t\\u0094\\u0004\\u0095\\t\",\r\n    \"\\u0095\\u0004\\u0096\\t\\u0096\\u0004\\u0097\\t\\u0097\\u0004\\u0098\\t\\u0098\\u0004\",\r\n    \"\\u0099\\t\\u0099\\u0004\\u009a\\t\\u009a\\u0004\\u009b\\t\\u009b\\u0004\\u009c\\t\",\r\n    \"\\u009c\\u0004\\u009d\\t\\u009d\\u0004\\u009e\\t\\u009e\\u0004\\u009f\\t\\u009f\\u0004\",\r\n    \"\\u00a0\\t\\u00a0\\u0004\\u00a1\\t\\u00a1\\u0004\\u00a2\\t\\u00a2\\u0004\\u00a3\\t\",\r\n    \"\\u00a3\\u0004\\u00a4\\t\\u00a4\\u0004\\u00a5\\t\\u00a5\\u0004\\u00a6\\t\\u00a6\\u0004\",\r\n    \"\\u00a7\\t\\u00a7\\u0004\\u00a8\\t\\u00a8\\u0004\\u00a9\\t\\u00a9\\u0004\\u00aa\\t\",\r\n    \"\\u00aa\\u0004\\u00ab\\t\\u00ab\\u0004\\u00ac\\t\\u00ac\\u0004\\u00ad\\t\\u00ad\\u0004\",\r\n    \"\\u00ae\\t\\u00ae\\u0004\\u00af\\t\\u00af\\u0004\\u00b0\\t\\u00b0\\u0004\\u00b1\\t\",\r\n    \"\\u00b1\\u0004\\u00b2\\t\\u00b2\\u0004\\u00b3\\t\\u00b3\\u0004\\u00b4\\t\\u00b4\\u0004\",\r\n    \"\\u00b5\\t\\u00b5\\u0004\\u00b6\\t\\u00b6\\u0004\\u00b7\\t\\u00b7\\u0004\\u00b8\\t\",\r\n    \"\\u00b8\\u0004\\u00b9\\t\\u00b9\\u0004\\u00ba\\t\\u00ba\\u0004\\u00bb\\t\\u00bb\\u0004\",\r\n    \"\\u00bc\\t\\u00bc\\u0004\\u00bd\\t\\u00bd\\u0004\\u00be\\t\\u00be\\u0004\\u00bf\\t\",\r\n    \"\\u00bf\\u0004\\u00c0\\t\\u00c0\\u0004\\u00c1\\t\\u00c1\\u0004\\u00c2\\t\\u00c2\\u0004\",\r\n    \"\\u00c3\\t\\u00c3\\u0004\\u00c4\\t\\u00c4\\u0004\\u00c5\\t\\u00c5\\u0004\\u00c6\\t\",\r\n    \"\\u00c6\\u0004\\u00c7\\t\\u00c7\\u0004\\u00c8\\t\\u00c8\\u0004\\u00c9\\t\\u00c9\\u0004\",\r\n    \"\\u00ca\\t\\u00ca\\u0004\\u00cb\\t\\u00cb\\u0004\\u00cc\\t\\u00cc\\u0004\\u00cd\\t\",\r\n    \"\\u00cd\\u0004\\u00ce\\t\\u00ce\\u0004\\u00cf\\t\\u00cf\\u0004\\u00d0\\t\\u00d0\\u0004\",\r\n    \"\\u00d1\\t\\u00d1\\u0004\\u00d2\\t\\u00d2\\u0004\\u00d3\\t\\u00d3\\u0004\\u00d4\\t\",\r\n    \"\\u00d4\\u0004\\u00d5\\t\\u00d5\\u0004\\u00d6\\t\\u00d6\\u0004\\u00d7\\t\\u00d7\\u0004\",\r\n    \"\\u00d8\\t\\u00d8\\u0004\\u00d9\\t\\u00d9\\u0004\\u00da\\t\\u00da\\u0004\\u00db\\t\",\r\n    \"\\u00db\\u0004\\u00dc\\t\\u00dc\\u0004\\u00dd\\t\\u00dd\\u0004\\u00de\\t\\u00de\\u0004\",\r\n    \"\\u00df\\t\\u00df\\u0003\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\",\r\n    \"\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\",\r\n    \"\\u0003\\u0003\\u0004\\u0003\\u0004\\u0003\\u0004\\u0003\\u0005\\u0003\\u0005\\u0003\",\r\n    \"\\u0005\\u0003\\u0005\\u0003\\u0005\\u0003\\u0005\\u0003\\u0005\\u0003\\u0005\\u0003\",\r\n    \"\\u0006\\u0003\\u0006\\u0003\\u0006\\u0003\\u0006\\u0003\\u0006\\u0003\\u0007\\u0003\",\r\n    \"\\u0007\\u0003\\u0007\\u0003\\u0007\\u0003\\u0007\\u0003\\u0007\\u0003\\b\\u0003\",\r\n    \"\\b\\u0003\\b\\u0003\\b\\u0003\\b\\u0003\\t\\u0003\\t\\u0003\\t\\u0003\\t\\u0003\\t\\u0003\",\r\n    \"\\t\\u0003\\n\\u0003\\n\\u0003\\n\\u0003\\n\\u0003\\n\\u0003\\u000b\\u0003\\u000b\\u0003\",\r\n    \"\\u000b\\u0003\\u000b\\u0003\\u000b\\u0003\\u000b\\u0003\\u000b\\u0003\\u000b\\u0003\",\r\n    \"\\u000b\\u0003\\u000b\\u0003\\f\\u0003\\f\\u0003\\f\\u0003\\f\\u0003\\f\\u0003\\r\\u0003\",\r\n    \"\\r\\u0003\\r\\u0003\\r\\u0003\\r\\u0003\\r\\u0003\\u000e\\u0003\\u000e\\u0003\\u000e\",\r\n    \"\\u0003\\u000e\\u0003\\u000e\\u0003\\u000e\\u0003\\u000e\\u0003\\u000e\\u0003\\u000f\",\r\n    \"\\u0003\\u000f\\u0003\\u000f\\u0003\\u000f\\u0003\\u000f\\u0003\\u000f\\u0003\\u000f\",\r\n    \"\\u0003\\u000f\\u0003\\u0010\\u0003\\u0010\\u0003\\u0010\\u0003\\u0010\\u0003\\u0011\",\r\n    \"\\u0003\\u0011\\u0003\\u0011\\u0003\\u0012\\u0003\\u0012\\u0003\\u0012\\u0003\\u0012\",\r\n    \"\\u0003\\u0012\\u0003\\u0012\\u0003\\u0013\\u0003\\u0013\\u0003\\u0013\\u0003\\u0013\",\r\n    \"\\u0003\\u0013\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\",\r\n    \"\\u0003\\u0015\\u0003\\u0015\\u0003\\u0015\\u0003\\u0015\\u0003\\u0016\\u0003\\u0016\",\r\n    \"\\u0003\\u0016\\u0003\\u0016\\u0003\\u0016\\u0003\\u0016\\u0003\\u0016\\u0003\\u0016\",\r\n    \"\\u0003\\u0017\\u0003\\u0017\\u0003\\u0017\\u0003\\u0017\\u0003\\u0017\\u0003\\u0018\",\r\n    \"\\u0003\\u0018\\u0003\\u0018\\u0003\\u0018\\u0003\\u0018\\u0003\\u0018\\u0003\\u0018\",\r\n    \"\\u0003\\u0018\\u0003\\u0018\\u0003\\u0019\\u0003\\u0019\\u0003\\u0019\\u0003\\u0019\",\r\n    \"\\u0003\\u0019\\u0003\\u0019\\u0003\\u0019\\u0003\\u0019\\u0003\\u0019\\u0003\\u0019\",\r\n    \"\\u0003\\u0019\\u0003\\u0019\\u0003\\u0019\\u0003\\u001a\\u0003\\u001a\\u0003\\u001a\",\r\n    \"\\u0003\\u001a\\u0003\\u001a\\u0003\\u001a\\u0003\\u001a\\u0003\\u001b\\u0003\\u001b\",\r\n    \"\\u0003\\u001b\\u0003\\u001b\\u0003\\u001b\\u0003\\u001b\\u0003\\u001b\\u0003\\u001b\",\r\n    \"\\u0003\\u001b\\u0003\\u001b\\u0003\\u001b\\u0003\\u001b\\u0003\\u001b\\u0003\\u001c\",\r\n    \"\\u0003\\u001c\\u0003\\u001c\\u0003\\u001c\\u0003\\u001c\\u0003\\u001c\\u0003\\u001c\",\r\n    \"\\u0003\\u001c\\u0003\\u001c\\u0003\\u001c\\u0003\\u001c\\u0003\\u001d\\u0003\\u001d\",\r\n    \"\\u0003\\u001d\\u0003\\u001d\\u0003\\u001d\\u0003\\u001d\\u0003\\u001d\\u0003\\u001d\",\r\n    \"\\u0003\\u001e\\u0003\\u001e\\u0003\\u001e\\u0003\\u001e\\u0003\\u001e\\u0003\\u001e\",\r\n    \"\\u0003\\u001e\\u0003\\u001e\\u0003\\u001e\\u0003\\u001f\\u0003\\u001f\\u0003\\u001f\",\r\n    \"\\u0003\\u001f\\u0003\\u001f\\u0003\\u001f\\u0003\\u001f\\u0003\\u001f\\u0003\\u001f\",\r\n    \"\\u0003 \\u0003 \\u0003 \\u0003 \\u0003 \\u0003 \\u0003!\\u0003!\\u0003!\\u0003\",\r\n    \"!\\u0003!\\u0003!\\u0003!\\u0003!\\u0003\\\"\\u0003\\\"\\u0003\\\"\\u0003\\\"\\u0003\",\r\n    \"\\\"\\u0003\\\"\\u0003\\\"\\u0003\\\"\\u0003\\\"\\u0003#\\u0003#\\u0003#\\u0003#\\u0003\",\r\n    \"#\\u0003#\\u0003#\\u0003#\\u0003#\\u0003#\\u0003#\\u0003#\\u0003#\\u0003#\\u0003\",\r\n    \"$\\u0003$\\u0003$\\u0003$\\u0003$\\u0003$\\u0003$\\u0003$\\u0003$\\u0003$\\u0003\",\r\n    \"$\\u0003$\\u0003$\\u0003$\\u0003%\\u0003%\\u0003%\\u0003%\\u0003%\\u0003%\\u0003\",\r\n    \"%\\u0003%\\u0003%\\u0003&\\u0003&\\u0003&\\u0003&\\u0003&\\u0003&\\u0003&\\u0003\",\r\n    \"&\\u0003&\\u0003&\\u0003&\\u0003\\'\\u0003\\'\\u0003\\'\\u0003\\'\\u0003\\'\\u0003\",\r\n    \"\\'\\u0003(\\u0003(\\u0003(\\u0003(\\u0003(\\u0003(\\u0003)\\u0003)\\u0003)\\u0003\",\r\n    \")\\u0003*\\u0003*\\u0003*\\u0003*\\u0003*\\u0003*\\u0003*\\u0003*\\u0003*\\u0003\",\r\n    \"+\\u0003+\\u0003+\\u0003+\\u0003,\\u0003,\\u0003,\\u0003,\\u0003,\\u0003-\\u0003\",\r\n    \"-\\u0003-\\u0003-\\u0003-\\u0003.\\u0003.\\u0003.\\u0003.\\u0003.\\u0003.\\u0003\",\r\n    \"/\\u0003/\\u0003/\\u0003/\\u0003/\\u0003/\\u0003/\\u00030\\u00030\\u00030\\u0003\",\r\n    \"0\\u00030\\u00030\\u00030\\u00030\\u00031\\u00031\\u00031\\u00031\\u00031\\u0003\",\r\n    \"1\\u00031\\u00031\\u00031\\u00031\\u00032\\u00032\\u00032\\u00032\\u00032\\u0003\",\r\n    \"2\\u00032\\u00032\\u00033\\u00033\\u00033\\u00033\\u00033\\u00034\\u00034\\u0003\",\r\n    \"4\\u00034\\u00034\\u00035\\u00035\\u00035\\u00035\\u00036\\u00036\\u00036\\u0003\",\r\n    \"6\\u00036\\u00037\\u00037\\u00037\\u00037\\u00038\\u00038\\u00038\\u00039\\u0003\",\r\n    \"9\\u00039\\u00039\\u00039\\u00039\\u00039\\u00039\\u00039\\u0003:\\u0003:\\u0003\",\r\n    \":\\u0003:\\u0003:\\u0003:\\u0003:\\u0003;\\u0003;\\u0003;\\u0003;\\u0003;\\u0003\",\r\n    \";\\u0003;\\u0003<\\u0003<\\u0003<\\u0003<\\u0003=\\u0003=\\u0003=\\u0003=\\u0003\",\r\n    \">\\u0003>\\u0003>\\u0003>\\u0003>\\u0003>\\u0003?\\u0003?\\u0003?\\u0003?\\u0003\",\r\n    \"@\\u0003@\\u0003@\\u0003@\\u0003@\\u0003@\\u0003@\\u0003A\\u0003A\\u0003A\\u0003\",\r\n    \"A\\u0003A\\u0003B\\u0003B\\u0003B\\u0003B\\u0003B\\u0003B\\u0003B\\u0003C\\u0003\",\r\n    \"C\\u0003C\\u0003C\\u0003D\\u0003D\\u0003D\\u0003D\\u0003D\\u0003E\\u0003E\\u0003\",\r\n    \"E\\u0003F\\u0003F\\u0003F\\u0003F\\u0003F\\u0003G\\u0003G\\u0003G\\u0003G\\u0003\",\r\n    \"G\\u0003H\\u0003H\\u0003H\\u0003H\\u0003H\\u0003H\\u0003I\\u0003I\\u0003I\\u0003\",\r\n    \"I\\u0003I\\u0003I\\u0003J\\u0003J\\u0003J\\u0003J\\u0003J\\u0003K\\u0003K\\u0003\",\r\n    \"K\\u0003K\\u0003K\\u0003K\\u0003L\\u0003L\\u0003L\\u0003L\\u0003L\\u0003M\\u0003\",\r\n    \"M\\u0003M\\u0003M\\u0003N\\u0003N\\u0003N\\u0003N\\u0003N\\u0003O\\u0003O\\u0003\",\r\n    \"O\\u0003O\\u0007O\\u03bb\\nO\\fO\\u000eO\\u03be\\u000bO\\u0003O\\u0003O\\u0003\",\r\n    \"P\\u0003P\\u0003P\\u0003P\\u0007P\\u03c6\\nP\\fP\\u000eP\\u03c9\\u000bP\\u0003\",\r\n    \"P\\u0003P\\u0003Q\\u0003Q\\u0003Q\\u0006Q\\u03d0\\nQ\\rQ\\u000eQ\\u03d1\\u0003\",\r\n    \"R\\u0003R\\u0003R\\u0006R\\u03d7\\nR\\rR\\u000eR\\u03d8\\u0003S\\u0006S\\u03dc\",\r\n    \"\\nS\\rS\\u000eS\\u03dd\\u0003T\\u0003T\\u0003U\\u0003U\\u0003V\\u0003V\\u0003\",\r\n    \"V\\u0003W\\u0003W\\u0003X\\u0003X\\u0003X\\u0003Y\\u0003Y\\u0003Z\\u0003Z\\u0003\",\r\n    \"[\\u0003[\\u0003\\\\\\u0003\\\\\\u0003]\\u0003]\\u0003]\\u0003^\\u0003^\\u0003_\\u0003\",\r\n    \"_\\u0003`\\u0003`\\u0003a\\u0003a\\u0003b\\u0003b\\u0003c\\u0003c\\u0003d\\u0005\",\r\n    \"d\\u0404\\nd\\u0003d\\u0003d\\u0003d\\u0003d\\u0003e\\u0003e\\u0007e\\u040c\\n\",\r\n    \"e\\fe\\u000ee\\u040f\\u000be\\u0003e\\u0003e\\u0003f\\u0003f\\u0003g\\u0003g\\u0003\",\r\n    \"h\\u0003h\\u0003i\\u0003i\\u0003j\\u0003j\\u0003k\\u0003k\\u0003l\\u0003l\\u0003\",\r\n    \"m\\u0003m\\u0003m\\u0003m\\u0003m\\u0003m\\u0003m\\u0003m\\u0003n\\u0006n\\u042a\",\r\n    \"\\nn\\rn\\u000en\\u042b\\u0003n\\u0003n\\u0003o\\u0003o\\u0007o\\u0432\\no\\fo\\u000e\",\r\n    \"o\\u0435\\u000bo\\u0003p\\u0003p\\u0003q\\u0003q\\u0003r\\u0003r\\u0003s\\u0003\",\r\n    \"s\\u0003t\\u0003t\\u0003u\\u0003u\\u0003v\\u0003v\\u0003w\\u0003w\\u0003x\\u0003\",\r\n    \"x\\u0003y\\u0003y\\u0003z\\u0003z\\u0003{\\u0003{\\u0003|\\u0003|\\u0003}\\u0003\",\r\n    \"}\\u0003~\\u0003~\\u0003\\u007f\\u0003\\u007f\\u0003\\u0080\\u0003\\u0080\\u0003\",\r\n    \"\\u0081\\u0003\\u0081\\u0003\\u0082\\u0003\\u0082\\u0003\\u0083\\u0003\\u0083\\u0003\",\r\n    \"\\u0084\\u0003\\u0084\\u0003\\u0085\\u0003\\u0085\\u0003\\u0086\\u0003\\u0086\\u0003\",\r\n    \"\\u0087\\u0003\\u0087\\u0003\\u0088\\u0003\\u0088\\u0003\\u0089\\u0003\\u0089\\u0003\",\r\n    \"\\u008a\\u0003\\u008a\\u0003\\u008b\\u0003\\u008b\\u0003\\u008c\\u0003\\u008c\\u0003\",\r\n    \"\\u008d\\u0003\\u008d\\u0006\\u008d\\u0473\\n\\u008d\\r\\u008d\\u000e\\u008d\\u0474\",\r\n    \"\\u0003\\u008d\\u0003\\u008d\\u0003\\u008d\\u0003\\u008e\\u0003\\u008e\\u0006\\u008e\",\r\n    \"\\u047c\\n\\u008e\\r\\u008e\\u000e\\u008e\\u047d\\u0003\\u008e\\u0003\\u008e\\u0003\",\r\n    \"\\u008e\\u0003\\u008f\\u0003\\u008f\\u0003\\u008f\\u0003\\u008f\\u0003\\u008f\\u0003\",\r\n    \"\\u008f\\u0003\\u008f\\u0006\\u008f\\u048a\\n\\u008f\\r\\u008f\\u000e\\u008f\\u048b\",\r\n    \"\\u0003\\u008f\\u0003\\u008f\\u0003\\u008f\\u0003\\u0090\\u0003\\u0090\\u0003\\u0090\",\r\n    \"\\u0003\\u0090\\u0003\\u0090\\u0003\\u0091\\u0003\\u0091\\u0003\\u0091\\u0003\\u0091\",\r\n    \"\\u0003\\u0091\\u0003\\u0091\\u0003\\u0091\\u0003\\u0092\\u0003\\u0092\\u0003\\u0092\",\r\n    \"\\u0003\\u0092\\u0003\\u0092\\u0003\\u0092\\u0003\\u0092\\u0003\\u0093\\u0003\\u0093\",\r\n    \"\\u0003\\u0093\\u0003\\u0093\\u0003\\u0093\\u0003\\u0093\\u0003\\u0093\\u0003\\u0093\",\r\n    \"\\u0003\\u0094\\u0003\\u0094\\u0003\\u0094\\u0003\\u0094\\u0003\\u0094\\u0003\\u0094\",\r\n    \"\\u0003\\u0094\\u0003\\u0094\\u0003\\u0095\\u0003\\u0095\\u0003\\u0095\\u0003\\u0095\",\r\n    \"\\u0003\\u0095\\u0003\\u0095\\u0003\\u0095\\u0003\\u0095\\u0003\\u0095\\u0003\\u0096\",\r\n    \"\\u0003\\u0096\\u0003\\u0096\\u0003\\u0096\\u0003\\u0096\\u0003\\u0096\\u0003\\u0096\",\r\n    \"\\u0003\\u0096\\u0003\\u0096\\u0003\\u0097\\u0003\\u0097\\u0003\\u0097\\u0003\\u0097\",\r\n    \"\\u0003\\u0097\\u0003\\u0097\\u0003\\u0097\\u0003\\u0097\\u0003\\u0097\\u0003\\u0098\",\r\n    \"\\u0003\\u0098\\u0003\\u0098\\u0003\\u0098\\u0003\\u0099\\u0003\\u0099\\u0003\\u0099\",\r\n    \"\\u0003\\u0099\\u0003\\u009a\\u0003\\u009a\\u0003\\u009a\\u0003\\u009a\\u0003\\u009b\",\r\n    \"\\u0003\\u009b\\u0003\\u009b\\u0003\\u009b\\u0003\\u009c\\u0003\\u009c\\u0003\\u009c\",\r\n    \"\\u0003\\u009c\\u0003\\u009c\\u0003\\u009d\\u0003\\u009d\\u0003\\u009d\\u0003\\u009d\",\r\n    \"\\u0003\\u009e\\u0003\\u009e\\u0003\\u009e\\u0003\\u009e\\u0003\\u009f\\u0003\\u009f\",\r\n    \"\\u0003\\u009f\\u0003\\u009f\\u0003\\u00a0\\u0003\\u00a0\\u0003\\u00a0\\u0003\\u00a0\",\r\n    \"\\u0003\\u00a1\\u0003\\u00a1\\u0003\\u00a1\\u0003\\u00a1\\u0003\\u00a1\\u0003\\u00a2\",\r\n    \"\\u0003\\u00a2\\u0003\\u00a2\\u0003\\u00a2\\u0003\\u00a2\\u0003\\u00a3\\u0006\\u00a3\",\r\n    \"\\u04ff\\n\\u00a3\\r\\u00a3\\u000e\\u00a3\\u0500\\u0003\\u00a3\\u0003\\u00a3\\u0003\",\r\n    \"\\u00a3\\u0003\\u00a4\\u0003\\u00a4\\u0007\\u00a4\\u0508\\n\\u00a4\\f\\u00a4\\u000e\",\r\n    \"\\u00a4\\u050b\\u000b\\u00a4\\u0003\\u00a4\\u0003\\u00a4\\u0003\\u00a5\\u0006\\u00a5\",\r\n    \"\\u0510\\n\\u00a5\\r\\u00a5\\u000e\\u00a5\\u0511\\u0003\\u00a5\\u0003\\u00a5\\u0003\",\r\n    \"\\u00a6\\u0006\\u00a6\\u0517\\n\\u00a6\\r\\u00a6\\u000e\\u00a6\\u0518\\u0003\\u00a6\",\r\n    \"\\u0003\\u00a6\\u0007\\u00a6\\u051d\\n\\u00a6\\f\\u00a6\\u000e\\u00a6\\u0520\\u000b\",\r\n    \"\\u00a6\\u0003\\u00a6\\u0003\\u00a6\\u0006\\u00a6\\u0524\\n\\u00a6\\r\\u00a6\\u000e\",\r\n    \"\\u00a6\\u0525\\u0005\\u00a6\\u0528\\n\\u00a6\\u0003\\u00a6\\u0003\\u00a6\\u0003\",\r\n    \"\\u00a7\\u0005\\u00a7\\u052d\\n\\u00a7\\u0003\\u00a7\\u0003\\u00a7\\u0003\\u00a7\",\r\n    \"\\u0003\\u00a7\\u0003\\u00a7\\u0003\\u00a8\\u0003\\u00a8\\u0007\\u00a8\\u0536\\n\",\r\n    \"\\u00a8\\f\\u00a8\\u000e\\u00a8\\u0539\\u000b\\u00a8\\u0003\\u00a8\\u0003\\u00a8\",\r\n    \"\\u0003\\u00a9\\u0003\\u00a9\\u0005\\u00a9\\u053f\\n\\u00a9\\u0003\\u00a9\\u0003\",\r\n    \"\\u00a9\\u0003\\u00a9\\u0003\\u00a9\\u0003\\u00aa\\u0003\\u00aa\\u0007\\u00aa\\u0547\",\r\n    \"\\n\\u00aa\\f\\u00aa\\u000e\\u00aa\\u054a\\u000b\\u00aa\\u0003\\u00aa\\u0003\\u00aa\",\r\n    \"\\u0003\\u00aa\\u0007\\u00aa\\u054f\\n\\u00aa\\f\\u00aa\\u000e\\u00aa\\u0552\\u000b\",\r\n    \"\\u00aa\\u0003\\u00aa\\u0005\\u00aa\\u0555\\n\\u00aa\\u0003\\u00aa\\u0003\\u00aa\",\r\n    \"\\u0003\\u00aa\\u0003\\u00aa\\u0003\\u00ab\\u0003\\u00ab\\u0005\\u00ab\\u055d\\n\",\r\n    \"\\u00ab\\u0003\\u00ab\\u0003\\u00ab\\u0003\\u00ab\\u0003\\u00ab\\u0003\\u00ac\\u0003\",\r\n    \"\\u00ac\\u0003\\u00ac\\u0003\\u00ac\\u0003\\u00ac\\u0003\\u00ac\\u0003\\u00ad\\u0005\",\r\n    \"\\u00ad\\u056a\\n\\u00ad\\u0003\\u00ad\\u0003\\u00ad\\u0003\\u00ad\\u0003\\u00ad\",\r\n    \"\\u0003\\u00ad\\u0003\\u00ae\\u0003\\u00ae\\u0003\\u00ae\\u0003\\u00ae\\u0007\\u00ae\",\r\n    \"\\u0575\\n\\u00ae\\f\\u00ae\\u000e\\u00ae\\u0578\\u000b\\u00ae\\u0003\\u00ae\\u0003\",\r\n    \"\\u00ae\\u0003\\u00ae\\u0003\\u00ae\\u0003\\u00ae\\u0003\\u00af\\u0003\\u00af\\u0003\",\r\n    \"\\u00af\\u0003\\u00af\\u0007\\u00af\\u0583\\n\\u00af\\f\\u00af\\u000e\\u00af\\u0586\",\r\n    \"\\u000b\\u00af\\u0003\\u00af\\u0003\\u00af\\u0003\\u00b0\\u0003\\u00b0\\u0003\\u00b0\",\r\n    \"\\u0003\\u00b0\\u0003\\u00b0\\u0003\\u00b1\\u0006\\u00b1\\u0590\\n\\u00b1\\r\\u00b1\",\r\n    \"\\u000e\\u00b1\\u0591\\u0003\\u00b1\\u0003\\u00b1\\u0003\\u00b2\\u0003\\u00b2\\u0003\",\r\n    \"\\u00b2\\u0003\\u00b2\\u0003\\u00b2\\u0003\\u00b2\\u0003\\u00b3\\u0003\\u00b3\\u0003\",\r\n    \"\\u00b3\\u0003\\u00b3\\u0003\\u00b3\\u0003\\u00b3\\u0003\\u00b3\\u0003\\u00b4\\u0003\",\r\n    \"\\u00b4\\u0003\\u00b4\\u0003\\u00b4\\u0003\\u00b4\\u0003\\u00b4\\u0003\\u00b5\\u0003\",\r\n    \"\\u00b5\\u0003\\u00b5\\u0003\\u00b5\\u0003\\u00b5\\u0003\\u00b5\\u0003\\u00b5\\u0003\",\r\n    \"\\u00b5\\u0003\\u00b5\\u0003\\u00b5\\u0003\\u00b6\\u0003\\u00b6\\u0003\\u00b6\\u0003\",\r\n    \"\\u00b6\\u0003\\u00b6\\u0003\\u00b6\\u0003\\u00b6\\u0003\\u00b6\\u0003\\u00b6\\u0003\",\r\n    \"\\u00b6\\u0003\\u00b6\\u0003\\u00b7\\u0003\\u00b7\\u0003\\u00b7\\u0003\\u00b7\\u0003\",\r\n    \"\\u00b7\\u0003\\u00b7\\u0003\\u00b7\\u0003\\u00b7\\u0003\\u00b7\\u0003\\u00b7\\u0003\",\r\n    \"\\u00b7\\u0003\\u00b7\\u0003\\u00b7\\u0003\\u00b7\\u0003\\u00b7\\u0003\\u00b7\\u0003\",\r\n    \"\\u00b8\\u0003\\u00b8\\u0003\\u00b8\\u0003\\u00b8\\u0003\\u00b8\\u0003\\u00b8\\u0003\",\r\n    \"\\u00b8\\u0003\\u00b8\\u0003\\u00b8\\u0003\\u00b8\\u0003\\u00b8\\u0003\\u00b9\\u0003\",\r\n    \"\\u00b9\\u0003\\u00b9\\u0003\\u00b9\\u0003\\u00b9\\u0003\\u00b9\\u0003\\u00b9\\u0003\",\r\n    \"\\u00b9\\u0003\\u00b9\\u0003\\u00b9\\u0003\\u00b9\\u0003\\u00b9\\u0003\\u00b9\\u0003\",\r\n    \"\\u00ba\\u0003\\u00ba\\u0003\\u00ba\\u0003\\u00ba\\u0003\\u00ba\\u0003\\u00ba\\u0003\",\r\n    \"\\u00ba\\u0003\\u00ba\\u0003\\u00bb\\u0003\\u00bb\\u0003\\u00bb\\u0003\\u00bb\\u0003\",\r\n    \"\\u00bb\\u0003\\u00bb\\u0003\\u00bb\\u0003\\u00bc\\u0003\\u00bc\\u0003\\u00bc\\u0003\",\r\n    \"\\u00bc\\u0003\\u00bc\\u0003\\u00bc\\u0003\\u00bd\\u0003\\u00bd\\u0003\\u00bd\\u0003\",\r\n    \"\\u00bd\\u0003\\u00bd\\u0003\\u00bd\\u0003\\u00be\\u0003\\u00be\\u0003\\u00be\\u0003\",\r\n    \"\\u00be\\u0003\\u00be\\u0003\\u00bf\\u0003\\u00bf\\u0003\\u00bf\\u0003\\u00bf\\u0003\",\r\n    \"\\u00bf\\u0003\\u00bf\\u0003\\u00c0\\u0003\\u00c0\\u0003\\u00c0\\u0003\\u00c0\\u0003\",\r\n    \"\\u00c0\\u0003\\u00c0\\u0003\\u00c1\\u0003\\u00c1\\u0003\\u00c1\\u0003\\u00c1\\u0003\",\r\n    \"\\u00c1\\u0003\\u00c1\\u0003\\u00c1\\u0003\\u00c1\\u0003\\u00c1\\u0003\\u00c2\\u0003\",\r\n    \"\\u00c2\\u0003\\u00c2\\u0003\\u00c2\\u0003\\u00c2\\u0003\\u00c2\\u0003\\u00c2\\u0003\",\r\n    \"\\u00c3\\u0003\\u00c3\\u0003\\u00c3\\u0003\\u00c3\\u0003\\u00c3\\u0003\\u00c3\\u0003\",\r\n    \"\\u00c3\\u0003\\u00c4\\u0003\\u00c4\\u0003\\u00c4\\u0003\\u00c4\\u0003\\u00c4\\u0003\",\r\n    \"\\u00c4\\u0003\\u00c5\\u0003\\u00c5\\u0003\\u00c5\\u0003\\u00c5\\u0007\\u00c5\\u0633\",\r\n    \"\\n\\u00c5\\f\\u00c5\\u000e\\u00c5\\u0636\\u000b\\u00c5\\u0003\\u00c5\\u0003\\u00c5\",\r\n    \"\\u0003\\u00c5\\u0003\\u00c5\\u0003\\u00c6\\u0003\\u00c6\\u0003\\u00c6\\u0006\\u00c6\",\r\n    \"\\u063f\\n\\u00c6\\r\\u00c6\\u000e\\u00c6\\u0640\\u0003\\u00c6\\u0003\\u00c6\\u0003\",\r\n    \"\\u00c7\\u0003\\u00c7\\u0003\\u00c7\\u0006\\u00c7\\u0648\\n\\u00c7\\r\\u00c7\\u000e\",\r\n    \"\\u00c7\\u0649\\u0003\\u00c7\\u0003\\u00c7\\u0003\\u00c8\\u0006\\u00c8\\u064f\\n\",\r\n    \"\\u00c8\\r\\u00c8\\u000e\\u00c8\\u0650\\u0003\\u00c8\\u0003\\u00c8\\u0003\\u00c9\",\r\n    \"\\u0003\\u00c9\\u0003\\u00c9\\u0003\\u00c9\\u0003\\u00ca\\u0003\\u00ca\\u0003\\u00ca\",\r\n    \"\\u0003\\u00ca\\u0003\\u00cb\\u0003\\u00cb\\u0003\\u00cb\\u0003\\u00cb\\u0003\\u00cb\",\r\n    \"\\u0003\\u00cc\\u0003\\u00cc\\u0003\\u00cc\\u0003\\u00cc\\u0003\\u00cd\\u0003\\u00cd\",\r\n    \"\\u0003\\u00cd\\u0003\\u00cd\\u0003\\u00cd\\u0003\\u00ce\\u0003\\u00ce\\u0003\\u00ce\",\r\n    \"\\u0003\\u00ce\\u0003\\u00cf\\u0003\\u00cf\\u0003\\u00cf\\u0003\\u00cf\\u0003\\u00d0\",\r\n    \"\\u0003\\u00d0\\u0003\\u00d0\\u0003\\u00d0\\u0003\\u00d1\\u0003\\u00d1\\u0003\\u00d1\",\r\n    \"\\u0003\\u00d1\\u0003\\u00d2\\u0003\\u00d2\\u0003\\u00d2\\u0003\\u00d2\\u0003\\u00d2\",\r\n    \"\\u0003\\u00d3\\u0003\\u00d3\\u0003\\u00d3\\u0003\\u00d3\\u0003\\u00d4\\u0003\\u00d4\",\r\n    \"\\u0003\\u00d4\\u0003\\u00d4\\u0003\\u00d5\\u0005\\u00d5\\u0689\\n\\u00d5\\u0003\",\r\n    \"\\u00d5\\u0003\\u00d5\\u0003\\u00d5\\u0003\\u00d5\\u0003\\u00d5\\u0003\\u00d6\\u0003\",\r\n    \"\\u00d6\\u0007\\u00d6\\u0692\\n\\u00d6\\f\\u00d6\\u000e\\u00d6\\u0695\\u000b\\u00d6\",\r\n    \"\\u0003\\u00d6\\u0003\\u00d6\\u0003\\u00d7\\u0003\\u00d7\\u0003\\u00d7\\u0003\\u00d7\",\r\n    \"\\u0003\\u00d8\\u0003\\u00d8\\u0003\\u00d8\\u0003\\u00d8\\u0003\\u00d9\\u0003\\u00d9\",\r\n    \"\\u0003\\u00d9\\u0003\\u00d9\\u0003\\u00da\\u0003\\u00da\\u0003\\u00da\\u0003\\u00da\",\r\n    \"\\u0003\\u00db\\u0003\\u00db\\u0003\\u00db\\u0003\\u00db\\u0003\\u00dc\\u0003\\u00dc\",\r\n    \"\\u0003\\u00dc\\u0003\\u00dc\\u0003\\u00dd\\u0006\\u00dd\\u06b2\\n\\u00dd\\r\\u00dd\",\r\n    \"\\u000e\\u00dd\\u06b3\\u0003\\u00dd\\u0003\\u00dd\\u0003\\u00de\\u0003\\u00de\\u0007\",\r\n    \"\\u00de\\u06ba\\n\\u00de\\f\\u00de\\u000e\\u00de\\u06bd\\u000b\\u00de\\u0003\\u00de\",\r\n    \"\\u0003\\u00de\\u0003\\u00df\\u0003\\u00df\\u0003\\u0576\\u0002\\u00e0\\u0007\\u0003\",\r\n    \"\\t\\u0004\\u000b\\u0005\\r\\u0006\\u000f\\u0007\\u0011\\b\\u0013\\t\\u0015\\n\\u0017\",\r\n    \"\\u000b\\u0019\\f\\u001b\\r\\u001d\\u000e\\u001f\\u000f!\\u0010#\\u0011%\\u0012\",\r\n    \"\\'\\u0013)\\u0014+\\u0015-\\u0016/\\u00171\\u00183\\u00195\\u001a7\\u001b9\\u001c\",\r\n    \";\\u001d=\\u001e?\\u001fA C!E\\\"G#I$K%M&O\\'Q(S)U*W+Y,[-]._/a0c1e2g3i4k5\",\r\n    \"m6o7q8s9u:w;y<{=}>\\u007f?\\u0081@\\u0083A\\u0085B\\u0087C\\u0089D\\u008bE\",\r\n    \"\\u008dF\\u008fG\\u0091H\\u0093I\\u0095J\\u0097K\\u0099L\\u009bM\\u009dN\\u009f\",\r\n    \"O\\u00a1P\\u00a3Q\\u00a5R\\u00a7S\\u00a9T\\u00abU\\u00adV\\u00afW\\u00b1X\\u00b3\",\r\n    \"Y\\u00b5Z\\u00b7[\\u00b9\\\\\\u00bb]\\u00bd^\\u00bf_\\u00c1`\\u00c3a\\u00c5b\\u00c7\",\r\n    \"c\\u00c9d\\u00cbe\\u00cdf\\u00cfg\\u00d1h\\u00d3i\\u00d5j\\u00d7k\\u00d9l\\u00db\",\r\n    \"m\\u00ddn\\u00dfo\\u00e1p\\u00e3\\u0002\\u00e5\\u0002\\u00e7\\u0002\\u00e9\\u0002\",\r\n    \"\\u00eb\\u0002\\u00ed\\u0002\\u00ef\\u0002\\u00f1\\u0002\\u00f3\\u0002\\u00f5\\u0002\",\r\n    \"\\u00f7\\u0002\\u00f9\\u0002\\u00fb\\u0002\\u00fd\\u0002\\u00ff\\u0002\\u0101\\u0002\",\r\n    \"\\u0103\\u0002\\u0105\\u0002\\u0107\\u0002\\u0109\\u0002\\u010b\\u0002\\u010d\\u0002\",\r\n    \"\\u010f\\u0002\\u0111\\u0002\\u0113\\u0002\\u0115\\u0002\\u0117\\u0002\\u0119\\u0002\",\r\n    \"\\u011b\\u0002\\u011dq\\u011fr\\u0121s\\u0123t\\u0125u\\u0127v\\u0129w\\u012b\",\r\n    \"x\\u012dy\\u012fz\\u0131{\\u0133|\\u0135}\\u0137~\\u0139\\u007f\\u013b\\u0080\",\r\n    \"\\u013d\\u0081\\u013f\\u0082\\u0141\\u0083\\u0143\\u0084\\u0145\\u0085\\u0147\\u0086\",\r\n    \"\\u0149\\u0002\\u014b\\u0087\\u014d\\u0088\\u014f\\u0089\\u0151\\u008a\\u0153\\u008b\",\r\n    \"\\u0155\\u008c\\u0157\\u0002\\u0159\\u008d\\u015b\\u0002\\u015d\\u008e\\u015f\\u008f\",\r\n    \"\\u0161\\u0090\\u0163\\u0002\\u0165\\u0091\\u0167\\u0002\\u0169\\u0002\\u016b\\u0002\",\r\n    \"\\u016d\\u0002\\u016f\\u0002\\u0171\\u0002\\u0173\\u0002\\u0175\\u0002\\u0177\\u0002\",\r\n    \"\\u0179\\u0002\\u017b\\u0002\\u017d\\u0002\\u017f\\u0002\\u0181\\u0002\\u0183\\u0002\",\r\n    \"\\u0185\\u0002\\u0187\\u0002\\u0189\\u0002\\u018b\\u0002\\u018d\\u0002\\u018f\\u0002\",\r\n    \"\\u0191\\u0002\\u0193\\u0002\\u0195\\u0002\\u0197\\u0002\\u0199\\u0002\\u019b\\u0002\",\r\n    \"\\u019d\\u0002\\u019f\\u0002\\u01a1\\u0002\\u01a3\\u0002\\u01a5\\u0002\\u01a7\\u0002\",\r\n    \"\\u01a9\\u0002\\u01ab\\u0002\\u01ad\\u0002\\u01af\\u0092\\u01b1\\u0002\\u01b3\\u0002\",\r\n    \"\\u01b5\\u0002\\u01b7\\u0002\\u01b9\\u0002\\u01bb\\u0002\\u01bd\\u0093\\u01bf\\u0002\",\r\n    \"\\u01c1\\u0094\\u0007\\u0002\\u0003\\u0004\\u0005\\u0006)\\u0004\\u0002$$bb\\u0005\",\r\n    \"\\u0002\\f\\f\\u000f\\u000f$$\\u0003\\u0002bb\\u0005\\u00022;CHch\\u0004\\u0002\",\r\n    \"2;CH\\u0004\\u000211^^\\u0004\\u0002\\f\\f\\u000f\\u000f\\u0004\\u0002\\u000b\\u000b\",\r\n    \"\\\"\\\"\\u0005\\u0002C\\\\aac|\\u0003\\u00022;\\u0006\\u00022;C\\\\aac|\\u0004\\u0002\",\r\n    \"CCcc\\u0004\\u0002DDdd\\u0004\\u0002EEee\\u0004\\u0002FFff\\u0004\\u0002GGg\",\r\n    \"g\\u0004\\u0002HHhh\\u0004\\u0002IIii\\u0004\\u0002JJjj\\u0004\\u0002KKkk\\u0004\",\r\n    \"\\u0002LLll\\u0004\\u0002MMmm\\u0004\\u0002NNnn\\u0004\\u0002OOoo\\u0004\\u0002\",\r\n    \"PPpp\\u0004\\u0002QQqq\\u0004\\u0002RRrr\\u0004\\u0002SSss\\u0004\\u0002TTt\",\r\n    \"t\\u0004\\u0002UUuu\\u0004\\u0002VVvv\\u0004\\u0002WWww\\u0004\\u0002XXxx\\u0004\",\r\n    \"\\u0002YYyy\\u0004\\u0002ZZzz\\u0004\\u0002[[{{\\u0004\\u0002\\\\\\\\||\\u0006\\u0002\",\r\n    \"\\u000b\\u000b\\\"\\\"..00\\u0006\\u0002\\f\\f\\u000f\\u000f11^^\\u0002\\u06ca\\u0002\",\r\n    \"\\u0007\\u0003\\u0002\\u0002\\u0002\\u0002\\t\\u0003\\u0002\\u0002\\u0002\\u0002\",\r\n    \"\\u000b\\u0003\\u0002\\u0002\\u0002\\u0002\\r\\u0003\\u0002\\u0002\\u0002\\u0002\",\r\n    \"\\u000f\\u0003\\u0002\\u0002\\u0002\\u0002\\u0011\\u0003\\u0002\\u0002\\u0002\\u0002\",\r\n    \"\\u0013\\u0003\\u0002\\u0002\\u0002\\u0002\\u0015\\u0003\\u0002\\u0002\\u0002\\u0002\",\r\n    \"\\u0017\\u0003\\u0002\\u0002\\u0002\\u0002\\u0019\\u0003\\u0002\\u0002\\u0002\\u0002\",\r\n    \"\\u001b\\u0003\\u0002\\u0002\\u0002\\u0002\\u001d\\u0003\\u0002\\u0002\\u0002\\u0002\",\r\n    \"\\u001f\\u0003\\u0002\\u0002\\u0002\\u0002!\\u0003\\u0002\\u0002\\u0002\\u0002\",\r\n    \"#\\u0003\\u0002\\u0002\\u0002\\u0002%\\u0003\\u0002\\u0002\\u0002\\u0002\\'\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0002)\\u0003\\u0002\\u0002\\u0002\\u0002+\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0002-\\u0003\\u0002\\u0002\\u0002\\u0002/\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u00021\\u0003\\u0002\\u0002\\u0002\\u00023\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u00025\\u0003\\u0002\\u0002\\u0002\\u00027\\u0003\\u0002\\u0002\\u0002\\u0002\",\r\n    \"9\\u0003\\u0002\\u0002\\u0002\\u0002;\\u0003\\u0002\\u0002\\u0002\\u0002=\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0002?\\u0003\\u0002\\u0002\\u0002\\u0002A\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0002C\\u0003\\u0002\\u0002\\u0002\\u0002E\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u0002G\\u0003\\u0002\\u0002\\u0002\\u0002I\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0002K\\u0003\\u0002\\u0002\\u0002\\u0002M\\u0003\\u0002\\u0002\\u0002\\u0002\",\r\n    \"O\\u0003\\u0002\\u0002\\u0002\\u0002Q\\u0003\\u0002\\u0002\\u0002\\u0002S\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0002U\\u0003\\u0002\\u0002\\u0002\\u0002W\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0002Y\\u0003\\u0002\\u0002\\u0002\\u0002[\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u0002]\\u0003\\u0002\\u0002\\u0002\\u0002_\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0002a\\u0003\\u0002\\u0002\\u0002\\u0002c\\u0003\\u0002\\u0002\\u0002\\u0002\",\r\n    \"e\\u0003\\u0002\\u0002\\u0002\\u0002g\\u0003\\u0002\\u0002\\u0002\\u0002i\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0002k\\u0003\\u0002\\u0002\\u0002\\u0002m\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0002o\\u0003\\u0002\\u0002\\u0002\\u0002q\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u0002s\\u0003\\u0002\\u0002\\u0002\\u0002u\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0002w\\u0003\\u0002\\u0002\\u0002\\u0002y\\u0003\\u0002\\u0002\\u0002\\u0002\",\r\n    \"{\\u0003\\u0002\\u0002\\u0002\\u0002}\\u0003\\u0002\\u0002\\u0002\\u0002\\u007f\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0002\\u0081\\u0003\\u0002\\u0002\\u0002\\u0002\\u0083\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0002\\u0085\\u0003\\u0002\\u0002\\u0002\\u0002\\u0087\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0002\\u0089\\u0003\\u0002\\u0002\\u0002\\u0002\\u008b\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0002\\u008d\\u0003\\u0002\\u0002\\u0002\\u0002\\u008f\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0002\\u0091\\u0003\\u0002\\u0002\\u0002\\u0002\\u0093\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0002\\u0095\\u0003\\u0002\\u0002\\u0002\\u0002\\u0097\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0002\\u0099\\u0003\\u0002\\u0002\\u0002\\u0002\\u009b\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0002\\u009d\\u0003\\u0002\\u0002\\u0002\\u0002\\u009f\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0002\\u00a1\\u0003\\u0002\\u0002\\u0002\\u0002\\u00a3\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0002\\u00a5\\u0003\\u0002\\u0002\\u0002\\u0002\\u00a7\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0002\\u00a9\\u0003\\u0002\\u0002\\u0002\\u0002\\u00ab\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0002\\u00ad\\u0003\\u0002\\u0002\\u0002\\u0002\\u00af\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0002\\u00b1\\u0003\\u0002\\u0002\\u0002\\u0002\\u00b3\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0002\\u00b5\\u0003\\u0002\\u0002\\u0002\\u0002\\u00b7\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0002\\u00b9\\u0003\\u0002\\u0002\\u0002\\u0002\\u00bb\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0002\\u00bd\\u0003\\u0002\\u0002\\u0002\\u0002\\u00bf\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0002\\u00c1\\u0003\\u0002\\u0002\\u0002\\u0002\\u00c3\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0002\\u00c5\\u0003\\u0002\\u0002\\u0002\\u0002\\u00c7\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0002\\u00c9\\u0003\\u0002\\u0002\\u0002\\u0002\\u00cb\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0002\\u00cd\\u0003\\u0002\\u0002\\u0002\\u0002\\u00cf\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0002\\u00d1\\u0003\\u0002\\u0002\\u0002\\u0002\\u00d3\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0002\\u00d5\\u0003\\u0002\\u0002\\u0002\\u0002\\u00d7\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0002\\u00d9\\u0003\\u0002\\u0002\\u0002\\u0002\\u00db\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0002\\u00dd\\u0003\\u0002\\u0002\\u0002\\u0002\\u00df\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0002\\u00e1\\u0003\\u0002\\u0002\\u0002\\u0003\\u011d\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0003\\u011f\\u0003\\u0002\\u0002\\u0002\\u0003\\u0121\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0003\\u0123\\u0003\\u0002\\u0002\\u0002\\u0003\\u0125\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0003\\u0127\\u0003\\u0002\\u0002\\u0002\\u0003\\u0129\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0003\\u012b\\u0003\\u0002\\u0002\\u0002\\u0003\\u012d\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0003\\u012f\\u0003\\u0002\\u0002\\u0002\\u0003\\u0131\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0003\\u0133\\u0003\\u0002\\u0002\\u0002\\u0003\\u0135\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0003\\u0137\\u0003\\u0002\\u0002\\u0002\\u0003\\u0139\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0003\\u013b\\u0003\\u0002\\u0002\\u0002\\u0003\\u013d\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0003\\u013f\\u0003\\u0002\\u0002\\u0002\\u0003\\u0141\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0003\\u0143\\u0003\\u0002\\u0002\\u0002\\u0003\\u0145\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0003\\u0147\\u0003\\u0002\\u0002\\u0002\\u0003\\u0149\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0003\\u014b\\u0003\\u0002\\u0002\\u0002\\u0003\\u014d\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0003\\u014f\\u0003\\u0002\\u0002\\u0002\\u0003\\u0151\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0003\\u0153\\u0003\\u0002\\u0002\\u0002\\u0003\\u0155\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0004\\u0157\\u0003\\u0002\\u0002\\u0002\\u0005\\u0159\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0005\\u015b\\u0003\\u0002\\u0002\\u0002\\u0005\\u015d\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0005\\u015f\\u0003\\u0002\\u0002\\u0002\\u0005\\u0161\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0005\\u0163\\u0003\\u0002\\u0002\\u0002\\u0005\\u0165\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0006\\u0167\\u0003\\u0002\\u0002\\u0002\\u0006\\u0169\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0006\\u016b\\u0003\\u0002\\u0002\\u0002\\u0006\\u016d\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0006\\u016f\\u0003\\u0002\\u0002\\u0002\\u0006\\u0171\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0006\\u0173\\u0003\\u0002\\u0002\\u0002\\u0006\\u0175\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0006\\u0177\\u0003\\u0002\\u0002\\u0002\\u0006\\u0179\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0006\\u017b\\u0003\\u0002\\u0002\\u0002\\u0006\\u017d\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0006\\u017f\\u0003\\u0002\\u0002\\u0002\\u0006\\u0181\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0006\\u0183\\u0003\\u0002\\u0002\\u0002\\u0006\\u0185\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0006\\u0187\\u0003\\u0002\\u0002\\u0002\\u0006\\u0189\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0006\\u018b\\u0003\\u0002\\u0002\\u0002\\u0006\\u018d\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0006\\u018f\\u0003\\u0002\\u0002\\u0002\\u0006\\u0191\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0006\\u0193\\u0003\\u0002\\u0002\\u0002\\u0006\\u0195\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0006\\u0197\\u0003\\u0002\\u0002\\u0002\\u0006\\u0199\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0006\\u019b\\u0003\\u0002\\u0002\\u0002\\u0006\\u019d\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0006\\u019f\\u0003\\u0002\\u0002\\u0002\\u0006\\u01a1\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0006\\u01a3\\u0003\\u0002\\u0002\\u0002\\u0006\\u01a5\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0006\\u01a7\\u0003\\u0002\\u0002\\u0002\\u0006\\u01a9\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0006\\u01ab\\u0003\\u0002\\u0002\\u0002\\u0006\\u01ad\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0006\\u01af\\u0003\\u0002\\u0002\\u0002\\u0006\\u01b1\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0006\\u01b3\\u0003\\u0002\\u0002\\u0002\\u0006\\u01b5\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0006\\u01b7\\u0003\\u0002\\u0002\\u0002\\u0006\\u01b9\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0006\\u01bb\\u0003\\u0002\\u0002\\u0002\\u0006\\u01bd\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0006\\u01bf\\u0003\\u0002\\u0002\\u0002\\u0006\\u01c1\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0007\\u01c3\\u0003\\u0002\\u0002\\u0002\\t\\u01ca\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u000b\\u01ce\\u0003\\u0002\\u0002\\u0002\\r\\u01d1\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u000f\\u01d9\\u0003\\u0002\\u0002\\u0002\\u0011\\u01de\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0013\\u01e4\\u0003\\u0002\\u0002\\u0002\\u0015\\u01e9\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0017\\u01ef\\u0003\\u0002\\u0002\\u0002\\u0019\\u01f4\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u001b\\u01fe\\u0003\\u0002\\u0002\\u0002\\u001d\\u0203\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u001f\\u0209\\u0003\\u0002\\u0002\\u0002!\\u0211\",\r\n    \"\\u0003\\u0002\\u0002\\u0002#\\u0219\\u0003\\u0002\\u0002\\u0002%\\u021d\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\'\\u0220\\u0003\\u0002\\u0002\\u0002)\\u0226\\u0003\\u0002\",\r\n    \"\\u0002\\u0002+\\u022b\\u0003\\u0002\\u0002\\u0002-\\u0230\\u0003\\u0002\\u0002\",\r\n    \"\\u0002/\\u0234\\u0003\\u0002\\u0002\\u00021\\u023c\\u0003\\u0002\\u0002\\u0002\",\r\n    \"3\\u0241\\u0003\\u0002\\u0002\\u00025\\u024a\\u0003\\u0002\\u0002\\u00027\\u0257\",\r\n    \"\\u0003\\u0002\\u0002\\u00029\\u025e\\u0003\\u0002\\u0002\\u0002;\\u026b\\u0003\",\r\n    \"\\u0002\\u0002\\u0002=\\u0276\\u0003\\u0002\\u0002\\u0002?\\u027e\\u0003\\u0002\",\r\n    \"\\u0002\\u0002A\\u0287\\u0003\\u0002\\u0002\\u0002C\\u0290\\u0003\\u0002\\u0002\",\r\n    \"\\u0002E\\u0296\\u0003\\u0002\\u0002\\u0002G\\u029e\\u0003\\u0002\\u0002\\u0002\",\r\n    \"I\\u02a7\\u0003\\u0002\\u0002\\u0002K\\u02b5\\u0003\\u0002\\u0002\\u0002M\\u02c3\",\r\n    \"\\u0003\\u0002\\u0002\\u0002O\\u02cc\\u0003\\u0002\\u0002\\u0002Q\\u02d7\\u0003\",\r\n    \"\\u0002\\u0002\\u0002S\\u02dd\\u0003\\u0002\\u0002\\u0002U\\u02e3\\u0003\\u0002\",\r\n    \"\\u0002\\u0002W\\u02e7\\u0003\\u0002\\u0002\\u0002Y\\u02f0\\u0003\\u0002\\u0002\",\r\n    \"\\u0002[\\u02f4\\u0003\\u0002\\u0002\\u0002]\\u02f9\\u0003\\u0002\\u0002\\u0002\",\r\n    \"_\\u02fe\\u0003\\u0002\\u0002\\u0002a\\u0304\\u0003\\u0002\\u0002\\u0002c\\u030b\",\r\n    \"\\u0003\\u0002\\u0002\\u0002e\\u0313\\u0003\\u0002\\u0002\\u0002g\\u031d\\u0003\",\r\n    \"\\u0002\\u0002\\u0002i\\u0325\\u0003\\u0002\\u0002\\u0002k\\u032a\\u0003\\u0002\",\r\n    \"\\u0002\\u0002m\\u032f\\u0003\\u0002\\u0002\\u0002o\\u0333\\u0003\\u0002\\u0002\",\r\n    \"\\u0002q\\u0338\\u0003\\u0002\\u0002\\u0002s\\u033c\\u0003\\u0002\\u0002\\u0002\",\r\n    \"u\\u033f\\u0003\\u0002\\u0002\\u0002w\\u0348\\u0003\\u0002\\u0002\\u0002y\\u034f\",\r\n    \"\\u0003\\u0002\\u0002\\u0002{\\u0356\\u0003\\u0002\\u0002\\u0002}\\u035a\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u007f\\u035e\\u0003\\u0002\\u0002\\u0002\\u0081\\u0364\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0083\\u0368\\u0003\\u0002\\u0002\\u0002\\u0085\\u036f\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0087\\u0374\\u0003\\u0002\\u0002\\u0002\\u0089\\u037b\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u008b\\u037f\\u0003\\u0002\\u0002\\u0002\\u008d\\u0384\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u008f\\u0387\\u0003\\u0002\\u0002\\u0002\\u0091\\u038c\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0093\\u0391\\u0003\\u0002\\u0002\\u0002\\u0095\\u0397\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0097\\u039d\\u0003\\u0002\\u0002\\u0002\\u0099\\u03a2\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u009b\\u03a8\\u0003\\u0002\\u0002\\u0002\\u009d\\u03ad\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u009f\\u03b1\\u0003\\u0002\\u0002\\u0002\\u00a1\\u03b6\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u00a3\\u03c1\\u0003\\u0002\\u0002\\u0002\\u00a5\\u03cc\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u00a7\\u03d3\\u0003\\u0002\\u0002\\u0002\\u00a9\\u03db\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u00ab\\u03df\\u0003\\u0002\\u0002\\u0002\\u00ad\\u03e1\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u00af\\u03e3\\u0003\\u0002\\u0002\\u0002\\u00b1\\u03e6\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u00b3\\u03e8\\u0003\\u0002\\u0002\\u0002\\u00b5\\u03eb\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u00b7\\u03ed\\u0003\\u0002\\u0002\\u0002\\u00b9\\u03ef\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u00bb\\u03f1\\u0003\\u0002\\u0002\\u0002\\u00bd\\u03f3\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u00bf\\u03f6\\u0003\\u0002\\u0002\\u0002\\u00c1\\u03f8\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u00c3\\u03fa\\u0003\\u0002\\u0002\\u0002\\u00c5\\u03fc\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u00c7\\u03fe\\u0003\\u0002\\u0002\\u0002\\u00c9\\u0400\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u00cb\\u0403\\u0003\\u0002\\u0002\\u0002\\u00cd\\u0409\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u00cf\\u0412\\u0003\\u0002\\u0002\\u0002\\u00d1\\u0414\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u00d3\\u0416\\u0003\\u0002\\u0002\\u0002\\u00d5\\u0418\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u00d7\\u041a\\u0003\\u0002\\u0002\\u0002\\u00d9\\u041c\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u00db\\u041e\\u0003\\u0002\\u0002\\u0002\\u00dd\\u0420\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u00df\\u0429\\u0003\\u0002\\u0002\\u0002\\u00e1\\u042f\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u00e3\\u0436\\u0003\\u0002\\u0002\\u0002\\u00e5\\u0438\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u00e7\\u043a\\u0003\\u0002\\u0002\\u0002\\u00e9\\u043c\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u00eb\\u043e\\u0003\\u0002\\u0002\\u0002\\u00ed\\u0440\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u00ef\\u0442\\u0003\\u0002\\u0002\\u0002\\u00f1\\u0444\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u00f3\\u0446\\u0003\\u0002\\u0002\\u0002\\u00f5\\u0448\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u00f7\\u044a\\u0003\\u0002\\u0002\\u0002\\u00f9\\u044c\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u00fb\\u044e\\u0003\\u0002\\u0002\\u0002\\u00fd\\u0450\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u00ff\\u0452\\u0003\\u0002\\u0002\\u0002\\u0101\\u0454\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0103\\u0456\\u0003\\u0002\\u0002\\u0002\\u0105\\u0458\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0107\\u045a\\u0003\\u0002\\u0002\\u0002\\u0109\\u045c\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u010b\\u045e\\u0003\\u0002\\u0002\\u0002\\u010d\\u0460\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u010f\\u0462\\u0003\\u0002\\u0002\\u0002\\u0111\\u0464\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0113\\u0466\\u0003\\u0002\\u0002\\u0002\\u0115\\u0468\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0117\\u046a\\u0003\\u0002\\u0002\\u0002\\u0119\\u046c\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u011b\\u046e\\u0003\\u0002\\u0002\\u0002\\u011d\\u0470\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u011f\\u0479\\u0003\\u0002\\u0002\\u0002\\u0121\\u0482\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0123\\u0490\\u0003\\u0002\\u0002\\u0002\\u0125\\u0495\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0127\\u049c\\u0003\\u0002\\u0002\\u0002\\u0129\\u04a3\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u012b\\u04ab\\u0003\\u0002\\u0002\\u0002\\u012d\\u04b3\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u012f\\u04bc\\u0003\\u0002\\u0002\\u0002\\u0131\\u04c5\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0133\\u04ce\\u0003\\u0002\\u0002\\u0002\\u0135\\u04d2\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0137\\u04d6\\u0003\\u0002\\u0002\\u0002\\u0139\\u04da\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u013b\\u04de\\u0003\\u0002\\u0002\\u0002\\u013d\\u04e3\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u013f\\u04e7\\u0003\\u0002\\u0002\\u0002\\u0141\\u04eb\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0143\\u04ef\\u0003\\u0002\\u0002\\u0002\\u0145\\u04f3\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0147\\u04f8\\u0003\\u0002\\u0002\\u0002\\u0149\\u04fe\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u014b\\u0505\\u0003\\u0002\\u0002\\u0002\\u014d\\u050f\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u014f\\u0527\\u0003\\u0002\\u0002\\u0002\\u0151\\u052c\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0153\\u0533\\u0003\\u0002\\u0002\\u0002\\u0155\\u053c\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0157\\u0544\\u0003\\u0002\\u0002\\u0002\\u0159\\u055a\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u015b\\u0562\\u0003\\u0002\\u0002\\u0002\\u015d\\u0569\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u015f\\u0570\\u0003\\u0002\\u0002\\u0002\\u0161\\u057e\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0163\\u0589\\u0003\\u0002\\u0002\\u0002\\u0165\\u058f\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0167\\u0595\\u0003\\u0002\\u0002\\u0002\\u0169\\u059b\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u016b\\u05a2\\u0003\\u0002\\u0002\\u0002\\u016d\\u05a8\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u016f\\u05b2\\u0003\\u0002\\u0002\\u0002\\u0171\\u05bd\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0173\\u05cd\\u0003\\u0002\\u0002\\u0002\\u0175\\u05d8\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0177\\u05e5\\u0003\\u0002\\u0002\\u0002\\u0179\\u05ed\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u017b\\u05f4\\u0003\\u0002\\u0002\\u0002\\u017d\\u05fa\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u017f\\u0600\\u0003\\u0002\\u0002\\u0002\\u0181\\u0605\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0183\\u060b\\u0003\\u0002\\u0002\\u0002\\u0185\\u0611\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0187\\u061a\\u0003\\u0002\\u0002\\u0002\\u0189\\u0621\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u018b\\u0628\\u0003\\u0002\\u0002\\u0002\\u018d\\u062e\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u018f\\u063b\\u0003\\u0002\\u0002\\u0002\\u0191\\u0644\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0193\\u064e\\u0003\\u0002\\u0002\\u0002\\u0195\\u0654\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0197\\u0658\\u0003\\u0002\\u0002\\u0002\\u0199\\u065c\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u019b\\u0661\\u0003\\u0002\\u0002\\u0002\\u019d\\u0665\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u019f\\u066a\\u0003\\u0002\\u0002\\u0002\\u01a1\\u066e\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u01a3\\u0672\\u0003\\u0002\\u0002\\u0002\\u01a5\\u0676\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u01a7\\u067a\\u0003\\u0002\\u0002\\u0002\\u01a9\\u067f\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u01ab\\u0683\\u0003\\u0002\\u0002\\u0002\\u01ad\\u0688\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u01af\\u068f\\u0003\\u0002\\u0002\\u0002\\u01b1\\u0698\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u01b3\\u069c\\u0003\\u0002\\u0002\\u0002\\u01b5\\u06a0\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u01b7\\u06a4\\u0003\\u0002\\u0002\\u0002\\u01b9\\u06a8\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u01bb\\u06ac\\u0003\\u0002\\u0002\\u0002\\u01bd\\u06b1\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u01bf\\u06b7\\u0003\\u0002\\u0002\\u0002\\u01c1\\u06c0\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u01c3\\u01c4\\u0005\\u0105\\u0081\\u0002\\u01c4\\u01c5\\u0005\",\r\n    \"\\u00ebt\\u0002\\u01c5\\u01c6\\u0005\\u00fb|\\u0002\\u01c6\\u01c7\\u0005\\u00f1\",\r\n    \"w\\u0002\\u01c7\\u01c8\\u0005\\u00edu\\u0002\\u01c8\\u01c9\\u0005\\u010f\\u0086\",\r\n    \"\\u0002\\u01c9\\b\\u0003\\u0002\\u0002\\u0002\\u01ca\\u01cb\\u0005\\u00e9s\\u0002\",\r\n    \"\\u01cb\\u01cc\\u0005\\u0103\\u0080\\u0002\\u01cc\\u01cd\\u0005\\u00efv\\u0002\",\r\n    \"\\u01cd\\n\\u0003\\u0002\\u0002\\u0002\\u01ce\\u01cf\\u0005\\u00e9s\\u0002\\u01cf\",\r\n    \"\\u01d0\\u0005\\u010d\\u0085\\u0002\\u01d0\\f\\u0003\\u0002\\u0002\\u0002\\u01d1\",\r\n    \"\\u01d2\\u0005\\u00ebt\\u0002\\u01d2\\u01d3\\u0005\\u0105\\u0081\\u0002\\u01d3\",\r\n    \"\\u01d4\\u0005\\u0105\\u0081\\u0002\\u01d4\\u01d5\\u0005\\u00ff~\\u0002\\u01d5\",\r\n    \"\\u01d6\\u0005\\u00f1w\\u0002\\u01d6\\u01d7\\u0005\\u00e9s\\u0002\\u01d7\\u01d8\",\r\n    \"\\u0005\\u0103\\u0080\\u0002\\u01d8\\u000e\\u0003\\u0002\\u0002\\u0002\\u01d9\\u01da\",\r\n    \"\\u0005\\u010b\\u0084\\u0002\\u01da\\u01db\\u0005\\u00f1w\\u0002\\u01db\\u01dc\",\r\n    \"\\u0005\\u00e9s\\u0002\\u01dc\\u01dd\\u0005\\u00ff~\\u0002\\u01dd\\u0010\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u01de\\u01df\\u0005\\u00ebt\\u0002\\u01df\\u01e0\\u0005\",\r\n    \"\\u0119\\u008b\\u0002\\u01e0\\u01e1\\u0005\\u010b\\u0084\\u0002\\u01e1\\u01e2\\u0005\",\r\n    \"\\u00f1w\\u0002\\u01e2\\u01e3\\u0005\\u00f3x\\u0002\\u01e3\\u0012\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u01e4\\u01e5\\u0005\\u00ebt\\u0002\\u01e5\\u01e6\\u0005\\u0119\",\r\n    \"\\u008b\\u0002\\u01e6\\u01e7\\u0005\\u010f\\u0086\\u0002\\u01e7\\u01e8\\u0005\\u00f1\",\r\n    \"w\\u0002\\u01e8\\u0014\\u0003\\u0002\\u0002\\u0002\\u01e9\\u01ea\\u0005\\u00eb\",\r\n    \"t\\u0002\\u01ea\\u01eb\\u0005\\u0119\\u008b\\u0002\\u01eb\\u01ec\\u0005\\u0113\",\r\n    \"\\u0088\\u0002\\u01ec\\u01ed\\u0005\\u00e9s\\u0002\\u01ed\\u01ee\\u0005\\u00ff\",\r\n    \"~\\u0002\\u01ee\\u0016\\u0003\\u0002\\u0002\\u0002\\u01ef\\u01f0\\u0005\\u00ed\",\r\n    \"u\\u0002\\u01f0\\u01f1\\u0005\\u00e9s\\u0002\\u01f1\\u01f2\\u0005\\u010d\\u0085\",\r\n    \"\\u0002\\u01f2\\u01f3\\u0005\\u00f1w\\u0002\\u01f3\\u0018\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u01f4\\u01f5\\u0005\\u00edu\\u0002\\u01f5\\u01f6\\u0005\\u00e9s\\u0002\",\r\n    \"\\u01f6\\u01f7\\u0005\\u010d\\u0085\\u0002\\u01f7\\u01f8\\u0005\\u00f1w\\u0002\",\r\n    \"\\u01f8\\u01f9\\u0005\\u00dfn\\u0002\\u01f9\\u01fa\\u0005\\u00f1w\\u0002\\u01fa\",\r\n    \"\\u01fb\\u0005\\u00ff~\\u0002\\u01fb\\u01fc\\u0005\\u010d\\u0085\\u0002\\u01fc\",\r\n    \"\\u01fd\\u0005\\u00f1w\\u0002\\u01fd\\u001a\\u0003\\u0002\\u0002\\u0002\\u01fe\",\r\n    \"\\u01ff\\u0005\\u00edu\\u0002\\u01ff\\u0200\\u0005\\u00f7z\\u0002\\u0200\\u0201\",\r\n    \"\\u0005\\u00e9s\\u0002\\u0201\\u0202\\u0005\\u010b\\u0084\\u0002\\u0202\\u001c\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0203\\u0204\\u0005\\u00edu\\u0002\\u0204\\u0205\",\r\n    \"\\u0005\\u0105\\u0081\\u0002\\u0205\\u0206\\u0005\\u0103\\u0080\\u0002\\u0206\\u0207\",\r\n    \"\\u0005\\u010d\\u0085\\u0002\\u0207\\u0208\\u0005\\u010f\\u0086\\u0002\\u0208\\u001e\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0209\\u020a\\u0005\\u00edu\\u0002\\u020a\\u020b\",\r\n    \"\\u0005\\u0105\\u0081\\u0002\\u020b\\u020c\\u0005\\u0111\\u0087\\u0002\\u020c\\u020d\",\r\n    \"\\u0005\\u0103\\u0080\\u0002\\u020d\\u020e\\u0005\\u010f\\u0086\\u0002\\u020e\\u020f\",\r\n    \"\\u0005\\u0105\\u0081\\u0002\\u020f\\u0210\\u0005\\u00f3x\\u0002\\u0210 \\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0211\\u0212\\u0005\\u00efv\\u0002\\u0212\\u0213\\u0005\",\r\n    \"\\u00f1w\\u0002\\u0213\\u0214\\u0005\\u00edu\\u0002\\u0214\\u0215\\u0005\\u00ff\",\r\n    \"~\\u0002\\u0215\\u0216\\u0005\\u00e9s\\u0002\\u0216\\u0217\\u0005\\u010b\\u0084\",\r\n    \"\\u0002\\u0217\\u0218\\u0005\\u00f1w\\u0002\\u0218\\\"\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0219\\u021a\\u0005\\u00efv\\u0002\\u021a\\u021b\\u0005\\u00f9{\\u0002\\u021b\",\r\n    \"\\u021c\\u0005\\u0101\\u007f\\u0002\\u021c$\\u0003\\u0002\\u0002\\u0002\\u021d\",\r\n    \"\\u021e\\u0005\\u00efv\\u0002\\u021e\\u021f\\u0005\\u0105\\u0081\\u0002\\u021f\",\r\n    \"&\\u0003\\u0002\\u0002\\u0002\\u0220\\u0221\\u0005\\u00efv\\u0002\\u0221\\u0222\",\r\n    \"\\u0005\\u0115\\u0089\\u0002\\u0222\\u0223\\u0005\\u0105\\u0081\\u0002\\u0223\\u0224\",\r\n    \"\\u0005\\u010b\\u0084\\u0002\\u0224\\u0225\\u0005\\u00efv\\u0002\\u0225(\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0226\\u0227\\u0005\\u00f1w\\u0002\\u0227\\u0228\\u0005\",\r\n    \"\\u00ff~\\u0002\\u0228\\u0229\\u0005\\u010d\\u0085\\u0002\\u0229\\u022a\\u0005\",\r\n    \"\\u00f1w\\u0002\\u022a*\\u0003\\u0002\\u0002\\u0002\\u022b\\u022c\\u0005\\u00f1\",\r\n    \"w\\u0002\\u022c\\u022d\\u0005\\u00ff~\\u0002\\u022d\\u022e\\u0005\\u00f9{\\u0002\",\r\n    \"\\u022e\\u022f\\u0005\\u00f3x\\u0002\\u022f,\\u0003\\u0002\\u0002\\u0002\\u0230\",\r\n    \"\\u0231\\u0005\\u00f1w\\u0002\\u0231\\u0232\\u0005\\u0103\\u0080\\u0002\\u0232\",\r\n    \"\\u0233\\u0005\\u00efv\\u0002\\u0233.\\u0003\\u0002\\u0002\\u0002\\u0234\\u0235\",\r\n    \"\\u0005\\u00f1w\\u0002\\u0235\\u0236\\u0005\\u00ff~\\u0002\\u0236\\u0237\\u0005\",\r\n    \"\\u010d\\u0085\\u0002\\u0237\\u0238\\u0005\\u00f1w\\u0002\\u0238\\u0239\\u0005\",\r\n    \"\\u00dfn\\u0002\\u0239\\u023a\\u0005\\u00f9{\\u0002\\u023a\\u023b\\u0005\\u00f3\",\r\n    \"x\\u0002\\u023b0\\u0003\\u0002\\u0002\\u0002\\u023c\\u023d\\u0005\\u00f1w\\u0002\",\r\n    \"\\u023d\\u023e\\u0005\\u0103\\u0080\\u0002\\u023e\\u023f\\u0005\\u0111\\u0087\\u0002\",\r\n    \"\\u023f\\u0240\\u0005\\u0101\\u007f\\u0002\\u02402\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0241\\u0242\\u0005\\u00f1w\\u0002\\u0242\\u0243\\u0005\\u0103\\u0080\\u0002\",\r\n    \"\\u0243\\u0244\\u0005\\u00efv\\u0002\\u0244\\u0245\\u0005\\u00dfn\\u0002\\u0245\",\r\n    \"\\u0246\\u0005\\u00f1w\\u0002\\u0246\\u0247\\u0005\\u0103\\u0080\\u0002\\u0247\",\r\n    \"\\u0248\\u0005\\u0111\\u0087\\u0002\\u0248\\u0249\\u0005\\u0101\\u007f\\u0002\\u0249\",\r\n    \"4\\u0003\\u0002\\u0002\\u0002\\u024a\\u024b\\u0005\\u00f1w\\u0002\\u024b\\u024c\",\r\n    \"\\u0005\\u0103\\u0080\\u0002\\u024c\\u024d\\u0005\\u00efv\\u0002\\u024d\\u024e\",\r\n    \"\\u0005\\u00dfn\\u0002\\u024e\\u024f\\u0005\\u00f3x\\u0002\\u024f\\u0250\\u0005\",\r\n    \"\\u0111\\u0087\\u0002\\u0250\\u0251\\u0005\\u0103\\u0080\\u0002\\u0251\\u0252\\u0005\",\r\n    \"\\u00edu\\u0002\\u0252\\u0253\\u0005\\u010f\\u0086\\u0002\\u0253\\u0254\\u0005\",\r\n    \"\\u00f9{\\u0002\\u0254\\u0255\\u0005\\u0105\\u0081\\u0002\\u0255\\u0256\\u0005\",\r\n    \"\\u0103\\u0080\\u0002\\u02566\\u0003\\u0002\\u0002\\u0002\\u0257\\u0258\\u0005\",\r\n    \"\\u00f1w\\u0002\\u0258\\u0259\\u0005\\u0103\\u0080\\u0002\\u0259\\u025a\\u0005\",\r\n    \"\\u00efv\\u0002\\u025a\\u025b\\u0005\\u00dfn\\u0002\\u025b\\u025c\\u0005\\u00f9\",\r\n    \"{\\u0002\\u025c\\u025d\\u0005\\u00f3x\\u0002\\u025d8\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u025e\\u025f\\u0005\\u00f1w\\u0002\\u025f\\u0260\\u0005\\u0103\\u0080\\u0002\",\r\n    \"\\u0260\\u0261\\u0005\\u00efv\\u0002\\u0261\\u0262\\u0005\\u00dfn\\u0002\\u0262\",\r\n    \"\\u0263\\u0005\\u0107\\u0082\\u0002\\u0263\\u0264\\u0005\\u010b\\u0084\\u0002\\u0264\",\r\n    \"\\u0265\\u0005\\u0105\\u0081\\u0002\\u0265\\u0266\\u0005\\u0107\\u0082\\u0002\\u0266\",\r\n    \"\\u0267\\u0005\\u00f1w\\u0002\\u0267\\u0268\\u0005\\u010b\\u0084\\u0002\\u0268\",\r\n    \"\\u0269\\u0005\\u010f\\u0086\\u0002\\u0269\\u026a\\u0005\\u0119\\u008b\\u0002\\u026a\",\r\n    \":\\u0003\\u0002\\u0002\\u0002\\u026b\\u026c\\u0005\\u00f1w\\u0002\\u026c\\u026d\",\r\n    \"\\u0005\\u0103\\u0080\\u0002\\u026d\\u026e\\u0005\\u00efv\\u0002\\u026e\\u026f\",\r\n    \"\\u0005\\u00dfn\\u0002\\u026f\\u0270\\u0005\\u010d\\u0085\\u0002\\u0270\\u0271\",\r\n    \"\\u0005\\u00f1w\\u0002\\u0271\\u0272\\u0005\\u00ff~\\u0002\\u0272\\u0273\\u0005\",\r\n    \"\\u00f1w\\u0002\\u0273\\u0274\\u0005\\u00edu\\u0002\\u0274\\u0275\\u0005\\u010f\",\r\n    \"\\u0086\\u0002\\u0275<\\u0003\\u0002\\u0002\\u0002\\u0276\\u0277\\u0005\\u00f1\",\r\n    \"w\\u0002\\u0277\\u0278\\u0005\\u0103\\u0080\\u0002\\u0278\\u0279\\u0005\\u00ef\",\r\n    \"v\\u0002\\u0279\\u027a\\u0005\\u00dfn\\u0002\\u027a\\u027b\\u0005\\u010d\\u0085\",\r\n    \"\\u0002\\u027b\\u027c\\u0005\\u0111\\u0087\\u0002\\u027c\\u027d\\u0005\\u00ebt\",\r\n    \"\\u0002\\u027d>\\u0003\\u0002\\u0002\\u0002\\u027e\\u027f\\u0005\\u00f1w\\u0002\",\r\n    \"\\u027f\\u0280\\u0005\\u0103\\u0080\\u0002\\u0280\\u0281\\u0005\\u00efv\\u0002\",\r\n    \"\\u0281\\u0282\\u0005\\u00dfn\\u0002\\u0282\\u0283\\u0005\\u010f\\u0086\\u0002\",\r\n    \"\\u0283\\u0284\\u0005\\u0119\\u008b\\u0002\\u0284\\u0285\\u0005\\u0107\\u0082\\u0002\",\r\n    \"\\u0285\\u0286\\u0005\\u00f1w\\u0002\\u0286@\\u0003\\u0002\\u0002\\u0002\\u0287\",\r\n    \"\\u0288\\u0005\\u00f1w\\u0002\\u0288\\u0289\\u0005\\u0103\\u0080\\u0002\\u0289\",\r\n    \"\\u028a\\u0005\\u00efv\\u0002\\u028a\\u028b\\u0005\\u00dfn\\u0002\\u028b\\u028c\",\r\n    \"\\u0005\\u0115\\u0089\\u0002\\u028c\\u028d\\u0005\\u00f9{\\u0002\\u028d\\u028e\",\r\n    \"\\u0005\\u010f\\u0086\\u0002\\u028e\\u028f\\u0005\\u00f7z\\u0002\\u028fB\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0290\\u0291\\u0005\\u00f1w\\u0002\\u0291\\u0292\\u0005\",\r\n    \"\\u0113\\u0088\\u0002\\u0292\\u0293\\u0005\\u00f1w\\u0002\\u0293\\u0294\\u0005\",\r\n    \"\\u0103\\u0080\\u0002\\u0294\\u0295\\u0005\\u010f\\u0086\\u0002\\u0295D\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0296\\u0297\\u0005\\u00f1w\\u0002\\u0297\\u0298\\u0005\",\r\n    \"\\u0117\\u008a\\u0002\\u0298\\u0299\\u0005\\u00f9{\\u0002\\u0299\\u029a\\u0005\",\r\n    \"\\u010f\\u0086\\u0002\\u029a\\u029b\\u0005\\u00dfn\\u0002\\u029b\\u029c\\u0005\",\r\n    \"\\u00efv\\u0002\\u029c\\u029d\\u0005\\u0105\\u0081\\u0002\\u029dF\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u029e\\u029f\\u0005\\u00f1w\\u0002\\u029f\\u02a0\\u0005\\u0117\",\r\n    \"\\u008a\\u0002\\u02a0\\u02a1\\u0005\\u00f9{\\u0002\\u02a1\\u02a2\\u0005\\u010f\",\r\n    \"\\u0086\\u0002\\u02a2\\u02a3\\u0005\\u00dfn\\u0002\\u02a3\\u02a4\\u0005\\u00f3\",\r\n    \"x\\u0002\\u02a4\\u02a5\\u0005\\u0105\\u0081\\u0002\\u02a5\\u02a6\\u0005\\u010b\",\r\n    \"\\u0084\\u0002\\u02a6H\\u0003\\u0002\\u0002\\u0002\\u02a7\\u02a8\\u0005\\u00f1\",\r\n    \"w\\u0002\\u02a8\\u02a9\\u0005\\u0117\\u008a\\u0002\\u02a9\\u02aa\\u0005\\u00f9\",\r\n    \"{\\u0002\\u02aa\\u02ab\\u0005\\u010f\\u0086\\u0002\\u02ab\\u02ac\\u0005\\u00df\",\r\n    \"n\\u0002\\u02ac\\u02ad\\u0005\\u00f3x\\u0002\\u02ad\\u02ae\\u0005\\u0111\\u0087\",\r\n    \"\\u0002\\u02ae\\u02af\\u0005\\u0103\\u0080\\u0002\\u02af\\u02b0\\u0005\\u00edu\",\r\n    \"\\u0002\\u02b0\\u02b1\\u0005\\u010f\\u0086\\u0002\\u02b1\\u02b2\\u0005\\u00f9{\",\r\n    \"\\u0002\\u02b2\\u02b3\\u0005\\u0105\\u0081\\u0002\\u02b3\\u02b4\\u0005\\u0103\\u0080\",\r\n    \"\\u0002\\u02b4J\\u0003\\u0002\\u0002\\u0002\\u02b5\\u02b6\\u0005\\u00f1w\\u0002\",\r\n    \"\\u02b6\\u02b7\\u0005\\u0117\\u008a\\u0002\\u02b7\\u02b8\\u0005\\u00f9{\\u0002\",\r\n    \"\\u02b8\\u02b9\\u0005\\u010f\\u0086\\u0002\\u02b9\\u02ba\\u0005\\u00dfn\\u0002\",\r\n    \"\\u02ba\\u02bb\\u0005\\u0107\\u0082\\u0002\\u02bb\\u02bc\\u0005\\u010b\\u0084\\u0002\",\r\n    \"\\u02bc\\u02bd\\u0005\\u0105\\u0081\\u0002\\u02bd\\u02be\\u0005\\u0107\\u0082\\u0002\",\r\n    \"\\u02be\\u02bf\\u0005\\u00f1w\\u0002\\u02bf\\u02c0\\u0005\\u010b\\u0084\\u0002\",\r\n    \"\\u02c0\\u02c1\\u0005\\u010f\\u0086\\u0002\\u02c1\\u02c2\\u0005\\u0119\\u008b\\u0002\",\r\n    \"\\u02c2L\\u0003\\u0002\\u0002\\u0002\\u02c3\\u02c4\\u0005\\u00f1w\\u0002\\u02c4\",\r\n    \"\\u02c5\\u0005\\u0117\\u008a\\u0002\\u02c5\\u02c6\\u0005\\u00f9{\\u0002\\u02c6\",\r\n    \"\\u02c7\\u0005\\u010f\\u0086\\u0002\\u02c7\\u02c8\\u0005\\u00dfn\\u0002\\u02c8\",\r\n    \"\\u02c9\\u0005\\u010d\\u0085\\u0002\\u02c9\\u02ca\\u0005\\u0111\\u0087\\u0002\\u02ca\",\r\n    \"\\u02cb\\u0005\\u00ebt\\u0002\\u02cbN\\u0003\\u0002\\u0002\\u0002\\u02cc\\u02cd\",\r\n    \"\\u0005\\u00f1w\\u0002\\u02cd\\u02ce\\u0005\\u0117\\u008a\\u0002\\u02ce\\u02cf\",\r\n    \"\\u0005\\u00f9{\\u0002\\u02cf\\u02d0\\u0005\\u010f\\u0086\\u0002\\u02d0\\u02d1\",\r\n    \"\\u0005\\u00dfn\\u0002\\u02d1\\u02d2\\u0005\\u0115\\u0089\\u0002\\u02d2\\u02d3\",\r\n    \"\\u0005\\u00f7z\\u0002\\u02d3\\u02d4\\u0005\\u00f9{\\u0002\\u02d4\\u02d5\\u0005\",\r\n    \"\\u00ff~\\u0002\\u02d5\\u02d6\\u0005\\u00f1w\\u0002\\u02d6P\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u02d7\\u02d8\\u0005\\u00f3x\\u0002\\u02d8\\u02d9\\u0005\\u00e9s\\u0002\",\r\n    \"\\u02d9\\u02da\\u0005\\u00ff~\\u0002\\u02da\\u02db\\u0005\\u010d\\u0085\\u0002\",\r\n    \"\\u02db\\u02dc\\u0005\\u00f1w\\u0002\\u02dcR\\u0003\\u0002\\u0002\\u0002\\u02dd\",\r\n    \"\\u02de\\u0005\\u00f3x\\u0002\\u02de\\u02df\\u0005\\u00ff~\\u0002\\u02df\\u02e0\",\r\n    \"\\u0005\\u0105\\u0081\\u0002\\u02e0\\u02e1\\u0005\\u00e9s\\u0002\\u02e1\\u02e2\",\r\n    \"\\u0005\\u010f\\u0086\\u0002\\u02e2T\\u0003\\u0002\\u0002\\u0002\\u02e3\\u02e4\",\r\n    \"\\u0005\\u00f3x\\u0002\\u02e4\\u02e5\\u0005\\u0105\\u0081\\u0002\\u02e5\\u02e6\",\r\n    \"\\u0005\\u010b\\u0084\\u0002\\u02e6V\\u0003\\u0002\\u0002\\u0002\\u02e7\\u02e8\",\r\n    \"\\u0005\\u00f3x\\u0002\\u02e8\\u02e9\\u0005\\u0111\\u0087\\u0002\\u02e9\\u02ea\",\r\n    \"\\u0005\\u0103\\u0080\\u0002\\u02ea\\u02eb\\u0005\\u00edu\\u0002\\u02eb\\u02ec\",\r\n    \"\\u0005\\u010f\\u0086\\u0002\\u02ec\\u02ed\\u0005\\u00f9{\\u0002\\u02ed\\u02ee\",\r\n    \"\\u0005\\u0105\\u0081\\u0002\\u02ee\\u02ef\\u0005\\u0103\\u0080\\u0002\\u02efX\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u02f0\\u02f1\\u0005\\u00f5y\\u0002\\u02f1\\u02f2\",\r\n    \"\\u0005\\u00f1w\\u0002\\u02f2\\u02f3\\u0005\\u010f\\u0086\\u0002\\u02f3Z\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u02f4\\u02f5\\u0005\\u00f5y\\u0002\\u02f5\\u02f6\\u0005\",\r\n    \"\\u0105\\u0081\\u0002\\u02f6\\u02f7\\u0005\\u010f\\u0086\\u0002\\u02f7\\u02f8\\u0005\",\r\n    \"\\u0105\\u0081\\u0002\\u02f8\\\\\\u0003\\u0002\\u0002\\u0002\\u02f9\\u02fa\\u0005\",\r\n    \"\\u00f9{\\u0002\\u02fa\\u02fb\\u0005\\u00f3x\\u0002\\u02fb\\u02fc\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u02fc\\u02fd\\b-\\u0002\\u0002\\u02fd^\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u02fe\\u02ff\\u0005\\u00f9{\\u0002\\u02ff\\u0300\\u0005\\u00f3x\\u0002\\u0300\",\r\n    \"\\u0301\\u0005\\u00efv\\u0002\\u0301\\u0302\\u0005\\u00f1w\\u0002\\u0302\\u0303\",\r\n    \"\\u0005\\u00f3x\\u0002\\u0303`\\u0003\\u0002\\u0002\\u0002\\u0304\\u0305\\u0005\",\r\n    \"\\u00f9{\\u0002\\u0305\\u0306\\u0005\\u00f3x\\u0002\\u0306\\u0307\\u0005\\u0103\",\r\n    \"\\u0080\\u0002\\u0307\\u0308\\u0005\\u00efv\\u0002\\u0308\\u0309\\u0005\\u00f1\",\r\n    \"w\\u0002\\u0309\\u030a\\u0005\\u00f3x\\u0002\\u030ab\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u030b\\u030c\\u0005\\u00f9{\\u0002\\u030c\\u030d\\u0005\\u0103\\u0080\\u0002\",\r\n    \"\\u030d\\u030e\\u0005\\u00edu\\u0002\\u030e\\u030f\\u0005\\u00ff~\\u0002\\u030f\",\r\n    \"\\u0310\\u0005\\u0111\\u0087\\u0002\\u0310\\u0311\\u0005\\u00efv\\u0002\\u0311\",\r\n    \"\\u0312\\u0005\\u00f1w\\u0002\\u0312d\\u0003\\u0002\\u0002\\u0002\\u0313\\u0314\",\r\n    \"\\u0005\\u00f9{\\u0002\\u0314\\u0315\\u0005\\u0103\\u0080\\u0002\\u0315\\u0316\",\r\n    \"\\u0005\\u00edu\\u0002\\u0316\\u0317\\u0005\\u00ff~\\u0002\\u0317\\u0318\\u0005\",\r\n    \"\\u0111\\u0087\\u0002\\u0318\\u0319\\u0005\\u00efv\\u0002\\u0319\\u031a\\u0005\",\r\n    \"\\u00f1w\\u0002\\u031a\\u031b\\u0005\\u0107\\u0082\\u0002\\u031b\\u031c\\u0005\",\r\n    \"\\u0107\\u0082\\u0002\\u031cf\\u0003\\u0002\\u0002\\u0002\\u031d\\u031e\\u0005\",\r\n    \"\\u00f9{\\u0002\\u031e\\u031f\\u0005\\u0103\\u0080\\u0002\\u031f\\u0320\\u0005\",\r\n    \"\\u010f\\u0086\\u0002\\u0320\\u0321\\u0005\\u00f1w\\u0002\\u0321\\u0322\\u0005\",\r\n    \"\\u00f5y\\u0002\\u0322\\u0323\\u0005\\u00f1w\\u0002\\u0323\\u0324\\u0005\\u010b\",\r\n    \"\\u0084\\u0002\\u0324h\\u0003\\u0002\\u0002\\u0002\\u0325\\u0326\\u0005\\u00ff\",\r\n    \"~\\u0002\\u0326\\u0327\\u0005\\u0105\\u0081\\u0002\\u0327\\u0328\\u0005\\u0103\",\r\n    \"\\u0080\\u0002\\u0328\\u0329\\u0005\\u00f5y\\u0002\\u0329j\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u032a\\u032b\\u0005\\u00ff~\\u0002\\u032b\\u032c\\u0005\\u0105\\u0081\",\r\n    \"\\u0002\\u032c\\u032d\\u0005\\u0105\\u0081\\u0002\\u032d\\u032e\\u0005\\u0107\\u0082\",\r\n    \"\\u0002\\u032el\\u0003\\u0002\\u0002\\u0002\\u032f\\u0330\\u0005\\u0101\\u007f\",\r\n    \"\\u0002\\u0330\\u0331\\u0005\\u0105\\u0081\\u0002\\u0331\\u0332\\u0005\\u00efv\",\r\n    \"\\u0002\\u0332n\\u0003\\u0002\\u0002\\u0002\\u0333\\u0334\\u0005\\u0103\\u0080\",\r\n    \"\\u0002\\u0334\\u0335\\u0005\\u00f1w\\u0002\\u0335\\u0336\\u0005\\u0117\\u008a\",\r\n    \"\\u0002\\u0336\\u0337\\u0005\\u010f\\u0086\\u0002\\u0337p\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u0338\\u0339\\u0005\\u0103\\u0080\\u0002\\u0339\\u033a\\u0005\\u0105\\u0081\",\r\n    \"\\u0002\\u033a\\u033b\\u0005\\u010f\\u0086\\u0002\\u033br\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u033c\\u033d\\u0005\\u0105\\u0081\\u0002\\u033d\\u033e\\u0005\\u010b\\u0084\",\r\n    \"\\u0002\\u033et\\u0003\\u0002\\u0002\\u0002\\u033f\\u0340\\u0005\\u0107\\u0082\",\r\n    \"\\u0002\\u0340\\u0341\\u0005\\u010b\\u0084\\u0002\\u0341\\u0342\\u0005\\u0105\\u0081\",\r\n    \"\\u0002\\u0342\\u0343\\u0005\\u0107\\u0082\\u0002\\u0343\\u0344\\u0005\\u00f1w\",\r\n    \"\\u0002\\u0344\\u0345\\u0005\\u010b\\u0084\\u0002\\u0345\\u0346\\u0005\\u010f\\u0086\",\r\n    \"\\u0002\\u0346\\u0347\\u0005\\u0119\\u008b\\u0002\\u0347v\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u0348\\u0349\\u0005\\u0107\\u0082\\u0002\\u0349\\u034a\\u0005\\u0111\\u0087\",\r\n    \"\\u0002\\u034a\\u034b\\u0005\\u00ebt\\u0002\\u034b\\u034c\\u0005\\u00ff~\\u0002\",\r\n    \"\\u034c\\u034d\\u0005\\u00f9{\\u0002\\u034d\\u034e\\u0005\\u00edu\\u0002\\u034e\",\r\n    \"x\\u0003\\u0002\\u0002\\u0002\\u034f\\u0350\\u0005\\u010d\\u0085\\u0002\\u0350\",\r\n    \"\\u0351\\u0005\\u00f1w\\u0002\\u0351\\u0352\\u0005\\u00ff~\\u0002\\u0352\\u0353\",\r\n    \"\\u0005\\u00f1w\\u0002\\u0353\\u0354\\u0005\\u00edu\\u0002\\u0354\\u0355\\u0005\",\r\n    \"\\u010f\\u0086\\u0002\\u0355z\\u0003\\u0002\\u0002\\u0002\\u0356\\u0357\\u0005\",\r\n    \"\\u010d\\u0085\\u0002\\u0357\\u0358\\u0005\\u00f1w\\u0002\\u0358\\u0359\\u0005\",\r\n    \"\\u010f\\u0086\\u0002\\u0359|\\u0003\\u0002\\u0002\\u0002\\u035a\\u035b\\u0005\",\r\n    \"\\u010d\\u0085\\u0002\\u035b\\u035c\\u0005\\u00f7z\\u0002\\u035c\\u035d\\u0005\",\r\n    \"\\u00ff~\\u0002\\u035d~\\u0003\\u0002\\u0002\\u0002\\u035e\\u035f\\u0005\\u010d\",\r\n    \"\\u0085\\u0002\\u035f\\u0360\\u0005\\u00f7z\\u0002\\u0360\\u0361\\u0005\\u0105\",\r\n    \"\\u0081\\u0002\\u0361\\u0362\\u0005\\u010b\\u0084\\u0002\\u0362\\u0363\\u0005\\u010f\",\r\n    \"\\u0086\\u0002\\u0363\\u0080\\u0003\\u0002\\u0002\\u0002\\u0364\\u0365\\u0005\\u010d\",\r\n    \"\\u0085\\u0002\\u0365\\u0366\\u0005\\u00f7z\\u0002\\u0366\\u0367\\u0005\\u010b\",\r\n    \"\\u0084\\u0002\\u0367\\u0082\\u0003\\u0002\\u0002\\u0002\\u0368\\u0369\\u0005\\u010d\",\r\n    \"\\u0085\\u0002\\u0369\\u036a\\u0005\\u00f9{\\u0002\\u036a\\u036b\\u0005\\u011b\",\r\n    \"\\u008c\\u0002\\u036b\\u036c\\u0005\\u00f1w\\u0002\\u036c\\u036d\\u0005\\u0105\",\r\n    \"\\u0081\\u0002\\u036d\\u036e\\u0005\\u00f3x\\u0002\\u036e\\u0084\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u036f\\u0370\\u0005\\u010d\\u0085\\u0002\\u0370\\u0371\\u0005\\u010f\",\r\n    \"\\u0086\\u0002\\u0371\\u0372\\u0005\\u00f1w\\u0002\\u0372\\u0373\\u0005\\u0107\",\r\n    \"\\u0082\\u0002\\u0373\\u0086\\u0003\\u0002\\u0002\\u0002\\u0374\\u0375\\u0005\\u010d\",\r\n    \"\\u0085\\u0002\\u0375\\u0376\\u0005\\u010f\\u0086\\u0002\\u0376\\u0377\\u0005\\u010b\",\r\n    \"\\u0084\\u0002\\u0377\\u0378\\u0005\\u00f9{\\u0002\\u0378\\u0379\\u0005\\u0103\",\r\n    \"\\u0080\\u0002\\u0379\\u037a\\u0005\\u00f5y\\u0002\\u037a\\u0088\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u037b\\u037c\\u0005\\u010d\\u0085\\u0002\\u037c\\u037d\\u0005\\u0111\",\r\n    \"\\u0087\\u0002\\u037d\\u037e\\u0005\\u00ebt\\u0002\\u037e\\u008a\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u037f\\u0380\\u0005\\u010f\\u0086\\u0002\\u0380\\u0381\\u0005\\u00f7\",\r\n    \"z\\u0002\\u0381\\u0382\\u0005\\u00f1w\\u0002\\u0382\\u0383\\u0005\\u0103\\u0080\",\r\n    \"\\u0002\\u0383\\u008c\\u0003\\u0002\\u0002\\u0002\\u0384\\u0385\\u0005\\u010f\\u0086\",\r\n    \"\\u0002\\u0385\\u0386\\u0005\\u0105\\u0081\\u0002\\u0386\\u008e\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u0387\\u0388\\u0005\\u010f\\u0086\\u0002\\u0388\\u0389\\u0005\\u010b\\u0084\",\r\n    \"\\u0002\\u0389\\u038a\\u0005\\u0111\\u0087\\u0002\\u038a\\u038b\\u0005\\u00f1w\",\r\n    \"\\u0002\\u038b\\u0090\\u0003\\u0002\\u0002\\u0002\\u038c\\u038d\\u0005\\u010f\\u0086\",\r\n    \"\\u0002\\u038d\\u038e\\u0005\\u0119\\u008b\\u0002\\u038e\\u038f\\u0005\\u0107\\u0082\",\r\n    \"\\u0002\\u038f\\u0390\\u0005\\u00f1w\\u0002\\u0390\\u0092\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u0391\\u0392\\u0005\\u0111\\u0087\\u0002\\u0392\\u0393\\u0005\\u0103\\u0080\",\r\n    \"\\u0002\\u0393\\u0394\\u0005\\u00efv\\u0002\\u0394\\u0395\\u0005\\u00f1w\\u0002\",\r\n    \"\\u0395\\u0396\\u0005\\u00f3x\\u0002\\u0396\\u0094\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0397\\u0398\\u0005\\u0111\\u0087\\u0002\\u0398\\u0399\\u0005\\u0103\\u0080\\u0002\",\r\n    \"\\u0399\\u039a\\u0005\\u010f\\u0086\\u0002\\u039a\\u039b\\u0005\\u00f9{\\u0002\",\r\n    \"\\u039b\\u039c\\u0005\\u00ff~\\u0002\\u039c\\u0096\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u039d\\u039e\\u0005\\u0115\\u0089\\u0002\\u039e\\u039f\\u0005\\u00f1w\\u0002\",\r\n    \"\\u039f\\u03a0\\u0005\\u0103\\u0080\\u0002\\u03a0\\u03a1\\u0005\\u00efv\\u0002\",\r\n    \"\\u03a1\\u0098\\u0003\\u0002\\u0002\\u0002\\u03a2\\u03a3\\u0005\\u0115\\u0089\\u0002\",\r\n    \"\\u03a3\\u03a4\\u0005\\u00f7z\\u0002\\u03a4\\u03a5\\u0005\\u00f9{\\u0002\\u03a5\",\r\n    \"\\u03a6\\u0005\\u00ff~\\u0002\\u03a6\\u03a7\\u0005\\u00f1w\\u0002\\u03a7\\u009a\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u03a8\\u03a9\\u0005\\u0115\\u0089\\u0002\\u03a9\\u03aa\",\r\n    \"\\u0005\\u0105\\u0081\\u0002\\u03aa\\u03ab\\u0005\\u010b\\u0084\\u0002\\u03ab\\u03ac\",\r\n    \"\\u0005\\u00efv\\u0002\\u03ac\\u009c\\u0003\\u0002\\u0002\\u0002\\u03ad\\u03ae\",\r\n    \"\\u0005\\u0117\\u008a\\u0002\\u03ae\\u03af\\u0005\\u0105\\u0081\\u0002\\u03af\\u03b0\",\r\n    \"\\u0005\\u010b\\u0084\\u0002\\u03b0\\u009e\\u0003\\u0002\\u0002\\u0002\\u03b1\\u03b2\",\r\n    \"\\u0007%\\u0002\\u0002\\u03b2\\u03b3\\u0003\\u0002\\u0002\\u0002\\u03b3\\u03b4\",\r\n    \"\\bN\\u0003\\u0002\\u03b4\\u03b5\\bN\\u0004\\u0002\\u03b5\\u00a0\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u03b6\\u03bc\\t\\u0002\\u0002\\u0002\\u03b7\\u03bb\\n\\u0003\\u0002\\u0002\",\r\n    \"\\u03b8\\u03b9\\u0007$\\u0002\\u0002\\u03b9\\u03bb\\u0007$\\u0002\\u0002\\u03ba\",\r\n    \"\\u03b7\\u0003\\u0002\\u0002\\u0002\\u03ba\\u03b8\\u0003\\u0002\\u0002\\u0002\\u03bb\",\r\n    \"\\u03be\\u0003\\u0002\\u0002\\u0002\\u03bc\\u03ba\\u0003\\u0002\\u0002\\u0002\\u03bc\",\r\n    \"\\u03bd\\u0003\\u0002\\u0002\\u0002\\u03bd\\u03bf\\u0003\\u0002\\u0002\\u0002\\u03be\",\r\n    \"\\u03bc\\u0003\\u0002\\u0002\\u0002\\u03bf\\u03c0\\t\\u0002\\u0002\\u0002\\u03c0\",\r\n    \"\\u00a2\\u0003\\u0002\\u0002\\u0002\\u03c1\\u03c7\\u0007b\\u0002\\u0002\\u03c2\",\r\n    \"\\u03c3\\u0007^\\u0002\\u0002\\u03c3\\u03c6\\u0007b\\u0002\\u0002\\u03c4\\u03c6\",\r\n    \"\\n\\u0004\\u0002\\u0002\\u03c5\\u03c2\\u0003\\u0002\\u0002\\u0002\\u03c5\\u03c4\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u03c6\\u03c9\\u0003\\u0002\\u0002\\u0002\\u03c7\\u03c5\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u03c7\\u03c8\\u0003\\u0002\\u0002\\u0002\\u03c8\\u03ca\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u03c9\\u03c7\\u0003\\u0002\\u0002\\u0002\\u03ca\\u03cb\",\r\n    \"\\u0007b\\u0002\\u0002\\u03cb\\u00a4\\u0003\\u0002\\u0002\\u0002\\u03cc\\u03cd\",\r\n    \"\\u0007(\\u0002\\u0002\\u03cd\\u03cf\\u0005\\u00f7z\\u0002\\u03ce\\u03d0\\t\\u0005\",\r\n    \"\\u0002\\u0002\\u03cf\\u03ce\\u0003\\u0002\\u0002\\u0002\\u03d0\\u03d1\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u03d1\\u03cf\\u0003\\u0002\\u0002\\u0002\\u03d1\\u03d2\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u03d2\\u00a6\\u0003\\u0002\\u0002\\u0002\\u03d3\\u03d4\\u0007(\",\r\n    \"\\u0002\\u0002\\u03d4\\u03d6\\u0005\\u00ebt\\u0002\\u03d5\\u03d7\\t\\u0006\\u0002\",\r\n    \"\\u0002\\u03d6\\u03d5\\u0003\\u0002\\u0002\\u0002\\u03d7\\u03d8\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u03d8\\u03d6\\u0003\\u0002\\u0002\\u0002\\u03d8\\u03d9\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u03d9\\u00a8\\u0003\\u0002\\u0002\\u0002\\u03da\\u03dc\\u0005\\u00e5q\",\r\n    \"\\u0002\\u03db\\u03da\\u0003\\u0002\\u0002\\u0002\\u03dc\\u03dd\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u03dd\\u03db\\u0003\\u0002\\u0002\\u0002\\u03dd\\u03de\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u03de\\u00aa\\u0003\\u0002\\u0002\\u0002\\u03df\\u03e0\\t\\u0007\\u0002\",\r\n    \"\\u0002\\u03e0\\u00ac\\u0003\\u0002\\u0002\\u0002\\u03e1\\u03e2\\u0007?\\u0002\",\r\n    \"\\u0002\\u03e2\\u00ae\\u0003\\u0002\\u0002\\u0002\\u03e3\\u03e4\\u0007@\\u0002\",\r\n    \"\\u0002\\u03e4\\u03e5\\u0007?\\u0002\\u0002\\u03e5\\u00b0\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u03e6\\u03e7\\u0007@\\u0002\\u0002\\u03e7\\u00b2\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u03e8\\u03e9\\u0007>\\u0002\\u0002\\u03e9\\u03ea\\u0007?\\u0002\\u0002\",\r\n    \"\\u03ea\\u00b4\\u0003\\u0002\\u0002\\u0002\\u03eb\\u03ec\\u0007*\\u0002\\u0002\",\r\n    \"\\u03ec\\u00b6\\u0003\\u0002\\u0002\\u0002\\u03ed\\u03ee\\u0007>\\u0002\\u0002\",\r\n    \"\\u03ee\\u00b8\\u0003\\u0002\\u0002\\u0002\\u03ef\\u03f0\\u0007/\\u0002\\u0002\",\r\n    \"\\u03f0\\u00ba\\u0003\\u0002\\u0002\\u0002\\u03f1\\u03f2\\u0007,\\u0002\\u0002\",\r\n    \"\\u03f2\\u00bc\\u0003\\u0002\\u0002\\u0002\\u03f3\\u03f4\\u0007>\\u0002\\u0002\",\r\n    \"\\u03f4\\u03f5\\u0007@\\u0002\\u0002\\u03f5\\u00be\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u03f6\\u03f7\\u0007-\\u0002\\u0002\\u03f7\\u00c0\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u03f8\\u03f9\\u0007+\\u0002\\u0002\\u03f9\\u00c2\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u03fa\\u03fb\\u0007]\\u0002\\u0002\\u03fb\\u00c4\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u03fc\\u03fd\\u0007_\\u0002\\u0002\\u03fd\\u00c6\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u03fe\\u03ff\\u0007}\\u0002\\u0002\\u03ff\\u00c8\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0400\\u0401\\u0007\\u007f\\u0002\\u0002\\u0401\\u00ca\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0402\\u0404\\u0007\\u000f\\u0002\\u0002\\u0403\\u0402\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0403\\u0404\\u0003\\u0002\\u0002\\u0002\\u0404\\u0405\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0405\\u0406\\u0007\\f\\u0002\\u0002\\u0406\\u0407\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0407\\u0408\\bd\\u0005\\u0002\\u0408\\u00cc\\u0003\\u0002\\u0002\\u0002\\u0409\",\r\n    \"\\u040d\\u0005\\u00cff\\u0002\\u040a\\u040c\\n\\b\\u0002\\u0002\\u040b\\u040a\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u040c\\u040f\\u0003\\u0002\\u0002\\u0002\\u040d\\u040b\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u040d\\u040e\\u0003\\u0002\\u0002\\u0002\\u040e\\u0410\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u040f\\u040d\\u0003\\u0002\\u0002\\u0002\\u0410\\u0411\\b\",\r\n    \"e\\u0006\\u0002\\u0411\\u00ce\\u0003\\u0002\\u0002\\u0002\\u0412\\u0413\\u0007\",\r\n    \")\\u0002\\u0002\\u0413\\u00d0\\u0003\\u0002\\u0002\\u0002\\u0414\\u0415\\u0007\",\r\n    \"<\\u0002\\u0002\\u0415\\u00d2\\u0003\\u0002\\u0002\\u0002\\u0416\\u0417\\u0007\",\r\n    \"=\\u0002\\u0002\\u0417\\u00d4\\u0003\\u0002\\u0002\\u0002\\u0418\\u0419\\u0007\",\r\n    \".\\u0002\\u0002\\u0419\\u00d6\\u0003\\u0002\\u0002\\u0002\\u041a\\u041b\\u0007\",\r\n    \"0\\u0002\\u0002\\u041b\\u00d8\\u0003\\u0002\\u0002\\u0002\\u041c\\u041d\\u0007\",\r\n    \"#\\u0002\\u0002\\u041d\\u00da\\u0003\\u0002\\u0002\\u0002\\u041e\\u041f\\u0007\",\r\n    \"a\\u0002\\u0002\\u041f\\u00dc\\u0003\\u0002\\u0002\\u0002\\u0420\\u0421\\u0005\",\r\n    \"\\u010d\\u0085\\u0002\\u0421\\u0422\\u0005\\u0119\\u008b\\u0002\\u0422\\u0423\\u0005\",\r\n    \"\\u010d\\u0085\\u0002\\u0423\\u0424\\u0005\\u00edu\\u0002\\u0424\\u0425\\u0005\",\r\n    \"\\u00e9s\\u0002\\u0425\\u0426\\u0005\\u00ff~\\u0002\\u0426\\u0427\\u0005\\u00ff\",\r\n    \"~\\u0002\\u0427\\u00de\\u0003\\u0002\\u0002\\u0002\\u0428\\u042a\\t\\t\\u0002\\u0002\",\r\n    \"\\u0429\\u0428\\u0003\\u0002\\u0002\\u0002\\u042a\\u042b\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u042b\\u0429\\u0003\\u0002\\u0002\\u0002\\u042b\\u042c\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u042c\\u042d\\u0003\\u0002\\u0002\\u0002\\u042d\\u042e\\bn\\u0007\\u0002\\u042e\",\r\n    \"\\u00e0\\u0003\\u0002\\u0002\\u0002\\u042f\\u0433\\u0005\\u00e3p\\u0002\\u0430\",\r\n    \"\\u0432\\u0005\\u00e7r\\u0002\\u0431\\u0430\\u0003\\u0002\\u0002\\u0002\\u0432\",\r\n    \"\\u0435\\u0003\\u0002\\u0002\\u0002\\u0433\\u0431\\u0003\\u0002\\u0002\\u0002\\u0433\",\r\n    \"\\u0434\\u0003\\u0002\\u0002\\u0002\\u0434\\u00e2\\u0003\\u0002\\u0002\\u0002\\u0435\",\r\n    \"\\u0433\\u0003\\u0002\\u0002\\u0002\\u0436\\u0437\\t\\n\\u0002\\u0002\\u0437\\u00e4\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0438\\u0439\\t\\u000b\\u0002\\u0002\\u0439\\u00e6\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u043a\\u043b\\t\\f\\u0002\\u0002\\u043b\\u00e8\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u043c\\u043d\\t\\r\\u0002\\u0002\\u043d\\u00ea\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u043e\\u043f\\t\\u000e\\u0002\\u0002\\u043f\\u00ec\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0440\\u0441\\t\\u000f\\u0002\\u0002\\u0441\\u00ee\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0442\\u0443\\t\\u0010\\u0002\\u0002\\u0443\\u00f0\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0444\\u0445\\t\\u0011\\u0002\\u0002\\u0445\\u00f2\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0446\\u0447\\t\\u0012\\u0002\\u0002\\u0447\\u00f4\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0448\\u0449\\t\\u0013\\u0002\\u0002\\u0449\\u00f6\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u044a\\u044b\\t\\u0014\\u0002\\u0002\\u044b\\u00f8\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u044c\\u044d\\t\\u0015\\u0002\\u0002\\u044d\\u00fa\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u044e\\u044f\\t\\u0016\\u0002\\u0002\\u044f\\u00fc\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0450\\u0451\\t\\u0017\\u0002\\u0002\\u0451\\u00fe\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0452\\u0453\\t\\u0018\\u0002\\u0002\\u0453\\u0100\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0454\\u0455\\t\\u0019\\u0002\\u0002\\u0455\\u0102\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0456\\u0457\\t\\u001a\\u0002\\u0002\\u0457\\u0104\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0458\\u0459\\t\\u001b\\u0002\\u0002\\u0459\\u0106\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u045a\\u045b\\t\\u001c\\u0002\\u0002\\u045b\\u0108\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u045c\\u045d\\t\\u001d\\u0002\\u0002\\u045d\\u010a\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u045e\\u045f\\t\\u001e\\u0002\\u0002\\u045f\\u010c\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0460\\u0461\\t\\u001f\\u0002\\u0002\\u0461\\u010e\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0462\\u0463\\t \\u0002\\u0002\\u0463\\u0110\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u0464\\u0465\\t!\\u0002\\u0002\\u0465\\u0112\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0466\\u0467\\t\\\"\\u0002\\u0002\\u0467\\u0114\\u0003\\u0002\\u0002\\u0002\\u0468\",\r\n    \"\\u0469\\t#\\u0002\\u0002\\u0469\\u0116\\u0003\\u0002\\u0002\\u0002\\u046a\\u046b\",\r\n    \"\\t$\\u0002\\u0002\\u046b\\u0118\\u0003\\u0002\\u0002\\u0002\\u046c\\u046d\\t%\\u0002\",\r\n    \"\\u0002\\u046d\\u011a\\u0003\\u0002\\u0002\\u0002\\u046e\\u046f\\t&\\u0002\\u0002\",\r\n    \"\\u046f\\u011c\\u0003\\u0002\\u0002\\u0002\\u0470\\u0472\\u0005c0\\u0002\\u0471\",\r\n    \"\\u0473\\t\\t\\u0002\\u0002\\u0472\\u0471\\u0003\\u0002\\u0002\\u0002\\u0473\\u0474\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0474\\u0472\\u0003\\u0002\\u0002\\u0002\\u0474\\u0475\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0475\\u0476\\u0003\\u0002\\u0002\\u0002\\u0476\\u0477\",\r\n    \"\\b\\u008d\\u0003\\u0002\\u0477\\u0478\\b\\u008d\\b\\u0002\\u0478\\u011e\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0479\\u047b\\u0005e1\\u0002\\u047a\\u047c\\t\\t\\u0002\\u0002\\u047b\",\r\n    \"\\u047a\\u0003\\u0002\\u0002\\u0002\\u047c\\u047d\\u0003\\u0002\\u0002\\u0002\\u047d\",\r\n    \"\\u047b\\u0003\\u0002\\u0002\\u0002\\u047d\\u047e\\u0003\\u0002\\u0002\\u0002\\u047e\",\r\n    \"\\u047f\\u0003\\u0002\\u0002\\u0002\\u047f\\u0480\\b\\u008e\\u0003\\u0002\\u0480\",\r\n    \"\\u0481\\b\\u008e\\b\\u0002\\u0481\\u0120\\u0003\\u0002\\u0002\\u0002\\u0482\\u0483\",\r\n    \"\\u0005\\u00efv\\u0002\\u0483\\u0484\\u0005\\u00f1w\\u0002\\u0484\\u0485\\u0005\",\r\n    \"\\u00f3x\\u0002\\u0485\\u0486\\u0005\\u00f9{\\u0002\\u0486\\u0487\\u0005\\u0103\",\r\n    \"\\u0080\\u0002\\u0487\\u0489\\u0005\\u00f1w\\u0002\\u0488\\u048a\\t\\t\\u0002\\u0002\",\r\n    \"\\u0489\\u0488\\u0003\\u0002\\u0002\\u0002\\u048a\\u048b\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u048b\\u0489\\u0003\\u0002\\u0002\\u0002\\u048b\\u048c\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u048c\\u048d\\u0003\\u0002\\u0002\\u0002\\u048d\\u048e\\b\\u008f\\u0003\\u0002\",\r\n    \"\\u048e\\u048f\\b\\u008f\\t\\u0002\\u048f\\u0122\\u0003\\u0002\\u0002\\u0002\\u0490\",\r\n    \"\\u0491\\u0005\\u00f9{\\u0002\\u0491\\u0492\\u0005\\u00f3x\\u0002\\u0492\\u0493\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0493\\u0494\\b\\u0090\\u0003\\u0002\\u0494\\u0124\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0495\\u0496\\u0005\\u00f1w\\u0002\\u0496\\u0497\",\r\n    \"\\u0005\\u00ff~\\u0002\\u0497\\u0498\\u0005\\u00f9{\\u0002\\u0498\\u0499\\u0005\",\r\n    \"\\u00f3x\\u0002\\u0499\\u049a\\u0003\\u0002\\u0002\\u0002\\u049a\\u049b\\b\\u0091\",\r\n    \"\\u0003\\u0002\\u049b\\u0126\\u0003\\u0002\\u0002\\u0002\\u049c\\u049d\\u0005\\u00f1\",\r\n    \"w\\u0002\\u049d\\u049e\\u0005\\u00ff~\\u0002\\u049e\\u049f\\u0005\\u010d\\u0085\",\r\n    \"\\u0002\\u049f\\u04a0\\u0005\\u00f1w\\u0002\\u04a0\\u04a1\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u04a1\\u04a2\\b\\u0092\\u0003\\u0002\\u04a2\\u0128\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u04a3\\u04a4\\u0005\\u0111\\u0087\\u0002\\u04a4\\u04a5\\u0005\\u0103\\u0080\",\r\n    \"\\u0002\\u04a5\\u04a6\\u0005\\u00efv\\u0002\\u04a6\\u04a7\\u0005\\u00f1w\\u0002\",\r\n    \"\\u04a7\\u04a8\\u0005\\u00f3x\\u0002\\u04a8\\u04a9\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u04a9\\u04aa\\b\\u0093\\u0003\\u0002\\u04aa\\u012a\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u04ab\\u04ac\\u0005\\u00f9{\\u0002\\u04ac\\u04ad\\u0005\\u00f3x\\u0002\\u04ad\",\r\n    \"\\u04ae\\u0005\\u00efv\\u0002\\u04ae\\u04af\\u0005\\u00f1w\\u0002\\u04af\\u04b0\",\r\n    \"\\u0005\\u00f3x\\u0002\\u04b0\\u04b1\\u0003\\u0002\\u0002\\u0002\\u04b1\\u04b2\",\r\n    \"\\b\\u0094\\u0003\\u0002\\u04b2\\u012c\\u0003\\u0002\\u0002\\u0002\\u04b3\\u04b4\",\r\n    \"\\u0005\\u00f9{\\u0002\\u04b4\\u04b5\\u0005\\u00f3x\\u0002\\u04b5\\u04b6\\u0005\",\r\n    \"\\u0103\\u0080\\u0002\\u04b6\\u04b7\\u0005\\u00efv\\u0002\\u04b7\\u04b8\\u0005\",\r\n    \"\\u00f1w\\u0002\\u04b8\\u04b9\\u0005\\u00f3x\\u0002\\u04b9\\u04ba\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u04ba\\u04bb\\b\\u0095\\u0003\\u0002\\u04bb\\u012e\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u04bc\\u04bd\\u0005\\u00f1w\\u0002\\u04bd\\u04be\\u0005\\u0103\",\r\n    \"\\u0080\\u0002\\u04be\\u04bf\\u0005\\u00efv\\u0002\\u04bf\\u04c0\\u0005\\u00df\",\r\n    \"n\\u0002\\u04c0\\u04c1\\u0005\\u00f9{\\u0002\\u04c1\\u04c2\\u0005\\u00f3x\\u0002\",\r\n    \"\\u04c2\\u04c3\\u0003\\u0002\\u0002\\u0002\\u04c3\\u04c4\\b\\u0096\\u0003\\u0002\",\r\n    \"\\u04c4\\u0130\\u0003\\u0002\\u0002\\u0002\\u04c5\\u04c6\\u0005\\u00f1w\\u0002\",\r\n    \"\\u04c6\\u04c7\\u0005\\u010b\\u0084\\u0002\\u04c7\\u04c8\\u0005\\u010b\\u0084\\u0002\",\r\n    \"\\u04c8\\u04c9\\u0005\\u0105\\u0081\\u0002\\u04c9\\u04ca\\u0005\\u010b\\u0084\\u0002\",\r\n    \"\\u04ca\\u04cb\\u0003\\u0002\\u0002\\u0002\\u04cb\\u04cc\\b\\u0097\\u0003\\u0002\",\r\n    \"\\u04cc\\u04cd\\b\\u0097\\b\\u0002\\u04cd\\u0132\\u0003\\u0002\\u0002\\u0002\\u04ce\",\r\n    \"\\u04cf\\u0007#\\u0002\\u0002\\u04cf\\u04d0\\u0003\\u0002\\u0002\\u0002\\u04d0\",\r\n    \"\\u04d1\\b\\u0098\\u0003\\u0002\\u04d1\\u0134\\u0003\\u0002\\u0002\\u0002\\u04d2\",\r\n    \"\\u04d3\\u0007*\\u0002\\u0002\\u04d3\\u04d4\\u0003\\u0002\\u0002\\u0002\\u04d4\",\r\n    \"\\u04d5\\b\\u0099\\u0003\\u0002\\u04d5\\u0136\\u0003\\u0002\\u0002\\u0002\\u04d6\",\r\n    \"\\u04d7\\u0007+\\u0002\\u0002\\u04d7\\u04d8\\u0003\\u0002\\u0002\\u0002\\u04d8\",\r\n    \"\\u04d9\\b\\u009a\\u0003\\u0002\\u04d9\\u0138\\u0003\\u0002\\u0002\\u0002\\u04da\",\r\n    \"\\u04db\\u0007?\\u0002\\u0002\\u04db\\u04dc\\u0003\\u0002\\u0002\\u0002\\u04dc\",\r\n    \"\\u04dd\\b\\u009b\\u0003\\u0002\\u04dd\\u013a\\u0003\\u0002\\u0002\\u0002\\u04de\",\r\n    \"\\u04df\\u0007>\\u0002\\u0002\\u04df\\u04e0\\u0007@\\u0002\\u0002\\u04e0\\u04e1\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u04e1\\u04e2\\b\\u009c\\u0003\\u0002\\u04e2\\u013c\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u04e3\\u04e4\\u0005\\t\\u0003\\u0002\\u04e4\\u04e5\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u04e5\\u04e6\\b\\u009d\\u0003\\u0002\\u04e6\\u013e\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u04e7\\u04e8\\u0005s8\\u0002\\u04e8\\u04e9\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u04e9\\u04ea\\b\\u009e\\u0003\\u0002\\u04ea\\u0140\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u04eb\\u04ec\\u0007>\\u0002\\u0002\\u04ec\\u04ed\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u04ed\\u04ee\\b\\u009f\\u0003\\u0002\\u04ee\\u0142\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u04ef\\u04f0\\u0007@\\u0002\\u0002\\u04f0\\u04f1\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u04f1\\u04f2\\b\\u00a0\\u0003\\u0002\\u04f2\\u0144\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u04f3\\u04f4\\u0007>\\u0002\\u0002\\u04f4\\u04f5\\u0007\",\r\n    \"?\\u0002\\u0002\\u04f5\\u04f6\\u0003\\u0002\\u0002\\u0002\\u04f6\\u04f7\\b\\u00a1\",\r\n    \"\\u0003\\u0002\\u04f7\\u0146\\u0003\\u0002\\u0002\\u0002\\u04f8\\u04f9\\u0007@\",\r\n    \"\\u0002\\u0002\\u04f9\\u04fa\\u0007?\\u0002\\u0002\\u04fa\\u04fb\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u04fb\\u04fc\\b\\u00a2\\u0003\\u0002\\u04fc\\u0148\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u04fd\\u04ff\\t\\t\\u0002\\u0002\\u04fe\\u04fd\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u04ff\\u0500\\u0003\\u0002\\u0002\\u0002\\u0500\\u04fe\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u0500\\u0501\\u0003\\u0002\\u0002\\u0002\\u0501\\u0502\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u0502\\u0503\\b\\u00a3\\u0007\\u0002\\u0503\\u0504\\b\\u00a3\\n\\u0002\\u0504\",\r\n    \"\\u014a\\u0003\\u0002\\u0002\\u0002\\u0505\\u0509\\u0005\\u00e3p\\u0002\\u0506\",\r\n    \"\\u0508\\u0005\\u00e7r\\u0002\\u0507\\u0506\\u0003\\u0002\\u0002\\u0002\\u0508\",\r\n    \"\\u050b\\u0003\\u0002\\u0002\\u0002\\u0509\\u0507\\u0003\\u0002\\u0002\\u0002\\u0509\",\r\n    \"\\u050a\\u0003\\u0002\\u0002\\u0002\\u050a\\u050c\\u0003\\u0002\\u0002\\u0002\\u050b\",\r\n    \"\\u0509\\u0003\\u0002\\u0002\\u0002\\u050c\\u050d\\b\\u00a4\\u0003\\u0002\\u050d\",\r\n    \"\\u014c\\u0003\\u0002\\u0002\\u0002\\u050e\\u0510\\u0005\\u00e5q\\u0002\\u050f\",\r\n    \"\\u050e\\u0003\\u0002\\u0002\\u0002\\u0510\\u0511\\u0003\\u0002\\u0002\\u0002\\u0511\",\r\n    \"\\u050f\\u0003\\u0002\\u0002\\u0002\\u0511\\u0512\\u0003\\u0002\\u0002\\u0002\\u0512\",\r\n    \"\\u0513\\u0003\\u0002\\u0002\\u0002\\u0513\\u0514\\b\\u00a5\\u0003\\u0002\\u0514\",\r\n    \"\\u014e\\u0003\\u0002\\u0002\\u0002\\u0515\\u0517\\u0005\\u00e5q\\u0002\\u0516\",\r\n    \"\\u0515\\u0003\\u0002\\u0002\\u0002\\u0517\\u0518\\u0003\\u0002\\u0002\\u0002\\u0518\",\r\n    \"\\u0516\\u0003\\u0002\\u0002\\u0002\\u0518\\u0519\\u0003\\u0002\\u0002\\u0002\\u0519\",\r\n    \"\\u051a\\u0003\\u0002\\u0002\\u0002\\u051a\\u051e\\u00070\\u0002\\u0002\\u051b\",\r\n    \"\\u051d\\u0005\\u00e5q\\u0002\\u051c\\u051b\\u0003\\u0002\\u0002\\u0002\\u051d\",\r\n    \"\\u0520\\u0003\\u0002\\u0002\\u0002\\u051e\\u051c\\u0003\\u0002\\u0002\\u0002\\u051e\",\r\n    \"\\u051f\\u0003\\u0002\\u0002\\u0002\\u051f\\u0528\\u0003\\u0002\\u0002\\u0002\\u0520\",\r\n    \"\\u051e\\u0003\\u0002\\u0002\\u0002\\u0521\\u0523\\u00070\\u0002\\u0002\\u0522\",\r\n    \"\\u0524\\u0005\\u00e5q\\u0002\\u0523\\u0522\\u0003\\u0002\\u0002\\u0002\\u0524\",\r\n    \"\\u0525\\u0003\\u0002\\u0002\\u0002\\u0525\\u0523\\u0003\\u0002\\u0002\\u0002\\u0525\",\r\n    \"\\u0526\\u0003\\u0002\\u0002\\u0002\\u0526\\u0528\\u0003\\u0002\\u0002\\u0002\\u0527\",\r\n    \"\\u0516\\u0003\\u0002\\u0002\\u0002\\u0527\\u0521\\u0003\\u0002\\u0002\\u0002\\u0528\",\r\n    \"\\u0529\\u0003\\u0002\\u0002\\u0002\\u0529\\u052a\\b\\u00a6\\u0003\\u0002\\u052a\",\r\n    \"\\u0150\\u0003\\u0002\\u0002\\u0002\\u052b\\u052d\\u0007\\u000f\\u0002\\u0002\\u052c\",\r\n    \"\\u052b\\u0003\\u0002\\u0002\\u0002\\u052c\\u052d\\u0003\\u0002\\u0002\\u0002\\u052d\",\r\n    \"\\u052e\\u0003\\u0002\\u0002\\u0002\\u052e\\u052f\\u0007\\f\\u0002\\u0002\\u052f\",\r\n    \"\\u0530\\u0003\\u0002\\u0002\\u0002\\u0530\\u0531\\b\\u00a7\\u0007\\u0002\\u0531\",\r\n    \"\\u0532\\b\\u00a7\\u000b\\u0002\\u0532\\u0152\\u0003\\u0002\\u0002\\u0002\\u0533\",\r\n    \"\\u0537\\u0007)\\u0002\\u0002\\u0534\\u0536\\n\\b\\u0002\\u0002\\u0535\\u0534\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0536\\u0539\\u0003\\u0002\\u0002\\u0002\\u0537\\u0535\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0537\\u0538\\u0003\\u0002\\u0002\\u0002\\u0538\\u053a\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0539\\u0537\\u0003\\u0002\\u0002\\u0002\\u053a\\u053b\\b\",\r\n    \"\\u00a8\\u0006\\u0002\\u053b\\u0154\\u0003\\u0002\\u0002\\u0002\\u053c\\u053e\\u0007\",\r\n    \"^\\u0002\\u0002\\u053d\\u053f\\u0007\\u000f\\u0002\\u0002\\u053e\\u053d\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u053e\\u053f\\u0003\\u0002\\u0002\\u0002\\u053f\\u0540\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0540\\u0541\\u0007\\f\\u0002\\u0002\\u0541\\u0542\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0542\\u0543\\b\\u00a9\\u0005\\u0002\\u0543\\u0156\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0544\\u0548\\u0005\\u00e3p\\u0002\\u0545\\u0547\\u0005\",\r\n    \"\\u00e7r\\u0002\\u0546\\u0545\\u0003\\u0002\\u0002\\u0002\\u0547\\u054a\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0548\\u0546\\u0003\\u0002\\u0002\\u0002\\u0548\\u0549\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0549\\u0554\\u0003\\u0002\\u0002\\u0002\\u054a\\u0548\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u054b\\u0550\\u0007*\\u0002\\u0002\\u054c\\u054f\\u0005\",\r\n    \"\\u00e7r\\u0002\\u054d\\u054f\\t\\'\\u0002\\u0002\\u054e\\u054c\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u054e\\u054d\\u0003\\u0002\\u0002\\u0002\\u054f\\u0552\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u0550\\u054e\\u0003\\u0002\\u0002\\u0002\\u0550\\u0551\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u0551\\u0553\\u0003\\u0002\\u0002\\u0002\\u0552\\u0550\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u0553\\u0555\\u0007+\\u0002\\u0002\\u0554\\u054b\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u0554\\u0555\\u0003\\u0002\\u0002\\u0002\\u0555\\u0556\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u0556\\u0557\\b\\u00aa\\u0003\\u0002\\u0557\\u0558\\b\\u00aa\\f\\u0002\\u0558\",\r\n    \"\\u0559\\b\\u00aa\\b\\u0002\\u0559\\u0158\\u0003\\u0002\\u0002\\u0002\\u055a\\u055c\",\r\n    \"\\u0007^\\u0002\\u0002\\u055b\\u055d\\u0007\\u000f\\u0002\\u0002\\u055c\\u055b\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u055c\\u055d\\u0003\\u0002\\u0002\\u0002\\u055d\\u055e\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u055e\\u055f\\u0007\\f\\u0002\\u0002\\u055f\\u0560\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0560\\u0561\\b\\u00ab\\u0003\\u0002\\u0561\\u015a\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0562\\u0563\\u0007^\\u0002\\u0002\\u0563\\u0564\",\r\n    \"\\u000b\\u0002\\u0002\\u0002\\u0564\\u0565\\u0003\\u0002\\u0002\\u0002\\u0565\\u0566\",\r\n    \"\\b\\u00ac\\u0003\\u0002\\u0566\\u0567\\b\\u00ac\\r\\u0002\\u0567\\u015c\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0568\\u056a\\u0007\\u000f\\u0002\\u0002\\u0569\\u0568\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0569\\u056a\\u0003\\u0002\\u0002\\u0002\\u056a\\u056b\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u056b\\u056c\\u0007\\f\\u0002\\u0002\\u056c\\u056d\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u056d\\u056e\\b\\u00ad\\u0007\\u0002\\u056e\\u056f\\b\\u00ad\\u000b\",\r\n    \"\\u0002\\u056f\\u015e\\u0003\\u0002\\u0002\\u0002\\u0570\\u0571\\u00071\\u0002\",\r\n    \"\\u0002\\u0571\\u0572\\u0007,\\u0002\\u0002\\u0572\\u0576\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u0573\\u0575\\u000b\\u0002\\u0002\\u0002\\u0574\\u0573\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u0575\\u0578\\u0003\\u0002\\u0002\\u0002\\u0576\\u0577\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u0576\\u0574\\u0003\\u0002\\u0002\\u0002\\u0577\\u0579\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u0578\\u0576\\u0003\\u0002\\u0002\\u0002\\u0579\\u057a\\u0007,\\u0002\",\r\n    \"\\u0002\\u057a\\u057b\\u00071\\u0002\\u0002\\u057b\\u057c\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u057c\\u057d\\b\\u00ae\\u0006\\u0002\\u057d\\u0160\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u057e\\u057f\\u00071\\u0002\\u0002\\u057f\\u0580\\u00071\\u0002\\u0002\",\r\n    \"\\u0580\\u0584\\u0003\\u0002\\u0002\\u0002\\u0581\\u0583\\n\\b\\u0002\\u0002\\u0582\",\r\n    \"\\u0581\\u0003\\u0002\\u0002\\u0002\\u0583\\u0586\\u0003\\u0002\\u0002\\u0002\\u0584\",\r\n    \"\\u0582\\u0003\\u0002\\u0002\\u0002\\u0584\\u0585\\u0003\\u0002\\u0002\\u0002\\u0585\",\r\n    \"\\u0587\\u0003\\u0002\\u0002\\u0002\\u0586\\u0584\\u0003\\u0002\\u0002\\u0002\\u0587\",\r\n    \"\\u0588\\b\\u00af\\u0006\\u0002\\u0588\\u0162\\u0003\\u0002\\u0002\\u0002\\u0589\",\r\n    \"\\u058a\\u00071\\u0002\\u0002\\u058a\\u058b\\u0003\\u0002\\u0002\\u0002\\u058b\",\r\n    \"\\u058c\\b\\u00b0\\u0003\\u0002\\u058c\\u058d\\b\\u00b0\\r\\u0002\\u058d\\u0164\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u058e\\u0590\\n(\\u0002\\u0002\\u058f\\u058e\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0590\\u0591\\u0003\\u0002\\u0002\\u0002\\u0591\\u058f\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0591\\u0592\\u0003\\u0002\\u0002\\u0002\\u0592\\u0593\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0593\\u0594\\b\\u00b1\\u0003\\u0002\\u0594\\u0166\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0595\\u0596\\u0005\\u00e9s\\u0002\\u0596\\u0597\\u0005\\u0103\",\r\n    \"\\u0080\\u0002\\u0597\\u0598\\u0005\\u00efv\\u0002\\u0598\\u0599\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0599\\u059a\\b\\u00b2\\u000e\\u0002\\u059a\\u0168\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u059b\\u059c\\u0005\\u00f1w\\u0002\\u059c\\u059d\\u0005\\u00ff\",\r\n    \"~\\u0002\\u059d\\u059e\\u0005\\u010d\\u0085\\u0002\\u059e\\u059f\\u0005\\u00f1\",\r\n    \"w\\u0002\\u059f\\u05a0\\u0003\\u0002\\u0002\\u0002\\u05a0\\u05a1\\b\\u00b3\\u000f\",\r\n    \"\\u0002\\u05a1\\u016a\\u0003\\u0002\\u0002\\u0002\\u05a2\\u05a3\\u0005\\u00f1w\",\r\n    \"\\u0002\\u05a3\\u05a4\\u0005\\u0103\\u0080\\u0002\\u05a4\\u05a5\\u0005\\u00efv\",\r\n    \"\\u0002\\u05a5\\u05a6\\u0003\\u0002\\u0002\\u0002\\u05a6\\u05a7\\b\\u00b4\\u0010\",\r\n    \"\\u0002\\u05a7\\u016c\\u0003\\u0002\\u0002\\u0002\\u05a8\\u05a9\\u0005\\u00f1w\",\r\n    \"\\u0002\\u05a9\\u05aa\\u0005\\u0117\\u008a\\u0002\\u05aa\\u05ab\\u0005\\u00f9{\",\r\n    \"\\u0002\\u05ab\\u05ac\\u0005\\u010f\\u0086\\u0002\\u05ac\\u05ad\\u0005\\u00dfn\",\r\n    \"\\u0002\\u05ad\\u05ae\\u0005\\u00efv\\u0002\\u05ae\\u05af\\u0005\\u0105\\u0081\",\r\n    \"\\u0002\\u05af\\u05b0\\u0003\\u0002\\u0002\\u0002\\u05b0\\u05b1\\b\\u00b5\\u0011\",\r\n    \"\\u0002\\u05b1\\u016e\\u0003\\u0002\\u0002\\u0002\\u05b2\\u05b3\\u0005\\u00f1w\",\r\n    \"\\u0002\\u05b3\\u05b4\\u0005\\u0117\\u008a\\u0002\\u05b4\\u05b5\\u0005\\u00f9{\",\r\n    \"\\u0002\\u05b5\\u05b6\\u0005\\u010f\\u0086\\u0002\\u05b6\\u05b7\\u0005\\u00dfn\",\r\n    \"\\u0002\\u05b7\\u05b8\\u0005\\u00f3x\\u0002\\u05b8\\u05b9\\u0005\\u0105\\u0081\",\r\n    \"\\u0002\\u05b9\\u05ba\\u0005\\u010b\\u0084\\u0002\\u05ba\\u05bb\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u05bb\\u05bc\\b\\u00b6\\u0012\\u0002\\u05bc\\u0170\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u05bd\\u05be\\u0005\\u00f1w\\u0002\\u05be\\u05bf\\u0005\\u0117\\u008a\",\r\n    \"\\u0002\\u05bf\\u05c0\\u0005\\u00f9{\\u0002\\u05c0\\u05c1\\u0005\\u010f\\u0086\",\r\n    \"\\u0002\\u05c1\\u05c2\\u0005\\u00dfn\\u0002\\u05c2\\u05c3\\u0005\\u00f3x\\u0002\",\r\n    \"\\u05c3\\u05c4\\u0005\\u0111\\u0087\\u0002\\u05c4\\u05c5\\u0005\\u0103\\u0080\\u0002\",\r\n    \"\\u05c5\\u05c6\\u0005\\u00edu\\u0002\\u05c6\\u05c7\\u0005\\u010f\\u0086\\u0002\",\r\n    \"\\u05c7\\u05c8\\u0005\\u00f9{\\u0002\\u05c8\\u05c9\\u0005\\u0105\\u0081\\u0002\",\r\n    \"\\u05c9\\u05ca\\u0005\\u0103\\u0080\\u0002\\u05ca\\u05cb\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u05cb\\u05cc\\b\\u00b7\\u0013\\u0002\\u05cc\\u0172\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u05cd\\u05ce\\u0005\\u00f1w\\u0002\\u05ce\\u05cf\\u0005\\u0117\\u008a\\u0002\",\r\n    \"\\u05cf\\u05d0\\u0005\\u00f9{\\u0002\\u05d0\\u05d1\\u0005\\u010f\\u0086\\u0002\",\r\n    \"\\u05d1\\u05d2\\u0005\\u00dfn\\u0002\\u05d2\\u05d3\\u0005\\u010d\\u0085\\u0002\",\r\n    \"\\u05d3\\u05d4\\u0005\\u0111\\u0087\\u0002\\u05d4\\u05d5\\u0005\\u00ebt\\u0002\",\r\n    \"\\u05d5\\u05d6\\u0003\\u0002\\u0002\\u0002\\u05d6\\u05d7\\b\\u00b8\\u0014\\u0002\",\r\n    \"\\u05d7\\u0174\\u0003\\u0002\\u0002\\u0002\\u05d8\\u05d9\\u0005\\u00f1w\\u0002\",\r\n    \"\\u05d9\\u05da\\u0005\\u0117\\u008a\\u0002\\u05da\\u05db\\u0005\\u00f9{\\u0002\",\r\n    \"\\u05db\\u05dc\\u0005\\u010f\\u0086\\u0002\\u05dc\\u05dd\\u0005\\u00dfn\\u0002\",\r\n    \"\\u05dd\\u05de\\u0005\\u0115\\u0089\\u0002\\u05de\\u05df\\u0005\\u00f7z\\u0002\",\r\n    \"\\u05df\\u05e0\\u0005\\u00f9{\\u0002\\u05e0\\u05e1\\u0005\\u00ff~\\u0002\\u05e1\",\r\n    \"\\u05e2\\u0005\\u00f1w\\u0002\\u05e2\\u05e3\\u0003\\u0002\\u0002\\u0002\\u05e3\",\r\n    \"\\u05e4\\b\\u00b9\\u0015\\u0002\\u05e4\\u0176\\u0003\\u0002\\u0002\\u0002\\u05e5\",\r\n    \"\\u05e6\\u0005\\u00f3x\\u0002\\u05e6\\u05e7\\u0005\\u00e9s\\u0002\\u05e7\\u05e8\",\r\n    \"\\u0005\\u00ff~\\u0002\\u05e8\\u05e9\\u0005\\u010d\\u0085\\u0002\\u05e9\\u05ea\",\r\n    \"\\u0005\\u00f1w\\u0002\\u05ea\\u05eb\\u0003\\u0002\\u0002\\u0002\\u05eb\\u05ec\",\r\n    \"\\b\\u00ba\\u0016\\u0002\\u05ec\\u0178\\u0003\\u0002\\u0002\\u0002\\u05ed\\u05ee\",\r\n    \"\\u0005\\u00f5y\\u0002\\u05ee\\u05ef\\u0005\\u0105\\u0081\\u0002\\u05ef\\u05f0\",\r\n    \"\\u0005\\u010f\\u0086\\u0002\\u05f0\\u05f1\\u0005\\u0105\\u0081\\u0002\\u05f1\\u05f2\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u05f2\\u05f3\\b\\u00bb\\u0017\\u0002\\u05f3\\u017a\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u05f4\\u05f5\\u0005\\u0101\\u007f\\u0002\\u05f5\\u05f6\",\r\n    \"\\u0005\\u0105\\u0081\\u0002\\u05f6\\u05f7\\u0005\\u00efv\\u0002\\u05f7\\u05f8\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u05f8\\u05f9\\b\\u00bc\\u0018\\u0002\\u05f9\\u017c\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u05fa\\u05fb\\u0005\\u0103\\u0080\\u0002\\u05fb\\u05fc\",\r\n    \"\\u0005\\u0105\\u0081\\u0002\\u05fc\\u05fd\\u0005\\u010f\\u0086\\u0002\\u05fd\\u05fe\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u05fe\\u05ff\\b\\u00bd\\u0019\\u0002\\u05ff\\u017e\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0600\\u0601\\u0005\\u0105\\u0081\\u0002\\u0601\\u0602\",\r\n    \"\\u0005\\u010b\\u0084\\u0002\\u0602\\u0603\\u0003\\u0002\\u0002\\u0002\\u0603\\u0604\",\r\n    \"\\b\\u00be\\u001a\\u0002\\u0604\\u0180\\u0003\\u0002\\u0002\\u0002\\u0605\\u0606\",\r\n    \"\\u0005\\u010d\\u0085\\u0002\\u0606\\u0607\\u0005\\u00f7z\\u0002\\u0607\\u0608\",\r\n    \"\\u0005\\u00ff~\\u0002\\u0608\\u0609\\u0003\\u0002\\u0002\\u0002\\u0609\\u060a\",\r\n    \"\\b\\u00bf\\u001b\\u0002\\u060a\\u0182\\u0003\\u0002\\u0002\\u0002\\u060b\\u060c\",\r\n    \"\\u0005\\u010d\\u0085\\u0002\\u060c\\u060d\\u0005\\u00f7z\\u0002\\u060d\\u060e\",\r\n    \"\\u0005\\u010b\\u0084\\u0002\\u060e\\u060f\\u0003\\u0002\\u0002\\u0002\\u060f\\u0610\",\r\n    \"\\b\\u00c0\\u001c\\u0002\\u0610\\u0184\\u0003\\u0002\\u0002\\u0002\\u0611\\u0612\",\r\n    \"\\u0005\\u010d\\u0085\\u0002\\u0612\\u0613\\u0005\\u00f9{\\u0002\\u0613\\u0614\",\r\n    \"\\u0005\\u011b\\u008c\\u0002\\u0614\\u0615\\u0005\\u00f1w\\u0002\\u0615\\u0616\",\r\n    \"\\u0005\\u0105\\u0081\\u0002\\u0616\\u0617\\u0005\\u00f3x\\u0002\\u0617\\u0618\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0618\\u0619\\b\\u00c1\\u001d\\u0002\\u0619\\u0186\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u061a\\u061b\\u0005\\u010f\\u0086\\u0002\\u061b\\u061c\",\r\n    \"\\u0005\\u00f7z\\u0002\\u061c\\u061d\\u0005\\u00f1w\\u0002\\u061d\\u061e\\u0005\",\r\n    \"\\u0103\\u0080\\u0002\\u061e\\u061f\\u0003\\u0002\\u0002\\u0002\\u061f\\u0620\\b\",\r\n    \"\\u00c2\\u001e\\u0002\\u0620\\u0188\\u0003\\u0002\\u0002\\u0002\\u0621\\u0622\\u0005\",\r\n    \"\\u010f\\u0086\\u0002\\u0622\\u0623\\u0005\\u010b\\u0084\\u0002\\u0623\\u0624\\u0005\",\r\n    \"\\u0111\\u0087\\u0002\\u0624\\u0625\\u0005\\u00f1w\\u0002\\u0625\\u0626\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0626\\u0627\\b\\u00c3\\u001f\\u0002\\u0627\\u018a\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0628\\u0629\\u0005\\u0117\\u008a\\u0002\\u0629\\u062a\\u0005\",\r\n    \"\\u0105\\u0081\\u0002\\u062a\\u062b\\u0005\\u010b\\u0084\\u0002\\u062b\\u062c\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u062c\\u062d\\b\\u00c4 \\u0002\\u062d\\u018c\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u062e\\u0634\\t\\u0002\\u0002\\u0002\\u062f\\u0633\\n\\u0003\\u0002\",\r\n    \"\\u0002\\u0630\\u0631\\u0007$\\u0002\\u0002\\u0631\\u0633\\u0007$\\u0002\\u0002\",\r\n    \"\\u0632\\u062f\\u0003\\u0002\\u0002\\u0002\\u0632\\u0630\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0633\\u0636\\u0003\\u0002\\u0002\\u0002\\u0634\\u0632\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0634\\u0635\\u0003\\u0002\\u0002\\u0002\\u0635\\u0637\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0636\\u0634\\u0003\\u0002\\u0002\\u0002\\u0637\\u0638\\t\\u0002\\u0002\\u0002\",\r\n    \"\\u0638\\u0639\\u0003\\u0002\\u0002\\u0002\\u0639\\u063a\\b\\u00c5!\\u0002\\u063a\",\r\n    \"\\u018e\\u0003\\u0002\\u0002\\u0002\\u063b\\u063c\\u0007(\\u0002\\u0002\\u063c\",\r\n    \"\\u063e\\u0005\\u00f7z\\u0002\\u063d\\u063f\\t\\u0005\\u0002\\u0002\\u063e\\u063d\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u063f\\u0640\\u0003\\u0002\\u0002\\u0002\\u0640\\u063e\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0640\\u0641\\u0003\\u0002\\u0002\\u0002\\u0641\\u0642\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0642\\u0643\\b\\u00c6\\\"\\u0002\\u0643\\u0190\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0644\\u0645\\u0007(\\u0002\\u0002\\u0645\\u0647\\u0005\",\r\n    \"\\u00ebt\\u0002\\u0646\\u0648\\t\\u0006\\u0002\\u0002\\u0647\\u0646\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0648\\u0649\\u0003\\u0002\\u0002\\u0002\\u0649\\u0647\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0649\\u064a\\u0003\\u0002\\u0002\\u0002\\u064a\\u064b\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u064b\\u064c\\b\\u00c7#\\u0002\\u064c\\u0192\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u064d\\u064f\\u0005\\u00e5q\\u0002\\u064e\\u064d\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u064f\\u0650\\u0003\\u0002\\u0002\\u0002\\u0650\\u064e\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u0650\\u0651\\u0003\\u0002\\u0002\\u0002\\u0651\\u0652\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u0652\\u0653\\b\\u00c8$\\u0002\\u0653\\u0194\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0654\\u0655\\t\\u0007\\u0002\\u0002\\u0655\\u0656\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0656\\u0657\\b\\u00c9%\\u0002\\u0657\\u0196\\u0003\\u0002\\u0002\\u0002\\u0658\",\r\n    \"\\u0659\\u0007?\\u0002\\u0002\\u0659\\u065a\\u0003\\u0002\\u0002\\u0002\\u065a\",\r\n    \"\\u065b\\b\\u00ca&\\u0002\\u065b\\u0198\\u0003\\u0002\\u0002\\u0002\\u065c\\u065d\",\r\n    \"\\u0007@\\u0002\\u0002\\u065d\\u065e\\u0007?\\u0002\\u0002\\u065e\\u065f\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u065f\\u0660\\b\\u00cb\\'\\u0002\\u0660\\u019a\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0661\\u0662\\u0007@\\u0002\\u0002\\u0662\\u0663\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0663\\u0664\\b\\u00cc(\\u0002\\u0664\\u019c\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u0665\\u0666\\u0007>\\u0002\\u0002\\u0666\\u0667\\u0007?\\u0002\\u0002\",\r\n    \"\\u0667\\u0668\\u0003\\u0002\\u0002\\u0002\\u0668\\u0669\\b\\u00cd)\\u0002\\u0669\",\r\n    \"\\u019e\\u0003\\u0002\\u0002\\u0002\\u066a\\u066b\\u0007*\\u0002\\u0002\\u066b\",\r\n    \"\\u066c\\u0003\\u0002\\u0002\\u0002\\u066c\\u066d\\b\\u00ce*\\u0002\\u066d\\u01a0\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u066e\\u066f\\u0007>\\u0002\\u0002\\u066f\\u0670\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0670\\u0671\\b\\u00cf+\\u0002\\u0671\\u01a2\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0672\\u0673\\u0007/\\u0002\\u0002\\u0673\\u0674\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0674\\u0675\\b\\u00d0,\\u0002\\u0675\\u01a4\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0676\\u0677\\u0007,\\u0002\\u0002\\u0677\\u0678\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0678\\u0679\\b\\u00d1-\\u0002\\u0679\\u01a6\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u067a\\u067b\\u0007>\\u0002\\u0002\\u067b\\u067c\\u0007@\\u0002\\u0002\",\r\n    \"\\u067c\\u067d\\u0003\\u0002\\u0002\\u0002\\u067d\\u067e\\b\\u00d2.\\u0002\\u067e\",\r\n    \"\\u01a8\\u0003\\u0002\\u0002\\u0002\\u067f\\u0680\\u0007-\\u0002\\u0002\\u0680\",\r\n    \"\\u0681\\u0003\\u0002\\u0002\\u0002\\u0681\\u0682\\b\\u00d3/\\u0002\\u0682\\u01aa\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0683\\u0684\\u0007+\\u0002\\u0002\\u0684\\u0685\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0685\\u0686\\b\\u00d40\\u0002\\u0686\\u01ac\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0687\\u0689\\u0007\\u000f\\u0002\\u0002\\u0688\\u0687\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0688\\u0689\\u0003\\u0002\\u0002\\u0002\\u0689\\u068a\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u068a\\u068b\\u0007\\f\\u0002\\u0002\\u068b\\u068c\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u068c\\u068d\\b\\u00d5\\u000b\\u0002\\u068d\\u068e\\b\\u00d5\",\r\n    \"1\\u0002\\u068e\\u01ae\\u0003\\u0002\\u0002\\u0002\\u068f\\u0693\\u0005\\u01b1\",\r\n    \"\\u00d7\\u0002\\u0690\\u0692\\n\\b\\u0002\\u0002\\u0691\\u0690\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u0692\\u0695\\u0003\\u0002\\u0002\\u0002\\u0693\\u0691\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u0693\\u0694\\u0003\\u0002\\u0002\\u0002\\u0694\\u0696\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u0695\\u0693\\u0003\\u0002\\u0002\\u0002\\u0696\\u0697\\b\\u00d6\\u0006\",\r\n    \"\\u0002\\u0697\\u01b0\\u0003\\u0002\\u0002\\u0002\\u0698\\u0699\\u0007)\\u0002\",\r\n    \"\\u0002\\u0699\\u069a\\u0003\\u0002\\u0002\\u0002\\u069a\\u069b\\b\\u00d72\\u0002\",\r\n    \"\\u069b\\u01b2\\u0003\\u0002\\u0002\\u0002\\u069c\\u069d\\u0007<\\u0002\\u0002\",\r\n    \"\\u069d\\u069e\\u0003\\u0002\\u0002\\u0002\\u069e\\u069f\\b\\u00d83\\u0002\\u069f\",\r\n    \"\\u01b4\\u0003\\u0002\\u0002\\u0002\\u06a0\\u06a1\\u0007.\\u0002\\u0002\\u06a1\",\r\n    \"\\u06a2\\u0003\\u0002\\u0002\\u0002\\u06a2\\u06a3\\b\\u00d94\\u0002\\u06a3\\u01b6\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u06a4\\u06a5\\u00070\\u0002\\u0002\\u06a5\\u06a6\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u06a6\\u06a7\\b\\u00da5\\u0002\\u06a7\\u01b8\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u06a8\\u06a9\\u0007#\\u0002\\u0002\\u06a9\\u06aa\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u06aa\\u06ab\\b\\u00db6\\u0002\\u06ab\\u01ba\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u06ac\\u06ad\\u0007a\\u0002\\u0002\\u06ad\\u06ae\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u06ae\\u06af\\b\\u00dc7\\u0002\\u06af\\u01bc\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u06b0\\u06b2\\t\\t\\u0002\\u0002\\u06b1\\u06b0\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u06b2\\u06b3\\u0003\\u0002\\u0002\\u0002\\u06b3\\u06b1\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u06b3\\u06b4\\u0003\\u0002\\u0002\\u0002\\u06b4\\u06b5\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u06b5\\u06b6\\b\\u00dd\\u0007\\u0002\\u06b6\\u01be\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u06b7\\u06bb\\u0005\\u00e3p\\u0002\\u06b8\\u06ba\\u0005\\u00e7r\\u0002\\u06b9\",\r\n    \"\\u06b8\\u0003\\u0002\\u0002\\u0002\\u06ba\\u06bd\\u0003\\u0002\\u0002\\u0002\\u06bb\",\r\n    \"\\u06b9\\u0003\\u0002\\u0002\\u0002\\u06bb\\u06bc\\u0003\\u0002\\u0002\\u0002\\u06bc\",\r\n    \"\\u06be\\u0003\\u0002\\u0002\\u0002\\u06bd\\u06bb\\u0003\\u0002\\u0002\\u0002\\u06be\",\r\n    \"\\u06bf\\b\\u00de8\\u0002\\u06bf\\u01c0\\u0003\\u0002\\u0002\\u0002\\u06c0\\u06c1\",\r\n    \"\\u000b\\u0002\\u0002\\u0002\\u06c1\\u01c2\\u0003\\u0002\\u0002\\u00021\\u0002\",\r\n    \"\\u0003\\u0004\\u0005\\u0006\\u03ba\\u03bc\\u03c5\\u03c7\\u03d1\\u03d8\\u03dd\\u0403\",\r\n    \"\\u040d\\u042b\\u0433\\u0474\\u047d\\u048b\\u0500\\u0509\\u0511\\u0518\\u051e\\u0525\",\r\n    \"\\u0527\\u052c\\u0537\\u053e\\u0548\\u054e\\u0550\\u0554\\u055c\\u0569\\u0576\\u0584\",\r\n    \"\\u0591\\u0632\\u0634\\u0640\\u0649\\u0650\\u0688\\u0693\\u06b3\\u06bb9\\u0004\",\r\n    \"\\u0006\\u0002\\u0002\\u0005\\u0002\\u0004\\u0003\\u0002\\b\\u0002\\u0002\\u0002\",\r\n    \"\\u0004\\u0002\\u0002\\u0003\\u0002\\u0004\\u0005\\u0002\\u0004\\u0004\\u0002\\t\",\r\n    \"o\\u0002\\u0004\\u0002\\u0002\\t\\u0087\\u0002\\t\\u0091\\u0002\\t\\u0004\\u0002\",\r\n    \"\\t\\u0014\\u0002\\t\\u0016\\u0002\\t\\\"\\u0002\\t#\\u0002\\t$\\u0002\\t&\\u0002\\t\",\r\n    \"\\'\\u0002\\t(\\u0002\\t-\\u0002\\t6\\u0002\\t8\\u0002\\t9\\u0002\\t>\\u0002\\t@\\u0002\",\r\n    \"\\tA\\u0002\\tE\\u0002\\tG\\u0002\\tN\\u0002\\tP\\u0002\\tR\\u0002\\tS\\u0002\\tT\\u0002\",\r\n    \"\\tU\\u0002\\tV\\u0002\\tW\\u0002\\tX\\u0002\\tY\\u0002\\tZ\\u0002\\t[\\u0002\\t\\\\\",\r\n    \"\\u0002\\t]\\u0002\\t^\\u0002\\t_\\u0002\\t`\\u0002\\te\\u0002\\tg\\u0002\\th\\u0002\",\r\n    \"\\tj\\u0002\\tk\\u0002\\tl\\u0002\\tm\\u0002\\tp\\u0002\"].join(\"\");\r\n\r\n\r\nvar atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);\r\n\r\nvar decisionsToDFA = atn.decisionToState.map( function(ds, index) { return new antlr4.dfa.DFA(ds, index); });\r\n\r\nfunction TibboBasicLexer(input) {\r\n\tantlr4.Lexer.call(this, input);\r\n    this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());\r\n    return this;\r\n}\r\n\r\nTibboBasicLexer.prototype = Object.create(antlr4.Lexer.prototype);\r\nTibboBasicLexer.prototype.constructor = TibboBasicLexer;\r\n\r\nObject.defineProperty(TibboBasicLexer.prototype, \"atn\", {\r\n        get : function() {\r\n                return atn;\r\n        }\r\n});\r\n\r\nTibboBasicLexer.EOF = antlr4.Token.EOF;\r\nTibboBasicLexer.OBJECT = 1;\r\nTibboBasicLexer.AND = 2;\r\nTibboBasicLexer.AS = 3;\r\nTibboBasicLexer.BOOLEAN = 4;\r\nTibboBasicLexer.REAL = 5;\r\nTibboBasicLexer.BYREF = 6;\r\nTibboBasicLexer.BYTE = 7;\r\nTibboBasicLexer.BYVAL = 8;\r\nTibboBasicLexer.CASE = 9;\r\nTibboBasicLexer.CASE_ELSE = 10;\r\nTibboBasicLexer.CHAR = 11;\r\nTibboBasicLexer.CONST = 12;\r\nTibboBasicLexer.COUNTOF = 13;\r\nTibboBasicLexer.DECLARE = 14;\r\nTibboBasicLexer.DIM = 15;\r\nTibboBasicLexer.DO = 16;\r\nTibboBasicLexer.DWORD = 17;\r\nTibboBasicLexer.ELSE = 18;\r\nTibboBasicLexer.ELIF = 19;\r\nTibboBasicLexer.END = 20;\r\nTibboBasicLexer.ELSEIF = 21;\r\nTibboBasicLexer.ENUM = 22;\r\nTibboBasicLexer.END_ENUM = 23;\r\nTibboBasicLexer.END_FUNCTION = 24;\r\nTibboBasicLexer.END_IF = 25;\r\nTibboBasicLexer.END_PROPERTY = 26;\r\nTibboBasicLexer.END_SELECT = 27;\r\nTibboBasicLexer.END_SUB = 28;\r\nTibboBasicLexer.END_TYPE = 29;\r\nTibboBasicLexer.END_WITH = 30;\r\nTibboBasicLexer.EVENT = 31;\r\nTibboBasicLexer.EXIT_DO = 32;\r\nTibboBasicLexer.EXIT_FOR = 33;\r\nTibboBasicLexer.EXIT_FUNCTION = 34;\r\nTibboBasicLexer.EXIT_PROPERTY = 35;\r\nTibboBasicLexer.EXIT_SUB = 36;\r\nTibboBasicLexer.EXIT_WHILE = 37;\r\nTibboBasicLexer.FALSE = 38;\r\nTibboBasicLexer.FLOAT = 39;\r\nTibboBasicLexer.FOR = 40;\r\nTibboBasicLexer.FUNCTION = 41;\r\nTibboBasicLexer.GET = 42;\r\nTibboBasicLexer.GOTO = 43;\r\nTibboBasicLexer.IF = 44;\r\nTibboBasicLexer.IFDEF = 45;\r\nTibboBasicLexer.IFNDEF = 46;\r\nTibboBasicLexer.INCLUDE = 47;\r\nTibboBasicLexer.INCLUDEPP = 48;\r\nTibboBasicLexer.INTEGER = 49;\r\nTibboBasicLexer.LONG = 50;\r\nTibboBasicLexer.LOOP = 51;\r\nTibboBasicLexer.MOD = 52;\r\nTibboBasicLexer.NEXT = 53;\r\nTibboBasicLexer.NOT = 54;\r\nTibboBasicLexer.OR = 55;\r\nTibboBasicLexer.PROPERTY = 56;\r\nTibboBasicLexer.PUBLIC = 57;\r\nTibboBasicLexer.SELECT = 58;\r\nTibboBasicLexer.SET = 59;\r\nTibboBasicLexer.SHL = 60;\r\nTibboBasicLexer.SHORT = 61;\r\nTibboBasicLexer.SHR = 62;\r\nTibboBasicLexer.SIZEOF = 63;\r\nTibboBasicLexer.STEP = 64;\r\nTibboBasicLexer.STRING = 65;\r\nTibboBasicLexer.SUB = 66;\r\nTibboBasicLexer.THEN = 67;\r\nTibboBasicLexer.TO = 68;\r\nTibboBasicLexer.TRUE = 69;\r\nTibboBasicLexer.TYPE = 70;\r\nTibboBasicLexer.UNDEF = 71;\r\nTibboBasicLexer.UNTIL = 72;\r\nTibboBasicLexer.WEND = 73;\r\nTibboBasicLexer.WHILE = 74;\r\nTibboBasicLexer.WORD = 75;\r\nTibboBasicLexer.XOR = 76;\r\nTibboBasicLexer.SHARP = 77;\r\nTibboBasicLexer.STRINGLITERAL = 78;\r\nTibboBasicLexer.TemplateStringLiteral = 79;\r\nTibboBasicLexer.HEXLITERAL = 80;\r\nTibboBasicLexer.BINLITERAL = 81;\r\nTibboBasicLexer.INTEGERLITERAL = 82;\r\nTibboBasicLexer.DIV = 83;\r\nTibboBasicLexer.EQ = 84;\r\nTibboBasicLexer.GEQ = 85;\r\nTibboBasicLexer.GT = 86;\r\nTibboBasicLexer.LEQ = 87;\r\nTibboBasicLexer.LPAREN = 88;\r\nTibboBasicLexer.LT = 89;\r\nTibboBasicLexer.MINUS = 90;\r\nTibboBasicLexer.MULT = 91;\r\nTibboBasicLexer.NEQ = 92;\r\nTibboBasicLexer.PLUS = 93;\r\nTibboBasicLexer.RPAREN = 94;\r\nTibboBasicLexer.L_SQUARE_BRACKET = 95;\r\nTibboBasicLexer.R_SQUARE_BRACKET = 96;\r\nTibboBasicLexer.L_CURLY_BRACKET = 97;\r\nTibboBasicLexer.R_CURLY_BRACKET = 98;\r\nTibboBasicLexer.NEWLINE = 99;\r\nTibboBasicLexer.COMMENT = 100;\r\nTibboBasicLexer.SINGLEQUOTE = 101;\r\nTibboBasicLexer.COLON = 102;\r\nTibboBasicLexer.SEMICOLON = 103;\r\nTibboBasicLexer.COMMA = 104;\r\nTibboBasicLexer.DOT = 105;\r\nTibboBasicLexer.BANG = 106;\r\nTibboBasicLexer.UNDERSCORE = 107;\r\nTibboBasicLexer.SYSCALL = 108;\r\nTibboBasicLexer.WS = 109;\r\nTibboBasicLexer.IDENTIFIER = 110;\r\nTibboBasicLexer.DIRECTIVE_INCLUDE = 111;\r\nTibboBasicLexer.DIRECTIVE_INCLUDEPP = 112;\r\nTibboBasicLexer.DIRECTIVE_DEFINE = 113;\r\nTibboBasicLexer.DIRECTIVE_IF = 114;\r\nTibboBasicLexer.DIRECTIVE_ELIF = 115;\r\nTibboBasicLexer.DIRECTIVE_ELSE = 116;\r\nTibboBasicLexer.DIRECTIVE_UNDEF = 117;\r\nTibboBasicLexer.DIRECTIVE_IFDEF = 118;\r\nTibboBasicLexer.DIRECTIVE_IFNDEF = 119;\r\nTibboBasicLexer.DIRECTIVE_ENDIF = 120;\r\nTibboBasicLexer.DIRECTIVE_ERROR = 121;\r\nTibboBasicLexer.DIRECTIVE_BANG = 122;\r\nTibboBasicLexer.DIRECTIVE_LP = 123;\r\nTibboBasicLexer.DIRECTIVE_RP = 124;\r\nTibboBasicLexer.DIRECTIVE_EQUAL = 125;\r\nTibboBasicLexer.DIRECTIVE_NOTEQUAL = 126;\r\nTibboBasicLexer.DIRECTIVE_AND = 127;\r\nTibboBasicLexer.DIRECTIVE_OR = 128;\r\nTibboBasicLexer.DIRECTIVE_LT = 129;\r\nTibboBasicLexer.DIRECTIVE_GT = 130;\r\nTibboBasicLexer.DIRECTIVE_LE = 131;\r\nTibboBasicLexer.DIRECTIVE_GE = 132;\r\nTibboBasicLexer.DIRECTIVE_ID = 133;\r\nTibboBasicLexer.DIRECTIVE_DECIMAL_LITERAL = 134;\r\nTibboBasicLexer.DIRECTIVE_FLOAT = 135;\r\nTibboBasicLexer.DIRECTIVE_NEWLINE = 136;\r\nTibboBasicLexer.DIRECTIVE_SINGLE_COMMENT = 137;\r\nTibboBasicLexer.DIRECTIVE_BACKSLASH_NEWLINE = 138;\r\nTibboBasicLexer.DIRECTIVE_TEXT_NEWLINE = 139;\r\nTibboBasicLexer.DIRECTIVE_TEXT_BACKSLASH_NEWLINE = 140;\r\nTibboBasicLexer.DIRECTIVE_TEXT_MULTI_COMMENT = 141;\r\nTibboBasicLexer.DIRECTIVE_TEXT_SINGLE_COMMENT = 142;\r\nTibboBasicLexer.DIRECTIVE_TEXT = 143;\r\nTibboBasicLexer.COMMENT2 = 144;\r\nTibboBasicLexer.WS2 = 145;\r\nTibboBasicLexer.ANY = 146;\r\n\r\nTibboBasicLexer.COMMENTS_CHANNEL = 2;\r\nTibboBasicLexer.DIRECTIVE_CHANNEL = 3;\r\n\r\nTibboBasicLexer.DIRECTIVE_MODE = 1;\r\nTibboBasicLexer.DEFINE = 2;\r\nTibboBasicLexer.DIRECTIVE_TEXT_MODE = 3;\r\nTibboBasicLexer.INLINE_MODE = 4;\r\n\r\nTibboBasicLexer.prototype.channelNames = [ \"DEFAULT_TOKEN_CHANNEL\", \"HIDDEN\", \r\n                                                                              \"COMMENTS_CHANNEL\", \r\n                                                                              \"DIRECTIVE_CHANNEL\" ];\r\n\r\nTibboBasicLexer.prototype.modeNames = [ \"DEFAULT_MODE\", \"DIRECTIVE_MODE\", \r\n                                        \"DEFINE\", \"DIRECTIVE_TEXT_MODE\", \r\n                                        \"INLINE_MODE\" ];\r\n\r\nTibboBasicLexer.prototype.literalNames = [ null, null, null, null, null, \r\n                                           null, null, null, null, null, \r\n                                           null, null, null, null, null, \r\n                                           null, null, null, null, null, \r\n                                           null, null, null, null, null, \r\n                                           null, null, null, null, null, \r\n                                           null, null, null, null, null, \r\n                                           null, null, null, null, null, \r\n                                           null, null, null, null, null, \r\n                                           null, null, null, null, null, \r\n                                           null, null, null, null, null, \r\n                                           null, null, null, null, null, \r\n                                           null, null, null, null, null, \r\n                                           null, null, null, null, null, \r\n                                           null, null, null, null, null, \r\n                                           null, null, null, null, null, \r\n                                           null, null, null, null, null, \r\n                                           null, null, null, null, null, \r\n                                           null, null, null, null, null, \r\n                                           \"'['\", \"']'\", \"'{'\", \"'}'\", null, \r\n                                           null, null, null, \"';'\" ];\r\n\r\nTibboBasicLexer.prototype.symbolicNames = [ null, \"OBJECT\", \"AND\", \"AS\", \r\n                                            \"BOOLEAN\", \"REAL\", \"BYREF\", \r\n                                            \"BYTE\", \"BYVAL\", \"CASE\", \"CASE_ELSE\", \r\n                                            \"CHAR\", \"CONST\", \"COUNTOF\", \r\n                                            \"DECLARE\", \"DIM\", \"DO\", \"DWORD\", \r\n                                            \"ELSE\", \"ELIF\", \"END\", \"ELSEIF\", \r\n                                            \"ENUM\", \"END_ENUM\", \"END_FUNCTION\", \r\n                                            \"END_IF\", \"END_PROPERTY\", \"END_SELECT\", \r\n                                            \"END_SUB\", \"END_TYPE\", \"END_WITH\", \r\n                                            \"EVENT\", \"EXIT_DO\", \"EXIT_FOR\", \r\n                                            \"EXIT_FUNCTION\", \"EXIT_PROPERTY\", \r\n                                            \"EXIT_SUB\", \"EXIT_WHILE\", \"FALSE\", \r\n                                            \"FLOAT\", \"FOR\", \"FUNCTION\", \r\n                                            \"GET\", \"GOTO\", \"IF\", \"IFDEF\", \r\n                                            \"IFNDEF\", \"INCLUDE\", \"INCLUDEPP\", \r\n                                            \"INTEGER\", \"LONG\", \"LOOP\", \"MOD\", \r\n                                            \"NEXT\", \"NOT\", \"OR\", \"PROPERTY\", \r\n                                            \"PUBLIC\", \"SELECT\", \"SET\", \"SHL\", \r\n                                            \"SHORT\", \"SHR\", \"SIZEOF\", \"STEP\", \r\n                                            \"STRING\", \"SUB\", \"THEN\", \"TO\", \r\n                                            \"TRUE\", \"TYPE\", \"UNDEF\", \"UNTIL\", \r\n                                            \"WEND\", \"WHILE\", \"WORD\", \"XOR\", \r\n                                            \"SHARP\", \"STRINGLITERAL\", \"TemplateStringLiteral\", \r\n                                            \"HEXLITERAL\", \"BINLITERAL\", \r\n                                            \"INTEGERLITERAL\", \"DIV\", \"EQ\", \r\n                                            \"GEQ\", \"GT\", \"LEQ\", \"LPAREN\", \r\n                                            \"LT\", \"MINUS\", \"MULT\", \"NEQ\", \r\n                                            \"PLUS\", \"RPAREN\", \"L_SQUARE_BRACKET\", \r\n                                            \"R_SQUARE_BRACKET\", \"L_CURLY_BRACKET\", \r\n                                            \"R_CURLY_BRACKET\", \"NEWLINE\", \r\n                                            \"COMMENT\", \"SINGLEQUOTE\", \"COLON\", \r\n                                            \"SEMICOLON\", \"COMMA\", \"DOT\", \r\n                                            \"BANG\", \"UNDERSCORE\", \"SYSCALL\", \r\n                                            \"WS\", \"IDENTIFIER\", \"DIRECTIVE_INCLUDE\", \r\n                                            \"DIRECTIVE_INCLUDEPP\", \"DIRECTIVE_DEFINE\", \r\n                                            \"DIRECTIVE_IF\", \"DIRECTIVE_ELIF\", \r\n                                            \"DIRECTIVE_ELSE\", \"DIRECTIVE_UNDEF\", \r\n                                            \"DIRECTIVE_IFDEF\", \"DIRECTIVE_IFNDEF\", \r\n                                            \"DIRECTIVE_ENDIF\", \"DIRECTIVE_ERROR\", \r\n                                            \"DIRECTIVE_BANG\", \"DIRECTIVE_LP\", \r\n                                            \"DIRECTIVE_RP\", \"DIRECTIVE_EQUAL\", \r\n                                            \"DIRECTIVE_NOTEQUAL\", \"DIRECTIVE_AND\", \r\n                                            \"DIRECTIVE_OR\", \"DIRECTIVE_LT\", \r\n                                            \"DIRECTIVE_GT\", \"DIRECTIVE_LE\", \r\n                                            \"DIRECTIVE_GE\", \"DIRECTIVE_ID\", \r\n                                            \"DIRECTIVE_DECIMAL_LITERAL\", \r\n                                            \"DIRECTIVE_FLOAT\", \"DIRECTIVE_NEWLINE\", \r\n                                            \"DIRECTIVE_SINGLE_COMMENT\", \r\n                                            \"DIRECTIVE_BACKSLASH_NEWLINE\", \r\n                                            \"DIRECTIVE_TEXT_NEWLINE\", \"DIRECTIVE_TEXT_BACKSLASH_NEWLINE\", \r\n                                            \"DIRECTIVE_TEXT_MULTI_COMMENT\", \r\n                                            \"DIRECTIVE_TEXT_SINGLE_COMMENT\", \r\n                                            \"DIRECTIVE_TEXT\", \"COMMENT2\", \r\n                                            \"WS2\", \"ANY\" ];\r\n\r\nTibboBasicLexer.prototype.ruleNames = [ \"OBJECT\", \"AND\", \"AS\", \"BOOLEAN\", \r\n                                        \"REAL\", \"BYREF\", \"BYTE\", \"BYVAL\", \r\n                                        \"CASE\", \"CASE_ELSE\", \"CHAR\", \"CONST\", \r\n                                        \"COUNTOF\", \"DECLARE\", \"DIM\", \"DO\", \r\n                                        \"DWORD\", \"ELSE\", \"ELIF\", \"END\", \r\n                                        \"ELSEIF\", \"ENUM\", \"END_ENUM\", \"END_FUNCTION\", \r\n                                        \"END_IF\", \"END_PROPERTY\", \"END_SELECT\", \r\n                                        \"END_SUB\", \"END_TYPE\", \"END_WITH\", \r\n                                        \"EVENT\", \"EXIT_DO\", \"EXIT_FOR\", \r\n                                        \"EXIT_FUNCTION\", \"EXIT_PROPERTY\", \r\n                                        \"EXIT_SUB\", \"EXIT_WHILE\", \"FALSE\", \r\n                                        \"FLOAT\", \"FOR\", \"FUNCTION\", \"GET\", \r\n                                        \"GOTO\", \"IF\", \"IFDEF\", \"IFNDEF\", \r\n                                        \"INCLUDE\", \"INCLUDEPP\", \"INTEGER\", \r\n                                        \"LONG\", \"LOOP\", \"MOD\", \"NEXT\", \"NOT\", \r\n                                        \"OR\", \"PROPERTY\", \"PUBLIC\", \"SELECT\", \r\n                                        \"SET\", \"SHL\", \"SHORT\", \"SHR\", \"SIZEOF\", \r\n                                        \"STEP\", \"STRING\", \"SUB\", \"THEN\", \r\n                                        \"TO\", \"TRUE\", \"TYPE\", \"UNDEF\", \"UNTIL\", \r\n                                        \"WEND\", \"WHILE\", \"WORD\", \"XOR\", \r\n                                        \"SHARP\", \"STRINGLITERAL\", \"TemplateStringLiteral\", \r\n                                        \"HEXLITERAL\", \"BINLITERAL\", \"INTEGERLITERAL\", \r\n                                        \"DIV\", \"EQ\", \"GEQ\", \"GT\", \"LEQ\", \r\n                                        \"LPAREN\", \"LT\", \"MINUS\", \"MULT\", \r\n                                        \"NEQ\", \"PLUS\", \"RPAREN\", \"L_SQUARE_BRACKET\", \r\n                                        \"R_SQUARE_BRACKET\", \"L_CURLY_BRACKET\", \r\n                                        \"R_CURLY_BRACKET\", \"NEWLINE\", \"COMMENT\", \r\n                                        \"SINGLEQUOTE\", \"COLON\", \"SEMICOLON\", \r\n                                        \"COMMA\", \"DOT\", \"BANG\", \"UNDERSCORE\", \r\n                                        \"SYSCALL\", \"WS\", \"IDENTIFIER\", \"LETTER\", \r\n                                        \"DIGIT\", \"LETTERORDIGIT\", \"A\", \"B\", \r\n                                        \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \r\n                                        \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \r\n                                        \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \r\n                                        \"X\", \"Y\", \"Z\", \"DIRECTIVE_INCLUDE\", \r\n                                        \"DIRECTIVE_INCLUDEPP\", \"DIRECTIVE_DEFINE\", \r\n                                        \"DIRECTIVE_IF\", \"DIRECTIVE_ELIF\", \r\n                                        \"DIRECTIVE_ELSE\", \"DIRECTIVE_UNDEF\", \r\n                                        \"DIRECTIVE_IFDEF\", \"DIRECTIVE_IFNDEF\", \r\n                                        \"DIRECTIVE_ENDIF\", \"DIRECTIVE_ERROR\", \r\n                                        \"DIRECTIVE_BANG\", \"DIRECTIVE_LP\", \r\n                                        \"DIRECTIVE_RP\", \"DIRECTIVE_EQUAL\", \r\n                                        \"DIRECTIVE_NOTEQUAL\", \"DIRECTIVE_AND\", \r\n                                        \"DIRECTIVE_OR\", \"DIRECTIVE_LT\", \r\n                                        \"DIRECTIVE_GT\", \"DIRECTIVE_LE\", \r\n                                        \"DIRECTIVE_GE\", \"DIRECTIVE_WS\", \r\n                                        \"DIRECTIVE_ID\", \"DIRECTIVE_DECIMAL_LITERAL\", \r\n                                        \"DIRECTIVE_FLOAT\", \"DIRECTIVE_NEWLINE\", \r\n                                        \"DIRECTIVE_SINGLE_COMMENT\", \"DIRECTIVE_BACKSLASH_NEWLINE\", \r\n                                        \"DIRECTIVE_DEFINE_ID\", \"DIRECTIVE_TEXT_NEWLINE\", \r\n                                        \"DIRECTIVE_BACKSLASH_ESCAPE\", \"DIRECTIVE_TEXT_BACKSLASH_NEWLINE\", \r\n                                        \"DIRECTIVE_TEXT_MULTI_COMMENT\", \r\n                                        \"DIRECTIVE_TEXT_SINGLE_COMMENT\", \r\n                                        \"DIRECTIVE_SLASH\", \"DIRECTIVE_TEXT\", \r\n                                        \"AND2\", \"ELSE2\", \"END2\", \"EXIT_DO2\", \r\n                                        \"EXIT_FOR2\", \"EXIT_FUNCTION2\", \"EXIT_SUB2\", \r\n                                        \"EXIT_WHILE2\", \"FALSE2\", \"GOTO2\", \r\n                                        \"MOD2\", \"NOT2\", \"OR2\", \"SHL2\", \"SHR2\", \r\n                                        \"SIZEOF2\", \"THEN2\", \"TRUE2\", \"XOR2\", \r\n                                        \"STRINGLITERAL2\", \"HEXLITERAL2\", \r\n                                        \"BINLITERAL2\", \"INTEGERLITERAL2\", \r\n                                        \"DIV2\", \"EQ2\", \"GEQ2\", \"GT2\", \"LEQ2\", \r\n                                        \"LPAREN2\", \"LT2\", \"MINUS2\", \"MULT2\", \r\n                                        \"NEQ2\", \"PLUS2\", \"RPAREN2\", \"NEWLINE2\", \r\n                                        \"COMMENT2\", \"SINGLEQUOTE2\", \"COLON2\", \r\n                                        \"COMMA2\", \"DOT2\", \"BANG2\", \"UNDERSCORE2\", \r\n                                        \"WS2\", \"IDENTIFIER2\", \"ANY\" ];\r\n\r\nTibboBasicLexer.prototype.grammarFileName = \"TibboBasicLexer.g4\";\r\n\r\n\r\nexports.TibboBasicLexer = TibboBasicLexer;\r\n\r\n","// Generated from /Users/jimmyhu/Projects/tibbo-basic/server/language/TibboBasic/TibboBasicParser.g4 by ANTLR 4.8\r\n// jshint ignore: start\r\nvar antlr4 = require('antlr4/index');\r\n\r\n// This class defines a complete generic visitor for a parse tree produced by TibboBasicParser.\r\n\r\nfunction TibboBasicParserVisitor() {\r\n\tantlr4.tree.ParseTreeVisitor.call(this);\r\n\treturn this;\r\n}\r\n\r\nTibboBasicParserVisitor.prototype = Object.create(antlr4.tree.ParseTreeVisitor.prototype);\r\nTibboBasicParserVisitor.prototype.constructor = TibboBasicParserVisitor;\r\n\r\n// Visit a parse tree produced by TibboBasicParser#startRule.\r\nTibboBasicParserVisitor.prototype.visitStartRule = function(ctx) {\r\n  return this.visitChildren(ctx);\r\n};\r\n\r\n\r\n// Visit a parse tree produced by TibboBasicParser#topLevelDeclaration.\r\nTibboBasicParserVisitor.prototype.visitTopLevelDeclaration = function(ctx) {\r\n  return this.visitChildren(ctx);\r\n};\r\n\r\n\r\n// Visit a parse tree produced by TibboBasicParser#includeStmt.\r\nTibboBasicParserVisitor.prototype.visitIncludeStmt = function(ctx) {\r\n  return this.visitChildren(ctx);\r\n};\r\n\r\n\r\n// Visit a parse tree produced by TibboBasicParser#includeppStmt.\r\nTibboBasicParserVisitor.prototype.visitIncludeppStmt = function(ctx) {\r\n  return this.visitChildren(ctx);\r\n};\r\n\r\n\r\n// Visit a parse tree produced by TibboBasicParser#block.\r\nTibboBasicParserVisitor.prototype.visitBlock = function(ctx) {\r\n  return this.visitChildren(ctx);\r\n};\r\n\r\n\r\n// Visit a parse tree produced by TibboBasicParser#statement.\r\nTibboBasicParserVisitor.prototype.visitStatement = function(ctx) {\r\n  return this.visitChildren(ctx);\r\n};\r\n\r\n\r\n// Visit a parse tree produced by TibboBasicParser#constStmt.\r\nTibboBasicParserVisitor.prototype.visitConstStmt = function(ctx) {\r\n  return this.visitChildren(ctx);\r\n};\r\n\r\n\r\n// Visit a parse tree produced by TibboBasicParser#constSubStmt.\r\nTibboBasicParserVisitor.prototype.visitConstSubStmt = function(ctx) {\r\n  return this.visitChildren(ctx);\r\n};\r\n\r\n\r\n// Visit a parse tree produced by TibboBasicParser#declareVariableStmt.\r\nTibboBasicParserVisitor.prototype.visitDeclareVariableStmt = function(ctx) {\r\n  return this.visitChildren(ctx);\r\n};\r\n\r\n\r\n// Visit a parse tree produced by TibboBasicParser#declareSubStmt.\r\nTibboBasicParserVisitor.prototype.visitDeclareSubStmt = function(ctx) {\r\n  return this.visitChildren(ctx);\r\n};\r\n\r\n\r\n// Visit a parse tree produced by TibboBasicParser#declareFuncStmt.\r\nTibboBasicParserVisitor.prototype.visitDeclareFuncStmt = function(ctx) {\r\n  return this.visitChildren(ctx);\r\n};\r\n\r\n\r\n// Visit a parse tree produced by TibboBasicParser#doLoopStmt.\r\nTibboBasicParserVisitor.prototype.visitDoLoopStmt = function(ctx) {\r\n  return this.visitChildren(ctx);\r\n};\r\n\r\n\r\n// Visit a parse tree produced by TibboBasicParser#enumerationStmt.\r\nTibboBasicParserVisitor.prototype.visitEnumerationStmt = function(ctx) {\r\n  return this.visitChildren(ctx);\r\n};\r\n\r\n\r\n// Visit a parse tree produced by TibboBasicParser#enumerationStmt_Constant.\r\nTibboBasicParserVisitor.prototype.visitEnumerationStmt_Constant = function(ctx) {\r\n  return this.visitChildren(ctx);\r\n};\r\n\r\n\r\n// Visit a parse tree produced by TibboBasicParser#exitStmt.\r\nTibboBasicParserVisitor.prototype.visitExitStmt = function(ctx) {\r\n  return this.visitChildren(ctx);\r\n};\r\n\r\n\r\n// Visit a parse tree produced by TibboBasicParser#forNextStmt.\r\nTibboBasicParserVisitor.prototype.visitForNextStmt = function(ctx) {\r\n  return this.visitChildren(ctx);\r\n};\r\n\r\n\r\n// Visit a parse tree produced by TibboBasicParser#functionStmt.\r\nTibboBasicParserVisitor.prototype.visitFunctionStmt = function(ctx) {\r\n  return this.visitChildren(ctx);\r\n};\r\n\r\n\r\n// Visit a parse tree produced by TibboBasicParser#jumpStmt.\r\nTibboBasicParserVisitor.prototype.visitJumpStmt = function(ctx) {\r\n  return this.visitChildren(ctx);\r\n};\r\n\r\n\r\n// Visit a parse tree produced by TibboBasicParser#goToStmt.\r\nTibboBasicParserVisitor.prototype.visitGoToStmt = function(ctx) {\r\n  return this.visitChildren(ctx);\r\n};\r\n\r\n\r\n// Visit a parse tree produced by TibboBasicParser#inlineIfThenElse.\r\nTibboBasicParserVisitor.prototype.visitInlineIfThenElse = function(ctx) {\r\n  return this.visitChildren(ctx);\r\n};\r\n\r\n\r\n// Visit a parse tree produced by TibboBasicParser#blockIfThenElse.\r\nTibboBasicParserVisitor.prototype.visitBlockIfThenElse = function(ctx) {\r\n  return this.visitChildren(ctx);\r\n};\r\n\r\n\r\n// Visit a parse tree produced by TibboBasicParser#ifConditionStmt.\r\nTibboBasicParserVisitor.prototype.visitIfConditionStmt = function(ctx) {\r\n  return this.visitChildren(ctx);\r\n};\r\n\r\n\r\n// Visit a parse tree produced by TibboBasicParser#propertyDefineStmt.\r\nTibboBasicParserVisitor.prototype.visitPropertyDefineStmt = function(ctx) {\r\n  return this.visitChildren(ctx);\r\n};\r\n\r\n\r\n// Visit a parse tree produced by TibboBasicParser#propertyDefineStmt_InStmt.\r\nTibboBasicParserVisitor.prototype.visitPropertyDefineStmt_InStmt = function(ctx) {\r\n  return this.visitChildren(ctx);\r\n};\r\n\r\n\r\n// Visit a parse tree produced by TibboBasicParser#propertyGetStmt.\r\nTibboBasicParserVisitor.prototype.visitPropertyGetStmt = function(ctx) {\r\n  return this.visitChildren(ctx);\r\n};\r\n\r\n\r\n// Visit a parse tree produced by TibboBasicParser#propertySetStmt.\r\nTibboBasicParserVisitor.prototype.visitPropertySetStmt = function(ctx) {\r\n  return this.visitChildren(ctx);\r\n};\r\n\r\n\r\n// Visit a parse tree produced by TibboBasicParser#eventDeclaration.\r\nTibboBasicParserVisitor.prototype.visitEventDeclaration = function(ctx) {\r\n  return this.visitChildren(ctx);\r\n};\r\n\r\n\r\n// Visit a parse tree produced by TibboBasicParser#syscallDeclaration.\r\nTibboBasicParserVisitor.prototype.visitSyscallDeclaration = function(ctx) {\r\n  return this.visitChildren(ctx);\r\n};\r\n\r\n\r\n// Visit a parse tree produced by TibboBasicParser#syscallDeclarationInner.\r\nTibboBasicParserVisitor.prototype.visitSyscallDeclarationInner = function(ctx) {\r\n  return this.visitChildren(ctx);\r\n};\r\n\r\n\r\n// Visit a parse tree produced by TibboBasicParser#syscallInternalDeclarationInner.\r\nTibboBasicParserVisitor.prototype.visitSyscallInternalDeclarationInner = function(ctx) {\r\n  return this.visitChildren(ctx);\r\n};\r\n\r\n\r\n// Visit a parse tree produced by TibboBasicParser#syscallInternalParamList.\r\nTibboBasicParserVisitor.prototype.visitSyscallInternalParamList = function(ctx) {\r\n  return this.visitChildren(ctx);\r\n};\r\n\r\n\r\n// Visit a parse tree produced by TibboBasicParser#paramInternal.\r\nTibboBasicParserVisitor.prototype.visitParamInternal = function(ctx) {\r\n  return this.visitChildren(ctx);\r\n};\r\n\r\n\r\n// Visit a parse tree produced by TibboBasicParser#selectCaseStmt.\r\nTibboBasicParserVisitor.prototype.visitSelectCaseStmt = function(ctx) {\r\n  return this.visitChildren(ctx);\r\n};\r\n\r\n\r\n// Visit a parse tree produced by TibboBasicParser#sC_Case.\r\nTibboBasicParserVisitor.prototype.visitSC_Case = function(ctx) {\r\n  return this.visitChildren(ctx);\r\n};\r\n\r\n\r\n// Visit a parse tree produced by TibboBasicParser#sC_Default.\r\nTibboBasicParserVisitor.prototype.visitSC_Default = function(ctx) {\r\n  return this.visitChildren(ctx);\r\n};\r\n\r\n\r\n// Visit a parse tree produced by TibboBasicParser#sC_Cond.\r\nTibboBasicParserVisitor.prototype.visitSC_Cond = function(ctx) {\r\n  return this.visitChildren(ctx);\r\n};\r\n\r\n\r\n// Visit a parse tree produced by TibboBasicParser#subStmt.\r\nTibboBasicParserVisitor.prototype.visitSubStmt = function(ctx) {\r\n  return this.visitChildren(ctx);\r\n};\r\n\r\n\r\n// Visit a parse tree produced by TibboBasicParser#typeStmt.\r\nTibboBasicParserVisitor.prototype.visitTypeStmt = function(ctx) {\r\n  return this.visitChildren(ctx);\r\n};\r\n\r\n\r\n// Visit a parse tree produced by TibboBasicParser#typeStmtElement.\r\nTibboBasicParserVisitor.prototype.visitTypeStmtElement = function(ctx) {\r\n  return this.visitChildren(ctx);\r\n};\r\n\r\n\r\n// Visit a parse tree produced by TibboBasicParser#expression.\r\nTibboBasicParserVisitor.prototype.visitExpression = function(ctx) {\r\n  return this.visitChildren(ctx);\r\n};\r\n\r\n\r\n// Visit a parse tree produced by TibboBasicParser#unaryExpression.\r\nTibboBasicParserVisitor.prototype.visitUnaryExpression = function(ctx) {\r\n  return this.visitChildren(ctx);\r\n};\r\n\r\n\r\n// Visit a parse tree produced by TibboBasicParser#unaryOperator.\r\nTibboBasicParserVisitor.prototype.visitUnaryOperator = function(ctx) {\r\n  return this.visitChildren(ctx);\r\n};\r\n\r\n\r\n// Visit a parse tree produced by TibboBasicParser#postfixExpression.\r\nTibboBasicParserVisitor.prototype.visitPostfixExpression = function(ctx) {\r\n  return this.visitChildren(ctx);\r\n};\r\n\r\n\r\n// Visit a parse tree produced by TibboBasicParser#postfix.\r\nTibboBasicParserVisitor.prototype.visitPostfix = function(ctx) {\r\n  return this.visitChildren(ctx);\r\n};\r\n\r\n\r\n// Visit a parse tree produced by TibboBasicParser#primaryExpression.\r\nTibboBasicParserVisitor.prototype.visitPrimaryExpression = function(ctx) {\r\n  return this.visitChildren(ctx);\r\n};\r\n\r\n\r\n// Visit a parse tree produced by TibboBasicParser#variableStmt.\r\nTibboBasicParserVisitor.prototype.visitVariableStmt = function(ctx) {\r\n  return this.visitChildren(ctx);\r\n};\r\n\r\n\r\n// Visit a parse tree produced by TibboBasicParser#variableListStmt.\r\nTibboBasicParserVisitor.prototype.visitVariableListStmt = function(ctx) {\r\n  return this.visitChildren(ctx);\r\n};\r\n\r\n\r\n// Visit a parse tree produced by TibboBasicParser#variableListItem.\r\nTibboBasicParserVisitor.prototype.visitVariableListItem = function(ctx) {\r\n  return this.visitChildren(ctx);\r\n};\r\n\r\n\r\n// Visit a parse tree produced by TibboBasicParser#whileWendStmt.\r\nTibboBasicParserVisitor.prototype.visitWhileWendStmt = function(ctx) {\r\n  return this.visitChildren(ctx);\r\n};\r\n\r\n\r\n// Visit a parse tree produced by TibboBasicParser#objectDeclaration.\r\nTibboBasicParserVisitor.prototype.visitObjectDeclaration = function(ctx) {\r\n  return this.visitChildren(ctx);\r\n};\r\n\r\n\r\n// Visit a parse tree produced by TibboBasicParser#argList.\r\nTibboBasicParserVisitor.prototype.visitArgList = function(ctx) {\r\n  return this.visitChildren(ctx);\r\n};\r\n\r\n\r\n// Visit a parse tree produced by TibboBasicParser#arg.\r\nTibboBasicParserVisitor.prototype.visitArg = function(ctx) {\r\n  return this.visitChildren(ctx);\r\n};\r\n\r\n\r\n// Visit a parse tree produced by TibboBasicParser#paramList.\r\nTibboBasicParserVisitor.prototype.visitParamList = function(ctx) {\r\n  return this.visitChildren(ctx);\r\n};\r\n\r\n\r\n// Visit a parse tree produced by TibboBasicParser#param.\r\nTibboBasicParserVisitor.prototype.visitParam = function(ctx) {\r\n  return this.visitChildren(ctx);\r\n};\r\n\r\n\r\n// Visit a parse tree produced by TibboBasicParser#asTypeClause.\r\nTibboBasicParserVisitor.prototype.visitAsTypeClause = function(ctx) {\r\n  return this.visitChildren(ctx);\r\n};\r\n\r\n\r\n// Visit a parse tree produced by TibboBasicParser#baseType.\r\nTibboBasicParserVisitor.prototype.visitBaseType = function(ctx) {\r\n  return this.visitChildren(ctx);\r\n};\r\n\r\n\r\n// Visit a parse tree produced by TibboBasicParser#complexType.\r\nTibboBasicParserVisitor.prototype.visitComplexType = function(ctx) {\r\n  return this.visitChildren(ctx);\r\n};\r\n\r\n\r\n// Visit a parse tree produced by TibboBasicParser#fieldLength.\r\nTibboBasicParserVisitor.prototype.visitFieldLength = function(ctx) {\r\n  return this.visitChildren(ctx);\r\n};\r\n\r\n\r\n// Visit a parse tree produced by TibboBasicParser#lineLabel.\r\nTibboBasicParserVisitor.prototype.visitLineLabel = function(ctx) {\r\n  return this.visitChildren(ctx);\r\n};\r\n\r\n\r\n// Visit a parse tree produced by TibboBasicParser#literal.\r\nTibboBasicParserVisitor.prototype.visitLiteral = function(ctx) {\r\n  return this.visitChildren(ctx);\r\n};\r\n\r\n\r\n// Visit a parse tree produced by TibboBasicParser#arrayLiteral.\r\nTibboBasicParserVisitor.prototype.visitArrayLiteral = function(ctx) {\r\n  return this.visitChildren(ctx);\r\n};\r\n\r\n\r\n// Visit a parse tree produced by TibboBasicParser#type.\r\nTibboBasicParserVisitor.prototype.visitType = function(ctx) {\r\n  return this.visitChildren(ctx);\r\n};\r\n\r\n\r\n// Visit a parse tree produced by TibboBasicParser#visibility.\r\nTibboBasicParserVisitor.prototype.visitVisibility = function(ctx) {\r\n  return this.visitChildren(ctx);\r\n};\r\n\r\n\r\n\r\nexports.TibboBasicParserVisitor = TibboBasicParserVisitor;","import { CommonToken } from \"antlr4/Token\";\r\n\r\nexport interface TBDefine {\r\n    name: string,\r\n    value: string,\r\n    line: number\r\n}\r\n\r\nexport interface TBVariable {\r\n    name: string,\r\n    value: string,\r\n    dataType: string,\r\n    length: string,\r\n    location: TBRange,\r\n    declaration?: TBRange,\r\n    comments: Array<CommonToken>,\r\n    parentScope?: TBScope,\r\n    references: Array<TBRange>\r\n}\r\n\r\nexport interface TBParameter {\r\n    name: string,\r\n    byref: boolean,\r\n    dataType: string\r\n}\r\n\r\nexport interface TBObject {\r\n    name: string,\r\n    properties: Array<TBObjectProperty>,\r\n    functions: Array<TBObjectFunction>,\r\n    location: TBRange,\r\n    comments: Array<CommonToken>,\r\n    events: Array<TBEvent>\r\n}\r\n\r\nexport interface TBObjectFunction {\r\n    name: string,\r\n    syscall?: TBSyscall,\r\n    parameters: Array<TBParameter>,\r\n    dataType: string,\r\n    location: TBRange,\r\n    comments: Array<CommonToken>,\r\n}\r\n\r\nexport interface TBObjectProperty {\r\n    name: string,\r\n    dataType: string,\r\n    get?: TBSyscall,\r\n    set?: TBSyscall,\r\n    location: TBRange,\r\n    comments: Array<CommonToken>,\r\n}\r\n\r\nexport enum TBSymbolType {\r\n    ENUM = 'enum',\r\n    ENUM_MEMBER = 'enum_member',\r\n    TYPE = 'type',\r\n    TYPE_MEMBER = 'type_member',\r\n    FUNCTION = 'function',\r\n    SUB = 'sub',\r\n    DIM = 'dim',\r\n    CONST = 'const',\r\n    OBJECT = 'object',\r\n    OBJECT_PROPERTY = 'object_property',\r\n    SYSCALL = 'syscall',\r\n    DEFINE = 'define'\r\n\r\n}\r\n\r\nexport interface TBRange {\r\n    startToken: CommonToken,\r\n    stopToken: CommonToken\r\n}\r\n\r\nexport interface TBEvent {\r\n    name: string,\r\n    eventNumber: number,\r\n    parameters: Array<TBParameter>,\r\n    location: TBRange,\r\n    comments: Array<CommonToken>,\r\n}\r\n\r\nexport interface TBSyscall {\r\n    name: string,\r\n    syscallNumber?: number,\r\n    tdl?: string,\r\n    parameters: Array<TBParameter>,\r\n    dataType: string,\r\n    location: TBRange,\r\n    comments: Array<CommonToken>,\r\n}\r\n\r\nexport interface TBSyntaxError {\r\n\tsymbol: CommonToken,\r\n\tline: number,\r\n\tcolumn: number,\r\n\tmessage: string\r\n}\r\n\r\nexport interface TBEnum {\r\n    name: string,\r\n    members: Array<TBEnumEntry>,\r\n    location: TBRange,\r\n    comments: Array<CommonToken>\r\n}\r\n\r\nexport interface TBFunction {\r\n    name: string,\r\n    parameters: Array<TBParameter>,\r\n    dataType?: string,\r\n    location?: TBRange,\r\n    declaration?: TBRange,\r\n    comments: Array<CommonToken>,\r\n    references: Array<TBRange>\r\n}\r\n\r\nexport interface TBConst {\r\n    name: string,\r\n    value: string,\r\n    location: TBRange,\r\n    comments: Array<CommonToken>\r\n}\r\n\r\nexport interface TBSymbol {\r\n    location: TBRange\r\n}\r\n\r\nexport interface TBScope {\r\n    file: string,\r\n    start: CommonToken,\r\n    end: CommonToken,\r\n    parentScope?: TBScope\r\n}\r\n\r\nexport interface TBType {\r\n    name: string,\r\n    members: Array<TBVariable>,\r\n    location: TBRange,\r\n    comments: Array<CommonToken>,\r\n}\r\n\r\nexport interface TBEnumEntry {\r\n    name: string,\r\n    value: string,\r\n    location: TBRange,\r\n    comments: Array<CommonToken>\r\n}","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nvar FullTextDocument = /** @class */ (function () {\n    function FullTextDocument(uri, languageId, version, content) {\n        this._uri = uri;\n        this._languageId = languageId;\n        this._version = version;\n        this._content = content;\n        this._lineOffsets = undefined;\n    }\n    Object.defineProperty(FullTextDocument.prototype, \"uri\", {\n        get: function () {\n            return this._uri;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FullTextDocument.prototype, \"languageId\", {\n        get: function () {\n            return this._languageId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FullTextDocument.prototype, \"version\", {\n        get: function () {\n            return this._version;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FullTextDocument.prototype.getText = function (range) {\n        if (range) {\n            var start = this.offsetAt(range.start);\n            var end = this.offsetAt(range.end);\n            return this._content.substring(start, end);\n        }\n        return this._content;\n    };\n    FullTextDocument.prototype.update = function (changes, version) {\n        for (var _i = 0, changes_1 = changes; _i < changes_1.length; _i++) {\n            var change = changes_1[_i];\n            if (FullTextDocument.isIncremental(change)) {\n                // makes sure start is before end\n                var range = getWellformedRange(change.range);\n                // update content\n                var startOffset = this.offsetAt(range.start);\n                var endOffset = this.offsetAt(range.end);\n                this._content = this._content.substring(0, startOffset) + change.text + this._content.substring(endOffset, this._content.length);\n                // update the offsets\n                var startLine = Math.max(range.start.line, 0);\n                var endLine = Math.max(range.end.line, 0);\n                var lineOffsets = this._lineOffsets;\n                var addedLineOffsets = computeLineOffsets(change.text, false, startOffset);\n                if (endLine - startLine === addedLineOffsets.length) {\n                    for (var i = 0, len = addedLineOffsets.length; i < len; i++) {\n                        lineOffsets[i + startLine + 1] = addedLineOffsets[i];\n                    }\n                }\n                else {\n                    if (addedLineOffsets.length < 10000) {\n                        lineOffsets.splice.apply(lineOffsets, [startLine + 1, endLine - startLine].concat(addedLineOffsets));\n                    }\n                    else { // avoid too many arguments for splice\n                        this._lineOffsets = lineOffsets = lineOffsets.slice(0, startLine + 1).concat(addedLineOffsets, lineOffsets.slice(endLine + 1));\n                    }\n                }\n                var diff = change.text.length - (endOffset - startOffset);\n                if (diff !== 0) {\n                    for (var i = startLine + 1 + addedLineOffsets.length, len = lineOffsets.length; i < len; i++) {\n                        lineOffsets[i] = lineOffsets[i] + diff;\n                    }\n                }\n            }\n            else if (FullTextDocument.isFull(change)) {\n                this._content = change.text;\n                this._lineOffsets = undefined;\n            }\n            else {\n                throw new Error('Unknown change event received');\n            }\n        }\n        this._version = version;\n    };\n    FullTextDocument.prototype.getLineOffsets = function () {\n        if (this._lineOffsets === undefined) {\n            this._lineOffsets = computeLineOffsets(this._content, true);\n        }\n        return this._lineOffsets;\n    };\n    FullTextDocument.prototype.positionAt = function (offset) {\n        offset = Math.max(Math.min(offset, this._content.length), 0);\n        var lineOffsets = this.getLineOffsets();\n        var low = 0, high = lineOffsets.length;\n        if (high === 0) {\n            return { line: 0, character: offset };\n        }\n        while (low < high) {\n            var mid = Math.floor((low + high) / 2);\n            if (lineOffsets[mid] > offset) {\n                high = mid;\n            }\n            else {\n                low = mid + 1;\n            }\n        }\n        // low is the least x for which the line offset is larger than the current offset\n        // or array.length if no line offset is larger than the current offset\n        var line = low - 1;\n        return { line: line, character: offset - lineOffsets[line] };\n    };\n    FullTextDocument.prototype.offsetAt = function (position) {\n        var lineOffsets = this.getLineOffsets();\n        if (position.line >= lineOffsets.length) {\n            return this._content.length;\n        }\n        else if (position.line < 0) {\n            return 0;\n        }\n        var lineOffset = lineOffsets[position.line];\n        var nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\n    };\n    Object.defineProperty(FullTextDocument.prototype, \"lineCount\", {\n        get: function () {\n            return this.getLineOffsets().length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FullTextDocument.isIncremental = function (event) {\n        var candidate = event;\n        return candidate !== undefined && candidate !== null &&\n            typeof candidate.text === 'string' && candidate.range !== undefined &&\n            (candidate.rangeLength === undefined || typeof candidate.rangeLength === 'number');\n    };\n    FullTextDocument.isFull = function (event) {\n        var candidate = event;\n        return candidate !== undefined && candidate !== null &&\n            typeof candidate.text === 'string' && candidate.range === undefined && candidate.rangeLength === undefined;\n    };\n    return FullTextDocument;\n}());\nexport var TextDocument;\n(function (TextDocument) {\n    /**\n     * Creates a new text document.\n     *\n     * @param uri The document's uri.\n     * @param languageId  The document's language Id.\n     * @param version The document's initial version number.\n     * @param content The document's content.\n     */\n    function create(uri, languageId, version, content) {\n        return new FullTextDocument(uri, languageId, version, content);\n    }\n    TextDocument.create = create;\n    /**\n     * Updates a TextDocument by modifing its content.\n     *\n     * @param document the document to update. Only documents created by TextDocument.create are valid inputs.\n     * @param changes the changes to apply to the document.\n     * @returns The updated TextDocument. Note: That's the same document instance passed in as first parameter.\n     *\n     */\n    function update(document, changes, version) {\n        if (document instanceof FullTextDocument) {\n            document.update(changes, version);\n            return document;\n        }\n        else {\n            throw new Error('TextDocument.update: document must be created by TextDocument.create');\n        }\n    }\n    TextDocument.update = update;\n    function applyEdits(document, edits) {\n        var text = document.getText();\n        var sortedEdits = mergeSort(edits.map(getWellformedEdit), function (a, b) {\n            var diff = a.range.start.line - b.range.start.line;\n            if (diff === 0) {\n                return a.range.start.character - b.range.start.character;\n            }\n            return diff;\n        });\n        var lastModifiedOffset = 0;\n        var spans = [];\n        for (var _i = 0, sortedEdits_1 = sortedEdits; _i < sortedEdits_1.length; _i++) {\n            var e = sortedEdits_1[_i];\n            var startOffset = document.offsetAt(e.range.start);\n            if (startOffset < lastModifiedOffset) {\n                throw new Error('Overlapping edit');\n            }\n            else if (startOffset > lastModifiedOffset) {\n                spans.push(text.substring(lastModifiedOffset, startOffset));\n            }\n            if (e.newText.length) {\n                spans.push(e.newText);\n            }\n            lastModifiedOffset = document.offsetAt(e.range.end);\n        }\n        spans.push(text.substr(lastModifiedOffset));\n        return spans.join('');\n    }\n    TextDocument.applyEdits = applyEdits;\n})(TextDocument || (TextDocument = {}));\nfunction mergeSort(data, compare) {\n    if (data.length <= 1) {\n        // sorted\n        return data;\n    }\n    var p = (data.length / 2) | 0;\n    var left = data.slice(0, p);\n    var right = data.slice(p);\n    mergeSort(left, compare);\n    mergeSort(right, compare);\n    var leftIdx = 0;\n    var rightIdx = 0;\n    var i = 0;\n    while (leftIdx < left.length && rightIdx < right.length) {\n        var ret = compare(left[leftIdx], right[rightIdx]);\n        if (ret <= 0) {\n            // smaller_equal -> take left to preserve order\n            data[i++] = left[leftIdx++];\n        }\n        else {\n            // greater -> take right\n            data[i++] = right[rightIdx++];\n        }\n    }\n    while (leftIdx < left.length) {\n        data[i++] = left[leftIdx++];\n    }\n    while (rightIdx < right.length) {\n        data[i++] = right[rightIdx++];\n    }\n    return data;\n}\nfunction computeLineOffsets(text, isAtLineStart, textOffset) {\n    if (textOffset === void 0) { textOffset = 0; }\n    var result = isAtLineStart ? [textOffset] : [];\n    for (var i = 0; i < text.length; i++) {\n        var ch = text.charCodeAt(i);\n        if (ch === 13 /* CarriageReturn */ || ch === 10 /* LineFeed */) {\n            if (ch === 13 /* CarriageReturn */ && i + 1 < text.length && text.charCodeAt(i + 1) === 10 /* LineFeed */) {\n                i++;\n            }\n            result.push(textOffset + i + 1);\n        }\n    }\n    return result;\n}\nfunction getWellformedRange(range) {\n    var start = range.start;\n    var end = range.end;\n    if (start.line > end.line || (start.line === end.line && start.character > end.character)) {\n        return { start: end, end: start };\n    }\n    return range;\n}\nfunction getWellformedEdit(textEdit) {\n    var range = getWellformedRange(textEdit.range);\n    if (range !== textEdit.range) {\n        return { newText: textEdit.newText, range: range };\n    }\n    return textEdit;\n}\n","var html2markdown = require('./html2markdown');\r\nvar htmlParser = require('./markdown_html_parser');\r\n\r\nmodule.exports = function(html, opts) {\r\n  opts = opts || {};\r\n  opts.parser = htmlParser;\r\n  return html2markdown(html, opts);\r\n};","/**\r\n * html2markdown - An HTML to Markdown converter.\r\n *\r\n * This implementation uses HTML or DOM parsing for conversion. Parsing code was\r\n * abstracted out in a parsing function which should be easy to remove in favor\r\n * of other parsing libraries.\r\n *\r\n * Converted MarkDown was tested with ShowDown library for HTML rendering. And\r\n * it tries to create MarkDown that does not confuse ShowDown when certain\r\n * combination of HTML tags come together.\r\n *\r\n * @author Himanshu Gilani\r\n * @author Kates Gasis (original author)\r\n *\r\n */\r\n\r\n/**\r\n * html2markdown\r\n * @param html - html string to convert\r\n * @return converted markdown text\r\n */\r\n\r\n/*\r\n Universal JavaScript Module, supports AMD (RequireJS), Node.js, and the browser.\r\n https://gist.github.com/kirel/1268753\r\n*/\r\n\r\n(function (name, definition) {\r\n\tif (typeof define === 'function') { // AMD\r\n\t\tdefine(definition);\r\n\t} else if (typeof module !== 'undefined' && module.exports) { // Node.js\r\n\t\tmodule.exports = definition();\r\n\t} else { // Browser\r\n\t\tvar theModule = definition(), global = this, old = global[name];\r\n\t\ttheModule.noConflict = function () {\r\n\t\t\tglobal[name] = old;\r\n\t\t\treturn theModule;\r\n\t\t};\r\n\t\tglobal[name] = theModule;\r\n\t}\r\n})('html2markdown', function() {\r\n\r\nfunction trim(value) {\r\n\treturn value.replace(/^\\s+|\\s+$/g,\"\");\r\n}\r\n\r\nfunction endsWith(value, suffix) {\r\n\treturn value.match(suffix+\"$\") == suffix;\r\n}\r\n\r\nfunction startsWith(value, str) {\r\n\treturn value.indexOf(str) == 0;\r\n}\r\n\r\nfunction html2markdown(html, opts) {\r\n\topts = opts || {};\r\n\r\n\tvar nodeList = [];\r\n\tvar listTagStack = [];\r\n\tvar linkAttrStack = [];\r\n\tvar blockquoteStack = [];\r\n\tvar preStack = [];\r\n\tvar codeStack = [];\r\n\tvar links = [];\r\n\tvar inlineStyle = opts['inlineStyle'] || false;\r\n\tvar parser = opts['parser'];\r\n\tvar markdownTags = {\r\n\t\t\"hr\": \"- - -\\n\\n\",\r\n\t\t\"br\": \"  \\n\",\r\n\t\t\"title\": \"# \",\r\n\t\t\"h1\": \"# \",\r\n\t\t\"h2\": \"## \",\r\n\t\t\"h3\": \"### \",\r\n\t\t\"h4\": \"#### \",\r\n\t\t\"h5\": \"##### \",\r\n\t\t\"h6\": \"###### \",\r\n\t\t\"b\": \"**\",\r\n\t\t\"strong\": \"**\",\r\n\t\t\"i\": \"_\",\r\n\t\t\"em\": \"_\",\r\n\t\t\"dfn\": \"_\",\r\n\t\t\"var\": \"_\",\r\n\t\t\"cite\": \"_\",\r\n\t\t\"span\": \" \",\r\n\t\t\"ul\": \"* \",\r\n\t\t\"ol\": \"1. \",\r\n\t\t\"dl\": \"- \",\r\n\t\t\"blockquote\": \"> \"\r\n\t};\r\n\r\n\tif (!parser && typeof markdownDOMParser !== 'undefined') {\r\n\t\tparser = markdownDOMParser;\r\n\t}\r\n\r\n\tfunction getListMarkdownTag() {\r\n\t\tvar listItem = \"\";\r\n\t\tif (listTagStack) {\r\n\t\t\tfor (var i = 0; i < listTagStack.length - 1; i++) {\r\n\t\t\t\tlistItem += \"  \";\r\n\t\t\t}\r\n\t\t}\r\n\t\tlistItem += peek(listTagStack);\r\n\t\treturn listItem;\r\n\t}\r\n\r\n\tfunction convertAttrs(attrs) {\r\n\t\tvar attributes = {};\r\n\t\tfor (var k in attrs) {\r\n\t\t\tvar attr = attrs[k];\r\n\t\t\tattributes[attr.name] = attr;\r\n\t\t}\r\n\t\treturn attributes;\r\n\t}\r\n\r\n\tfunction peek(list) {\r\n\t\tif (list && list.length > 0) {\r\n\t\t\treturn list.slice(-1)[0];\r\n\t\t}\r\n\t\treturn \"\";\r\n\t}\r\n\r\n\tfunction peekTillNotEmpty(list) {\r\n\t\tif (!list) {\r\n\t\t\treturn \"\";\r\n\t\t}\r\n\r\n\t\tfor (var i = list.length - 1; i >= 0; i--){\r\n\t\t\tif (list[i] != \"\") {\r\n\t\t\t\treturn list[i];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn \"\";\r\n\t}\r\n\r\n\tfunction removeIfEmptyTag(start) {\r\n\t\tvar cleaned = false;\r\n\t\tif (start == peekTillNotEmpty(nodeList)) {\r\n\t\t\twhile (peek(nodeList) != start) {\r\n\t\t\t\tnodeList.pop();\r\n\t\t\t}\r\n\t\t\tnodeList.pop();\r\n\t\t\tcleaned = true;\r\n\t\t}\r\n\t\treturn cleaned;\r\n\t}\r\n\r\n\tfunction sliceText(start) {\r\n\t\tvar text = [];\r\n\t\twhile (nodeList.length > 0 && peek(nodeList) != start) {\r\n\t\t\tvar t = nodeList.pop();\r\n\t\t\ttext.unshift(t);\r\n\t\t}\r\n\t\treturn text.join(\"\");\r\n\t}\r\n\r\n\tfunction block(isEndBlock) {\r\n\t\tvar lastItem = nodeList.pop();\r\n\t\tif (!lastItem) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (!isEndBlock) {\r\n\t\t\tvar block;\r\n\t\t\tif (/\\s*\\n\\n\\s*$/.test(lastItem)) {\r\n\t\t\t\tlastItem = lastItem.replace(/\\s*\\n\\n\\s*$/, \"\\n\\n\");\r\n\t\t\t\tblock = \"\";\r\n\t\t\t} else if (/\\s*\\n\\s*$/.test(lastItem)) {\r\n\t\t\t\tlastItem = lastItem.replace(/\\s*\\n\\s*$/, \"\\n\");\r\n\t\t\t\tblock = \"\\n\";\r\n\t\t\t} else if (/\\s+$/.test(lastItem)) {\r\n\t\t\t\tblock = \"\\n\\n\";\r\n\t\t\t} else {\r\n\t\t\t\tblock = \"\\n\\n\";\r\n\t\t\t}\r\n\r\n\t\t\tnodeList.push(lastItem);\r\n\t\t\tnodeList.push(block);\r\n\t\t} else {\r\n\t\t\tnodeList.push(lastItem);\r\n\t\t\tif (!endsWith(lastItem, \"\\n\")) {\r\n\t\t\t\tnodeList.push(\"\\n\\n\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction listBlock() {\r\n\t\tif (nodeList.length > 0) {\r\n\t\t\tvar li = peek(nodeList);\r\n\r\n\t\t\tif (!endsWith(li, \"\\n\")) {\r\n\t\t\t\tnodeList.push(\"\\n\");\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tnodeList.push(\"\\n\");\r\n\t\t}\r\n\t}\r\n\r\n\tparser(html, {\r\n\t\tstart: function(tag, attrs, unary) {\r\n\t\t\ttag = tag.toLowerCase();\r\n\r\n\t\t\tif (unary && (tag != \"br\" && tag != \"hr\" && tag != \"img\")) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tswitch (tag) {\r\n\t\t\tcase \"br\":\r\n\t\t\t\tnodeList.push(markdownTags[tag]);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"hr\":\r\n\t\t\t\tblock();\r\n\t\t\t\tnodeList.push(markdownTags[tag]);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"title\":\r\n\t\t\tcase \"h1\":\r\n\t\t\tcase \"h2\":\r\n\t\t\tcase \"h3\":\r\n\t\t\tcase \"h4\":\r\n\t\t\tcase \"h5\":\r\n\t\t\tcase \"h6\":\r\n\t\t\t\tblock();\r\n\t\t\t\tnodeList.push(markdownTags[tag]);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"b\":\r\n\t\t\tcase \"strong\":\r\n\t\t\tcase \"i\":\r\n\t\t\tcase \"em\":\r\n\t\t\tcase \"dfn\":\r\n\t\t\tcase \"var\":\r\n\t\t\tcase \"cite\":\r\n\t\t\t\tnodeList.push(markdownTags[tag]);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"code\":\r\n\t\t\tcase \"span\":\r\n\t\t\t\tif (preStack.length > 0) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t} else if (!/\\s+$/.test(peek(nodeList))) {\r\n\t\t\t\t\tnodeList.push(markdownTags[tag]);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"p\":\r\n\t\t\tcase \"div\":\r\n\t\t\tcase \"table\":\r\n\t\t\tcase \"tbody\":\r\n\t\t\tcase \"tr\":\r\n\t\t\tcase \"td\":\r\n\t\t\t\tblock();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"ul\":\r\n\t\t\tcase \"ol\":\r\n\t\t\tcase \"dl\":\r\n\t\t\t\tlistTagStack.push(markdownTags[tag]);\r\n\t\t\t\t// lists are block elements\r\n\t\t\t\tif (listTagStack.length > 1) {\r\n\t\t\t\t\tlistBlock();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tblock();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"li\":\r\n\t\t\tcase \"dt\":\r\n\t\t\t\tvar li = getListMarkdownTag();\r\n\t\t\t\tnodeList.push(li);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"a\":\r\n\t\t\t\tvar attribs = convertAttrs(attrs);\r\n\t\t\t\tlinkAttrStack.push(attribs);\r\n\t\t\t\tnodeList.push(\"[\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"img\":\r\n\t\t\t\tvar attribs = convertAttrs(attrs);\r\n\t\t\t\tvar alt, title, url;\r\n\r\n\t\t\t\tattribs[\"src\"] ? url = attribs[\"src\"].value : url = \"\";\r\n\t\t\t\tif (!url) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tattribs['alt'] ? alt = trim(attribs['alt'].value) : alt = \"\";\r\n\t\t\t\tattribs['title'] ? title = trim(attribs['title'].value) : title = \"\";\r\n\r\n\t\t\t\t// if parent of image tag is nested in anchor tag use inline style\r\n\t\t\t\tif (!inlineStyle && !startsWith(peekTillNotEmpty(nodeList), \"[\")) {\r\n\t\t\t\t\tvar l = links.indexOf(url);\r\n\t\t\t\t\tif (l == -1) {\r\n\t\t\t\t\t\tlinks.push(url);\r\n\t\t\t\t\t\tl=links.length-1;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tblock();\r\n\t\t\t\t\tnodeList.push(\"![\");\r\n\t\t\t\t\tif (alt!= \"\") {\r\n\t\t\t\t\t\tnodeList.push(alt);\r\n\t\t\t\t\t} else if (title != null) {\r\n\t\t\t\t\t\tnodeList.push(title);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnodeList.push(\"][\" + l + \"]\");\r\n\t\t\t\t\tblock();\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//if image is not a link image then treat images as block elements\r\n\t\t\t\t\tif (!startsWith(peekTillNotEmpty(nodeList), \"[\")) {\r\n\t\t\t\t\t\tblock();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnodeList.push(\"![\" + alt + \"](\" + url + (title ? \" \\\"\" + title + \"\\\"\" : \"\") + \")\");\r\n\r\n\t\t\t\t\tif (!startsWith(peekTillNotEmpty(nodeList), \"[\")) {\r\n\t\t\t\t\t\tblock(true);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"blockquote\":\r\n\t\t\t\t//listBlock();\r\n\t\t\t\tblock();\r\n\t\t\t\tblockquoteStack.push(markdownTags[tag]);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"pre\":\r\n\t\t\t\tblock();\r\n\t\t\t\tpreStack.push(true);\r\n\t\t\t\tnodeList.push(\"    \");\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"table\":\r\n\t\t\t\tnodeList.push(\"<table>\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"thead\":\r\n\t\t\t\tnodeList.push(\"<thead>\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"tbody\":\r\n\t\t\t\tnodeList.push(\"<tbody>\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"tr\":\r\n\t\t\t\tnodeList.push(\"<tr>\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"td\":\r\n\t\t\t\tnodeList.push(\"<td>\");\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t\tchars: function(text) {\r\n\t\t\tif (preStack.length > 0) {\r\n\t\t\t\ttext = text.replace(/\\n/g,\"\\n    \");\r\n\t\t\t} else if (trim(text) != \"\") {\r\n\t\t\t\ttext = text.replace(/\\s+/g, \" \");\r\n\r\n\t\t\t\tvar prevText = peekTillNotEmpty(nodeList);\r\n\t\t\t\tif (/\\s+$/.test(prevText)) {\r\n\t\t\t\t\ttext = text.replace(/^\\s+/g, \"\");\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tnodeList.push(\"\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t//if(blockquoteStack.length > 0 && peekTillNotEmpty(nodeList).endsWith(\"\\n\")) {\r\n\t\t\tif (blockquoteStack.length > 0) {\r\n\t\t\t\tnodeList.push(blockquoteStack.join(\"\"));\r\n\t\t\t}\r\n\r\n\t\t\tnodeList.push(text);\r\n\t\t},\r\n\t\tend: function(tag) {\r\n\t\t\ttag = tag.toLowerCase();\r\n\r\n\t\tswitch (tag) {\r\n\t\t\tcase \"title\":\r\n\t\t\tcase \"h1\":\r\n\t\t\tcase \"h2\":\r\n\t\t\tcase \"h3\":\r\n\t\t\tcase \"h4\":\r\n\t\t\tcase \"h5\":\r\n\t\t\tcase \"h6\":\r\n\t\t\t\tif(!removeIfEmptyTag(markdownTags[tag])) {\r\n\t\t\t\t\tblock(true);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"p\":\r\n\t\t\tcase \"div\":\r\n\t\t\tcase \"table\":\r\n\t\t\tcase \"tbody\":\r\n\t\t\tcase \"tr\":\r\n\t\t\tcase \"td\":\r\n\t\t\t\twhile(nodeList.length > 0 && trim(peek(nodeList)) == \"\") {\r\n\t\t\t\t\tnodeList.pop();\r\n\t\t\t\t}\r\n\t\t\t\tblock(true);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"b\":\r\n\t\t\tcase \"strong\":\r\n\t\t\tcase \"i\":\r\n\t\t\tcase \"em\":\r\n\t\t\tcase \"dfn\":\r\n\t\t\tcase \"var\":\r\n\t\t\tcase \"cite\":\r\n\t\t\t\tif (!removeIfEmptyTag(markdownTags[tag])) {\r\n\t\t\t\t\tnodeList.push(trim(sliceText(markdownTags[tag])));\r\n\t\t\t\t\tnodeList.push(markdownTags[tag]);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"a\":\r\n\t\t\t\tvar text = sliceText(\"[\");\r\n\t\t\t\ttext = text.replace(/\\s+/g, \" \");\r\n\t\t\t\ttext = trim(text);\r\n\r\n\t\t\t\tif (text == \"\") {\r\n\t\t\t\t\tnodeList.pop();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar attrs = linkAttrStack.pop();\r\n\t\t\t\tvar url;\r\n\t\t\t\tattrs[\"href\"] &&  attrs[\"href\"].value != \"\" ? url = attrs[\"href\"].value : url = \"\";\r\n\r\n\t\t\t\tif (url == \"\") {\r\n\t\t\t\t\tnodeList.pop();\r\n\t\t\t\t\tnodeList.push(text);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnodeList.push(text);\r\n\r\n\t\t\t\tif (!inlineStyle && !startsWith(peek(nodeList), \"!\")){\r\n\t\t\t\t\tvar l = links.indexOf(url);\r\n\t\t\t\t\tif (l == -1) {\r\n\t\t\t\t\t\tlinks.push(url);\r\n\t\t\t\t\t\tl=links.length-1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tnodeList.push(\"][\" + l + \"]\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif(startsWith(peek(nodeList), \"!\")){\r\n\t\t\t\t\t\tvar text = nodeList.pop();\r\n\t\t\t\t\t\ttext = nodeList.pop() + text;\r\n\t\t\t\t\t\tblock();\r\n\t\t\t\t\t\tnodeList.push(text);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar title = attrs[\"title\"];\r\n\t\t\t\t\tnodeList.push(\"](\" + url + (title ? \" \\\"\" + trim(title.value).replace(/\\s+/g, \" \") + \"\\\"\" : \"\") + \")\");\r\n\r\n\t\t\t\t\tif(startsWith(peek(nodeList), \"!\")){\r\n\t\t\t\t\t\tblock(true);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"ul\":\r\n\t\t\tcase \"ol\":\r\n\t\t\tcase \"dl\":\r\n\t\t\t\tlistBlock();\r\n\t\t\t\tlistTagStack.pop();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"li\":\r\n\t\t\tcase \"dt\":\r\n\t\t\t\tvar li = getListMarkdownTag();\r\n\t\t\t\tif (!removeIfEmptyTag(li)) {\r\n\t\t\t\t\tvar text = trim(sliceText(li));\r\n\r\n\t\t\t\t\tif (startsWith(text, \"[![\")) {\r\n\t\t\t\t\t\tnodeList.pop();\r\n\t\t\t\t\t\tblock();\r\n\t\t\t\t\t\tnodeList.push(text);\r\n\t\t\t\t\t\tblock(true);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tnodeList.push(text);\r\n\t\t\t\t\t\tlistBlock();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"blockquote\":\r\n\t\t\t\tblockquoteStack.pop();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"pre\":\r\n\t\t\t\t//uncomment following experimental code to discard line numbers when syntax highlighters are used\r\n\t\t\t\t//notes this code thorough testing before production user\r\n\t\t\t\t/*\r\n\t\t\t\tvar p=[];\r\n\t\t\t\tvar flag = true;\r\n\t\t\t\tvar count = 0, whiteSpace = 0, line = 0;\r\n\t\t\t\tconsole.log(\">> \" + peek(nodeList));\r\n\t\t\t\twhile(peek(nodeList).startsWith(\"    \") || flag == true)\r\n\t\t\t\t{\r\n\t\t\t\t\t//console.log('inside');\r\n\t\t\t\t\tvar text = nodeList.pop();\r\n\t\t\t\t\tp.push(text);\r\n\r\n\t\t\t\t\tif(flag == true && !text.startsWith(\"    \")) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tflag = false;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//var result = parseInt(text.trim());\r\n\t\t\t\t\tif(!isNaN(text.trim())) {\r\n\t\t\t\t\t\tcount++;\r\n\t\t\t\t\t} else if(text.trim() == \"\"){\r\n\t\t\t\t\t\twhiteSpace++;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tline++;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tflag = false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconsole.log(line);\r\n\t\t\t\tif(line != 0)\r\n\t\t\t\t{\r\n\t\t\t\t\twhile(p.length != 0) {\r\n\t\t\t\t\t\tnodeList.push(p.pop());\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t*/\r\n\t\t\t\tblock(true);\r\n\t\t\t\tpreStack.pop();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"code\":\r\n\t\t\tcase \"span\":\r\n\t\t\t\tif (preStack.length > 0) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t} else if (trim(peek(nodeList)) == \"\") {\r\n\t\t\t\t\tnodeList.pop();\r\n\t\t\t\t\tnodeList.push(markdownTags[tag]);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar text = nodeList.pop();\r\n\t\t\t\t\tnodeList.push(trim(text));\r\n\t\t\t\t\tnodeList.push(markdownTags[tag]);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"table\":\r\n\t\t\t\tnodeList.push(\"</table>\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"thead\":\r\n\t\t\t\tnodeList.push(\"</thead>\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"tbody\":\r\n\t\t\t\tnodeList.push(\"</tbody>\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"tr\":\r\n\t\t\t\tnodeList.push(\"</tr>\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"td\":\r\n\t\t\t\tnodeList.push(\"</td>\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"br\":\r\n\t\t\tcase \"hr\":\r\n\t\t\tcase \"img\":\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t}, {\"nodesToIgnore\": [\"script\", \"noscript\", \"object\", \"iframe\", \"frame\", \"head\", \"style\", \"label\"]});\r\n\r\n\tif (!inlineStyle) {\r\n\t\tfor (var i = 0; i < links.length; i++) {\r\n\t\t\tif (i == 0) {\r\n\t\t\t\tvar lastItem = nodeList.pop();\r\n\t\t\t\tnodeList.push(lastItem.replace(/\\s+$/g, \"\"));\r\n\t\t\t\tnodeList.push(\"\\n\\n[\" + i + \"]: \" + links[i]);\r\n\t\t\t} else {\r\n\t\t\t\tnodeList.push(\"\\n[\" + i + \"]: \" + links[i]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn nodeList.join(\"\");\r\n\r\n}\r\n\r\nreturn html2markdown;\r\n\r\n});\r\n","/*\r\n * HTML Parser By John Resig (ejohn.org)\r\n * Original code by Erik Arvidsson, Mozilla Public License\r\n * http://erik.eae.net/simplehtmlparser/simplehtmlparser.js\r\n *\r\n * // Use like so:\r\n * HTMLParser(htmlString, {\r\n *     start: function(tag, attrs, unary) {},\r\n *     end: function(tag) {},\r\n *     chars: function(text) {},\r\n *     comment: function(text) {}\r\n * });\r\n *\r\n * // or to get an XML string:\r\n * HTMLtoXML(htmlString);\r\n *\r\n * // or to get an XML DOM Document\r\n * HTMLtoDOM(htmlString);\r\n *\r\n * // or to inject into an existing document/DOM node\r\n * HTMLtoDOM(htmlString, document);\r\n * HTMLtoDOM(htmlString, document.body);\r\n *\r\n */\r\n\r\n/*\r\n Universal JavaScript Module, supports AMD (RequireJS), Node.js, and the browser.\r\n https://gist.github.com/kirel/1268753\r\n*/\r\n\r\n(function (name, definition) {\r\n\tif (typeof define === 'function') { // AMD\r\n\t\tdefine(definition);\r\n\t} else if (typeof module !== 'undefined' && module.exports) { // Node.js\r\n\t\tmodule.exports = definition();\r\n\t} else { // Browser\r\n\t\tvar theModule = definition(), global = this, old = global[name];\r\n\t\ttheModule.noConflict = function () {\r\n\t\t\tglobal[name] = old;\r\n\t\t\treturn theModule;\r\n\t\t};\r\n\t\tglobal[name] = theModule;\r\n\t}\r\n})('markdownHTMLParser', function () {\r\n\r\n\t// Regular Expressions for parsing tags and attributes\r\n\tvar startTag = /^<(\\w+)((?:\\s+\\w+(?:\\s*=\\s*(?:(?:\"[^\"]*\")|(?:'[^']*')|[^>\\s]+))?)*)\\s*(\\/?)>/,\r\n\t\tendTag = /^<\\/(\\w+)[^>]*>/,\r\n\t\tattr = /(\\w+)(?:\\s*=\\s*(?:(?:\"((?:\\\\.|[^\"])*)\")|(?:'((?:\\\\.|[^'])*)')|([^>\\s]+)))?/g;\r\n\r\n\t// Empty Elements - HTML 4.01\r\n\tvar empty = makeMap(\"area,base,basefont,br,col,frame,hr,img,input,isindex,link,meta,param,embed\");\r\n\r\n\t// Block Elements - HTML 4.01\r\n\tvar block = makeMap(\"address,applet,blockquote,button,center,dd,del,dir,div,dl,dt,fieldset,form,frameset,hr,iframe,ins,isindex,li,map,menu,noframes,noscript,object,ol,p,pre,script,table,tbody,td,tfoot,th,thead,tr,ul\");\r\n\r\n\t// Inline Elements - HTML 4.01\r\n\tvar inline = makeMap(\"a,abbr,acronym,applet,b,basefont,bdo,big,br,button,cite,code,del,dfn,em,font,i,iframe,img,input,ins,kbd,label,map,object,q,s,samp,script,select,small,span,strike,strong,sub,sup,textarea,tt,u,var\");\r\n\r\n\t// Elements that you can, intentionally, leave open\r\n\t// (and which close themselves)\r\n\tvar closeSelf = makeMap(\"colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr\");\r\n\r\n\t// Attributes that have their values filled in disabled=\"disabled\"\r\n\tvar fillAttrs = makeMap(\"checked,compact,declare,defer,disabled,ismap,multiple,nohref,noresize,noshade,nowrap,readonly,selected\");\r\n\r\n\t// Special Elements (can contain anything)\r\n\tvar special = makeMap(\"script,style\");\r\n\r\n\tfunction HTMLParser(html, handler) {\r\n\t\tvar index, chars, match, stack = [], last = html;\r\n\t\tstack.last = function () {\r\n\t\t\treturn this[this.length - 1];\r\n\t\t};\r\n\r\n\t\twhile (html) {\r\n\t\t\tchars = true;\r\n\r\n\t\t\t// Make sure we're not in a script or style element\r\n\t\t\tif (!stack.last() || !special[stack.last()]) {\r\n\r\n\t\t\t\t// Comment\r\n\t\t\t\tif (html.indexOf(\"<!--\") == 0) {\r\n\t\t\t\t\tindex = html.indexOf(\"-->\");\r\n\r\n\t\t\t\t\tif (index >= 0) {\r\n\t\t\t\t\t\tif (handler.comment)\r\n\t\t\t\t\t\t\thandler.comment(html.substring(4, index));\r\n\t\t\t\t\t\thtml = html.substring(index + 3);\r\n\t\t\t\t\t\tchars = false;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// end tag\r\n\t\t\t\t} else if (html.indexOf(\"</\") == 0) {\r\n\t\t\t\t\tmatch = html.match(endTag);\r\n\r\n\t\t\t\t\tif (match) {\r\n\t\t\t\t\t\thtml = html.substring(match[0].length);\r\n\t\t\t\t\t\tmatch[0].replace(endTag, parseEndTag);\r\n\t\t\t\t\t\tchars = false;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// start tag\r\n\t\t\t\t} else if (html.indexOf(\"<\") == 0) {\r\n\t\t\t\t\tmatch = html.match(startTag);\r\n\r\n\t\t\t\t\tif (match) {\r\n\t\t\t\t\t\thtml = html.substring(match[0].length);\r\n\t\t\t\t\t\tmatch[0].replace(startTag, parseStartTag);\r\n\t\t\t\t\t\tchars = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (chars) {\r\n\t\t\t\t\tindex = html.indexOf(\"<\");\r\n\t\t\t\t\tif (index == 0) {\r\n\t\t\t\t\t\tindex++;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar text = index < 0 ? html : html.substring(0, index);\r\n\t\t\t\t\thtml = index < 0 ? \"\" : html.substring(index);\r\n\r\n\t\t\t\t\tif (handler.chars)\r\n\t\t\t\t\t\thandler.chars(text);\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\t\t\t\thtml = html.replace(new RegExp(\"(.*)<\\/\" + stack.last() + \"[^>]*>\"), function (all, text) {\r\n\t\t\t\t\ttext = text.replace(/<!--(.*?)-->/g, \"$1\")\r\n\t\t\t\t\t\t.replace(/<!\\[CDATA\\[(.*?)]]>/g, \"$1\");\r\n\r\n\t\t\t\t\tif (handler.chars)\r\n\t\t\t\t\t\thandler.chars(text);\r\n\r\n\t\t\t\t\treturn \"\";\r\n\t\t\t\t});\r\n\r\n\t\t\t\tparseEndTag(\"\", stack.last());\r\n\t\t\t}\r\n\r\n\t\t\tif (html == last)\r\n\t\t\t\tthrow \"Parse Error: \" + html;\r\n\t\t\tlast = html;\r\n\t\t}\r\n\r\n\t\t// Clean up any remaining tags\r\n\t\tparseEndTag();\r\n\r\n\t\tfunction parseStartTag(tag, tagName, rest, unary) {\r\n\t\t\tif (block[tagName]) {\r\n\t\t\t\twhile (stack.last() && inline[stack.last()]) {\r\n\t\t\t\t\tparseEndTag(\"\", stack.last());\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (closeSelf[tagName] && stack.last() == tagName) {\r\n\t\t\t\tparseEndTag(\"\", tagName);\r\n\t\t\t}\r\n\r\n\t\t\tunary = empty[tagName] || !!unary;\r\n\r\n\t\t\tif (!unary)\r\n\t\t\t\tstack.push(tagName);\r\n\r\n\t\t\tif (handler.start) {\r\n\t\t\t\tvar attrs = [];\r\n\r\n\t\t\t\trest.replace(attr, function (match, name) {\r\n\t\t\t\t\tvar value = arguments[2] ? arguments[2] :\r\n\t\t\t\t\t\targuments[3] ? arguments[3] :\r\n\t\t\t\t\t\t\targuments[4] ? arguments[4] :\r\n\t\t\t\t\t\t\t\tfillAttrs[name] ? name : \"\";\r\n\r\n\t\t\t\t\tattrs.push({\r\n\t\t\t\t\t\tname: name,\r\n\t\t\t\t\t\tvalue: value,\r\n\t\t\t\t\t\tescaped: value.replace(/(^|[^\\\\])\"/g, '$1\\\\\\\"') //\"\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif (handler.start)\r\n\t\t\t\t\thandler.start(tagName, attrs, unary);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction parseEndTag(tag, tagName) {\r\n\t\t\t// If no tag name is provided, clean shop\r\n\t\t\tif (!tagName)\r\n\t\t\t\tvar pos = 0;\r\n\r\n\t\t\t// Find the closest opened tag of the same type\r\n\t\t\telse\r\n\t\t\t\tfor (var pos = stack.length - 1; pos >= 0; pos--)\r\n\t\t\t\t\tif (stack[pos] == tagName)\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\tif (pos >= 0) {\r\n\t\t\t\t// Close all the open elements, up the stack\r\n\t\t\t\tfor (var i = stack.length - 1; i >= pos; i--)\r\n\t\t\t\t\tif (handler.end)\r\n\t\t\t\t\t\thandler.end(stack[i]);\r\n\r\n\t\t\t\t// Remove the open elements from the stack\r\n\t\t\t\tstack.length = pos;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\tif (this) {\r\n\t\tthis.HTMLtoXML = function (html) {\r\n\t\t\tvar results = \"\";\r\n\r\n\t\t\tHTMLParser(html, {\r\n\t\t\t\tstart: function (tag, attrs, unary) {\r\n\t\t\t\t\tresults += \"<\" + tag;\r\n\r\n\t\t\t\t\tfor (var i = 0; i < attrs.length; i++)\r\n\t\t\t\t\t\tresults += \" \" + attrs[i].name + '=\"' + attrs[i].escaped + '\"';\r\n\r\n\t\t\t\t\tresults += (unary ? \"/\" : \"\") + \">\";\r\n\t\t\t\t},\r\n\t\t\t\tend: function (tag) {\r\n\t\t\t\t\tresults += \"</\" + tag + \">\";\r\n\t\t\t\t},\r\n\t\t\t\tchars: function (text) {\r\n\t\t\t\t\tresults += text;\r\n\t\t\t\t},\r\n\t\t\t\tcomment: function (text) {\r\n\t\t\t\t\tresults += \"<!--\" + text + \"-->\";\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\treturn results;\r\n\t\t};\r\n\r\n\t\tthis.HTMLtoDOM = function (html, doc) {\r\n\t\t\t// There can be only one of these elements\r\n\t\t\tvar one = makeMap(\"html,head,body,title\");\r\n\r\n\t\t\t// Enforce a structure for the document\r\n\t\t\tvar structure = {\r\n\t\t\t\tlink: \"head\",\r\n\t\t\t\tbase: \"head\"\r\n\t\t\t};\r\n\r\n\t\t\tif (!doc) {\r\n\t\t\t\tif (typeof DOMDocument != \"undefined\")\r\n\t\t\t\t\tdoc = new DOMDocument();\r\n\t\t\t\telse if (typeof document != \"undefined\" && document.implementation && document.implementation.createDocument)\r\n\t\t\t\t\tdoc = document.implementation.createDocument(\"\", \"\", null);\r\n\t\t\t\telse if (typeof ActiveX != \"undefined\")\r\n\t\t\t\t\tdoc = new ActiveXObject(\"Msxml.DOMDocument\");\r\n\r\n\t\t\t} else\r\n\t\t\t\tdoc = doc.ownerDocument ||\r\n\t\t\t\t\tdoc.getOwnerDocument && doc.getOwnerDocument() ||\r\n\t\t\t\t\tdoc;\r\n\r\n\t\t\tvar elems = [],\r\n\t\t\t\tdocumentElement = doc.documentElement ||\r\n\t\t\t\t\tdoc.getDocumentElement && doc.getDocumentElement();\r\n\r\n\t\t\t// If we're dealing with an empty document then we\r\n\t\t\t// need to pre-populate it with the HTML document structure\r\n\t\t\tif (!documentElement && doc.createElement) (function () {\r\n\t\t\t\tvar html = doc.createElement(\"html\");\r\n\t\t\t\tvar head = doc.createElement(\"head\");\r\n\t\t\t\thead.appendChild(doc.createElement(\"title\"));\r\n\t\t\t\thtml.appendChild(head);\r\n\t\t\t\thtml.appendChild(doc.createElement(\"body\"));\r\n\t\t\t\tdoc.appendChild(html);\r\n\t\t\t})();\r\n\r\n\t\t\t// Find all the unique elements\r\n\t\t\tif (doc.getElementsByTagName)\r\n\t\t\t\tfor (var i in one)\r\n\t\t\t\t\tone[i] = doc.getElementsByTagName(i)[0];\r\n\r\n\t\t\t// If we're working with a document, inject contents into\r\n\t\t\t// the body element\r\n\t\t\tvar curParentNode = one.body;\r\n\r\n\t\t\tHTMLParser(html, {\r\n\t\t\t\tstart: function (tagName, attrs, unary) {\r\n\t\t\t\t\t// If it's a pre-built element, then we can ignore\r\n\t\t\t\t\t// its construction\r\n\t\t\t\t\tif (one[tagName]) {\r\n\t\t\t\t\t\tcurParentNode = one[tagName];\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar elem = doc.createElement(tagName);\r\n\r\n\t\t\t\t\tfor (var attr in attrs)\r\n\t\t\t\t\t\telem.setAttribute(attrs[attr].name, attrs[attr].value);\r\n\r\n\t\t\t\t\tif (structure[tagName] && typeof one[structure[tagName]] != \"boolean\")\r\n\t\t\t\t\t\tone[structure[tagName]].appendChild(elem);\r\n\r\n\t\t\t\t\telse if (curParentNode && curParentNode.appendChild)\r\n\t\t\t\t\t\tcurParentNode.appendChild(elem);\r\n\r\n\t\t\t\t\tif (!unary) {\r\n\t\t\t\t\t\telems.push(elem);\r\n\t\t\t\t\t\tcurParentNode = elem;\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tend: function (tag) {\r\n\t\t\t\t\telems.length -= 1;\r\n\r\n\t\t\t\t\t// Init the new parentNode\r\n\t\t\t\t\tcurParentNode = elems[elems.length - 1];\r\n\t\t\t\t},\r\n\t\t\t\tchars: function (text) {\r\n\t\t\t\t\tcurParentNode.appendChild(doc.createTextNode(text));\r\n\t\t\t\t},\r\n\t\t\t\tcomment: function (text) {\r\n\t\t\t\t\t// create comment node\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\treturn doc;\r\n\t\t};\r\n\t}\r\n\r\n\tfunction makeMap(str) {\r\n\t\tvar obj = {}, items = str.split(\",\");\r\n\t\tfor (var i = 0; i < items.length; i++)\r\n\t\t\tobj[items[i]] = true;\r\n\t\treturn obj;\r\n\t}\r\n\r\n\treturn HTMLParser;\r\n\r\n});"],"sourceRoot":""}